%META:TOPICINFO{author="KyleGross" date="1225985950" format="1.1" version="1.3"}%
%META:TOPICPARENT{name="OSGTeraGridInteroperability"}%
---+!!<nop>%TOPIC%
%TOC%

%STARTINCLUDE%

---++Introduction
It is an ultimate interoperability goal that both OSG and <nop>TeraGrid resources can be used together as from a single seamless grid for user applications. A set of user-level tools with a single point of access to both grids must be provided to achieve this goal. 

---++About the <nop>GridShell
<nop>GridShell is developed within the <nop>TeraGrid community to allow an individual <nop>TeraGrid user to access <nop>TeraGrid resources across multiple sites through a shell environment. The lead author of <nop>GridShell is Dr. Edward Walker from the Texas Advanced Computing Center. <nop>GridShell has been tested within several <nop>TeraGrid sites, and will be deployed widely on all <nop>TeraGrid sites in near future. 

---++A Short Summary about Up-to-Date <nop>GridShell Evaluation

<nop>GridShell provides an interface for a user to create a “single” virtual cluster that is based on multiple physical clusters. Condor glidein mechanism based on Globus job submission is used to virtualize resources that are marshaled as accessible through a tcsh/csh shell. The support for other shell environments (e.g., bash) is being developed. The installation of <nop>GridShell is very straightforward, and little configuration is needed. It has been tested that <nop>GridShell works for simple job submissions via “condor_submit” across several OSG systems as well as between an OSG system and several <nop>TeraGrid systems. 

It is a reasonable idea to put <nop>GridShell as part of the OSG gateway to the <nop>TeraGrid based on the fact that <nop>GridShell provides a straightforward way for users to roam across OSG and <nop>TeraGrid resources. The following several issues still require further investigation and evaluation. 

---* The number of pre-booked cluster nodes (through glidein jobs) might get large, which might not necessarily dedicated to actual job running for a certain period of time. <nop>GridShell supports to shorten this period through a static configuration parameter. It is a reasonable idea to base the selection of appropriate number of cluster nodes on some dynamic resource discovery strategies that would use information services. This idea requires further research. 

---* <nop>GridShell allows a user to augment an existing condor pool with resources <nop>GridShell helps manage. Dynamically created condor pools via <nop>GridShell are “owned” by an individual user. It is interesting to investigate how <nop>GridShell could be used for OSG VirtualOrganizations/VOInfo-based users. This investigation may be a pure authentication/authorization issue, and may not be supposed to be addressed within <nop>GridShell.

---* When shell clients are based on OSG machines, the communications between Condor-starters and the Condor-master based on TCP might require extra security configurations (e.g., firewall rules for opening ports). But generally this is not a concern because Globus Toolkit requires such configurations anyway.

-- Main.ShaowenWang - 16 Jun 2005