%META:TOPICINFO{author="BrianBockelman" date="1266282646" format="1.1" version="1.10"}%
%META:TOPICPARENT{name="UsingTheGrid"}%
%LINKCSS%

%RED% WARNING: This documentation page is deprecated - it's likely to be incorrect and FNAL-specific.  Do not consider this general OSG documentation. %ENDCOLOR%

---+!! Using dCache Copy (dcap & dccp)
%TOC%

%STARTINCLUDE%
%EDITTHIS%

Whenever a client application needs to talk to the dCache, it has to choose an appropriate door into the system. For each door, there are corresponding utilities for copying files back and forth between your machine and your =/pnfs/storage-group= area on the machine running dCache. We describe how to use the supported utilities in this chapter. 

Each dCache server may have multiple doors, thus allowing a variety of access methods. Each door is limited to about 50 simultaneous transfers; more doors can be added as needed. The dCache supports Kerberos V5 for FTP, the dCache native dCap C-API, and GSI FTP. 

The dCache server node and the ports documented in this section are subject to change. You can always find the current configuration from the web page (for example, the [[http://www-isd.fnal.gov/enstore/dcache_user_guide.html][Fermilab dCache guide]].


---+ dCache-Native dCap 
*dCap* is a dCache-native access protocol. The dCap client, dccp, is available from Fermilab at the [[ftp://fnkits.fnal.gov/products/dcap/][KITS ftp site]]. The libdcap library provides POSIX-like open, create, read, write and lseek functions to the dCache storage. In addition there are some specific functions for setting debug level, getting error messages, and binding the library to a network interface. See the [[http://www-dcache.desy.de/manuals/libdcap.html][dCache manual for usage information.]] 


---++ Authentication Mechanisms 
There are three authentication mechanisms used for the dcap protocol: 
   * [[#X509dCap][X509]]
   * [[#KerberizeddCap][Kerberos]]
   * [[#PlaindCap][Plain]] %RED%(Kerberos and Plain seem to be Fermilab-specific; do we want to include them here?)%ENDCOLOR%

All three have separate port numbers and separate "setup dcap" qualifiers for the UPS/UPD distribution of dCap %RED%How many nonFermilab people know about UPS/UPD? Is there another distribution?%ENDCOLOR%. CDF has both kerberized dcap and X.509 dcap. 

These different qualifiers have to be setup correctly in UPS for this to work though, with a ups listing for each qualifier state. For debugging this issue, the environment variable =DCACHE_IO_TUNNEL= should point to the appropriate shared library for the authentication mechanism: a file like =libgsstunnnel.so= for krb5, =libgsitunnel.so= for x509, and it should be unset for plain dcap access. 

---+++ X509 dCap
%RED%Info?%ENDCOLOR%

---+++ Kerberized dCap

   * %X% *%RED%NOTE:%ENDCOLOR%* If your dCap door uses Kerberos V5 authentication, you must have a Kerberos principal for the FNAL.GOV realm. 
 
Kerberized dcap is available on ports 24725, 24736 to anyone with valid FNAL.GOV kerberos credentials. Install the dCap product on your computer. See the [[http://www-dcache.desy.de/manuals/dcap_setup.html][dCap Setup Manual]].

The UPS setup command reads simply: 

<verbatim>
 setup dcap
</verbatim>

Besides creating a certificate with the "kx509", you have to place the certificate in the correct format and the correct location. Please see [[http://security.fnal.gov/pki/Get-Personal-DOEGrids-Cert.html#globus]["Using Globus tools for submitting grid jobs from Linux/UNIX"]] for the current suggested means of doing this. 



---+++ Plain dCap 

Plain dCap is strictly limited to fnal.gov domain access only. It uses uid/gid permissions on files in PNFS. Plain dcap is not the same as weakly-authenticated FTP, as it does allow write access as one's uid/gid permits. The UPS setup command reads: 

<verbatim>
 setup dcap -q unsecured
</verbatim>

---++ Nodes and Ports 
The nodes and ports available for dCap are subject to change; to get a current listing, run the following command, using your storage group (sample output shown for storage group cdfen): 

<pre class="screen">
% <userinput>cat '/pnfs/cdfen/.(config)(dCache)(dcache.conf)' </userinput>

     cdfdca1.fnal.gov:25125
     cdfdca1.fnal.gov:25136
     ...
     cdfdca2.fnal.gov:25153
     cdfdca2.fnal.gov:25154
     cdfdca3.fnal.gov:25155
     ...
</pre>

The dCap protocol requires specification of the dCache server host, port number, and domain, in addition to the inclusion of &#8220;/usr&#8221; ahead of the storage group designation in the PNFS path. Its structure is shown here: 

<verbatim>
dcap://<serverHost>:<port>/</pnfs>/<storage_group>/usr/<filePath>
</verbatim>

There are supposed to be two slashes inbetween the port number and pnfs (e.g., <code>.. :24124//pnfs/...</code>) but since users frequently just put one slash, we&#8217;ve allowed either one or two. 

If you run any of the following commands (=dccp=, =dc_check=, =dc_stage=) and it fails because the port is unavailable, try the command again with a different port number, or with a different host and port combination. 


---++ dccp 
==dccp==, which provides a cp-like functionality on the PNFS file system, is available in the dCap product. The dccp command has the following syntax: 

<verbatim>
dccp [ -d <debuglevel> ] [ -h <replyHostName> ] [ -i ] [ -S ] [ [ -P ]
     [ -t <time> ] [ -l <location> ] ] [ -a ]
     [-b <read-ahead bufferSize>] [ -B <bufferSize> ] [ -u ] [ -w ] 
     [ -p <first_port>[:last_port] ] [ -T <IO tunnel plugin> ] source 
     [ destination ]
</verbatim>

or, more simply: 

<verbatim>
 dccp [ options ] source_file [ destination_file ]
</verbatim>

See the dCache Manual for more on [[http://www-dcache.desy.de/manuals/dccp.html][options and command usage.]]


---++ dc_stage
==dc_stage== prestages the request; for read requests only. It is particularly useful when you&#8217;d like to grab the file quickly from the dCache when you&#8217;re ready for it. Use this with the -t option to set an interval of time between the download to the dCache and the download from the dCache to your local system. If -t is not used, the default interval is zero.: 

<verbatim>
 dc_stage [-t <number of seconds>] source [dest]
</verbatim>


---++ dc_check Command 
The dc_check command checks if a file is on disk in the dCache.dc_check file 


---++ PNFS Not Mounted Locally: Syntax and Examples
If PNFS is not mounted locally (the general case), you&#8217;ll have to supply the protocol, node, port, and pnfs directory for the remote location (the &#8220;source&#8221; on reads, and the &#8220;destination&#8221; on writes).

---+++ Requesting a write to Enstore 
%RED%This is the first mention of Enstore; it's not described or introduced. Is it FNAL-specific and do we want it here?%ENDCOLOR%

<verbatim>
dccp path/to/local/file \
 dcap://<serverHost>:<port>///pnfs/<domain>/usr/<storage_group>/<filePath> 
</verbatim>

---+++ Requesting a write from your local /tmp directory

<verbatim>
dccp /tmp/myfile \
 dcap://server.domain.gov:25140//pnfs/domain.gov/usr/cdfen/x/myfile
</verbatim>

---+++ Checking if a file is on disk in the dCache by running dc_check

<verbatim>
 dc_check dcap://server.domain.gov:24725//pnfs/domain.gov/myfile
</verbatim>

For a read rather than a write:

<verbatim>
 dccp dcap://<server.domain.gov>:25140//pnfs/<domain.gov>/usr/cdfen/x/myfile \
  /tmp/myfile 
</verbatim>

---+++ Pre-staging this request with an hour interval using <code>dc_stage</code>: 

<verbatim>
 dc_stage -t 3600 \
  dcap://<server.domain.gov>:25140//pnfs/<domain.gov>/usr/cdfen/x/myfile \
  /tmp/myfile 
</verbatim>


---++ PNFS Mounted Locally: Syntax and Examples
If PNFS is mounted on your local machine, you only need to specify the simple PNFS path of the remote file, e.g. (for a write): 

---+++ Specifying the PNFS path of the remote file

<verbatim>
 dccp path/to/local/file/pnfs/<storage_group>/<filePath>
</verbatim>

---+++ Writing the file to Enstore
%RED%Again, for this and next sections: question about Enstore%ENDCOLOR%

<verbatim>
 dccp /tmp/myfile /pnfs/cdfen/x/myfile 
</verbatim>

---+++ Reading the file from Enstore

<verbatim>
 dccp /pnfs/cdfen/x/myfile /tmp/myfile 
</verbatim>


---++ Grid (GSI) FTP 
<nop>GridFTP uses Grid Proxies for authentication and authorization and is compatible with popular Grid middleware tools such as globus-url-copy (available in the [[http://www.globus.org/][Globus toolkit at Globus]] or sam_gridftp in Kits). 

It is more convenient to run this through an interface like srmcp (see [[#StorageResourceManagement][StorageResourceManagement]]) which allows you to perform multiple transfers in a single command. In addition, it optimizes the parameters of the transfer, and allows FTP to scale with user load (overcoming a passive <nop>GridFTP protocol issue). 

---++ Obtain Grid Proxies 
Globus tools require that a user be authenticated with a short-term authentication Grid proxy. This proxy is created from (long-term) X.509 credentials issued by the [[http://www.doegrids.org][DOE science grid]] or [[http://computing.fnal.gov/security/pki][other Certificate Authority]], or from Kerberos credentials at Fermilab. DOE science grid is the recommended source for an X.509 certificate. We recommend that you use the command grid-proxy-init to generate your proxy from your certificate. A proxy expires after a preset duration, and then a new one must be regenerated from the user&#8217;s (long-term) X.509 certificate. 

X.509 Grid proxies can be issued automatically for Fermilab users authenticated to Kerberos. (See [[http://computing.fnal.gov/security/pki/][Fermilab instructions]]. This involves downloading a KX.509 certificate. KX.509 can be used in place of permanent, long-term certificates. It works by creating X.509 credentials (certificate and private key) using your existing Kerberos ticket. These 
credentials are then used to generate the Globus proxy certificate. ([[http://www.ncsa.uiuc.edu/~aloftus/NMI/kx509.html][More on KX.509]]) 


---++ GSI FTP with globus-url-copy 
Install the [[http://www.globus.org][Globus toolkit.]] Run the globus-url-copy command in order to use the GSI FTP protocol to transfer files. Use the gsiftp:// URL prefix for the PNFS (Enstore) path, and file:// for the other URL. 

For example, to copy from Enstore: 

<verbatim>
 globus-url-copy gsiftp://[[<src_node>:]port]/<source_url_path> \
   file://[[<dest_node>]:port]/<dest_url_path>
</verbatim>

To copy to Enstore: 

<verbatim>
 globus-url-copy file://[[<src_node>:]port]/<source_url_path> \ 
   gsiftp://[[<dest_node>]:port]/<dest_url_path>
</verbatim>

For a CDF user copying from Enstore to a local disk: 

<verbatim>
 globus-url-copy gsiftp://cdfdca1.fnal.gov:2811/<pnfs_path> file://<local_url_path>
</verbatim>

Copying from one Enstore system to another (here, from CDFDCA to FNDCA):

<verbatim>
 globus-url-copy gsiftp://cdfdca1.fnal.gov:2811/<pnfs_path>\ 
   gsiftp://fndca1.fnal.gov:2811/<pnfs_path>
</verbatim>


---++ Storage Resource Management (SRM) 
SRM is middleware for managing storage resources on a grid. The SRM implementation within the dCache manages the dCache/Enstore system. It provides functions for file staging and pinning, transfer protocol negotiation and transfer url resolution. 

%NOTE% Pinning refers to making a file undeletable in the cache for the period of time called the &#8220;lifetime of the job&#8221;. 

The SRM client srmcp provides a convenient way to transfer multiple files from/to Enstore via dCache using a variety of protocols. 

[[http://grid.fnal.gov/][More on SRM]] 

Srmcp is the implementation of SRM client as specified by the [[http://sdm.lbl.gov/srm/documents/joint.docs/srm.v1.0.doc][SRM spec]]. You can use srmcp for the retrieval and/or storage of files to/from Enstore (or other Mass Storage Systems which implement SRM, e.g., SLAC&#8217;s, CERN&#8217;s). In this document we focus on file transfers to/from Fermilab&#8217;s Enstore via dCache. 


---+++ Preparing to Use srmcp 
Two packages are available, one with java (srmcp), the other with a C-based client (srmtools); they are both in [[ftp://fnkits.fnal.gov:8021/products/][Kits]]. To use the java-based srmcp, you will need to install java on your system. You will also need to install either the globus toolkit or dccp, depending on which protocol you wish to use. In order to use GSI with srmcp, follow the instructions in the <code>README.SECURITY</code> file that comes with srmcp in Kits. 


---+++ Command Syntax 
<verbatim>
srmcp [options] source(s) destination
</verbatim>

Default options will be read from a configuration file but can be overridden by command line options. The options are listed and defined in the srmcp README file in Kits. We do not list them here. 

The SRM protocol, used for the remote file specification, requires the SRM server host, port number, and domain. For the fnal.gov domain, the inclusion of &#8220;/usr&#8221; ahead of the storage group designation in the PNFS path is also required. Its structure is shown here: 

<verbatim>
srm://<serverHost>:<portNumber>/<root of fileSystem> \ 
   /<storage_group>[/usr]/<filePath>
</verbatim>

Some examples, the first two for the fnal.gov domain, the third for cern.ch: 
   1. =srm://cdfdca1.fnal.gov:8443//pnfs/fnal.gov/usr/cdfen/filesets/&lt;filePath>=
   1. =srm://fndca1.fnal.gov:8443//pnfs/fnal.gov/usr/&lt;filePath>=
   1. =srm://wacdr002d.cern.ch:9000/castor/cern.ch/user/&lt;filePath>=


---+++ Examples 

These examples are taken from the srmcp v1_2 README file in Kits (with unnecessary options removed). 

The following command will retrieve two files /mypath/myfile1.ext and /mypath/myfile2.ext from Enstore via dCache (for a CDF user) and store them in the user&#8217;s local directory /home/me/targetdir:. Notice that srmcp requires that the PNFS path include /pnfs/fnal.gov/usr/ ahead of the storage group designation. 

<verbatim>
srmcp \ 
 srm://cdfdca1.fnal.gov:8443//pnfs/fnal.gov/usr/cdf/myfile1.ext \
 srm://cdfdca1.fnal.gov:8443//pnfs/fnal.gov/usr/cdf/myfile2.ext \
 file://localhost//home/me/targetdir
</verbatim>

The following will copy the same files from one Enstore installation (CDFEN) to another (STKEN): 

<verbatim>
srmcp \ 
 srm://cdfdca1.fnal.gov:8443//pnfs/fnal.gov/usr/cdf/myfile1.ext \
 srm://cdfdca1.fnal.gov:8443//pnfs/fnal.gov/usr/cdf/myfile2.ext \
 srm:/fndca1.fnal.gov:8443/targetdir
</verbatim>

The following will get the file using dccp client, overriding the default (dccp would have to be already installed on you machine)1:

<verbatim>
srmcp -protocols=dcap \
 srm:/fndca1.fnal.gov:8443//pnfs/fnal.gov/usr/targetdir/myfile1.ext \
 file:////tmp/myfile1.ext
</verbatim>

%NOTE% The four slashes in the last line refer to: file://; host, which comes next, is &#8220; &#8221;; path is: %BR% =/tmp/.... [&lt;your_login_id>@]fndca1:&lt;pnfs_path> &lt;/path/to/local_file>=


---++ X.509 dCap 
X.509 dcap is available on ports 24525, 24536. The UPS setup command reads:

<verbatim>
setup dcap -q x509
</verbatim>

For authentication to work, the environment variable X509_CERT_DIR must be set. If not, check with the compute administrator to get globus setup correctly for your job. 


---++ GSI FTP with Kftpcp (Deprecated) 
GSI FTP is also available with kftpcp (see  [[#KerberizedFTPViaTheKftpcpCommand][Kerberized FTP via the kftpcp Command]]). Install and setup kftp (from Kits ftp://fnkits.fnal.gov:8021/products/kftp). Also from kits, install and setup gsspy_gsi (for Grid proxy) instead of gsspy_krb. Kftpcp works the same as described in section 5.4 except that the port number is 2811 in this case. 

We refer you to section 5.4 for details, but here&#8217;s a quick example for a general user (using STKEN) to copy from Enstore to a local disk: 

<verbatim>
kftpcp -p 2811 -m p [-v]
</verbatim>


---++ Simple Kerberized FTP 
The dCache door for Kerberized ftp service enforces Kerberos authentication (see the [[http://computing.fnal.gov/docs/strongauth/][Strong Authentication at Fermilab Documentation]]). It currently runs on the following nodes and corresponding ports: 

   * fndca1.fnal.gov, port 24127 (for STKEN) 
   * cdfdca1, 2 and 3, port 25127 (for CDFEN) 

The port number is installation-specific.

Any Kerberized ftp client can be used on the client machine. You must specify the host port in your ftp command.

   $ %H% *%BLUE%NOTE%ENDCOLOR%*: File read and write functionality is supported when the user (a) is authorized by the experiment to access the data stores, and (b) has obtained Kerberos credentials. 

   $ %H% *%BLUE%NOTE:%ENDCOLOR%*: Portal Mode (CRYPTOCard) access is not supported since it is not compatible with automated transfers or future GRID development. 

---++ Prepare to use Kerberized FTP 
In order to establish the kftp service on dCache, you must first: 

   * have a valid Fermilab UNIX account (UID and GID) 
   * have a Kerberos principal for FNAL.GOV (if Kerberized access is required) 
   * ask your experiment&#8217;s Enstore liaison to register you for the service. You will need to provide the following information to the liaison: 
      * username 
      * UID and GID (run the command id at the UNIX prompt to find their values) 
      * storage group 
      * root path under <verbatim>/pnfs/<storage_group>/... </verbatim>
      * if applying for Kerberized door, provide Kerberos principal(s) 
      * if applying for weak door, request a password by emailing dcache-admin@fnal.gov. 
         $ %X% *%RED%WARNING%ENDCOLOR%*: This is for groups, not individuals. 
   * install the kftp product from KITS (optional; useful for running scripts to transfer files). To do so, run:%BR% <code>$ setup upd%BR%$ upd install -G "-c" kftp</code>
   

---++ Sample Kerberized FTP session 
User is authenticated to Kerberos and authorized for the Kerberized dCache door (currently at fndca1.fnal.gov, port 24127): 

<pre class="screen">
% <userinput>ftp fndca1.fnal.gov 24127</userinput>

 Connected to stkendca3a.fnal.gov.
 220 FTPDoorIM+GSS ready
 334 ADAT must follow
 GSSAPI accepted as authentication type
 GSSAPI authentication succeeded
 Name (fndca:aheavey):
 200 User aheavey logged in
 Remote system type is UNIX.
 Using binary mode to transfer files.
 ftp> <userinput>cd aheavey/test3</userinput>
 250 CWD command succcessful. New CWD is </aheavey/test3>
 ftp> <userinput>ls</userinput>
 200 PORT command successful
 150 Opening ASCII data connection for file list
 dupl2
 duplexps
 226 ASCII transfer complete
 ftp> <userinput>get duplexps</userinput>
 local: duplexps remote: duplexps
 200 PORT command successful
 150 Opening BINARY data connection for /pnfs/fs/usr/test/aheavey/test3/duplexps
 226 Closing data connection, transfer successful
 42 bytes received in 0.033 seconds (1.2 Kbytes/s)
 ftp>
</pre>

#KerberizedFTPViaTheKftpcpCommand
---++ Kerberized FTP via the kftpcp Command 
In order to access data from a batch job or a background process, you should either use ftp client libraries (available from many sources), or the kftp package. This package includes a Kerberized client library and a GSI client library; you can use either. A regular ftp client (Kerberized or not) is an interactive program which is hard to use in batch mode. 

See section 5.3.1 Prepare to use Kerberized FTP for installation information. 

To use the product in a UPS environment as a Kerberized FTP client, first run: 

<pre class="screen">
$ <userinput>setup gsspy_krb </userinput>
$ <userinput>setup kftp </userinput>
</pre>

Then run the kftpcp command to copy one or more files. This command can be used from the shell or in a script. 


---++ Syntax and Options 
<verbatim>
kftpcp [<options>] <source_file> <destination_file>
</verbatim>

The available options include: 

| =-p &lt;port> | ftp server port number | 
| =-m &lt;a|p>= | ftp server mode; active (default), or passive |
| =-v= | verbose mode | 

   $ %ICON{"tip"}% *%GREEN%NOTE%ENDCOLOR%*: If your login id is the same on fndca1 and your local system, and if they match your Kerberos principal, you can leave off <code>\<your_fndca1_login_id\>@</code> in front of <code>fndca1:</code> in the command. 

   $ %ICON{"tip"}% *%GREEN%NOTE%ENDCOLOR%*: Depending on how your access is configured, typically you only need to specify the path to the remote file starting from the directory under your =/pnfs/&lt;storage_group>/= area. For example, to specify the remote file =/pnfs/my_storage_group/path/to/file= on the command line, enter only =/path/to/file=, including the initial slash. You can use the full specification (starting with =/pnfs/&lt;domain>/usr/&lt;storageGroup>=) 


---++ Download a File 
To download a stored data file from Enstore via the dCache, using fndca1 as a sample server host, run: 

<verbatim>
kftpcp -p 24127 -m p [-v] \ 
 [<username>@]<server>:</path/to/remote_file> </path/to/local_file>
</verbatim>


---++ Upload a File 
To upload a new data file, again using fndca1, run: 

<verbatim>
 kftpcp -p 24127 -m p [-v] </path/to/local_file> \ 
   [<username>@]<server>:</path/to/remote_file>
</verbatim>


---++ Examples 
To read (download) the stored file /pnfs/storage_group/mydir/myfile into a local file of the same name, run: 

<pre class="screen">
$ <userinput>setup kftp</userinput>
$ <userinput>kftpcp -p 24127 -m p -v <replaceable>myusername</replaceable>@fndca1:<replaceable>/mydir/myfile</replaceable> \ 
   <replaceable>/path/to/myfile</replaceable></userinput>
Transferred 42 bytes
</pre>

Or, if your usernames and principal all match, you could shorten it to: 

<verbatim>
 kftpcp -p 24127 -m p -v <server>:<replaceable>/mydir/myfile /path/to/myfile</replaceable>
</verbatim>


---++ Weakly-Authenticated FTP Service (Read-only) 
This ftp service can be accessed by ordinary ftp client software. You must specify the host port in your ftp command, as shown below. The Enstore admin will have sent you an email to confirm your registration for this service, and included a password for it.1 This is a weak password. Log in with your username and password. 

---+++ Sample weakly-authenticated read-only ftp session 

Here we explicitly use a weakly-authenticated ftp client, ( =/usr/bin/ftp= ) and make the connection to fndca port 24126. In the session, we first successfully retrieve a file called myfile, and secondly attempt to write a file trace.txt and (correctly) fail. 

<pre class="screen">
$ <userinput>/usr/bin/ftp fndca1.fnal.gov 24126</userinput>

 Connected to stkendca3a.fnal.gov.
 220 FTPDoorIM+PWD ready (read-only server)
 Name (fndca:aheavey):
 331 Password required for aheavey.
 Password: <userinput>*******</userinput>             
 230 User aheavey logged in
 ftp> <userinput>cd aheavey/test3</userinput>
 250 CWD command succcessful. New CWD is </aheavey/test3>
 ftp> <userinput>ls</userinput>
 200 PORT command successful
 150 Opening ASCII data connection for file list
 myfile
 myfile2
 myfile3
 226 ASCII transfer complete
 10 bytes received in 0.018 seconds (0.55 Kbytes/s)
 ftp> <userinput>get myfile</userinput>
 200 PORT command successful
 150 Opening BINARY data connection for
   /pnfs/fs/usr/test/aheavey/test3/myfile
 226 Closing data connection, transfer successful
 local: myfile remote: myfile
 42 bytes received in 0.05 seconds (0.82 Kbytes/s)
 ftp> put trace.txt
 200 PORT command successful
 500 Command disabled
 ftp> <userinput>bye </userinput>
</pre>

%NOTE% If you need to change this password, send email to dcache-admin@fnal.gov. 


%STOPINCLUDE%

%BOTTOMMATTER%
-- Main.AnneHeavey (original text) %BR%
-- Main.ForrestChristian (adapted from original) %BR%
-- Main.ForrestChristian - 13 Mar 2007 - moved here, edited %BR%

%META:TOPICMOVED{by="ForrestChristian" date="1173799783" from="Sandbox.EnstoreUsingDcacheToCopy" to="Documentation.StorageDcacheCopying"}%
