%META:TOPICINFO{author="DerekWeitzel" date="1331848013" format="1.1" reprev="1.7" version="1.7"}%
%META:TOPICPARENT{name="DocHowTo"}%
---+!! *Campus Factory Install RC*
<div style="background-color:#ffa07a; padding:7px; -moz-border-radius: 5px; border-radius: 5px;">
This is a pre-release.  It is not officially supported.  The underlying technology, CampusGrids.BoSCO is still in development.  The RC's may not work with all versions of bosco.  If you find any bugs, email campusgrids@fnal.gov
</div>

%DOC_STATUS_TABLE%
%TOC{depth="2"}%

---++ About This Document
This document is the instructions to install the 1.0 Release Candidate.  For the production release (0.4.X), see the CampusFactoryInstall.  

Both CampusGrids.BoSCO and the Campus Factory are changing.  As CampusGrids.BoSCO changes, so will the Campus Factory.

---++ Requirements
In order to install the Release Candidate you need:
   1. Working and turned on installation of CampusGrids.BoSCO
   1. At least one cluster installed and configured with CampusGrids.BoSCO

---++ Procedure
---+++ Configure CampusGrids.BoSCO
   1. Edit =~/bosco/local.%RED%hostname%ENDCOLOR%/condor_config.local=
   1. Add daemons to the =DAEMON_LIST=. <pre class="file">
DAEMON_LIST = MASTER, SCHEDD, COLLECTOR, NEGOTIATOR
</pre>
   1. Add the factory node to the collector host. <pre class="file">
COLLECTOR_NAME = $(FULL_HOSTNAME)
CONDOR_HOST = $(COLLECTOR_NAME)
</pre>
   1. Add the possible worker nodes to write to the factory node.  The IP in %RED%red%ENDCOLOR% should be replaced with possible IPs of remote worker nodes (it can be a range, like the example below). <pre class="file">
ALLOW_WRITE = $(ALLOW_WRITE), %RED%129.93.*%ENDCOLOR%
SEC_DEFAULT_AUTHENTICATION_METHODS = FS,CLAIMTOBE
</pre>
   1. Add the password file for authentication and strong encryption (shared key style) <pre class="screen">
%UCL_PROMPT% condor_store_cred -f campus-factory/share/glidein_jobs/passwdfile
%UCL_PROMPT% cp campus-factory/share/glidein_jobs/passwdfile ~/bosco/local.%RED%hostname%ENDCOLOR%/
</pre>
   1. Copy over security configuration <pre class="file">
SEC_PASSWORD_FILE = $(LOCAL_DIR)/passwdfile
SEC_ADVERTISE_STARTD_AUTHENTICATION = REQUIRED
SEC_ADVERTISE_STARTD_INTEGRITY = REQUIRED
SEC_ADVERTISE_STARTD_AUTHENTICATION_METHODS = PASSWORD
SEC_CLIENT_AUTHENTICATION_METHODS = FS, PASSWORD
ALLOW_ADVERTISE_STARTD = condor_pool@*/*
ALLOW_DAEMON = $(ALLOW_DAEMON) condor_pool@*/* $(FULL_HOSTNAME)
SEC_DAEMON_AUTHENTICATION = REQUIRED
SEC_DAEMON_INTEGRITY = REQUIRED
SEC_DAEMON_AUTHENTICATION_METHODS = FS,PASSWORD
</pre>

---+++ Configure the Campus Factory
   1. Download the !CampusFactory-1.0-rc2 at [[https://sourceforge.net/projects/campusfactory/][SourceForge]]
   1. Untar the Campus Factory <pre class="screen">
%UCL_PROMPT% tar xzf CampusFactory-1.0-rc2.tar.gz
</pre>
   1. Configure the Campus Factory, edit the =logdirectory=. <pre class="file">
logdirectory = /home/dweitzel/campus-factory/share
</pre>
   1. Edit the =worker_tmp= directory.  This can be set globally in the =[general]= section, or a cluster specific section identified by =[%RED%bosco-identifier%ENDCOLOR%]= <pre class="file">
worker_tmp = /state/partition1/tmp
</pre>
   1. Rsync the campus factory over to the remote clusters <pre class="screen">
%UCL_PROMPT% rsync -av campus-factory/ %RED%user@host.example.com%ENDCOLOR%:bosco
</pre>

---+++ Starting the services
   1. Start CampusGrids.BoSCO: <pre class="screen">
%UCL_PROMPT% bosco_start
</pre>
   1. Start the campus factory: <pre class="screen">
%UCL_PROMPT% campus-factory/bin/cf start
</pre>

---++ Validation of Success
The best way to validate the success of a running Campus Factory is to submit a job to be executed.

The test job, test.condor: <pre class="file">
universe = vanilla
output = out
error = err
executable = /bin/sleep
arguments = 10
log = logfile
queue 1
</pre>

Submit the job: <pre class="screen">
%UCL_PROMPT% condor_submit test.condor
</pre>



<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = DerekWeitzel

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = Scientist

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = HowTo
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %NO%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = DerekWeitzel
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = DerekWeitzel
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->
