%META:TOPICINFO{author="GabrieleGarzoglio" date="1349468610" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="NetworkingModularDashboard"}%
%LINKCSS%

<!-- This is the default OSG documentation template. Please modify it in -->
<!-- the sections indicated to create your topic.                        --> 

<!-- By default the title is the WikiWord used to create this topic. If  -->
<!-- you want to modify it to something more meaningful, just replace    -->
<!-- %TOPIC% below with i.e "My Topic".                                  -->

---+!! %SPACEOUT{ "Networking Dashboard AuthN/Z Working Group" }%
%TOC%

%STARTINCLUDE%

---++ Charge

This group discuss how to provide authentication (identifying users) and authorization (defining what users are allowed to do) for the networking dashboard.

The initial goal of the group is to understand the infrastructure for authentication (!AuthN) and authorization (!AuthZ) that is most adequate for the Networking Dashboard. 

For !AuthN, the typical approach on the Grid is based on a public key infrastructure implemented with X509 proxies and end-entity certificates. Membership to groups is authenticated using x509 /extended/ certificates, whereby authoritative membership services (e.g. VOMS) include a signed membership assertion pertaining to the user /within/ the user's certificate (e.g. voms certificate).
The group will investigate if this is an adequate standard for the dashboard.

For !AuthZ, various alternatives are being considered:
   1. the [[http://www.fnal.gov/docs/products/voprivilege/][AuthZ infrastructure of OSG]]
   1. a dedicate software module for the Dashboard
   1. integrating systems to help with the !AuthZ function, such as [[http://www.internet2.edu/grouper/][Internet2 Grouper]].

Questions to be addressed by the group include
   * How should the dashboard API be changed to accomodate the best way forward? 
   * How is the Dashboard dealing with user "groups"?

---++ Overview of the options on Authorization
This group is considering a few main alternatives to manage fine-grained authorization to access privileges.

---+++ The OSG Authorization Mechanism in a Nutshell 

The OSG Authorization infrastructure assumes an authentication scheme based on x509 extended proxies. All users have digital identities in the form of x509 credentials. All users also belong to communities (Virtual Organizations - VO - in OSG). The organizational structure of a community is a hierarchy of groups; members of a group can optionally have roles (non hierarchical entitites). This structure is maintained in membership services (VOMS servers) where the registration of users in groups and roles is managed by VO and group administrators. Before accessing any Grid resource, a user interacts with a membership service presenting its credentials and claiming membership to a group and role; the server verifies the claim and digitally signs and embeds a membership assertion within the user certificate itself.

On the OSG, access to resources is granted on the bases of the user membership to a group and role, rather than on the identity of the user. In other words, users presents the extended credentials to resources to obtain the access privileges associated with the group and role membership. The resource gateway (Globus gatekeeper, GridFTP, SRM, etc.) first authenticated the user's extended credentials using cryptographic techniques. Then the gateway determines the level of privileges associated with that user membership through the authorization function. For fine-grained authorization, the gateway calls-out to site-based policy decision points (e.g. SAZ and GUMS) passing all relevant attributes of the user identity, the resource, the intended action, and the environment. The policy decision point maps these attributes to local privileges (e.g. local user account). It is the responsibility of the gateway to grant the user access to the resources adhering to the policy decision point's obligations. 

In the case of the Dashboard, this group has to understand 
   * if an externally maintained structure of groups and roles (i.e. using VOMS) captures an adequate organizational model for its use cases. 
   * if the administrative properties of VOMS (user-initiated registration, approcal delegation, AUP signing, etc.) are adequate or an overkill for the dashboard
   * if embedding membership infromation in the user's credential is significant for the dashboard use cases (e.g. for identity propagation and delegation)
   * if delegating access rights to an external policy decision point (such as GUMS) is an advantage for our use cases or a complication
   * if the simple model of associating privileges to local user identities (GUMS) is sufficient for the Dashboard or if more complicated obligations (such as local user and group information) are needed, instead
   * if it is worth to base the authentication infrastructure on x509 in order to reuse the OSG authorization infrastructure

---+++ A Dedicated Authorization Software Module in the Dashboard
As an alternative to using the OSG authorization infrastructure, the dashboard could implement its own module to maintain privileges associated with user identities, membership information, and other relevant attributes.

This group has to understand
   * if this module won't end up replicating most of the functionalities already available via other systems (VOMS, GUMS, Grouper, etc.)
   * if membership and privilege management will need to be delegated to external administrators in the future (complexity of the administrative interfaces)
   * if a simple authentication infrastructure (e.g. user name and password) is sufficient or worth implementing

---+++ Integrating External Systems to Help with the !AuthZ Function
The organization of users in groups is at the basis of most fine-graned privilege infrastructures. Such systems enable the development of access authorization based on user membership. We have discussed VOMS as an example of such as system, based on x509 authentication.

Internet2 has developed Grouper to address the needs of managing user's membership. The advantage of Grouper with respect to VOMS is that it does not assume an authentication based on x509. For an insfrastructure based on x509, though, the disadvantage is that it is not as well integrated with x509 as VOMS.

This group has to understand
   * if systems such as Grouper offer a middle-way between a fully home-grown authorization system and a fully x509-based authorization infrastructure as for OSG.

%STOPINCLUDE%

%BOTTOMMATTER%

-- Main.GabrieleGarzoglio - 18 Sep 2012
