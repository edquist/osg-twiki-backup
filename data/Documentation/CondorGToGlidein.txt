%META:TOPICINFO{author="DerekWeitzel" date="1274720311" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="UsingTheGrid"}%
%LINKCSS%

<!-- This is the default OSG documentation template. Please modify it in -->
<!-- the sections indicated to create your topic.                        --> 

<!-- By default the title is the WikiWord used to create this topic. If  -->
<!-- you want to modify it to something more meaningful, just replace    -->
<!-- %TOPIC% below with i.e "My Topic".                                  -->

---+!! Open Science Grid Match Maker to Glidein Workflow Management System porting guide
%DOC_STATUS_TABLE%
%TOC%

---++ About This Document
This document is meant for VO's transitioning from OSGMM to GlideinWMS.  It assumes some knowledge of Condor, a working install of GlideinWMS, as well as access to OSGMM submission files.

---++Submission File
The differences between the submission file for OSGMM and GlideinWMS are minimal.


   * Since Condor is no longer submitting directly to the grid, the universe for the job will need to change from grid, to vanilla.
   <pre class="screen">
   universe=grid</pre>
   to
    <pre class="screen">
   universe=vanilla</pre>

   * It is no longer necessary to set a timeout or periodic_hold expression.  This is due to the nature of pilot submission, when a slot is free, you can instantly run on it.

   * It is useful to have an error detection/correction statement in the submission file such as:
   <pre class="screen">
   OnExitHold = (ExitStatus =!= 0)
   OnExitRemove = (ExitStatus == 0)
   PeriodicRelease = ((CurrentTime - EnteredCurrentStatus) > 60) && (HoldReasonCode =!= 1)</pre>
   This statement will hold the job if it exits with a non-zero status.  It will remove the job only if it exited successfully (exit status 0).  And it will release the job if it wasn't held with 'condor_hold' after 60 seconds.



---+++ File Transfer
   * Need to specify should_transfer_files:
     <pre class="screen">
     should_transfer_files = YES</pre>

   * It is still necessary to specify transfer_input_files, but do not need to specify transfer_output_files.  GlideinWMS will transfer every file that is created back to the submission host.  This often leads to many temporary files being transferred back when a job completes.  It is important to delete temporary files as a part of your job.


---++DAGMan Pitfalls

When OSGMM runs a job, the exit status of the job is always 0, regardless of the actual exit status at the remote site.  Due to this, DAGMan will always interpret the node as succeeding in OSGMM.  A common approach to solve this is to have each job individually have a post script to check for successful completion.

In GlideinWMS, the correct exit status will be transferred back with the job.  In this case, it is easier to use DAGMan's automatic exit status checking for error detection.  If you only want error detection, then you do not need to add anything to the DAG.  If you want DAGMan to retry the job if it fails, add:
<pre class="screen">
RETRY <job> 5</pre>
This will retry the job on failure 5 times.

---++Monitoring Jobs


---++ *Comments*
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = DerekWeitzel

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = User

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = Developer

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = HowTo
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %NO%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = 
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->



-- Main.DerekWeitzel - 24 May 2010
