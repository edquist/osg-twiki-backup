%META:TOPICINFO{author="DerekWeitzel" date="1300981523" format="1.1" reprev="1.28" version="1.28"}%
%META:TOPICPARENT{name="UsingTheGrid"}%
%LINKCSS%

<!-- This is the default OSG documentation template. Please modify it in -->
<!-- the sections indicated to create your topic.                        --> 

<!-- By default the title is the WikiWord used to create this topic. If  -->
<!-- you want to modify it to something more meaningful, just replace    -->
<!-- %TOPIC% below with i.e "My Topic".                                  -->

---+!! !GlideinWMS VO Frontend Installation
%TOC%

---++ About This Document

This document describes how to install the Glidein Workflow Managment System (!GlideinWMS) VO Frontend.  The VO Frontend is the minimum required software for a Virtual Organization to submit grid jobs using the !GlideinWMS system.  This installation guide describes installation using the RPM prepared by the OSG.  


---++ Requirements
Required software:
   * [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/ClientInstallationGuide][OSG Client]] (Do no install condor with the client)
   * [[http://www.cs.wisc.edu/condor/downloads-v2/download.pl][Condor RPM (Development series)]]
   * [[http://sourceforge.net/projects/javascriptrrd/files/][JavascriptRRD/Flot]].  RPM available [[http://t2.unl.edu/store/rpms/SL5/x86_64/javascriptrrd-0.5.0-2.noarch.rpm][Here]]
   * Available from add-on repos (Such as [[http://fedoraproject.org/wiki/EPEL][EPEL]].  Repo [[http://fedoraproject.org/wiki/EPEL/FAQ#howtouse][Install]]):
      * Apache httpd.  Install and enable:
        <pre class="screen">
yum install httpd
chkconfig --add httpd
chkconfig httpd on</pre>
      * rrdtool-python.  Install:
      <pre class="screen">
yum install rrdtool-python</pre>


---++ Installation Procedure
   0. Download and install the pre-requisite software
   1. Download and install the VO Frontend RPM
   1. Edit Frontend configuration options
   1. Edit Condor configuration options
   1. Create a Condor grid map file
   1. Reconfigure and Start frontend


---+++ Download and install the VO Frontend RPM

The RPM is currently available from [[http://koji.hep.caltech.edu/public/packages/GlideinWMSFrontend/2.5.1/9/noarch/GlideinWMSFrontend-2.5.1-9.noarch.rpm][the glideinWMS project]].  The source RPM is available at [[http://koji.hep.caltech.edu/public/packages/GlideinWMSFrontend/2.5.1/6/src/GlideinWMSFrontend-2.5.1-9.src.rpm][the glideinWMS project]] also.

   1. Download/Install the RPM
   <pre class="screen">
$ rpm -Uvh http://koji.hep.caltech.edu/public/packages/GlideinWMSFrontend/2.5.1/9/noarch/GlideinWMSFrontend-2.5.1-9.noarch.rpm</pre>
  
   If the install succeeded, then there will be no output from the command.



---+++ Configuring the Frontend

The configuration file is =/etc/gwms-frontend/frontend.xml=.  The next steps will describe each line that you will need to edit.  The portions to edit are highlighted in red font.

   1. The VO you are affiliated with.
   <pre class="file">
&lt;factory query_expr='((stringListMember("%RED%VO%ENDCOLOR%", GLIDEIN_Supported_VOs)))'></pre>
   1. The username that you are assigned from the factory (email osg-gfactory-support@physics.ucsd.edu) (scroll right).
   <pre class="file">
&lt;collector DN="/DC=org/DC=doegrids/OU=Services/CN=glidein-1.t2.ucsd.edu" comment="Define factory collector globally for simplicity" factory_identity="gfactory@glidein-1.t2.ucsd.edu" my_identity="%RED%username%ENDCOLOR%@glidein-1.t2.ucsd.edu" node="glidein-1.t2.ucsd.edu"/>
   </pre>
   1. The Schedd information.  The Cert DN is the DN specified in the GSI_DAEMON_PROXY or GSI_DAEMON_CERT when condor is configured.  A secondary schedd is optional.  You will need to delete the secondary schedd line if you are not using it.
   <pre class="file">
&lt;schedds>
   &lt;schedd DN="%RED%Cert DN used by the schedd at fullname:%ENDCOLOR%" fullname="%RED%Hostname of the schedd%ENDCOLOR%"/>
   &lt;schedd DN="%RED%Cert DN used by the second Schedd at fullname:%ENDCOLOR%" fullname="%RED%schedd name%ENDCOLOR%@%RED%Hostname of second schedd%ENDCOLOR%"/>
&lt;/schedds></pre>
   1. The DN of the cert that the frontend will use to communicate with the factory and use to submit to the factory.
   <pre class="file">
&lt;security classad_proxy="/tmp/x509up_u99" proxy_DN="%RED%DN of proxy owned by user nobody%ENDCOLOR%" proxy_selection_plugin="ProxyAll" security_name="%RED%The security name, this is used by factory%ENDCOLOR%" sym_key="aes_256_cbc"> </pre>
   1. The hostname of the frontend.
   <pre class="file">
&lt;stage base_dir="/usr/share/gwms-frontend/www/stage" use_symlink="True" web_base_url="http://%RED%hostname of frontend%ENDCOLOR%/vofrontend/stage"/> </pre>
   1. The hostname of the collectors.
   <pre class="file">
&lt;collector DN="DN of main collector" node="%RED%hostname of collector%ENDCOLOR%" secondary="False"/>
&lt;collector DN="DN of secondary collectors (usually same as DN in line above)" node="%RED%hostname of secondary collectors (usually same as hostname in line above)%ENDCOLOR%:9620-9660" secondary="True"/>
</pre>

---+++ Configuring Condor
In versions of Condor 7.4.4 and above, the condor configuration for the frontend is placed in =/etc/condor/config.d/00_frontend.config=.  If you have a version less than 7.4.4, a local condor configuration file is located at =/etc/condor/condor_config.local=.  Adding the following to the bottom of =condor_config.local= will pick up the !GlideinWMS condor configuration.
<pre class="file">
LOCAL_CONFIG_DIR = /etc/condor/config.d</pre>

After configuring condor, be sure to restart condor:
<pre class="screen">
service condor restart</pre>

The lines you have to edit:
   1. Credentials of the machine.  You can either run using a proxy, or a service certificate.  It is recommended to use a service certificate, which uses the variables GSI_DAEMON_CERT and GSI_DAEMON_KEY.  The proxy and certificate files should be owned by user =condor=.
   <pre class="file">
############################
# Credentials
############################
#GSI_DAEMON_PROXY = /tmp/x509up_u1349

# EDIT THESE VALUES
# If you ever decide to use a Certificate, see below
GSI_DAEMON_CERT = /etc/grid-security/glideincert.pem
GSI_DAEMON_KEY  = /etc/grid-security/glideinkey.pem </pre>
   1. Location of the condor grid map (description in the next section)
   <pre class="file">
#################################
# Where to find ID->uid mappings EDIT THIS
#################################
CERTIFICATE_MAPFILE=/opt/glidecondor/certs/condor_mapfile </pre>
   1. Add the DN's for the certificates that your daemons will use.  Examples are placed below.
   <pre class="file">
#####################################
# Add whitelist of condor daemon DNs EDIT THIS
#####################################
GSI_DAEMON_NAME=/DC=org/DC=doegrids/OU=People/CN=Derek Weitzel 285345,/DC=org/DC=doegrids/OU=People/CN=Derek Weitzel 285345/CN=993078166,/DC=org/DC=doegrids/OU=Services/CN=host/glidein.unl.edu,/DC=org/DC=doegrids/OU=Services/CN=glidein-1.t2.ucsd.edu </pre>


---+++ Create a Condor grid map file.
The condor grid map file is used for authentication between the glidein running on a remote worker node, and the local collector.  Condor uses the mapfile to map certificates to users on the local machine.  It is important that you map the DN's of:
   * Each schedd that the frontend talks to
   * The DN that the frontend uses

Below is an example mapfile:
   <pre class="file">
GSI "^\/DC\=org\/DC\=doegrids\/OU\=People\/CN\=Derek\ Weitzel\ 285345$" frontend
GSI "^\/DC\=org\/DC\=doegrids\/OU\=Services\/CN\=host\/hcc\-grid\.unl\.edu$" dweitzel
GSI "^\/DC\=org\/DC\=doegrids\/OU\=Services\/CN\=host\/cpass\.unl\.edu$" dweitzel
GSI (.*) anonymous
FS (.*) \1 </pre>


---+++ Proxy Configuration
By default, the frontend will run as user =nobody=.  In order for the frontend to use the certificate for user =nobody=, it has to exist and be owned by the user =nobody=.
   1. Create the proxy
   <pre class="screen">
user> $ voms-proxy-init -valid &lt;hours_valid> -voms &lt;vo> </pre>
   1. Copy the proxy to the correct name
   <pre class="screen">
user> $ cp /tmp/x509up_u`id -u` /tmp/x509up_u`id -u nobody` </pre>
   1. Change ownership of the proxy
   <pre class="screen">
root> $ chown nobody: /tmp/x509up_u`id -u nobody` </pre>


---+++ Reconfigure and verify installation
In order to use the frontend, first you must reconfigure it.

<pre class="screen">
/etc/init.d/frontend_startup reconfig </pre>

After reconfiguring, you can start the frontend:
<pre class="screen">
/etc/init.d/frontend_startup start </pre>




---++ Important file locations

|  *File Description*  |  *File Location*  |
|Configuration file | /etc/gwms-frontend/frontend.xml |
|Logs | /var/log/gwms-frontend/ |
|Startup script | /etc/init.d/frontend_startup |
|Web Directory | /usr/share/gwms-frontend/www |
|Working Directory | /usr/share/gwms-frontend/frontend-temp/ |



-- Main.DerekWeitzel - 25 Jun 2010
