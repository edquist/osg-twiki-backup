%META:TOPICINFO{author="DerekWeitzel" date="1277500864" format="1.1" version="1.39"}%
%LINKCSS%

%STARTINCLUDE%


---+ An Introduction to OSG for End-Users

This page is aimed at beginning users who want to use the resources on the OSG.  Every user must be associated with a registered organization (called a VO).  Many large VOs (such as ATLAS and CMS) already have extensive user documentation; these pages are primarily oriented at users of smaller VOs who might be porting their own or community applications to the OSG.

These pages first introduce the primary OSG concepts, then dives into the nuts and bolts of building (or porting) an application to the grid by showing demonstration applications of increasing complexity.  Both job management and data management are covered. 

---++ Open Science Grid

   * [[ReleaseDocumentation/WhatIsOSG][What is OSG?]]  This page introduces the "big-picture" concepts of *what the OSG is, what it is not,* and what it tries to achieve.
   * [[ReleaseDocumentation/WhatIsOSG#Virtual_Organizations][What are VOs?]]  Virtual Organizations - "VOs" - are an important organizational concept for the OSG; this page *introduces VOs for the end-user*.

---++ Security
   * [[ReleaseDocumentation.CertificateWhatIs][What is a certificate?]]  A digital certificate is like a passport for the grid.  This page introduces them to new users, and includes links for getting your own certificate.
   * [[ReleaseDocumentation/CertificateGet][Get a Certificate]]  Instructions on how to get a certificate.
   * [[GetAccessToGrid][How do you get access to a site?]]  The certificate provides you with an identity - but doesn't give you access rights to a site!  This page describes *how one gets authorized at an OSG site*.

---++ Using the OSG
---+++ Installing the OSG Client
All of the following sections will focus on job and data management on the OSG in order to build a successful grid application.

These will all assume that you have the [[ReleaseDocumentation/ClientInstallationGuide][OSG client software installed]].

---+++ Running Jobs
   * [[FindAvailableResource][Finding OSG sites to run your jobs]]
   * [[UserTestingResource][Testing your first resource]].
   * Running jobs with Condor-G.  Condor-G is the most common client tool for submitting jobs directly to the grid.  The following pages cover the most common usage patterns; each link builds upon the knowledge learned in the previous one.
      * [[CondorSubmittingSingleJob][Submitting a single, simple job with Condor-G]].
      * [[CondorSubmittingMultipleJobs][Submitting multiple, simple jobs with Condor-G]].
      * [[CondorSubmittingMultipleComplexJobs][More complex Condor-G jobs]].
      * [[http://www.cs.wisc.edu/condor/manual/v7.5/2_10DAGMan_Applications.html][Building workflows in Condor]] (external link).  This link covers in-depth how to allow Condor to handle dependencies between jobs using DAGMan.  The link discusses vanilla universe jobs, but DAGMan works with grid universe jobs as well.
   * [[ReleaseDocumentation/UsingWorkerNodeClient][The OSG job environment (Where can I install software? What's in the environment?)]]
   * [[http://osgmm.sourceforge.net/][Using the OSG Matchmaker to run jobs]].  The OSG Match Maker does that work of site discovery, verification, and selection for you.  It is easy-to-install and works for a wide variety of users.
   * [[ReleaseDocumentation/UserCESimpleTest][Debugging tools (globus-job-run, globus-url-copy)]]
   * [[GoldenRulesForOSGUsage][Best practices for running lots of jobs]].

---+++ Data management
Data management is difficult on the grid.  Unlike running jobs, where a consensus approach is beginning to appear, there are many techniques for data management.  Some of them scale up well to hundreds of TBs a day, but scale poorly to opportunistic jobs.

The most common approach is to use a get/put method - they download input from a remote endpoint to the scratch area.  The jobs run, and write output to the scratch area.  After computation part of the job is finished, the result upload is uploaded to a remote endpoint.

Two common approaches to staging in data are via HTTP (many sites have local caches) or a protocol called SRM.

The de-facto way to save output is through SRM.

   * [[ReleaseDocumentation/StorageEndUser][Overview of data movement approaches]].  An overview for the different approaches, written by the OSG Storage group.
   * [[OsgHttpBasics][HTTP Basics]].  How to download files over HTTP in a scalable and secure fashion on the OSG.
   * [[ReleaseDocumentation.InformationServicesStorage#DiscoveryTool][Finding storage resources]].  Finding SRM and gridftp-based storage resources for you to use.
   * [[SrmBasics][SRM basics]]: Moving files using SRM.

---+++ Advanced
Beyond "traditional", basic job handling, there is a wide variety of specialized topics for using the OSG.  Here are a few which may appeal to advanced users:
   * [[Documentation.HighThroughputParallelComputing][High-Throughput Parallel Computing]]: This page covers how to submit multi-core (which may be MPI or just traditional multi-threaded) jobs on the OSG using Condor.
   * [[Documentation.GlobusRslAttributes][Globus RSL language usage on the OSG]]: Globus RSL is a mini-language that controls advanced, specific aspects of your jobs.  For some users, this might be necessary for their jobs; we recommend it against using RSL heavily because it is not portable between sites.
   * [[Documentation/JobSubmissionComparison][Job Submission tool comparison]]: A work-in-progress document that compares the three most common submission methods in the OSG: !GlideInWMS, PanDA, and OSG-MM.  This link may be useful for determining what is best for your needs.
   * [[Documentation/CondorGToGlidein][Condor-G to !GlideinWMS porting guide]]: !GlideinWMS is a new grid scheduler that can be used by VO's.  This guide will document the best practices on moving jobs from Condor-G to !GlideinWMS.
   * [[Documentation/GlideinWMSVOFrontendInstall][GlideinWMS VO Frontend Install Guide]]: Installation guide for the !GlideinWMS VO Frontend.

---++ Help
   * [[Troubleshooting/TroubleshootingFAQ][Troubleshooting FAQ for OSG users]]
   * [[GetHelp][Get Help]]
   * [[Troubleshooting/CondorErrors][Troubleshooting Condor errors]]
   * [[Documentation.GridUsersGuideTroubleshootingOSG][Another OSG Users troubleshooting guide]]

<!--

---++ Policies and guidelines
   * [[AboutResourceAllocation][About resource allocation]] from gridusersguide
   * [[Trash.DocumentationUseResourcesProperly][Using resources properly]]

---++ Advanced Usage
   * [[GoldenRulesForOSGUsage][Useful tips for users]]
   * Does your VO run pilot jobs? [[ReleaseDocumentation/ValidateGlexecAtSite][Check if a site is running gLexec]].
   * [[SubmittingMPIJobs][Submitting MPI Jobs]] (What is [[http://www-unix.mcs.anl.gov/mpi/][MPI?]])

---++ Run a job
   * [[ReleaseDocumentation/UsingWorkerNodeClient][Configure your job to use the worker node client]]
   * [[Trash.DocumentationUseResourcesProperly#Simple_Example_Script_for_submis][Using resources properly (Submitting jobs)]]

---++ Store or Retrieve data
   * [[Trash.DocumentationUseResourcesProperly#Consuming_storage][Using resources properly (Consuming storage)]]
   * [[StorageDcacheCopying][Copying data using dCache]]
   * Copying data using Bestman - see the http://datagrid.lbl.gov/bestman/bestman-manual.html
   * [[StorageGridFTP][Overview of GridFTP in OSG]] 

---++ Manipulating jobs
   * How to monitor a job
      * [[VO/WebHome][Your VO]] may have specialized monitoring tools
      * %RED%For globus-run jobs use ??%ENDCOLOR%
   * How to cancel a job %RED%(need info)%ENDCOLOR%
      * For Condor-G jobs, go to the [[http://www.cs.wisc.edu/condor/manual/v6.6/5_3Condor_G.html][Condor manual]]; see "Removing Condor-G jobs".
   * How to retrieve results from a job %RED%(need info)%ENDCOLOR%
-->
%STOPINCLUDE%

---+++ Comments
%COMMENT{type="tableappend"}%
