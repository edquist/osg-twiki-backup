%META:TOPICINFO{author="AnneHeavey" date="1193683750" format="1.1" reprev="1.9" version="1.9"}%
%META:TOPICPARENT{name="GlossaryOfTerms"}%
---+!! Glossary D
This topic lists glossary entries beginning with "D". The [[GlossaryOfTerms][full glossary]] is more useful.

%STARTINCLUDE%
%INCLUDE{ "GlossaryJumpIndex" }%
%EDITTHIS%

   $ DAG: A data structure used by DAGman (see DAGman) to represent dependencies; each job is a node in a DAG; each node can have a number of parent or children nodes but no loops. A DAG is defined by a .dag file, listing each of its nodes and their dependencies:

   $ DAGman Directed Acyclic Graph Manager: A Grid middleware component to manage interdependent Grid jobs, provided by the Condor team. It allows you to specify dependencies between your Condor jobs (e.g., don't run B till A has completed successfully). Acts as a "meta-scheduler" managing the submission of your jobs to Condor, based on the DAG dependencies. DAGman is packaged as part of the Virtual Data Toolkit (VDT). Read more at http://www.cs.wisc.edu/condor/dagman/.

   $ Data federation: The process of bringing data together in a single virtual location for on-demand application access. 

   $ Data Transfer Protocol<a name="DefsDataTransferProtocol"></a>: mechanisms for reliably transferring data in HPC and Grid environments

   $ dCache<a name="DefsDcache"></a>: A data file caching system that acts as an intelligent manager between the user and the data storage facilities. It optimizes the location of staged copies according to an access profile. It decouples the (potentially slow) network transfer rate from the (fast) storage media I/O rate in order to keep the mass storage system from bogging down. 

   $ Distinguished Name (DN): The unique name of the entity whose public key the certificate identifies. The DN includes the subject's Common Name (first and last name), Organizational Unit (e.g., institution), Organization (e.g., VO), and 2-character Country code (and optionally locality and state or province).

   $ Disk Cache: A disk cache can be viewed as an intermediate "relay station" between client applications and an HSM. It decouples the potentially slow network transfer (to and from client machines) from the fast storage media I/O in order to keep the HSM from bogging down. See dCache.

   $ Durable file: A durable file has the behavior of a volatile file in that it has a lifetime associated with it, but also the behavior of a permanent file in that when the lifetime expires the file is not automatically eligible for removal.

   $ Durable storage: Storage in which a "durable" physical replica of a file can only be created and removed by the administrator of the disk cache. A durable file is designated to stay in cache by the disk cache administrator (i.e,. not subject to dynamic removal) until he or she decides to change its status to "volatile".

<!-- forrest, enstore:

   $ dCap<a name="DefsDcap"></a>: dCache-native C-API access protocol.
   $ DESY<a name="DefsDesy"></a>: Deutches Elektronen-SYnchrotron, a laboratory in Hamburg, Germany that conducts particle physics research. 
   $ Device Level Method<a name="DefsDeviceLevelMethod"></a>: reorganizes the disk access operations according to the application&#8217;s request to optimize the performance of the I/O system. [[#HUB04][(HUB04)]]
   $ direct I/O<a name="DefsDirectIo"></a>: A disk read/write that by-passes the file system&#8217;s buffer cache. This is achieved by skipping the (normally done) copy that goes from the application memory space to the kernel buffer's memory space. Direct I/O is an SGI/Linux extension. Compare to memory-mapped I/O and POSIX I/O. 
   $ directives-based data-parallel language: An approach to parallel computing where "serial code is parallelized by adding directives that tell the machines how to distribute data and use multiple processors. Examples of such languages are OpenMP and High Performance Fortran." [[#DEJ06][(DEJ06)]]
   $ Disk Resource Manager (DRM)<a name="DefsDiskResourceManager"></a>: an SRM-compliant implementation on a disk-based unix file system. _See also:_ [[#DefsSrm][SRM]]; [[#DefsTrm][TRM]]; [[#DefsHrm][HRM]].
   $ door (for dCache)<a name="DefsDoor"></a>: An access point. A protocol converter (e.g., for FTP, dCap) between clients and internal dCache systems. Each door is associated with a particular port on the dCache server, and has its own access profile. 
   $ dribble notion (of data transfer)<a name="DefsDribbleNotion"></a>: Data is transferred in small quantities at random intervals.
   $ drivestat server<a name="DefsDrivestatServer"></a>: Maintains statistical information of the drives. 
   $ DRM<a name="DefsDrm"></a>: _See_ [[#DefsDiskResourceManager][Disk Resource Manager]].
   $ durable file<a name="DefsDurableFile"></a>: a file with a [[#DefsFileLifetime][lifetime]] associated with it but that is not automatically eligible for removal from the [[#DefsVolatileStorage][volatile storage]] when it expires. These are used for temporary space for output generated by large simulations, which would need to eventually be archived. However, archiving is slow so the durable file definition ensures that it will not be removed until it is copied to archive. _See also:_ [[#DefsVolatileFile][volatile file]]; [[#DefsPermanentFile][permanent file]].
   $ durable space<a name="DefsDurableSpace"></a>: storage owned by some user or organization that has a lifetime that differs from [[#DefsVolatileSpace][volatile space]] lifetimes: when the space lifetime expires, and it does not contain any files, the SRM releases the space; otherwise the system reclaims unused space and notifies the user(s) that the lifetime of the durable space has expired.

-->


%STOPINCLUDE%
