%META:TOPICINFO{author="RuthPordes" date="1156887786" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="WebHome"}%
---+!!<nop>%TOPIC%
%TOC%

---+GUMS

---++Introduction

The gums.config file is written in XML and has three parts:
persistenceFactories - defines where the local data can be stored. For example, GUMS will keep a local copy of the VO listings; you can decide where to keep them. In OSG, it's always mysql. Each component that needs persistence information will retrieve it from mysql.

groupMappings - defines groups of users and sets how they are to get mapped. A groupMapping is defined by two things: a set of users (userGroup) and a policy for account mapping (accountMapping). Optionally, the policy can be composed of multiple policies (compositeAccountMapping)

hostGroups - defines which groupMappings are used for the different hosts.

---++File Structure

The XML file has this structure:
<gums>
 <persistenceFactories>

 <persistenceFactory/>

 </persistenceFactories>
 <adminUserGroup/>
 <groupMappings>
 <groupMapping>
 <userGroup/>

 <accountMapping/>

 </groupMapping>
 <groupMapping>
 <userGroup/>
 <compositeAccountMapping>
 <accountMapping/>

 <accountMapping/>

 <accountMapping/>
 </compositeAccountMapping>
 </groupMapping>
 ...
 </groupMappings>

 <hostGroups>

 <hostGroup/>
 </hostGroups>
</gums>

---++Getting Started
d102 1
persistenceFactories

The default file includes one persistenceFactory element; leave it as is (even the password?).
<persistenceFactory 
name='mysql'
className='gov.bnl.gums.MySQLPersistenceFactory'
jdbcDriver='com.mysql.jdbc.Driver'
jdbcUrl='jdbc:mysql://cd-94372.dhcp.fnal.gov/GUMS_1_0' 
user='gums' 
password='VDTXLKRBKIM' 
autoReconnect='true' />

groupMappings

This element contains groupMapping elements. The only essential attribute is "name". This is the name for the mapping defined within this element. Each groupMapping element in the file must have a unique name.
<groupMapping name='osg1'>

userGroup

The userGroup element is a subelement of groupMapping.

Required, fixed-value attributes
---+++++!!Required, fixed-value attributes

<verbatim>
className='gov.bnl.gums.VOMSGroup'
Required, installation-specific attributes
</verbatim>

It has others which are required, but that you need to set for your own installation: url, name, voGroup, sslCertfile, ss1key. The default values for these last two should work as is, but check.
name: your VO name
voGroup: a group defined in VOMS under your VO 
url: URL for your VOMS admin server
sslCertfile: path to the httpcert.pem file on your GUMS host 
sslKey path to the httpkey.pem file on your GUMS host 
   * sslKey path to the httpkey.pem file on your GUMS host 
d127 1
<verbatim>
name='myusergroup1' 
voGroup="/myvo/group1"
url='https://my-voms-server:8443/edg-voms-admin/vos/services/VOMSAdmin'
sslCertfile='/etc/grid-security/http/httpcert.pem'
sslKey='/etc/grid-security/http/httpkey.pem' 
</verbatim>
---+++Optional attributes
---++++Optional attributes

voRole: Specifies which VO role(s) (defined in a VOMS) must be specified in the proxy in order to make a match. Should be used with ignoreFQAN="false".
ignoreFQAN: This dictates whether to process or ignore role and group information, if any, in a proxy obtained with voms-proxy-init. False means "process it"; true means "ignore it".
   * ignoreFQAN: This dictates whether to process or ignore role and group information, if any, in a proxy obtained with voms-proxy-init. False means "process it"; true means "ignore it".

d139 1
<verbatim>
voRole="role1"
ignoreFQAN="false"
accountMapping
</verbatim>

%RED%to here AH 4Oct%ENDCOLOR%

---+++Group Account Mapping

For group mapping, you just have to specify the implementing class (use the value for className shown here, below) and the name of the group account, e.g.,
<accountMapping 
className='gov.bnl.gums.GroupAccountMapper' 
groupName='groupaccount1' />
Pool Account Mapping

To use a pool of accounts, you need to specify the implementing class (use the value for className shown here, below), the place to look up the pool of accounts (the persistenceFactory, always set to "mysql" in OSG) and the name for the pool (there may be multiple pools defined), e.g.,:
<accountMapping 
className='gov.bnl.gums.AccountPoolMapper'
persistenceFactory='mysql' 
name='Pool_1' />

Both (Composite)

You may include both types of mapping within one groupMapping element. A typical use for this would be to map the incoming user to a pool account if available, and if not, then fallback to a group account. Use the compositeAccountMapping element as shown here to accomplish this:
<compositeAccountMapping>
 <accountMapping className='gov.bnl.gums.AccountPoolMapper'
 persistenceFactory='mysql' 
 name='Pool_1' />
 <accountMapping 
 className='gov.bnl.gums.GroupAccountMapper'
 groupName='groupaccount1' />
d175 1
</compositeAccountMapping>
</verbatim>
hostGroup

A hostGroup element has to define which hosts use which mappings. It has three required attributes:
className: use the value for className shown here, below
wildcard: specifies a host or set of hosts; can use a wildcard 
groups: specifies the group mapping to be used by the specified host(s) (The value must match the "name" attribute of one or more of the groupMapping elements).
d188 2
<hostGroup 
className='gov.bnl.gums.WildcardHostGroup' 
wildcard='*.fnal.gov' 
groups='osg1' />
</verbatim>
As with other elements in the =gums.config= file, GUMS maps according to the first match encountered. If you implement multiple hostGroups, make sure your wildcard value only catches the hosts it should; and put broader matches after narrower ones (e.g., myhost.fnal.gov ahead of *.fnal.gov).

As with other elements in the gums.config file, GUMS maps according to the first match encountered. If you implement multiple hostGroups, make sure your wildcard value only catches the hosts it should; and put broader matches after narrower ones (e.g., myhost.fnal.gov ahead of *.fnal.gov).


---++A Simple Example

Here we'll use group mapping to a single account, osg01. We'll assume people are coming in with a standard grid proxy so that we can ignore VO groups and roles. (We haven't talked about FQAN or the adminUserGroup...)
<gums>

 <persistenceFactories>

 <persistenceFactory ... (all the default values as listed above) />
 </persistenceFactories>
 <adminUserGroup 
 className='gov.bnl.gums.ManualUserGroup'
 persistenceFactory='mysql' 
 name='admins' />
 <groupMappings>
 <groupMapping>

 name='osg01'
 <userGroup 
 className='gov.bnl.gums.VOMSGroup'
 name='usergroup1'
 url='https://your-voms-server:8443/edg-voms-admin/{VO name}/services/VOMSAdmin'
 voGroup="/myvo/group1"
 persistenceFactory='mysql' 
 sslCertfile='/etc/grid-security/http/httpcert.pem'
 sslKey='/etc/grid-security/http/httpkey.pem'
 ignoreFQAN="true"/>

 <accountMapping 
 className='gov.bnl.gums.GroupAccountMapper' 
 groupName='osg01account' />
 </groupMapping>
 </groupMappings>
 <hostGroups>
 <hostGroup 
 className='gov.bnl.gums.WildcardHostGroup' 
 wildcard='*.fnal.gov' 
 groups='osg01' />

 </hostGroups>

</gums>

Add Some Extras


groupMappings
d237 2
If you want MonALISA to be able to retrieve information for a given groupMapping, you'll need to set two other attributes in that groupMapping element:
   $ accountingVo: its value should be similar or identical to the VO name and must be completely lowercase
   $ accountingDesc: the same string as accountingVo but in uppercase
accountingVo: its value should be similar or identical to the VO name and must be completely lowercase
accountingDesc: the same string as accountingVo but in uppercase

E.g.,
d248 2
 <groupMapping>
 name='osg01'
 accountingVo=''myvo
 accountingDesc='MYVO'>
 ...
 </groupMapping>
</verbatim>
	Supported by the National Science Foundation and the U.S. Department of Energy's Office of Science	 

a259 1

Questions? Comments? Contact Webmaster.
	Supported by the National Science Foundation and the U.S. Department of Energy's Office of Science	
 
---++ Information sources
[[http://grid.racf.bnl.gov/GUMS/guide_introduction.html]]

-- Main.AnneHeavey - 04 Oct 2006 %BR%
-- Main.RuthPordes - 29 Aug 2006
