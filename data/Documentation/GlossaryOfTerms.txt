%META:TOPICINFO{author="ForrestChristian" date="1159314756" format="1.1" version="1.1"}%
%META:TOPICPARENT{name="EnstoreIntro"}%
   $ accounting server: This server maintains statistical information on a running system. It is Enstore&#8217;s interface to a database of transfer-related data. 
a9 1
   $ active file: Any file in Enstore that is not deleted. 
   $ alarm server (AS): Maintains a record of alarms raised by other servers, and creates reports available online. 
   $ alarm server (AS): The Alarm Server maintains a record of alarms raised by other servers, and creates a report that&#8217;s available online. 
   $ bfid: _See_ Bit file ID.
   $ bfid: Bit file id; an Enstore-assigned, unique identifier for a data file. 
   $ cern wrapper: A file family wrapper that accommodates data files up to (10<sup>21</sup> &#8211; 1) bytes. It matches an extension to the ANSI standard, as proposed by CERN, and allows data files written at Fermilab to be readable by CERN, and vice-versa. See file family wrapper. 
   $ Computer Element: An element capable of running a user job.
   $ crc (Cyclic Redundancy Check): Used to verify that data has been stored properly. It is used like a checksum, but is less prone to multiple-bit errors. During a transfer, both sides calculate the crc and compare the values, unless the --no-crc option is specified. Enstore uses a zero seededAdler 32 crc. 
   $ cwd : current working directory 

   $ cpio_odc wrapper: A file family wrapper which allows the file to be dumpable via cpio. This wrapper has a file length limit of (8G &#8211; 1) bytes. See file family wrapper. 

   $ crc (Cyclic Redundancy Check): Used to verify that data has been stored properly; it&#8217;s used like a checksum, but is less prone to multiple-bit errors. During a transfer, both sides calculate the crc and compare the values, unless the --no-crc option is specified. Enstore uses a zero seededAdler 32 crc. 
---++ D
%INCLUDE{ "GlossaryD" }%
   $ dCache: A data file caching system that acts as an intelligent manager between the user and the data storage facilities. It optimizes the location of staged copies according to an access profile. It decouples the (potentially slow) network transfer rate from the (fast) storage media I/O rate in order to keep the mass storage system from bogging down. 
   $ dCache: DCache is a data file caching system which acts as an intelligent manager between the user and the data storage facilities. It optimizes the location of staged copies according to an access profile. It decouples the (potentially slow) network transfer rate from the (fast) storage media I/O rate in order to keep the mass storage system from bogging down. 
   $ dc_check: A dCap command that checks if a file is on disk in the dCache. 
   $ dCap: DCap is a dCache-native C-API access protocol. The dCap package comprises the commands dcap, dc_check and dc_stage. 
   $ dc_stage: A dCap command that prestages a read request. 
   $ dc_check: A dCap command which checks if a file is on disk in the dCache. 
   $ DESY: Deutches Elektronen-SYnchrotron, a laboratory in Hamburg, Germany that conducts particle physics research. 
   $ dccp: A dCap command which provides a cp-like functionality on the PNFS file system. 
   $ Disk Resource Manager (DRM): An SRM SRM implementation on a disk-based unix file system. _See also:_ SRM; TRM; HRM.
   $ dc_stage: A dCap command which prestages a read request. 
   $ drivestat server: Maintains statistical information of the drives. 
   $ ddencp: A command packaged with encp which copies a local file to another local file. 
#DefsEe
   $ DESY: Deutches Elektronen-SYnchrotron; a laboratory in Hamburg, Germany that conducts particle physics research. 
d54 1
   $ direct I/O: Direct I/O differs from normal disk read/writes in that it by-passes the file system&#8217;s buffer cache. This is achieved by skipping the (normally done) copy that goes from the application memory space to the kernel buffer's memory space. Direct I/O is an SGI/Linux extension. Compare to memory-mapped I/O and POSIX I/O. 
%INCLUDE{ "GlossaryE" }%
   $ door (for dCache): A door is a protocol converter (e.g., for FTP, dCap) between clients and internal dCache systems. Each door is associated with a particular port on the dCache server, and has its own access profile. 
   $ encp: A deprecated end-user command (designed for Enstore) used to copy data files to and from disk and storage media.  Encp also includes three diagnostic tools: ecrc, ddencp, en_check. 
   $ drivestat server: The drivestat server maintains statistical information of the drives. 
   $ enstore.conf: A configuration file to allow for multiple network interface cards dedicated to Enstore, and to map the interfaces to routers. The default location for the file is /etc/enstore.conf. The location of the file can be overridden with the environment variable ENSTORE_CONF. See ENSTORE_CONF. 
   $ ecrc: Stands for Enstore crc (cyclic redundancy check); see crc. ecrc is a command packaged with encp which calculates the crc of a local file. 
   $ ENSTORE_CONFIG_HOST: An environment variable which points to the Enstore server that is running the configuration server 
   $ en_check: A command packaged with encp which determines if a file is on tape. 
   $ ensync: A wrapper for encp that allows you to copy the contents of an entire directory structure to Enstore via a single command. 
   $ encp: Encp as an end-user command is considered to be deprecated. It was designed to be used with Enstore, and used to copy data files from disk to storage media and vice-versa. This command is distributed as part of the encp product, available from kits under <verbatim>ftp://fnkits.fnal.gov:8021/products/encp/</verbatim> or <verbatim>ftp://fnkits.fnal.gov:8021/KITS/<OS>/encp/</verbatim>, e.g., <verbatim>ftp://fnkits.fnal.gov:8021/KITS/Linux/encp/</verbatim> The encp product also includes three diagnostic tools: ecrc, ddencp, en_check. 

   $ Enstore: Enstore is the mass storage system implemented at Fermilab as the primary data store for experiments&#8217; data sets. It provides distributed access to data on tape or other storage media both locally and over networks. 
<span style="font-size:.75em;">[[#DefsAa][A]]-[[#DefsBb][B]]-[[#DefsCc][C]]-[[#DefsDd][D]]-[[#DefsEe][E]]-[[#DefsFf][F]]-[[#DefsGg][G]]-[[#DefsHh][H]]-[[#DefsIi][I]]-[[#DefsJj][J]]-[[#DefsKk][K]]-[[#DefsLl][L]]-[[#DefsMm][M]]-[[#DefsNn][N]]-[[#DefsOo][O]]-[[#DefsPp][P]]-[[#DefsQq][Q]]-[[#DefsRr][R]]-[[#DefsSs][S]]-[[#DefsTt][T]]-[[#DefsUu][U]]-[[#DefsVv][V]]-[[#DefsWw][W]]-[[#DefsXx][X]]-[[#DefsYy][Y]]-[[#DefsZz][Z]]</span>
%INCLUDE{ "GlossaryF" }%
   $ fairshare: A mechanism used in Enstore&#8217;s queue management that helps to keep any one storage group (experiment or group) from monopolizing tape drives. Fairshare determines which storage groups currently have jobs in progress (at a mover) and which ones don&#8217;t, then gives preference to requests associated with those that don&#8217;t. 
   $ file clerk (FC): A server that tracks files in the system and manages a database of metadata for each data file in the Enstore system. 
   $ file family: A grouping of data; it defines a category, or family, of data files. Each experiment defines a set of file families for its data. A given storage volume may only contain files belonging to one file family. 
   $ file family width: A value used to limit write-accessiblity on data storage volumes. At any given time, Enstore limits the number of volumes associated with a given file family that are open for writing to the value of the file family width. 
   $ file family wrapper: Information that gets added to the front and back of data files as they&#8217;re written to media, and defines the files&#8217; format on the storage volume. The format of the wrapper depends on the type of wrapper used. (See cern wrapper and cpio_odc wrapper.)    $ File Replica Manager Module: _See_ Replica Manager Module.
   $ filemark: A physical mark on tape indicating end of file. Tape drives recognize it and can do high speed searches over it. 
   $ FQAN: _See_ Fully Qualified Attribute Names.
   $ Fully Qualified Attribute Name (FQAN): VOMS extended X.509 Attribute Certificate specification for defining extra attributes, based on [[http://www.apps.ietf.org/rfc/rfc3281.html][RFC3281]]. FQANs contain Role and VO membership information for a Grid user.
   $ ftp: File transfer protocol. 
   $ event relay (ER): The Event Relay is a server that forwards messages based on subscription. All the Enstore servers send messages to the ER. Any server may &#8220;subscribe&#8221; to the ER in order to have messages of particular types forwarded to it. 
   
<span style="font-size:.75em;">[[#DefsAa][A]]-[[#DefsBb][B]]-[[#DefsCc][C]]-[[#DefsDd][D]]-[[#DefsEe][E]]-[[#DefsFf][F]]-[[#DefsGg][G]]-[[#DefsHh][H]]-[[#DefsIi][I]]-[[#DefsJj][J]]-[[#DefsKk][K]]-[[#DefsLl][L]]-[[#DefsMm][M]]-[[#DefsNn][N]]-[[#DefsOo][O]]-[[#DefsPp][P]]-[[#DefsQq][Q]]-[[#DefsRr][R]]-[[#DefsSs][S]]-[[#DefsTt][T]]-[[#DefsUu][U]]-[[#DefsVv][V]]-[[#DefsWw][W]]-[[#DefsXx][X]]-[[#DefsYy][Y]]-[[#DefsZz][Z]]</span>
#DefsGg
   $ file clerk (FC): The File Clerk is a server that tracks files in the system. It manages a database of metadata for each data file in the Enstore system. 
%INCLUDE{ "GlossaryG" }%
   $ file family: A file family is a grouping of data; it defines a category, or family, of data files. Each experiment defines a set of file families for its data. A given storage volume may only contain files belonging to one file family. 
   $ GFAL: _See_ Grid File Access Layer.
   $ file family width: File family width is a value used to limit write-accessiblity on data storage volumes. At any given time, Enstore limits the number of volumes associated with a given file family that are open for writing to the value of the file family width. 
   $ GOC: _See_ Grid Operations Center.
   $ file family wrapper: A file family wrapper consists of information that gets added to the front and back of data files as they&#8217;re written to media, and defines the files&#8217; format on the storage volume. The format of the wrapper depends on the type of wrapper used. (See cern wrapper and cpio_odc wrapper.) 
   $ grid-aware PLuggable AuthoriZation MAnagement (gPLAZMA): An architecture that utilizes VOMS extended X.509 certificate specification for defining extra attributes (FQANs), based on RFC 3281, and provides role-based access control (RBAC) to dCache. 
   $ filemark: A filemark is a physical mark on tape indicating end of file. Tape drives recognize it and can do high speed searches over it. 
   $ GRIS: An information provider protocol.

%INCLUDE{ "GlossaryJumpIndex" }%
   $ gridftp: See GSI ftp. 
   $ ITB: _See_ Integration Test Bed.
   $ GSI ftp: An implementation of ftp that uses Grid Proxies for authentication and authorization and is compatible with popular tools such as globus-url-copy (from the globus toolkit). 
%INCLUDE{ "GlossaryJumpIndex" }%
%INCLUDE{ "GlossaryJumpIndex" }%

   $ layer: Pnfs stores metadata about each file in &#8220;layers&#8221;, each layer containing a specific type of metadata. Each stored data file has its own set of these layers. Currently, only layers 1 and 4 are used. 
   $ LM: _See_ library manager.
   $ job: In Enstore terminology, a job is what a user submits to encp. See request for comparison. 
   $ LM<a name="DefsLm"></a>: _See_ library manager.
%INCLUDE{ "GlossaryJumpIndex" }%

   $ Matchmaking: The process of matching a job to a slot while maintaining site priorities
   $ media changer (MC): Physcial device that mounts and dismounts the media into and out of drives according to requests from the Movers. 
   $ library: A library in Enstore is comprised of both the physical data storage media, robotic devices and drives. An Enstore library is typically called a robot. 
   $ memory-mapped I/O: _Also_ mmapped I/O. With this type of I/O, part of the CPU&#8217;s address space is interpreted not as accesses to memory, but as accesses to a device; once you map a file to memory, changes made to the memory map are propagated back to the file. Mmapped I/O strives to avoid memory copies of the data between the application memory space and the kernel memory space (also see direct I/O and POSIX I/O). Mmapped I/O is in the POSIX standard. 
   $ library manager (LM): A Library Manager is a server which controls a virtual library. LMs receive requests for file copies from users via encp and they distribute the requests to the Movers. 
   $ mover<sup>1</sup> (MV):  Process responsible for efficient data transfer between the encp process and a single, assigned media drive in a library (robot). The Mover receives instructions from a Library Manager (LM) on how to satisfy the users&#8217; requests. The Mover sends instructions to the Media Changer (MC) that services the Mover&#8217;s assigned drive in order to get the proper volume mounted. 
   $ log server (LS): The Log Server (LS) receives messages from other processes and logs them into formatted log files that are available online. 
   $ mover (MV)<a name="DefsMover"></a>:  <sup>1</sup>Process responsible for efficient data transfer between the encp process and a single, assigned media drive in a library (robot). The Mover receives instructions from a Library Manager (LM) on how to satisfy the users&#8217; requests. The Mover sends instructions to the Media Changer (MC) that services the Mover&#8217;s assigned drive in order to get the proper volume mounted. 
   $ media changer (MC): The Media Changer mounts and dismounts the media into and out of drives according to requests from the Movers. 

   $ memory-mapped I/O (mmapped I/O): With this type of I/O, part of the CPU&#8217;s address space is interpreted not as accesses to memory, but as accesses to a device; once you map a file to memory, changes made to the memory map are propagated back to the file. Mmapped I/O strives to avoid memory copies of the data between the application memory space and the kernel memory space (also see direct I/O and POSIX I/O). Mmapped I/O is in the POSIX standard. 
---++ N
   $ monitor server (MS): The Monitor Server is available for investigating network-related problems. It attempts to mimic the communication between an encp request, the corresponding library manager, and the mover. 
   $ null wrapper<a name="DefsNullWrapper"></a>: A [[#DefsFileFamilyWrapper][file family wrapper]] for NULL volumes. 
   $ mover (MV):  A process responsible for efficient data transfer between the encp process and a single, assigned media drive in a library (robot). The Mover receives instructions from a Library Manager (LM) on how to satisfy the users&#8217; requests. The Mover sends instructions to the Media Changer (MC) that services the Mover&#8217;s assigned drive in order to get the proper volume mounted. 

   $ pnfs tags<a name="DefsPfnsTags"></a>: _See_ tags. 
   $ pool<a name="DefsPool"></a>: dCache data server node
   $ pnfs layer: See &#8220;layer&#8221;. 
<span style="font-size:.75em;">[[#DefsAa][A]]-[[#DefsBb][B]]-[[#DefsCc][C]]-[[#DefsDd][D]]-[[#DefsEe][E]]-[[#DefsFf][F]]-[[#DefsGg][G]]-[[#DefsHh][H]]-[[#DefsIi][I]]-[[#DefsJj][J]]-[[#DefsKk][K]]-[[#DefsLl][L]]-[[#DefsMm][M]]-[[#DefsNn][N]]-[[#DefsOo][O]]-[[#DefsPp][P]]-[[#DefsQq][Q]]-[[#DefsRr][R]]-[[#DefsSs][S]]-[[#DefsTt][T]]-[[#DefsUu][U]]-[[#DefsVv][V]]-[[#DefsWw][W]]-[[#DefsXx][X]]-[[#DefsYy][Y]]-[[#DefsZz][Z]]</span>
   $ pnfs namespace: Pnfs is an independent namespace package, written at DESY. It presents a collection of library database entries as a UNIX-like file system, and thus allows users to browse stored files as though they reside in this file system. Pnfs is mounted like NFS, but it is a virtual file system only. It maintains file grouping and structure information via a set of tags in each directory. 
   $ Replica Manager Module: _Also_ File Replica Manager Module. (dCache) Enforces the existence of both a minimum and maximum file copies within the system.
   $ pnfs tags: See tags. 
   $ request: (Enstore) After a user submits a job to encp, encp sends a request to Enstore to process the job. _See also:_ job. 
   $ POSIX I/O: POSIX is a name applied to a widely used family of open system standards based on UNIX. POSIX I/O refers to the POSIX standards for I/O. 
   $ retry: (encp) To will resend a request after an error occurs. _See also:_ resubmit. 
   $ request: In Enstore terminology, after a user submits a job to encp, encp sends a request to Enstore to process the job. See job for comparison. 
   $ storage group: An identifier corresponding to an experiment that Enstore uses as it controls and balances assignment of resources such as tape drives and media. Each storage group (i.e., each experiment) is assigned an area in PNFS. 
   $ resubmit: Encp has functionality to retry and resubmit requests, where we distinguish between these two terms. Encp will resubmit a request if it has been waiting for a mover for over 15 minutes, but not due to an error condition. See retry. 
   $ storage volume: A unit of mass storage, e.g., a tape. 
   $ retry: Encp has functionality to retry and resubmit requests, where we distinguish between these two terms. Encp will retry (i.e., resend) a request after an error occurs. See resubmit. 
   $ storage volume<a name="DefsStorageVolume"></a>: A unit of mass storage, e.g., a tape. 
   $ SRM: SRM (Storage Resource Management) is the middleware for managing storage resources for the grid. 
<span style="font-size:.75em;">[[#DefsAa][A]]-[[#DefsBb][B]]-[[#DefsCc][C]]-[[#DefsDd][D]]-[[#DefsEe][E]]-[[#DefsFf][F]]-[[#DefsGg][G]]-[[#DefsHh][H]]-[[#DefsIi][I]]-[[#DefsJj][J]]-[[#DefsKk][K]]-[[#DefsLl][L]]-[[#DefsMm][M]]-[[#DefsNn][N]]-[[#DefsOo][O]]-[[#DefsPp][P]]-[[#DefsQq][Q]]-[[#DefsRr][R]]-[[#DefsSs][S]]-[[#DefsTt][T]]-[[#DefsUu][U]]-[[#DefsVv][V]]-[[#DefsWw][W]]-[[#DefsXx][X]]-[[#DefsYy][Y]]-[[#DefsZz][Z]]</span>
   $ storage group: A storage group is an identifier corresponding to an experiment that Enstore uses as it controls and balances assignment of resources such as tape drives and media. Each storage group (i.e., each experiment) is assigned an area in PNFS. 
   $ Tape Resource Manager: An SRM that manages access to a tape archiving system. _See also:_ DRM; SRM; HRM.
   $ Tertiary Storage Manager (TSM): *TBD*
   $ TRM: _See_ Tape Resource Manager.
   $ tags<a name="DefsTags"></a>: _Also_ tag files. Pnfs uses tag in the /pnfs namespace to specify file-specific configuration information. Encp transfers this information to Enstore. Tags are associated with directories in the /pnfs namespace, not with any specific file, and thus apply to all files within a given directory. 
   $ Tape Resource Manager<a name="DefsTapeResourceManager"></a>: An SRM that manages access to a tape archiving system. _See also:_ DRM; SRM; HRM.
   $ striping (of files on tape): Single files (usually large ones) being split onto two or more volumes, each writing simultaneously, in order to expedite the writing process. (Striping is not supported under enstore.) 
   $ tertiary storage<a name="DefsTertiaryStorage"></a>: "A computer storage system consisting of one or more storage drives and an automatic media library, for example a tape library or optical disc jukebox. Tertiary storage is used for archival of rarely accessed information, since it is much slower than secondary storage...." [From [[http://en.wikipedia.org/wiki/Tertiary_storage][Wikipedia]])
   $ suspect volume: A volume becomes suspect when a mover communicates to the appropriate library manager that it had a problem with the volume. It is not yet established that the volume is faulty. 
   $ uSLA: Usage Service Level Agreements.
   $ tags: Pnfs uses tag files (usually just called tags) in the /pnfs namespace to specify file-specific configuration information, and encp transfers this information to Enstore. Tags are associated with directories in the /pnfs namespace, not with any specific file, and thus apply to all files within a given directory. 
%INCLUDE{ "GlossaryJumpIndex" }%
   $ virtual library: A Virtual Library (VL) is a subset of an Enstore data storage library. It can contain one and only one type of media. It is paired with its own library manager which controls it. 
#DefsUu
   $ volume: See storage volume. 
   $ Worker Node: The hardware that you run on.
   $ volume assert: A job in which a volume (tape) gets mounted and certain attributes are read in order to check, and thus assert, that the volume is &#8220;ok&#8221; (without actually checking the entire contents). Requesting volume asserts is an administrative task, and these requests are assigned the lowest priority. 

   $ volume clerk: The Volume Clerk (VC) is a server that stores and administers storage volume (tape) information. 
---++ W
   $ volume family: The triplet &#8220;storage group + file family + file family wrapper&#8221; is called a volume family. In order for different data files to be stored on the same volume, all three of these pnfs tags for the files must match. 
   $ Worker Node<a name="DefsWorkerNode"></a>: The hardware that you run on.
   $ wrapper: See file family wrapper. 

%META:TOPICMOVED{by="ForrestChristian" date="1159549491" from="Sandbox.EnstoreGlossary" to="Storage.StorageGlossary"}%


---++ Sources for the glossary
%INCLUDE{ "GlossarySources" }%


%META:TOPICMOVED{by="ForrestChristian" date="1161892162" from="Storage.StorageGlossary" to="Documentation.GlossaryOfTerms"}%
