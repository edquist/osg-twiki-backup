%META:TOPICINFO{author="ElizabethChism" date="1466010135" format="1.1" version="1.9"}%
%META:TOPICPARENT{name="WebHome"}%
---+ %CALC{" $PROPERSPACE( %TOPIC% ) "}%
<noautolink>
On the call on 2006 Oct 16, I said that I would find out how to fork the documentation set on TWiki so that Integration can easily go from 0.3.12 to 0.4.8, say. Here's a solution that John and I came up with while talking today.

The end result will change the layout of the Integration web to incorporate subwebs:
   * Integration
   * Integration.ReleaseNo00dot10
   * Integration.ReleaseNo00dot20
   * Integration.ReleaseNo00dot30

Where ==ReleaseXXdotXX== is a subweb of Integration that contains the release-specific information for r XX.XX. (Use whatever naming convention you'd like; are we anticipating needing more numbers?)

The Integration root web becomes a welcome page pointing to different ITB release documentation sets. It also holds information chunks that are general or not often changed. These are then used by the subwebs through INCLUDEs.

This isn't how we're using it now, but it will solve the problem of forking release doc sets. It also happens to make the material easier to search, since TWiki can more easily limit searches to particular webs. Better for us, better for the user.

---++ How It Works
This describes the procedure after getting the we have completed the initial setup. 

   1. The directory of the latest release web ==twiki/data/Integration/Release06dot01== is copied to ==twiki/data/Integration/Release06dot02== in the file system to the next release number. Do the same for the attachments folders under ==twiki/pub==. (Systems administrator, or script it to run from web page.)
   1. We make the appropriate changes to the new WebHome and WebPreferences pages. (To be determined) 
   1. Start editing for the new web for the new release.


---++ Completing the Initial Setup 
This is harder but probably no worse than the process of creating all those TopicNameXX pages. Unless noted, the changes can be done by anyone with rights to the web.

   1. Ensure that Hierarchical Webs is turned on in configure. (TWiki administrator) 
   1. Add "      * Set IVERNO = 0.50" to Integration.WebPreferences 
   1. Change the files to use ==\%IVERNO\%== where you now have hard-coded version number references in the text. (Can we use TWiki's Replace function this?) 
   1. In the file system, copy ==twiki/[data,pub]/Integration=  to ==twiki/[data,pub]/Integration/Release00dot50== and to ==twiki/data/Integration/Release00dot37==. (Systems Admin)
   1. Eliminate the unnecessary files from each. 
   1. Put generally unchanging material in Integration web and use INCLUDE statements (e.g., ==\%INCLUDE{ "Integration.SomeTopic" }\%==  ) in the subwebs 
   1. Clean up any other small matters in the webs.

It's not really all that difficult compared to having to do them by hand, and after the initial setup, the going-forward process is a breeze. There will be some hiccups but I foresee this as something I can do over a weekend, as long as someone with privileges can do the copy in the file system.

It also means that creating a Release Documentation set from the ITB materials is much easier for me to do.

---+ Deprecated Releases
I imagine that at some point in the future, we will want to freeze the documentation for older, deprecated releases of the ITB. For this, we can use the Publish plugin to create straight HTML pages. I believe that TWiki.org uses this for their release documentation, only allowing changes to the current documentation.

The INCLUDEs would also be fixed in the Published webs.

Other releases, still in use, would be "live" TWiki webs.

---+ Testing
This process has been successful in initial tests on a Win2k/IndigoPerl TWiki installation. Further testing should be done before we try this, of course.

---+ Possible Issues
   * Attachments: I am not certain how difficult this will be. Some attachments are better kept as simply one item.
   * Revision numbers: these are going to be off. We can get around this by using the Create A Web function of TWiki.ManagingWebs. It's a little more convoluted but still simpler than chasing links by hand.
   * Limited number of systems administrators
   * Limited number of TWiki administrators

</noautolink>

---++ Comments

I am trying to get the feel for this.  Before diving in the existing (large) documentation set, I  would suggest a trial documentation exercise using a hypothetical release with a small number of sections and include directives.

-- Main.RobGardner - 19 Oct 2006


==Comment by Main.JohnWeigand 8/19/06:== One of the major problems with our current method of versioning the twikis is that we are renaming all the individual twiki's. For example, the <nop>MonALISA twiki for 0.4.1 is [[Trash/Integration.MonALISA]] and the 0.5.0 version is [[ArchivedDocumentation.ITB.ITB050.MonALISA]].  This requries that as a part of the process to create the new set of twiki's, ==all== internal references within a topic have to be converted.  You can see this on [[ArchivedDocumentation.ITB.ITB050.OverviewGuide]] and scroll down to the <nop>MonALISA link on the page.  This is a difficult task (and not 100% accurate) even using perl as not all of the strings with <nop>MonALISA in it are links (as this one is not).    By changing the **root** level (WEBHOME in twiki terms) and cloning the  the child twiki's, this problem goes away.  All references are relative to the **root** level.

-- Main.JohnWeigand - 19 Oct 2006


==Another comment Main.JohnWeigand:== Another objective of this approach is the reduction in provisioning effort required.

-- Main.JohnWeigand - 19 Oct 2006


This has been implemented as [[ArchivedDocumentation.ITB.ITB050][ArchivedDocumentation.ITB.ITB050]]

-- Main.ForrestChristian - 03 Jan 2007
%COMMENT{ type="threadmode" }%


-- _[[Main.ForrestChristian][FC]] - 18 Oct 2006_