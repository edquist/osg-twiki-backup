%META:TOPICINFO{author="MarcoMambelli" date="1328152129" format="1.1" version="1.18"}%
%META:TOPICPARENT{name="DocHowTo"}%
---+!! *Document Formatting Standards and Tools*
%DOC_STATUS_TABLE%
%TOC%
---++ About This Document
%ICON{hand}% This document is intended for those people who write, edit, or review documents in the official OSG documentation TWiki.  It describes the formatting standards, methods used to structure composite documents, and formatting tools that automatically format certain types of information.

---++ General TWiki formatting information
   * A description of the TWiki concepts for controlling formatting, creating lists, creating tables, etc. can be found in TWiki.TextFormattingRules.
   * All the "rules" that follow should be used in most cases, but always use your best judgment.
---+++ Rules for topics and section headings
   * All topics have a *bold heading* at Level 1 (=---+ *<nop>Title*=) and first letters of words are capitalized (eg. Rules For Formatting Documents).
   * The level one heading is taken as its twiki topic name, separated into words (e.g., !MyTopic becomes My Topic). Choose the twiki name carefully!  If you want to spell out a title whose TWiki name has abbreviations, do that.
   * All level two sections should be in title case.  Eg: =---++ Details on the Installation=
   * All sections (level three and below) have the first word capitalized, the rest lower case.  Eg: =---+++ Details on the installation= (except for proper nouns)
   * To prevent the Table of Contents from becoming too long and confusing, exclude from the TOC detailed sections (typically level three or four) and below.  To accomplish this,  use !%TOC{depth="2"}% or !%TOC{depth="3"}% to produce the table of contents.

---++ Documentation Standards
The following is a list of standards adopted for official documentation:
| *Item* | *Standard* | *Example* |
| Document Location | General documents that have no (or almost no) Release dependencies and apply to the current; and, most likely, all future releases should be put in the Documentation Web.  Those that are release dependent belong in the corresponding Release sub Web under the Documentation Web. | !Documentation.StorageOverview, !Documentation.GridUsersGuide, !Documentation/Release3.InstallOSGClient, !Documentation/Release3.LocalStorageConfiguration |
| Document Name | All documents should use Wiki words as names (2 or more capitalized words, concatenated | !WikiWord |
| Document Parent | Unless there is a particular hierarchy, documents should use !WebHome as their parent.  Some documents (e.g. technology description documents) may use the appropriate Navigation page as parent | !CertificateGetWeb's parent is !NavUserJoin or !BestmanGateway parent is !Documentation/Release3.BestmanOverview |
| Document Reference | Documents should always be referenced with !Webname.DocumentName (or simply !DocumentName if in the same web).  If a url is copied, remember to change !Webname/DocumentName to !Webname.DocumentName. | !DocHowTo or !Documentation/Release3.ReleaseNotes |
| Document Includes | Items common to many documents should be done with [[DocFormattingRules#About_Includes][includes]]. | Install documents use <verbatim>%INCLUDE{"YumRepositories" section="OSGRepoBrief"}%</verbatim> and <verbatim>%INCLUDE{"InstallCertAuth" section="OSGBriefCaCerts"}%</verbatim> |

---+++ Install Document Standards (Also see Documentation.Release3.DocInstallTemplate)
---++++ Requirements Section
%NOTE% The Requirements are broken into these subsections (at the appropriate level) with the following formatting.
---+++++ Host and OS

   * A host to install the RSV Service (Can be the CE or a separate, standalone computer)
   * OS is %SUPPORTED_OS%. 
   * Root access

---+++++ Users

The RSV installation will create two users unless they are already created.

| *User* | *Comment* |
| =rsv= | Runs the RSV tests. The RSV certificate (below) will need to be owned by this user. |
| =cndrcron= | Runs the Condor Cron processes to schedule the running of the tests. |

---+++++ Certificates

| *Certificate* | *User that owns certificate* | *Path to certificate* |
| RSV service certificate | =rsv= | =/etc/grid-security/rsv/rsvcert.pem= <br> =/etc/grid-security/rsv/rsvkey.pem= |

---+++++ Networking

%STARTSECTION{"Firewalls"}%
The Networking table should is defined in the Documentation.Release3.FirewallInformation document.  To include relevant information in an install document, use:
<verbatim>
%INCLUDE{"FirewallInformation" section="FirewallTable" lines="comma_separated_list"}%
All the predefined lines are: 
gram,portrange,portsource,gridftp,srm,srm2,gsissh,voms,gums,myproxy,condor,rsvin,rsvout,various

You can add custom lines using a backslash "\" after the include and adding your lines (remember the 2 "space" on each side to center the cell), e.g.:
%INCLUDE{"Documentation/Release3.FirewallInformation" section="FirewallTable" lines="gram,portrange"}% \
| HTTP |  tcp  |  80  |  %ICON{choice-yes}%  | | My custom HTTP server with special explanation |
</verbatim>
will produce an output (table and line) like this:

%INCLUDE{"Documentation/Release3.FirewallInformation" section="FirewallTable" lines="gram,portrange"}% \
| HTTP |  tcp  |  80  |  %ICON{choice-yes}%  | | My custom HTTP server with special explanation |

%ENDSECTION{"Firewalls"}%

---+++++ Additional Requirements
Can be added if needed


---++++ Services Startup/Shutdown
%NOTE% This is a partial example to show what is included and the formatting.  This goes after the Configuration section of Install documents. See also Documentation/Release3.DocInstallTemplate

---+++++ Services 
%NOTE% This is a partial example to show what is included and the formatting.  
Services brief description

---++++++ Starting and Enabling Services
%STARTSECTION{"StartVOMSServices"}%
To start VOMS you need to start several services:
   1. %INCLUDE{"Documentation/Release3.InstallCertAuth" section="OSGBriefFetchCrlStart"}%
   1. Start voms server<pre class="rootscreen">
%UCL_PROMPT_ROOT% service voms start
</pre>
%ENDSECTION{"StartVOMSServices"}%

You should also enable the appropriate services so that they are automatically started when your system is powered on: 
   * %INCLUDE{"Documentation/Release3.InstallCertAuth" section="OSGBriefFetchCrlEnable"}%
   * To enable the other services: <pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/chkconfig voms on
</pre>

---++++++ Stopping and Disabling Services
%STARTSECTION{"StopVOMSServices"}%
To stop VOMS you need to stop voms,... , and also the services they use if nothing else is using them:
   1. Stop voms server<pre class="rootscreen">
%UCL_PROMPT_ROOT% service voms stop
</pre>
   1. %INCLUDE{"Documentation/Release3.InstallCertAuth" section="OSGBriefFetchCrlStop"}%
%ENDSECTION{"StopVOMSServices"}%

In addition, you can disable services by running the following commands.  However, you don't need to do this normally.
   * %INCLUDE{"Documentation/Release3.InstallCertAuth" section="OSGBriefFetchCrlDisable"}%
   * To disable the other services: <pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/chkconfig voms off
</pre>


---++++ Useful Configuration and Log Files
In the troubleshooting section of each Install Document, the file locations should be specified as follows:
| *Service/Process* | *Configuration File* | *Description* |
| Service1 | /etc/Service1.cfg | Configuration information for this service |
| Service2 | /etc/Service2.cfg | Configuration information for this service |

| *Service/Process* | *Log File* | *Description* |
| Service1 | /var/log/service.log | Records all service errors |
| | /var/log/service1b.log | Records all service updates |
| Service2 | /var/log/service2.log | Records all service errors |

---+++ Release Variables
%INCLUDE{"Documentation/Release3.DocReleaseVariables"}%
---++ Compose Documents using Includes

!Twiki provides the possibility to re-use already written text on several documents. There exist two different ways to mark text on a page to be included on other pages:

   1 by defining _includes_
   1 by defining _sections_

---+++ About Includes

Includes are less flexible than sections and should be avoided! It is only possible to define one include per page and it is not possible to hand over variables or dynamically shift the table of contents for the included text. To mark written text and make it available to be included elsewhere use:

<pre class="file">
&#37;STARTINCLUDE&#37;
&lt;your text to be included somewhere else here&gt;
&#37;STOPINCLUDE&#37;
</pre>

To re-use the text elsewhere use:

<pre class="file">
&#37;INCLUDE{"&lt;Web&gt;/&lt;PageName&gt;"}&#37;
</pre>

   * Documentation.DocExampleMainTopic for a main topic *not likely* to be used with =STARTINCLUDE/STOPINCLUDE= so as to be included in other topics.
   * Wherever possible [[https://twiki.grid.iu.edu/twiki/bin/view/TWiki/TextFormattingRules][TWiki editing]] should be used rather than raw HTML.
   * Here is the !WebTopicEditTemplate (now DocInstallTemplate) for newly created pages in this twiki.  Once you create the new page, any other template (or content of your choice) can be pasted into the new page.

---+++ About Sections

Sections provide a greater flexibility than includes. It is possible to define more than one section per page and each section may be handed variables to be used. To mark written text and make it available to be included elsewhere use:

<pre class="file">
&#37;STARTSECTION{"&lt;name of the section&gt;"}&#37;
&lt;your text to be included somewhere else here&gt;
&#37;ENDSECTION{"&lt;name of the section&gt;"}&#37;
</pre>

To re-use the text elsewhere use:

<pre class="file">
&#37;INCLUDE{"&lt;Web&gt;/&lt;PageName&gt;" section="&lt;name of the section&gt;"}&#37;
</pre>

---+++ Adjusting Heading Level for Sections

Text marked to be included on a page utilizing an _include_ or a _section_ will be displayed just as written. In particular the level of headings remain to be fixed. It is however desirable to _shift_ the included sections according to the current table of contents. This can be achieved using _sections_ in the following way:

<pre class="file">
&#37;STARTSECTION{"&lt;name of the section&gt;"}&#37;
---&#37;SHIFT&#37;+ My Level 1 Heading in this Section
&#37;ENDSECTION{"&lt;name of the section&gt;"}&#37;
</pre>

To re-use the text elsewhere and _not_ shift the heading use:

<pre class="file">
&#37;INCLUDE{"&lt;Web&gt;/&lt;PageName&gt;" section="&lt;name of the section&gt;"}&#37;
</pre>

To shift the heading by one level use:

<pre class="file">
&#37;INCLUDE{"&lt;Web&gt;/&lt;PageName&gt;" section="&lt;name of the section&gt;" TOC_SHIFT="+"}&#37;
</pre>

---++ Formatting Tools

The following sections describe tools available to easily format certain information to make it consistently recognizable and useful to the reader.

---+++ Presenting the Unix Command Line

Some technical documents may require the presentation of the Unix command line. A non-complete lists of reasons may be:

   * to show a command and its arguments that the reader can copy-and-paste to his own command line
   * to show the output of commands executed on the command line
   * to show a series of steps on the command line as part of a procedure

It is desirable to use a common format for the presentation of the command line on every document so the user easily recognizes the presentation as such. 

---++++ Single Command Line

The following example illustrates the presentation of a _single_ command line that the reader may copy-and-paste to his own command line:

<pre class="screen">
%UCL_PROMPT_SHORT% /bin/date --help</code>
</pre>

Here is the Twiki code used to render the command line:

<verbatim>
<pre class="screen">
%UCL_PROMPT_SHORT% /bin/date --help</code>
</pre>
</verbatim>

---++++ Multiline Command Line

A Unix command and its arguments can grow to considerable size. This makes it difficult to display the entire command line without scrolling. One solution is to break down the command line while maintaining copy-and-paste functionality:

<pre class="screen">
%UCL_PROMPT_SHORT% configure_bestman
--server y
--user daemon
--cert /etc/grid-security/bestman_cert/bestmancert.pem
--key /etc/grid-security/bestman_cert/bestmankey.pem
--with-allowed-paths /cache
--gums-host gums.fnal.gov
--gums-port 8443
%RED%--enable-gateway%ENDCOLOR%</code>
</pre>

The example above can be rendered in the following way:

<verbatim><pre class="screen">
%UCL_PROMPT_SHORT% configure_bestman
--server y
--user daemon
--cert /etc/grid-security/bestman_cert/bestmancert.pem
--key /etc/grid-security/bestman_cert/bestmankey.pem
--with-allowed-paths /cache
--gums-host gums.fnal.gov
--gums-port 8443
%RED%--enable-gateway%ENDCOLOR%</code>
</pre>
</verbatim>

By using the html &lt;&#47;code&gt; tag it is possible to use all text formatting tools while maintaining copy-and-paste functionality.

%WARNING% Please make sure to end lines without additional white spaces after &lt;&#47;br&gt;. Otherwise copy-and-paste will not work!


---++++ Command Line and Output

By showing the complete prompt and output of a command line you virtually enable the reader to 'look over your shoulder'. By comparing his own results on the command line and the output presented as part of the documentation he will more likely detect errors during the execution of the command. 

<pre class="screen">
%UCL_PROMPT% /bin/date +%s
1282075042
</pre>

Again the Twiki code used to render the command line is simply:

<verbatim>
<pre class="screen">
%UCL_PROMPT% /bin/date +%s
1282075042
</pre>
</verbatim>

Notice how the [[http://twiki.org/cgi-bin/view/TWiki/TWikiVariables][Twiki Variable]]  =&#37;UCL_PROMPT&#37;= is used to render a complete prompt such as used by the [[http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29][Bash Shell]].

Output generated by the Unix command line can become quiet long. In order to maintain a good readability of the document long output should be _hidden_, but accessible to the user. For that purpose we will use the [[http://twiki.org/cgi-bin/view/Plugins/TwistyPlugin][Twisty Plugin]]. The Twisty Plugin generates [[http://en.wikipedia.org/wiki/JavaScript][JavaScript]] code that collapses text into clickable links:

<pre class="screen">
%UCL_PROMPT% /bin/date --help
Usage: /bin/date [OPTION]... [+FORMAT]
  or:  /bin/date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]
Display the current time in the given FORMAT, or set the system date.
</pre>

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
<pre class="screen">
%UCL_PROMPT% /bin/date --help
Usage: /bin/date [OPTION]... [+FORMAT]
  or:  /bin/date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]
Display the current time in the given FORMAT, or set the system date.

  -d, --date=STRING         display time described by STRING, not `now'
  -f, --file=DATEFILE       like --date once for each line of DATEFILE
  -r, --reference=FILE      display the last modification time of FILE
  -R, --rfc-2822            output date and time in RFC 2822 format
      --rfc-3339=TIMESPEC   output date and time in RFC 3339 format.
                            TIMESPEC=`date', `seconds', or `ns' for
                            date and time to the indicated precision.
  -s, --set=STRING          set time described by STRING
  -u, --utc, --universal    print or set Coordinated Universal Time
      --help     display this help and exit
      --version  output version information and exit

FORMAT controls the output.  The only valid option for the second form
specifies Coordinated Universal Time.  Interpreted sequences are:

  %%   a literal %
  %a   locale's abbreviated weekday name (e.g., Sun)
  %A   locale's full weekday name (e.g., Sunday)
  %b   locale's abbreviated month name (e.g., Jan)
  %B   locale's full month name (e.g., January)
  %c   locale's date and time (e.g., Thu Mar  3 23:05:25 2005)
  %C   century; like %Y, except omit last two digits (e.g., 21)
  %d   day of month (e.g, 01)
  %D   date; same as %m/%d/%y
  %e   day of month, space padded; same as %_d
  %F   full date; same as %Y-%m-%d
  %g   last two digits of year of ISO week number (see %G)
  %G   year of ISO week number (see %V); normally useful only with %V
  %h   same as %b
  %H   hour (00..23)
  %I   hour (01..12)
  %j   day of year (001..366)
  %k   hour ( 0..23)
  %l   hour ( 1..12)
  %m   month (01..12)
  %M   minute (00..59)
  %n   a newline
  %N   nanoseconds (000000000..999999999)
  %p   locale's equivalent of either AM or PM; blank if not known
  %P   like %p, but lower case
  %r   locale's 12-hour clock time (e.g., 11:11:04 PM)
  %R   24-hour hour and minute; same as %H:%M
  %s   seconds since 1970-01-01 00:00:00 UTC
  %S   second (00..60)
  %t   a tab
  %T   time; same as %H:%M:%S
  %u   day of week (1..7); 1 is Monday
  %U   week number of year, with Sunday as first day of week (00..53)
  %V   ISO week number, with Monday as first day of week (01..53)
  %w   day of week (0..6); 0 is Sunday
  %W   week number of year, with Monday as first day of week (00..53)
  %x   locale's date representation (e.g., 12/31/99)
  %X   locale's time representation (e.g., 23:13:48)
  %y   last two digits of year (00..99)
  %Y   year
  %z   +hhmm numeric timezone (e.g., -0400)
  %:z  +hh:mm numeric timezone (e.g., -04:00)
  %::z  +hh:mm:ss numeric time zone (e.g., -04:00:00)
  %:::z  numeric time zone with : to necessary precision (e.g., -04, +05:30)
  %Z   alphabetic time zone abbreviation (e.g., EDT)

By default, date pads numeric fields with zeroes.
The following optional flags may follow `%':

  - (hyphen) do not pad the field
  _ (underscore) pad with spaces
  0 (zero) pad with zeros
  ^ use upper case if possible
  # use opposite case if possible

After any flags comes an optional field width, as a decimal number;
then an optional modifier, which is either
E to use the locale's alternate representations if available, or
O to use the locale's alternate numeric symbols if available.

Report bugs to <bug-coreutils@gnu.org>.
</pre>
%ENDTWISTY%

This is the skeleton of the Twiki code that is used to render the output above:

<verbatim>
<pre class="screen">
%UCL_PROMPT% /bin/date --help
Usage: /bin/date [OPTION]... [+FORMAT]
  or:  /bin/date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]
Display the current time in the given FORMAT, or set the system date.
</pre>

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
<pre class="screen">
%UCL_PROMPT% /bin/date --help
... all the lines of output rather than just the first 3 lines ...
</pre>
%ENDTWISTY%
</verbatim>

%NOTE% Here a couple of *tips about TWISTY*. Note that the result of a TWISTY section may be affected by several elements and may affect the whole page:
   * If you want a twisty section to be aligned with the item in the list put the twisty header on the same line of the text and the endtwisty on the same line where you end the content <br> %TWISTY{%TWISTY_OPTS_OUTPUT% showlink="click to see how I did"}% 
 <verbatim>something like here <br> %TWISTY{%TWISTY_OPTS_OUTPUT% showlink="click to see how I did"}% <pre class="screen">
All your lines
</pre> %ENDTWISTY%
</verbatim> %ENDTWISTY%
   * If the whole page layout is confused (menus, doctable, ...), probably you put endtwisty on a new line
   * If you want the twisty message on the same line of a sentence then leave no empty line before the paragraph (after the title or the items before). &lt;br> tags are OK but empty lines change the layout. This may be browser dependent but is true at least in Chrome and Firefox. E.g. see the following 2 paragraph that share practically the same code
Paragraph one, no empty line before it and 
%TWISTY{%TWISTY_OPTS_OUTPUT% showlink="same line"}% 
<pre class="screen">
This worked
</pre> 
%ENDTWISTY%

Paragraph two, with empty line before it and 
%TWISTY{%TWISTY_OPTS_OUTPUT% showlink="same line"}% 
<pre class="screen">
Not really - this did not work
</pre> 
%ENDTWISTY%


---++++ Highlighting Command Line Options

Color can be used to _highlight_ the command line options that are currently being discussed. It can also be used to _visually tie_ a command line option to its expected output:

<pre class="screen">
%UCL_PROMPT% /bin/date %RED%+%s%ENDCOLOR%
%RED%1282075042%ENDCOLOR%
</pre>

This may not be very useful for =/bin/date= used in the example above. It becomes useful for long outputs where the color can be used to help the reader find the important parts of the output. See [[ReleaseDocumentation/GetGridCertificates][here]]. 

Again the Twiki code used to render the command line is simply:

<verbatim>
<pre class="screen">
%UCL_PROMPT% /bin/date %RED%+%s%ENDCOLOR%
%RED%1282075042%ENDCOLOR%
</pre>
</verbatim>

%NOTE% See the complete list of color definitions available [[TWiki/TWikiPreferences#ColorDefinitions][here]].

---++++ Important Twiki Variables

A number of [[http://twiki.org/cgi-bin/view/TWiki/TWikiVariables][Twiki Variables]] are used to control the rendering of the <b>U</b>nix <b>C</b>ommand <b>L</b>ine:

| *Variable*  | *Description*  | *Default Value*  |
| &#37;UCL_USER&#37;  | username or login displayed by UCL_PROMPT  | %UCL_USER%  |
| &#37;UCL_CWD&#37;  | current working directory displayed by UCL_PROMPT  | %UCL_CWD%  |
| &#37;UCL_HOST&#37;  | hostname displayed by UCL_PROMPT  | %UCL_HOST%  |
| &#37;UCL_DOMAIN&#37;  | domain name  | %UCL_DOMAIN%  |
| &#37;UCL_HOST_FQDN&#37;  | full hostname |  %UCL_HOST_FQDN%  |
| &#37;UCL_PROMPT&#37;  | the full prompt to be displayed  | %UCL_PROMPT%  |
| &#37;UCL_PROMPT_ROOT&#37;  | the full prompt to be displayed for the _root_ user | %UCL_PROMPT_ROOT%  |
| &#37;UCL_PROMPT_SHORT&#37; | a short prompt to be displayed | %UCL_PROMPT_SHORT%  |

It is possible to change the display of the prompt by locally changing the definition of the variables on the document:

<verbatim>
<!-- my local variable definitions used on this document only
    * Local UCL_USER = griduser
    * Local UCL_HOST = se
-->
</verbatim>

%WARNING% The * has to be preceded by exactly 3 white spaces! Unlike one would expect, it is not possible to define a local variable more than once on a document. Twiki will only use the last definition of the variable on the entire document!

%NOTE% It is often convenient to _copy-and-paste_ the command line output into a text editor first and to _find-and-replace_ pieces of text such as the prompt. Surprisingly this basic functionality is not supported by the online editor currently in use.

---++++ Root Command Line

It is often desirable to highlight that the current command line requires _root privileges_. Using the CSS class =rootscreen= instead of =screen= changes the background of the enclosing box to red which makes it more recognizable. By using the =&#37;UCL_PROMPT_ROOT&#37;= instead of =&#37;UCL_PROMPT&#37;= the prompt will be displayed using the _root_ user rather than the user specified by =&#37;UCL_USER&#37;=

<pre class="rootscreen">
%UCL_PROMPT_ROOT% mount -t xfs /dev/sdb1 /ecache
</pre>

Here is the Twiki code used to render the command line:

<verbatim>
<pre class="rootscreen">
%UCL_PROMPT_ROOT% mount -t xfs /dev/sdb1 /ecache
</pre>
</verbatim>



---+++ Presenting File Content

Technical documents frequently refer to files. It may be necessary to display the content of a file as part of the documentation. A non-complete list of reasons may be:

   * to display the content of a configuration file that has to be adjusted
   * to display parts of a log or output file for illustrative purposes

For this purpose the _file_ class from the CSS definitions of the Twiki can be used:

<pre class="file">
line 1
line 2
</pre>

The Twiki code to render the box above is simply:

<verbatim>
<pre class="file">
line 1
line 2
</pre>
</verbatim>

%NOTE% If the lines in the file contain html or TWiki variables, you will have to use the verbatim tag (enclosed in <>) to prevent them from being interpreted.

---+++ Notes

Notes are asides about the contents of the text that provide specific information that particular, but not all, users may need. Notes are less necessary than *Importants* and unlike *Warnings*, may not cause harm if ignored.

   * Usage<br>
   To create a note, insert the =<nop>%NOTE<nop>%= variable, followed by a single space and your text:
   <verbatim> %NOTE% Here is my note text. </verbatim>
   * Example
   %NOTE% Something that I want you to know about and pay some attention to.
<!-- ======BEGIN THE SECTION FOR INCLUDING ======
%STARTSECTION{ "Notes" }%
   $ %H% *%RED% NOTE %ENDCOLOR%*: 
%ENDSECTION{ "Notes" }%
====== END SECTION ====== -->

---+++ Importants
*Importants* are asides from your normal text that you want to highlight so that skimming users will not ignore them. Unlike Warnings, they will not cause grave harm to the system or the person if ignored. The difference between a *Note* and an *Important* is up to the writer.
   * Usage<br>
   Importants are included by putting, on a new line, =<nop>%IMPORTANT<nop>%= followed by a single space and your important text:
   <verbatim> %IMPORTANT% Some text about the important thing. </verbatim>
   * Example
   %IMPORTANT% Don't forget to include a single space or the *Important* will not work.
<!-- ====== BEGIN INCLUDE SECTION ======
%STARTSECTION{ "Importants"}%
   $ %X% *%GREEN% IMPORTANT %ENDCOLOR%*: 
%ENDSECTION{ "Importants"}%
====== END SECTION ====== -->

---+++ Warnings
*Warnings* are set off from the regular flow of the text to especially warn the reader about an action that could cause harm to the system or to the user. It's less than something that should be labeled *DANGER* but more harmful than something that you would put into an *Important*. 

If something that you are instructing a user to do could take up the CPU for several minutes, you should put in a *Warning*.
   * Usage<br>
   Warnings are added by putting, on a new line, =<nop>%WARNING<nop>%= followed by a single space and your text.
   <verbatim> %WARNING% Some text here. </verbatim>
   * Example
   %WARNING% If ignore me, you'll regret it.
<!-- ====== BEGIN INCLUDE SECTION ======
%STARTSECTION{ "Warnings"}%
   $ %X% *%RED% WARNING! %ENDCOLOR%*: 
%ENDSECTION{ "Warnings"}%
====== END SECTION ====== -->

---+++ Tips
Tips might be used to suggest an alternative that would be better under certain circumstances.
   * Usage<br>
   Tips are added by putting, on a new line, =<nop>%TIP<nop>%= followed by a single space and your text.
   <verbatim> %TIP% Some text here. </verbatim>
   * Example
   %TIP% It is really best if you do it this way.
<!-- ====== BEGIN INCLUDE SECTION ======
%STARTSECTION{ "Tips"}%
   $ %H% *%GREEN% TIP %ENDCOLOR%*: 
%ENDSECTION{ "Tips"}%
====== END SECTION ====== -->

---+++ Frequently Used Links

For a number of links the %LINK_CMP% created Twiki variables defining the links:

| *Variable*  | *Example*  |
| &#37;LINK_BESTMAN&#37;  | %LINK_BESTMAN%  |
| &#37;LINK_BESTMAN_GATEWAY&#37;  | %LINK_BESTMAN_GATEWAY%  |
| &#37;LINK_CERTS&#37;  | %LINK_CERTS%  |
| &#37;LINK_CMP&#37;  | %LINK_CMP%  |
| &#37;LINK_DOC_AREA&#37;  | %LINK_DOC_AREA%  |
| &#37;LINK_DOC_ROLE&#37;  | %LINK_DOC_ROLE%  |
| &#37;LINK_DOC_TYPE&#37;  | %LINK_DOC_TYPE%  |
| &#37;LINK_GLOBUS_TOOLKIT&#37;  | %LINK_GLOBUS_TOOLKIT%  |
| &#37;LINK_GOC_OPEN_TICKET&#37;  | %LINK_GOC_OPEN_TICKET%  |
| &#37;LINK_IGTF&#37;  | %LINK_IGTF%  |
| &#37;LINK_OIM&#37;  | %LINK_OIM%  |
| &#37;LINK_OSG&#37;  | %LINK_OSG%  |
| &#37;LINK_VDT&#37;  | %LINK_VDT%  |
| &#37;LINK_XROOTD&#37;  | %LINK_XROOTD%  |


---+++ Quick Links to Glossary Pages

Technical documents use their own vocabulary which may be unfamiliar to some readers making it more difficult for them to understand the content. The %LINK_GLOSSARY% defines the OSG specific vocabulary in a central place from where definitions can be linked into the text where they are used. We recommend to link to a Glossary definition when:

   * a term or acronym is first used on a page
   * a term or acronym is used on the page and a previous link to its Glossary definition is out of sight to the reader

In order to make this as easy as possible, the content management project provides variable definitions that quickly create links to the definition of terms within the Glossary:

| *Variable*  | *Example*  |
| &#37;LINK_GLOSSARY&#37;  | %LINK_GLOSSARY%  |
| &#37;LINK_GLOSSARY_CA&#37;  | %LINK_GLOSSARY_CA%  |
| &#37;LINK_GLOSSARY_CE&#37;  | %LINK_GLOSSARY_CE%  |
| &#37;LINK_GLOSSARY_CONDOR&#37;  | %LINK_GLOSSARY_CONDOR%  |
| &#37;LINK_GLOSSARY_CRL&#37;  | %LINK_GLOSSARY_CRL%  |
| &#37;LINK_GLOSSARY_DN&#37;  | %LINK_GLOSSARY_DN%  |
| &#37;LINK_GLOSSARY_FT&#37;  | %LINK_GLOSSARY_FT%  |
| &#37;LINK_GLOSSARY_GATEKEEPER&#37;  | %LINK_GLOSSARY_GATEKEEPER%  |
| &#37;LINK_GLOSSARY_GIP&#37;  | %LINK_GLOSSARY_GIP%  |
| &#37;LINK_GLOSSARY_GRAM&#37;  | %LINK_GLOSSARY_GRAM%  |
| &#37;LINK_GLOSSARY_GRAM_WS&#37;  | %LINK_GLOSSARY_GRAM_WS%  |
| &#37;LINK_GLOSSARY_GRIDFTP&#37;  | %LINK_GLOSSARY_GRIDFTP%  |
| &#37;LINK_GLOSSARY_GRID_PROXY&#37;  | %LINK_GLOSSARY_GRID_PROXY%  |
| &#37;LINK_GLOSSARY_GUMS&#37;  | %LINK_GLOSSARY_GUMS%  |
| &#37;LINK_GLOSSARY_ITB&#37;  | %LINK_GLOSSARY_ITB%  |
| &#37;LINK_GLOSSARY_JM&#37;  | %LINK_GLOSSARY_JM%  |
| &#37;LINK_GLOSSARY_SE&#37;  | %LINK_GLOSSARY_SE%  |
| &#37;LINK_GLOSSARY_SRM&#37;  | %LINK_GLOSSARY_SRM%  |
| &#37;LINK_GLOSSARY_VDT&#37;  | %LINK_GLOSSARY_VDT%  |
| &#37;LINK_GLOSSARY_VO&#37;  | %LINK_GLOSSARY_VO%  |
| &#37;LINK_GLOSSARY_VOMS_PROXY&#37;  | %LINK_GLOSSARY_VOMS_PROXY%  |
| &#37;LINK_GLOSSARY_WN&#37;  | %LINK_GLOSSARY_WN%  |

%NOTE% Besides being easier to memorize the quick links above serve another important reason. They enable editors to maintain definitions of OSG vocabulary in one place. Once a definition gets refined in the Glossary it is going to be up-to-date on every page using the term! 

---+++ Quick Man Pages

Documentation on software and procedures often refers to tools being used on the Unix command line. It is desirable to provide a _manual page_ for the tool to the reader within the text without cluttering its description. The Twisty plugin provides this functionality. We have created Twiki variables that can be used for that purpose. To render a man page for =grid-proxy-info= use &#37;HELP_GRID_PROXY_INFO&#37;. Other supported definitions include:

%HELP_GRID_PROXY_INFO%

%HELP_GRID_PROXY_INIT%

%HELP_VOMS_PROXY_INFO%

%HELP_VOMS_PROXY_INIT%

%HELP_GLOBUSRUN%

%HELP_GLOBUSRUN_WS%

%HELP_GLOBUS_JOB_RUN%

%HELP_GLOBUS_URL_COPY%

%WARNING% The quick man pages currently do not render correctly in Safari and Chrome. The use should be avoided till further notice from the Content Management Project.


---+++ Comments
A comment section (like the one below) should be added at the bottom of each page using a code like:
<pre>
---++ Comments
%<nop>COMMENT{type="tableappend"}%
</pre>
%NOTE% Comments made during document review/testing should be addressed by the owner and removed prior to release.
---++ Comments
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = JamesWeichel

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = General

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = Documenter

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Trash/Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = HowTo
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = TedHesselroth
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->

-- Main.JamesWeichel - 27 Jan 2010