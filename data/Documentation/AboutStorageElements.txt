%META:TOPICINFO{author="AnneHeavey" date="1192135527" format="1.1" reprev="1.1" version="1.1"}%
%LINKCSS%

<!-- This is the default OSG documentation template. Please modify it in -->
<!-- the sections indicated to create your topic.                        --> 

<!-- By default the title is the WikiWord used to create this topic. If  -->
<!-- you want to modify it to something more meaningful, just replace    -->
<!-- %TOPIC% below with i.e "My Topic".                                  -->

%STARTINCLUDE%
---+ About Storage Elements
%EDITTHIS%

A Storage Element on OSG is a node/cluster of nodes which

   * Provides Storage Space.
   * Is accessible to applications running on OSG through either gridftp and/or srm interface. 
   * Has [[Integration/ITB_0_7/GenericInformationProviders][GIP]] setup and configured properly which publishes its information.
   * Has well-defined policy for cleanup and usage.
   * Is registered with OSG.

Please do not confuse a Storage Element (described above and independent from any CE) with CE-Storages described in [[Integration/ITB_0_7/LocalStorageRequirements][Local Storage Requirements]]. These latter ones are part of a CE and are functional to it. By themselves, they do not provide outside access to the storage space.  To be able to access the space of a CE-Storage from outside a Computing Element, usually a Storage Element is used. They may access the same storage (physical disk or tape space) but they are two distinct resources, described in different elements of the GLUE Schema. The first one within the CE, the second one in the SE. The elements in the CE-SE binding allow to connect them together and specify which SE is accessing the same storage space (disk or tape) served by a CE-Storage.

%RED%Not well described. Please state function and access method(s) of CE storage area clearly. And make shorter -- this is supposed to be about SEs.%ENDCOLOR%

<div style="text-align: center; float: right; padding: 10px; width: 50%;"><img src="%PUBURL%/Integration/StorageElementAdmins/WhatisaSE.png" style="border:0; width: 100%; " /> %BR% [[%PUBURL%/Integration/StorageElementAdmins/WhatisaSE.png][Full Size]]
([[%ATTACHURL%/WhatisaSE.bmp][in BMP format]])</div>

---++ Types of Storage Elements

---+++ !!<nop>GridFTP-based File System 

 A [[http://www.globus.org/grid_software/data/gridftp.php][GridFTP]]-based SE is simply a %RED%Unix?%ENDCOLOR%directory accessible via GSI-authenticated ftp.
This provides no space management functions and limited permission management functions.
In LCG this is called also "Classic SE".

The definition %RED%of what, exactly?%ENDCOLOR% is quite loose. To specify it, you need an end-point: host and port of the server, and base directory. The whole directory tree under it is part of the SE. There may be even overlapping SEs if one base directory is a subdirectory of another or if there links between the two trees. %RED%Caveats or recommendations?%ENDCOLOR%

The easiest way to install a [[http://www.globus.org/grid_software/data/gridftp.php][GridFTP]] server with all the required certificates is %RED%described in some other doc that lives with the release documentation -- the rest of the text should go there. %ENDCOLOR% using VDT, or even the whole OSG package. There is no special requirement about the directory: it has to be a valid path for the !GridFTP server and have the protections set to provide the desired access to Grid users. Sometime sticky (only the creator of a file can remove it) or setgroup (group is maintained in subdirectories) IDs may be useful.

%RED%I'd remove the following paragraph.%ENDCOLOR%
All CE-Storages (e.g. $DATA) of Grid3 or earlier versions of OSG were implemented this way. 
An example of Gridftp based SE used to provide outside access to a CE-Storage is presented [[LocalStorageRequirements#OSG_DATA][here]].

---+++ !!SRM/Gridftp-based File System

SRM stands for Storage Resource Manager. An [[http://www.globus.org/grid_software/data/gridftp.php][SRM/GridFTP]]-based SE is simply a directory accessible via GSI-authenticated ftp and [[http://sdm.lbl.gov/srm-wg/][SRM]] interfaces.
SRM allows to manage and query the resource, but accessing files directly is not allowed. It would provide a backdoor and thus violate the constraints imposed by SRM. Except for the SRM interface on top of it, this is like the previous [[#Gridftp_based_File_System][Gridftp based File System]].

---+++ !!SRM/dCache

  This is a full implementation of a Storage Element that enforces stronger constraints and can manage a space spanning more volumes. For information about the VDT-dCache release of SRM/dCache, see the [[http://vdt.cs.wisc.edu/components/dcache.html][VDT-dCache webpage]]. Support for SRM/dCache installations using the VDT-dCache package is available through vdt-support@opensciencegrid.org.
For information on dCache, see the [[http://www.dcache.org/manuals/index.shtml][dCache documentation]].

---+++ !!SRM/Drm

  This is a full implementation of a Storage Element that enforces stronger constraints and can manage a space spanning more volumes.
[[http://sdm.lbl.gov/srm-dist][Documentation and a manual for SRM/DRM v1.2.9 is available]]. Support is available through srm@lbl.gov.


%STOPINCLUDE%

| *[[Documentation/WebHome][Return to documentation hub]]* |

<!--
%BOTTOMMATTER%
-->
-- Main.AnneHeavey - 11 Oct 2007
