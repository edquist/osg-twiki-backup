%META:TOPICINFO{author="DerekWeitzel" date="1279206926" format="1.1" reprev="1.16" version="1.16"}%
%META:TOPICPARENT{name="UsingTheGrid"}%
%LINKCSS%

---+ *Finding An Available Resource*

%DOC_STATUS_TABLE%
%TOC%
%STARTINCLUDE%

---++ About This Document

To run a job on the Open Science Grid, you must find at least one resource (i.e., _site_) that can run your job. This page explains how a user can find a resource via command line tools.  We will cover querying for the information in two different formats.

An OSG user can utilize the resources they find on this page to send small-scale test jobs to resources.  We will be using the results for the beginning Condor tutorials.  Even later, we will cover more advanced systems which will discover and test resources automatically.

---++ Requirements
In order to complete this document, you will need:
   * Membership in a [[ReleaseDocumentation.WhatIsOSG#Virtual_Organizations][Virtual Organization]]
   * Access to a machine with the [[ReleaseDocumentation.ClientInstallationGuide][OSG-Client]] installed.

---++ Finding a Compute Element Resource

There are two OSG central services - called !ReSS and BDII - which provide very detailed data for using OSG resources.  They contain the same data, but the BDII provides data in the LDIF format while !ReSS provides data in a Condor !ClassAd format. Both formats express the information in a schema called GLUE.

We will be using the results you receive later for some of the job management examples.   If you find yourself programming BDII queries into your code, ask for help - you might be approaching something wrong.

To get a list of contact strings for sites that support your VO, you can query the BDII server.  The traditional command line tool is called 'ldapsearch'. Try the following query directly:

<pre class="screen">
<userinput>ldapsearch -LLL -h is.grid.iu.edu -p 2170 -x -b 'o=grid' '(&(objectClass=GlueCE)(GlueCEAccessControlBaseRule=VO:cms))' GlueCEInfoHostName GlueCEInfoGatekeeperPort GlueCEInfoJobManager</userinput>
</pre>

This queries the BDII for all CEs which support the CMS VO (replace "cms" with your VO name).  One example result is:

<pre class="screen">
dn: GlueCEUniqueID=cit-gatekeeper.ultralight.org:2119/jobmanager-condor-cms_us
 er,Mds-Vo-name=CIT_CMS_T2,Mds-Vo-name=local,o=grid
GlueCEInfoHostName: cit-gatekeeper.ultralight.org
GlueCEInfoGatekeeperPort: 2119
GlueCEInfoJobManager: condor
</pre>

We can use the information found here to build a query to a tool like Condor-G or globus-job-run.  The format for a Globus resource is "host:port/jobmanager-<batch system>".  From the above example, the corresponding contact is "cit-gatekeeper.ultralight.org:2119/jobmanager-condor".

If you have condor_status installed on your system, you can do more advanced formatting:

<pre class="screen">
<userinput>condor_status -pool osg-ress-1.fnal.gov -const 'stringListIMember("VO:cms", GlueCEAccessControlBaseRule)' -format '%s:' GlueCEInfoHostName -format '%i' GlueCEInfoGatekeeperPort -format '/jobmanager-%s\n' GlueCEInfoJobManager | sort | uniq</userinput>
</pre>
Like before, replace "cms" with the appropriate name for your VO.
<br/>
%TWISTY{
mode="div"
showlink="Show results from sample query..."
hidelink="Hide results"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="screen">
antaeus.hpcc.ttu.edu:2119/jobmanager-sge
belhaven-1.renci.org:2119/jobmanager-condor
ce01.cmsaf.mit.edu:2119/jobmanager-condor
cit-gatekeeper2.ultralight.org:2119/jobmanager-condor
cit-gatekeeper.ultralight.org:2119/jobmanager-condor
cms-0.mps.ohio-state.edu:2119/jobmanager-condor
cmsgrid01.hep.wisc.edu:2119/jobmanager-condor
cmsgrid02.hep.wisc.edu:2119/jobmanager-condor
cmsosgce2.fnal.gov:2119/jobmanager-condor
cmsosgce4.fnal.gov:2119/jobmanager-condor
cmsosgce.fnal.gov:2119/jobmanager-condor
cms.tier3.ucdavis.edu:2119/jobmanager-condor
cms-xen19.fnal.gov:2119/jobmanager-condor
cms-xen2.fnal.gov:2119/jobmanager-condor
condor.crc.nd.edu:2119/jobmanager-condor
d0cabosg1.fnal.gov:2119/jobmanager-pbs
d0cabosg2.fnal.gov:2119/jobmanager-pbs
fermigridosg1.fnal.gov:2119/jobmanager-condor
ff-grid2.unl.edu:2119/jobmanager-pbs
ff-grid3.unl.edu:2119/jobmanager-pbs
ff-grid.unl.edu:2119/jobmanager-pbs
fnpcosg1.fnal.gov:2119/jobmanager-condor
gluskap.phys.uconn.edu:2119/jobmanager-condor
gpn-husker.unl.edu:2119/jobmanager-condor
gridgk01.racf.bnl.gov:2119/jobmanager-condor
gridgk02.racf.bnl.gov:2119/jobmanager-condor
hepcms-0.umd.edu:2119/jobmanager-condor
heposg01.colorado.edu:2119/jobmanager-condor
iogw1.hpc.ufl.edu:2119/jobmanager-pbs
lepton.rcac.purdue.edu:2119/jobmanager-pbs
nwicg.crc.nd.edu:2119/jobmanager-condor
nys1.cac.cornell.edu:2119/jobmanager-pbs
osgce64.hepgrid.uerj.br:2119/jobmanager-condor
osg-ce.sprace.org.br:2119/jobmanager-condor
osg.crc.nd.edu:2119/jobmanager-sge
osg-east.hms.harvard.edu:2119/jobmanager-condor
osg-nemo-ce.phys.uwm.edu:2119/jobmanager-condor
osg.rcac.purdue.edu:2119/jobmanager-condor
osgserv01.slac.stanford.edu:2119/jobmanager-lsf
ouhep00.nhn.ou.edu:2119/jobmanager-condor
ouhep0.nhn.ou.edu:2119/jobmanager-condor
ouhep1.nhn.ou.edu:2119/jobmanager-condor
pf-grid.unl.edu:2119/jobmanager-condor
pg.ihepa.ufl.edu:2119/jobmanager-condor
proton.fis.cinvestav.mx:2119/jobmanager-pbs
red.unl.edu:2119/jobmanager-condor
smufarm.physics.smu.edu:2119/jobmanager-condor
tier2-01.ochep.ou.edu:2119/jobmanager-condor
tier2-02.ochep.ou.edu:2119/jobmanager-condor
tier2-03.ochep.ou.edu:2119/jobmanager-condor
top.ucr.edu:2119/jobmanager-condor
tuscany.med.harvard.edu:2119/jobmanager-condor
u2-grid.ccr.buffalo.edu:2119/jobmanager-pbs
uscms1.fltech-grid3.fit.edu:2119/jobmanager-condor
vampire.accre.vanderbilt.edu:2119/jobmanager-pbs
</pre>
%ENDTWISTY%
<br/>

One of the outputs from the command above is =red.unl.edu:2119/jobmanager-condor=.  This string is the important contact information required in all job submission tools.  This string describes the host and the type of submission to be performed (condor).

We don't expect you to understand the command you just ran — the important knowledge here is that you can use Condor to query information about the site and to get the list of sites you can run at for the purposes of test jobs.

%STOPINCLUDE%

---++ *Comments*
| This page isn’t too bad, but there are some places where it should be improved. For one, there is some confusing terminology, which can probably just be cleared up in the introduction. The other main thing is that some of the information is presented without clear implications for how it should be used. Details follow.  ###  Under “About This Document”: One question: Is finding a site by hand the opposite of finding a site in a machine-readable format? Maybe that’s not quite the right distinction. The page itself is organized into sections for finding resources using a web browser and using the command line — is that the right distinction? In any case, the bullets here and the headings should be conceptually clear and match. Then, the final sentence makes little sense to me. What is it that you want the reader to *DO*? It seems like there is useful information/instruction to provide here. For example, is it reasonable to say something like, “If you only need to run a few jobs, have an uncomplicated computational workflow, or for other reasons only need to use a few sites, it works fine to find sites by hand. However, if you are running lots of jobs, have a complicated scripted workflow, or need to access as many sites as possible, it may work better to switch to finding sites programmatically, using commands that produce machine-readable output.”? That long bit of text would be easier to read with bullets.....   ###  “Finding Resources in Your Browser”. Everything was going great until the sentence that starts, “Each endpoint…” What is an endpoint? Is it different that a site or a resource? And then, “each resource provides resources”??? This is one of the places that desperately needs clearer, more distinct terminology. If two terms are used interchangeably, better to just use one of them; if both must be used, then explicitly declare (in the Introduction) that they are equivalent. This is very important. Finally in this section, there is the last sentence and two bullets: Why is it important to tell me that information is missing? Do I need the missing information? If so, where do I get it from? If not, then why should I care?  ###  “Finding a Resource Using the Command Line” Again, this section suffers from a lack of clear direction to the reader/user. MyOSG does not match jobs to resources… OK. What does? Should I be using a system that does this for me? Is it still relevant to look for sites manually? There are two very long and complicated command-line examples, which are fine, but I am left wondering what to do with all this information, especially in light of text that effectively tells me, don’t really do this. | Main.TimCartwright | 25 Jun 2010 - 20:46 |
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = BrianBockelman

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = User

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = EndUser

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Training
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = TimCartwright
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %NO%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = TimCartwright
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->
