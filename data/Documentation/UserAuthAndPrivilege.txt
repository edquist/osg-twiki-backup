%META:TOPICINFO{author="AnneHeavey" date="1192045716" format="1.1" version="1.3"}%
%META:TOPICPARENT{name="VoManageInfo"}%
%LINKCSS%

<!-- This is the default OSG documentation template. Please modify it in -->
<!-- the sections indicated to create your topic.                        --> 

<!-- By default the title is the WikiWord used to create this topic. If  -->
<!-- you want to modify it to something more meaningful, just replace    -->
<!-- %TOPIC% below with i.e "My Topic".                                  -->


%STARTINCLUDE%
%EDITTHIS%

<!-- This is the default OSG Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>An Introduction to User Authorization and Privilege  in OSG
%TOC%
%STARTINCLUDE%
---++ A Brief Tour of the Components

The authorization/privilege components are described below and are shown in the following diagram:

   * *VOMS* The Virtual Organization Membership Service organizes grid users into Virtual Organizations (VOs), so that users working together on a common project across multiple real organizations can be grouped together in the privilege system. Each VOMS server instance lists the X509 certificate for each user belonging to its VO and may include other information about users including the subgroups and roles in which they participate. VOMS is used to find out whether a user is a member of the VO or one of its subgroups, and whether the user may assume a given role or capability. The VOMS Admin web application and service (not shown in the diagram) is used to manage the VO, and voms-proxy-init is the client side tool that an end user uses to obtain a proxy certificate.

   * *GUMS* The Grid User Management System maps an end-user's credentials (proxy certificates) to a local user account under which the user's job can be run. While a GUMS service can be configured to perform all mappings based on a static configuration, typically it is configured to look up users in one or more VOMS servers and to map them based on VO membership and role(s).
 
   * *PRIMA* The PRIvilege Management and Authorization component is the interface between a Globus Toolkit gatekeeper (or other GSI service) and a mapping service like GUMS. It implements a Globus authorization callout by packaging requests in the SOAP web service format required by GUMS and handling responses.

<!-- VOMS and GUMS -->
     <img src="%ATTACHURLPATH%/alainsvomsgums.gif" alt="alainsvomsgums.gif" width='677' height='379' />

---++ More Detail on Components
---+++ On VOMS Host
   * VOMS-Admin (one per VO): manages list of people in a VO. Allows the VO manager to maintain a list of VO members, and assign membership to VO groups and roles. Allows edg-mkgridmap and GUMS to retrieve the list.
   * VOMS Server (one per VO): server component that allows creation of extended proxies. It's separate from VOMS-Admin, but uses the same database.
   * VOMS-Admin publisher: Publishes the existence of a VOMS-Admin service to the [[http://osg.ivdgl.org/twiki/bin/view/Integration/DiscoveryServiceInstallation][Discovery Service]].
%RED%Which part communicates privileges to GOC?%ENDCOLOR%

---+++ On Submission Host
   * VOMS Client (on each submission host): allows a user to generate a proxy with =voms-proxy-init= that contains VO/group/role information. It contacts the VOMS Server to generate the proxy.

---+++ At Site
   * edg-mkgrimap (on each gatekeeper *not served by GUMS*): a script that generates the grid-mapfile taking information from VOMS servers. %RED%directly?%ENDCOLOR% It runs every so often on a gatekeeper, contacts the list of VOMS servers specified in the configuration file %RED%config file comes from where?%ENDCOLOR%, and creates a grid-mapfile.
   * GUMS Server (one per site): a service that allows you to manage privilege-to-userid mapping on site. It can be contacted by GUMS Client (below) to generate grid-mapfiles and the inverse accounting map (account-to-VO) used by VOJobs accounting %RED%what is this?%ENDCOLOR% in !MonALISA. It can also be contacted by the PRIMA module (below) to retrieve the mapping for a single request.
   * GUMS Client (on each gatekeeper): a client tool that connects to GUMS Server to retrieve maps (grid-mapfile and accounting map). It also includes admin tools to manage GUMS. 
      * Used in conjuction with PRIMA to deploy the accounting map. 
      * Used without PRIMA for those services that must still use a grid-mapfile.
   * PRIMA module (on each gatekeeper that needs to contact GUMS): gatekeeper callout module that contacts an authorization server (i.e., GUMS) to retrieve the privilege-to-userid mapping. It is a library that the gatekeeper can be configured to use. For every gatekeeper request, it will contact the GUMS server.




%STOPINCLUDE%
| *[[Documentation/WebHome][Return to documentation hub]]* |
<!--
%BOTTOMMATTER%
-->
--- 
Original author: Alain Roy (for VDT website)
-- Main.RobGardner - 10 Mar 2005 %BR%
-- Main.AnneHeavey - 01 Aug 2007

%META:FILEATTACHMENT{name="alainsvomsgums.gif" attachment="alainsvomsgums.gif" attr="" comment="VOMS and GUMS" date="1161279184" moveby="Main.AnneHeavey" movedto="Documentation.UserAuthAndPrivilege.alainsvomsgums.gif" movedwhen="1186006609" movefrom="Integration.PrivilegeOSG.alainsvomsgums.gif" path="alainsvomsgums.gif" size="23556" stream="alainsvomsgums.gif" user="Main.AnneHeavey" version="1"}%
