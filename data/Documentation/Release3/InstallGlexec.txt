%META:TOPICINFO{author="DaveDykstra" date="1318370867" format="1.1" reprev="1.5" version="1.5"}%
%DOC_STATUS_TABLE%

---+!! Glexec Installation Guide

%TOC{depth="3"}%

---+ About This Document

%ICON{hand}% This document is intended for System Administrators that are installing the OSG version of glexec.

%INCLUDE{"Documentation/DocumentationTeam/DocConventions" section="Header"}%
%INCLUDE{"Documentation/DocumentationTeam/DocConventions" section="CommandLine"}%

---+ Applicable Versions

The applicable software versions for this document are %RED%OSG Version >= 3.0 %ENDCOLOR%.  The version of glexec installed should be %RED% >= 0.8.10-7.osg %ENDCOLOR%.

---+ About Glexec

Glexec is commonly used for what are referred to as "pilot" or "glidein" jobs.  

Traditionally, users submitted their jobs directly to a remote site (or compute element gatekeeper).   The user job was authenticated/authorized to run at that site based on the user's proxy credentials and run under the local unix account assigned.

In a pilot-based infrastructure, users submit their jobs to a centralized site (or queue).   The pilot/glidein software at the centralized site then recognizes there is a demand for computing resources.  It will then submit what is called a pilot/glidein job to a remote site.  This pilot job gets authenticated/authorized to run on a worker node in that site's cluster.  It will then "pull" down user jobs from the centralized queue and execute them.  Both the pilot and the user job are run under the pilot job's proxy certificate credentials and local unix account. This represents a security problem in pilot-based systems as there is no authentication/authorization of the individual user's proxy credentials and, thus, the user's jobs do not run using it's own local unix account.

Glexec is a security tool that can be used to resolve this problem.   It is meant to be used by VOs that run these pilot-based jobs.  It  has a number of authentication plugins and can be used both by EGEE LCAS/LCMAPS and by OSG with GUMS and optionally SAZ.   

The pilot job will "pull" user jobs down from the central queue and invoke glexec which will then 
   1 authenticate the user job's proxy, 
   1 perform an authorization callout (GUMS/SAZ in the case of OSG) similar to that done by the gatekeeper,
   1 and then run the user job under the local account assigned by the authorization service (for OSG, this is GUMS) for that user.

In effect, glexec functions much the same as a compute element gatekeeper, except these functions are now performed on the individual worker node.  The pilot jobs authentication/authorization is done by the gatekeeper and the individual user jobs are now done by glexec on the individual worker node.

Many worker node clusters use shared file systems like NFS for much of their software and user home accounts.  Since glexec is an suid program, it must be installed on every single worker node individually.  Most shared file systems do not handle this correctly so it cannot and must not be NFS-exported.

For more information regarding pilot-based systems and glexec:
   1 <a href="http://www.uscms.org/SoftwareComputing/Grid/WMS/glideinWMS/doc.html">glideinWMS - The glidein based WMS</a>
   1 <a href="http://iopscience.iop.org/1742-6596/119/5/052029/pdf/jpconf8_119_052029.pdf">Addressing the pilot security problem with gLExec (pdf)</a>

---+ Engineering Considerations
This section describes any prerequisite software/considerations that must be taken into account before the glexec software installation is performed.  It should be reviewed completely before starting the installation process.

   1 Unlike previous releases of OSG, this version only supports the XACML protocol of GUMS and SAZ.  This requires the GUMS version to be >= 1.3 and the SAZ version to be >= 2.7.0.
   1 A large number of batch slots using glexec can occasionally put an enormous strain on GUMS and SAZ servers and cause overloading and client timeouts.   In order to survive peak loads, the sysctl parameter 'net.core.somaxconn' on a GUMS server machine should be set at least as high as the maximum number of job slots that might attempt to contact the server at about the same time.  (For example, Fermilab set the value to 4096 on each of two servers and tested with a continuous load from 5000 job slots).  At the same time, the Apache parameter 'ListenBacklog' must be changed to the same value.  SAZ servers should be set with the same 'net.core.somaxconn' sysctl value, and the corresponding Tomcat parameter 'acceptCount' must be set to the same value.  Also note that Fermilab determined that for best performance, the Apache parameter 'MaxClients' on GUMS servers (at least on their dual-core Virtual Machines) should be set to a value of 32.

---+ Requirements

These are the requirements that must be met on a worker node before proceeding with the glexec installation:

   1 The OSG worker node base software.  First install all the base software by following the instructions at InstallWNClient, including the instructions for CA Certificates.
   1 Local user "glexec".  If you want control over the local "glexec" user's uid and gid you should create it before you install the package.  If you don't create it, it will be automatically created.
   1 Group ids for tracking purposes.  Glexec also requires a range of <b>group ids</b> for tracking purposes.  You don't actually have to create the group entries but it is recommended to do so in order to reserve the gids and so they can be associated with names in the 'id' command.  The recommended names are 'glexecNN' where NN is a number starting from 00.
      * Define at least 4 group ids per batch slot per worker node.   A conservative way to handle this is to multiply the number of batch slots on the largest worker node by 6 and then share the group ids between all the worker nodes.
      * They must be consecutive and in any range (default range is 65000-65049, configured in post-install section below).   
      * The same group ids can be used on every worker node.
   1 A host cert or proxy on every node.  Each worker node which is executing =glexec= needs to have either a host certificate or a host proxy distributed from the gatekeeper.   The host certificates do not need to be unique on every node; you can share the same one for every host in the cluster.  If you don't have any host certificate for the worker nodes, there is a host proxy distribution script located at  =http://fermigrid.fnal.gov/files/glexec/host_dist_latest.tgz= which can be installed on your gatekeeper and will automatically create a proxy from your gatekeeper's host certificate and push it out to =/etc/grid-security/hostproxy.pem= and =/etc/grid-security/hostproxykey.pem=.  The script does assume the use of Kerberos, however, so it may not be applicable to your site or may need to be adapted.

---+ Installation Procedure

After meeting all the requirements in the previous section, install glexec with this command: <pre class="rootscreen">
%UCL_PROMPT_ROOT% yum --enablerepo=osg-testing install osg-wn-client-glexec </pre>

---+Post-install Configuration of glexec

The following steps need to be done after the glexec installation is complete.

   1 First, review the contents of =/etc/glexec.conf=.  All of the defaults should be fine, but if you want to change the behavior, the parameters are described in =man glexec.conf=.
   1 Next, review all of the contents of =/etc/lcmaps.db= and in particular update the following pieces.
      * Change the yourgums.yourdomain in the following line to the fully qualified domain name of your GUMS server:<pre class="file">
    "--endpoint https://yourgums.yourdomain:8443/gums/services/GUMSXACMLAuthorizationServicePort"
</pre>
      * If you have SAZ, change yoursaz.yourdomain in the following line to the fully qualified domain name of your SAZ server: <pre class="file">
    "--endpoint https://yoursaz.yourdomain:8443/saz/services/SAZXACMLAuthorizationServicePort"
</pre>
      * Uncomment the following two lines: <pre class="file">
    glexectracking = "lcmaps_glexec_tracking.mod"
               "-exec /usr/sbin/glexec_monitor"
</pre>
      * If you do not have SAZ, uncomment the following policy toward the end of the file: <pre class="file">
verifyproxy -> gumsclient
gumsclient -> glexectracking
</pre>
        or if you do have SAZ, uncomment the following policy instead: <pre class="file">
verifyproxy -> sazclient
sazclient -> gumsclient
gumsclient -> glexectracking
</pre>

---+Testing the Installation of glexec

Now, __as a non-privileged user (not root)__ , do the following (where "yourvo" is your VO,  and "NNN" is your uid):
<pre class="screen">
%UCL_PROMPT% voms-proxy-init -voms yourvo:/yourvo -file /tmp/x509_uNNN
%UCL_PROMPT% export GLEXEC_CLIENT_CERT=/tmp/x509_uNNN
%UCL_PROMPT% /usr/sbin/glexec /usr/bin/id
uid=13160(fnalgrid) gid=9767(fnalgrid) groups=65000(glexec00)
</pre>
If glexec is successful, it will print out the uid and gid that your proxy would normally be mapped to by your GUMS server, plus a supplementary tracking group.

---+ Glexec log files

MORE INFORMATION ABOUT HOW TO SET UP syslog-ng IS NEEDED HERE

Glexec sends all its log information by default to syslog.  The file that it goes into depends on your syslog configuration.  With standard syslog it is difficult to get all of the glexec-related messages collected into a single file, but syslog-ng can do it because all of the messages have the string "glexec" in the name.   

%BR%

---+ *Comments*
%COMMENT{type="tableappend"}%


<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = DaveDykstra

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA       = ComputeElement

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = Installation
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %NO%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = 
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->



-- Main.DaveDykstra - 22 Sep 2011
