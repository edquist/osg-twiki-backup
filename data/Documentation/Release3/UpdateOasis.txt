%META:TOPICINFO{author="DaveDykstra" date="1387207584" format="1.1" reprev="1.6" version="1.6"}%
%DOC_STATUS_TABLE%

---+!! Updating Software on OASIS

%TOC%


The applicable software versions for this document are 
%RED%
*osg-version 3.1.13* 
%ENDCOLOR%
(or higher)

---+ About OASIS
OASIS is the OSG Application Software Installation Service.  It is the recommended method to install software on the Open Science Grid.  It is implemented using !CernVM !FileSystem (CVMFS) technology.

---+ About this Document
This document is a step by step explanation of how a Virtual Organization (VO) Software Adminstrator can enable the OASIS service and use it to publish and update software on OSG Worker Nodes.  For information on how to configure a client for OASIS see the [[https://twiki.grid.iu.edu/bin/view/Documentation/Release3/InstallCvmfs][OSG CVMFS Installation documentation]].

---+ Requirements
To begin the process to distribute software on OASIS, you must:
   * have a personal certificate. The process for getting one is detailed [[https://www.opensciencegrid.org/bin/view/Documentation/Release3/CertificateUserGet][here]].
   * register that certificate in [[http://oim.grid.iu.edu/oim/home][OIM]].  In order to register, the certificate has to be [[https://twiki.opensciencegrid.org/bin/view/Documentation/CertificateGetWeb#Installing_into_a_Web_Browser][installed in your browser]].  If you are then not registered, clicking "Login" on the page will prompt you to register.
   * be associated with a VO that is registered in OIM. The list of registered VOs appears [[http://oim.grid.iu.edu/oim/vo][here]].
   * register your certificate in the %LINK_GLOSSARY_VOMS% for your %LINK_GLOSSARY_VO%.  Click on the VO name that you're associated with in the above list and in the VO page click on the _"Membership Services URL"_ to register with that VO VOMS.

---+ How to use OASIS
---++ Enable OASIS
When you are ready to distribute your software with OASIS, submit a [[https://ticket.grid.iu.edu/goc/submit][GOC ticket]] with a request to enable OASIS for your VO. In your request, please specify your VO and provide a list of people who will install and administer the VO software in OASIS. 

The GOC will enable OASIS for your VO in [[https://oim.grid.iu.edu/oim/home][OIM]] and add your list of administrators to the "OASIS Managers" list (which is near the bottom of the page of information about each VO in OIM).  oasis-login will then grant access to the people who are listed as OASIS managers.  Any time the list is to be modified, submit another GOC ticket.

---++ Log in with GSISSH
The next step is to generate a proxy and log into =oasis-login.opensciencegrid.org= with =gsissh=.  These commands should be run on a computer that has the [[InstallOSGClient][OSG client]] software.
<pre class="screen">
%UCL_PROMPT% voms-proxy-init -voms %RED%VO%ENDCOLOR%
%UCL_PROMPT% gsissh -o GSSAPIDelegateCredentials=yes oasis-login.opensciencegrid.org
</pre>

Instead of putting <verbatim>-o GSSAPIDelegateCredentials=yes</verbatim> on the command line, you can put it in your =~/.ssh/config= like this:
<pre class="screen">
Host oasis-login.opensciencegrid.org
    GSSAPIDelegateCredentials yes
</pre>


---++ Install and update software
Once you log in, you can add/modify/remove content on a staging area at =/net/nas01/Public/ouser.$VO= where $VO is the name of the VO represented by the manager.

Files here are visible to both =oasis-login= and the Stratum 0 server (oasis.opensciencegrid.org)

NOTE that =/net/nas01/Public/ouser.$VO= is not your home directory, which you can use for staging purposes but is not visible in OASIS.

As OASIS manager for the VO requests an oasis update with: 
<pre class="screen">
%UCL_PROMPT% osg-oasis-update
</pre>
This command syncs the content of OASIS with the content of =/net/nas01/Public/ouser.$VO=


It is required that the requester be logged into the account associated
with a supported VO. As of this writing, the accounts are:
   * ouser.csiu
   * ouser.fermilab
   * ouser.gm2
   * ouser.hcc
   * ouser.icecube
   * ouser.mis
   * ouser.nova
   * ouser.osg
   * ouser.sbgrid
   * ouser.uc3

Others may be added per request.
Any other account generates an error message and the update request fails.

Only one instance of =osg-oasis-update= can run at a time (across all VOs); your request may be queued behind a different VO.  If you encounter severe delays (more than 4 hours), please file a GOC ticket.

---+++ Details of =osg-oasis-update= operation.

A test is performed to determine if an update is in progress (existence
of a lock file, discussed below). If an update is in progress a "Please
try again later" message is printed and the process exits.

If no lock file exists one (vo_update_requested) is written. 

A request to update the stratum 0 generated.

The stratum 0 update is run as root and started by a crontab entry running
once per minute. The cron job detects the lockfile (vo_update_requested) written by the request
process on oasis-login.
If another lock (oasis_update_in_progress)
exists, the process sleeps and loops until it does not. This
mechanism prevents more than one update to be in progress at any time.
If oasis_update_in_progress does not exist it is created and the update process continues.
The files previously placed on the shared filesystem are rsync'ed to the 
/cvmfs directory. Upon completion a cvmfs-sync and cvmfs_server publish
are executed. All lock files are removed upon completion.

Finally, the status of the service is updated. See
http://oasis.opensciencegrid.org/stamp
A publish_age of a small number of seconds indicates success. 

These mechanisms insure that:

   1. Only the OASIS manager for a VO can write to a location serving as the source of updates
   1. After a request is made only the files associated with one VO are updated
   1. Only one update can be in progress at a time

---++ Testing

After =osg-oasis-update= completes and the changes have been propagated to the CVMFS stratum 1 servers (typically between 0 and 60 minutes, but possibly longer if the servers are busy with updates of other repositories) then the changes can be visible under =/cvmfs/oasis.opensciencegrid.org= on a computer that has the [[InstallCvmfs][CVMFS client installed]].  A client normally only checks for updates if at least an hour has passed since it last checked, but people who have superuser access on the client machine can force it to check again with 
<pre class="screen">
%UCL_PROMPT_ROOT% cvmfs_talk -i oasis.opensciencegrid.org remount
</pre>
This can be done while the filesystem is mounted (despite what the name sounds like it does not do umount/mount).  If the filesystem is not mounted, it will automatically check for new updates the next time it is mounted.

In order to find out if an update has reached the CVMFS stratum 1 server, you can find out the latest =osg-oasis-update= time seen by the stratum 1 most favored by your CVMFS client with the following long command:

<pre class="screen">
%UCL_PROMPT% date -d "1970-1-1 GMT + $(wget -qO- $(cvmfs_config showconfig oasis.opensciencegrid.org| \
                 sed -n '/^CVMFS_SERVER_URL=/{s/.*=//;s/;.*//;p}')/.cvmfspublished|cat -v|sed -n 's/^T//p') sec"
</pre>

---+ References
[[https://twiki.cern.ch/twiki/bin/view/CvmFS][CERN CVMFS home page]]
---+ *Comments*
%COMMENT{type="tableappend"}%


<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = ScottTeige

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = HowTo

  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MarcoMambelli

 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = DaveDykstra

 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################
-->
