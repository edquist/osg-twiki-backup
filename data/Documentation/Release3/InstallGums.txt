%META:TOPICINFO{author="SuchandraThapa" date="1358189083" format="1.1" reprev="1.20" version="1.20"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! GUMS (Grid User Mapping Service) Install
%DOC_STATUS_TABLE%
%TOC%

---# Introduction
This document is intended to guide system administrators through the process of installing and configuring the GUMS service.

---# About This Document

This document describes how to install and configure GUMS. 

---# Requirements

---## Host and OS
   * A computer to install GUMS. We strongly recommend that this is a separate computer from your CE, though technically it can be the same one. But really, do you want to run your authorization service on the same computer where your users can run jobs?
   * OS is %SUPPORTED_OS%. 
   * Root access for installation.

---## Users
The GUMS installation will create two users unless they already exist.

%STARTSECTION{"Users"}%
| *User* | *Default uid* | *Comment* |
| =mysql= | 27 | Runs the mysql-server database, which is used by GUMS |
| =tomcat= | 91 | Runs the Tomcat container which runs GUMS |

Note that if uids 27 and 91 are already taken but not used for the appropriate users, you will experience errors. [[https://twiki.grid.iu.edu/bin/view/Documentation/Release3/KnownProblems#Reserved_user_ids_especially_for][Details...]]
%ENDSECTION{"Users"}%

---## Certificates
| *Certificate* | *User that owns certificate* | *Path to certificate* |
| Tomcat service certificate | =tomcat= | =/etc/grid-security/http/httpcert.pem= <br> =/etc/grid-security/http/httpkey.pem= |

---## Networking
%STARTSECTION{"Firewalls"}%
%INCLUDE{"Documentation/Release3.FirewallInformation" section="FirewallTable" lines="gums"}%
%ENDSECTION{"Firewalls"}%

---# Installation Instructions

---## Yum Repositories 
%INCLUDE{"YumRepositories" section="OSGRepoBrief" TOC_SHIFT="+"}%

---## Certificate Authority Files 
%INCLUDE{"InstallCertAuth" section="OSGBriefCaCerts" TOC_SHIFT="+"}%

---## Install and Configure GUMS
---### GUMS Installation
   1. If you are upgrading GUMS then you should shutdown tomcat:   <pre class="rootscreen">
%UCL_PROMPT_ROOT% service tomcat5 stop 
</pre> or for Pacman installs <pre class="rootscreen">
%UCL_PROMPT% vdt-control --off tomcat-55
</pre>
   1. Install the GUMS Service <pre class="rootscreen">
%UCL_PROMPT_ROOT% yum install osg-gums </pre>
   1. Install fetch-crl: <pre class="rootscreen">
%UCL_PROMPT_ROOT% yum install fetch-crl
</pre>
   1. Configure Tomcat to use GSI <pre class="rootscreen">
%UCL_PROMPT_ROOT% /var/lib/trustmanager-tomcat/configure.sh </pre>  Note this will overwrite your =/etc/tomcat5/server.xml=; if you are using tomcat on this node for non-grid purposes, you may want to consider a hand configuration.

---### !MySQL Configuration
---### New Installations
   1. Start !MySQL: <pre class="rootscreen">
%UCL_PROMPT% /sbin/service mysqld start
</pre>
   1. Run: <pre class="rootscreen">
%UCL_PROMPT_ROOT% /usr/bin/gums-setup-mysql-database --user gums --host localhost:3306 --password <em>PASSWORD</em> </pre>
   Be sure to pick a password that you don't mind having in plaintext in =/etc/gums/gums.config= -- gums.config should only be readable by the =tomcat= user, but that only gets you so far.
   1. In order to add yourself as a GUMS administrator, you should run: <pre class="rootscreen">
%UCL_PROMPT_ROOT% gums-add-mysql-admin '<em>YOUR DN</em>' </pre>
   1. We recommend running !RedHat's =mysql_secure_installation= script to apply reasonable security settings:<pre class="rootscreen">
%UCL_PROMPT% /usr/bin/mysql_secure_installation
</pre>  

---### Updating from previous GUMS installation on another server 
   1. Dump the GUMS_1_3 database to a text file from the old server.  <pre class="rootscreen">
%UCL_PROMPT_ROOT% mysqldump GUMS_1_3 > gums_1_3.sql 
</pre>
  1. Start !MySQL: <pre class="rootscreen">
%UCL_PROMPT% /sbin/service mysqld start
</pre>
   1. Load dumped mysql data into the new !MySQL server.  <pre class="rootscreen">
%UCL_PROMPT% echo 'CREATE DATABASE IF NOT EXISTS GUMS_1_3;' | mysql  
%UCL_PROMPT_ROOT% mysql GUMS_1_3 < gums_1_3.sql 
</pre>
   1. If this is a fresh !MySQL install, we recommend running !RedHat's =mysql_secure_installation= script to apply reasonable security settings:<pre class="rootscreen">
%UCL_PROMPT% /usr/bin/mysql_secure_installation
</pre>  
---### Updating from VDT GUMS (i.e. Pacman installed GUMS)
   1. Dump the GUMS_1_3 database to a text file from the old server:  <pre class="rootscreen">
%UCL_PROMPT_ROOT% cd VDT_LOCATION
%UCL_PROMPT_ROOT% source setup.sh
%UCL_PROMPT_ROOT% mysqldump GUMS_1_3 > /tmp/gums_1_3.sql 
</pre> 
   1. If the new GUMS server is on the same server as your old GUMS server, turn off mysql and the vdt services:  <pre class="rootscreen">
%UCL_PROMPT_ROOT% vdt-control --off mysql5
</pre> 

   1. Using a separate terminal (to avoid having VDT and Pacman environment variables set), start mysql and load the old information: <pre class="rootscreen">
%UCL_PROMPT% service mysqld start
%UCL_PROMPT% echo 'CREATE DATABASE IF NOT EXISTS GUMS_1_3;' | mysql  
%UCL_PROMPT_ROOT% mysql GUMS_1_3 < /tmp/gums_1_3.sql 
</pre>
   2. There has been a schema change in the GUMS database between the pacman version of GUMS and the one distributed using rpms.  In particular the USER table is now called USERS.  So you'll need to change this in the =GUMS_1_3= data before you start tomcat: <pre class="rootscreen">
%UCL_PROMPT% mysql GUMS_1_3
mysql> RENAME TABLE USER TO USERS;
mysql> quit
</pre>
   1. If this is a fresh !MySQL install, we recommend running !RedHat's =mysql_secure_installation= script to apply reasonable security settings:<pre class="rootscreen">
%UCL_PROMPT% /usr/bin/mysql_secure_installation
</pre>

---### GUMS Initial Configuration
The =gums-setup-mysql-database= command above created a default, pre-configured =/etc/gums/gums.config= file. It's almost certainly not what you want. You have two options:

   1. If you migrating from an older version of GUMS, you can copy your existing =gums.config= into =/etc/gums/gums.config=.  Update it to reflect the new username and password for the mysql server (if you chose different ones from the previous installation).  %IMPORTANT% If you are updating from a pacman version of GUMS, you will need to change the =gums.config= in order for it to work.  In particular, you'll need to change the connection string for =hibernate.connection.url= so that the port given is 3306 instead of something in the 49000 range that the pacman installation uses.  In addition, you'll need to change vomsServer elements in the config file and remove =services/VOMSAdmin= from the baseURL.  Finally, update the =sslCAFiles= attribute in the vomsServer so that it is set to point to the location of your CA certs files (=/etc/grid-security/certificates/*.0= if you're using default settings)

   2. Use the default configuration provided by OSG: <pre class="rootscreen">%UCL_PROMPT_ROOT% cp /etc/gums/gums.config.template /etc/gums/gums.config</pre> If you do this, you will need to edit =/etc/gums/gums.config= and change the following settings. Each occurs in one place in the file: 
| *Search for* | *Replace with* |
| @USER@ | The name of the !MySQL gums user. If you followed the instructions above, this will be 'gums'. |
| @PASSWORD@ | The password for the !MySQL gums user (you set this above). |
| @SERVER@ | The name of your computer. <br>Normally !MySQL is running on the same machine as GUMS (as in the instructions above).<br>We *highly recommend* using =localhost= instead of the actual hostname; this will cause !MySQL to use a local Unix socket instead of listening on the network, which is more secure. |
| @DOMAINNAME@ | Your local domain, such as _wisc.edu_ . |

   3. If you have updated GUMS from another server or from the pacman installation, you will need to authorize the user being used by GUMS to access the =GUMS_1_3= database.  Replacing the values as in the previous step, run the following:  <pre class="rootscreen">
%UCL_PROMPT% mysql -u root mysql
mysql> GRANT ALL ON GUMS_1_3.* TO '@USER@'@'@SERVER@' IDENTIFIED BY '@PASSWORD@';
mysql> quit
</pre>  
---### Startup services
   1. Start the GUMS service: <pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/service fetch-crl-cron start
%UCL_PROMPT_ROOT% /sbin/service fetch-crl-boot start
%UCL_PROMPT_ROOT% /sbin/service mysqld start
%UCL_PROMPT_ROOT% /sbin/service tomcat5 start
</pre>
   1. You should also enable the appropriate services so that they are automatically started when your system is powered on: <pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/chkconfig fetch-crl-cron on
%UCL_PROMPT_ROOT% /sbin/chkconfig fetch-crl-boot on
%UCL_PROMPT_ROOT% /sbin/chkconfig mysqld on
%UCL_PROMPT_ROOT% /sbin/chkconfig tomcat5 on
</pre>

---### Manual configuration. 
Manual configuration is quite a bit more complicated than accepting the OSG template. It requires a basic understanding of the internal model of how GUMS works. 

The diagram below shows the configuration elements that must exist for a mapping to occur. Elements lower in the tree must exist before you can create ones higher up. For example, VOMS User Groups refer to a VOMS Server, so you must create the VOMS Server element first. Below the diagram are step-by-step instructions for creating a mapping. 

<img src="%ATTACHURL%/GUMSConfigurationModel.png" width="960" height="720" border="0" alt="GUMS Model" />

GUMS is designed to permit a number of types of mapping. These instructions will focus on mappings for grid users who are defined in a VO VOMS server. 

The numbered text in the diagram tracks how a mapping call is processed. A GUMS client makes a mapUser() call, providing 1) a "service", i.e. the name of the host the call is being made from, 2) a DN of the user to be mapped and, optionally, 3) a FQAN, i.e. additional VOMS attributes like group membership or special roles. The service hostname is matched against all configured Host to Group Mappings. If a match is found

Additional documentation and discussion of GUMS configuration for this version can be found here: https://www.racf.bnl.gov/Facility/GUMS/1.3/ 


---# Validating GUMS

---## Connect to the GUMS web page
Connect to =https://<em>HOSTNAME</em>:8443/gums/= to use your GUMS instance. You must have the certificate that you used for =gums-add-mysql-admin= above loaded in your browser. You should see the GUMS web page load. 

If you do not see it load, check a few things:

   1. Look for errors in =/var/log/tomcat5/catalina.out= and =/var/log/tomcat5/catalina.err=.
   1. Look for errors in =/var/log/tomcat5/trustmanager.log=. There are likely to be CRL errors in this file, this can be ignored unless all your CA's get CRL errors in which case you should check to make sure that your CRL updates are running correctly.
   1. Ensure that you have an http certificate in =/etc/grid-security/http/httpcert.pem= and /etc/grid-security/http/httpkey.pem=. Make sure it is readable by the tomcat user. Permissions should look like: <pre class="screen">
# ls -l /etc/grid-security/http/
total 8
-r--r--r-- 1 tomcat tomcat 1671 Jul  2 15:54 httpcert.pem
-r-------- 1 tomcat tomcat 1675 Jul  2 15:54 httpkey.pem</pre>

---## Check accounts

After you connect to your GUMS web page,  go to the Summary tab to check the configuration. You should see several dozen OSG VOs listed. 

In the Account column on the summary page, you will see the local Unix user accounts that these VO users will be mapped to. It is critical that these accounts exist on the gatekeeper and worker nodes at your site. If they do not, there will be errors when users attempt to access your site.

---## Update VO members list
GUMS contacts each VOMS server to update its knowledge of VO membership every 6 hours. After installing or updating GUMS, you should trigger the update manually by going to the Update VO Members tab, and clicking update. 

You can track the progress of the update process by watching a log file: <pre class="rootscreen">
%UCL_PROMPT_ROOT% tail -f /var/log/tomcat5/gums-service-admin.log </pre>

With so many VOMS servers in the OSG config, several member updates may fail for various reasons (e.g., host down "connect timed out",  bad or expired host certificates,etc.). This is, sadly, normal.  Typically, you should see about 5 or 6 failed updates with the rest succeeding.  The update will take a while and then should display any errors that occured during the updates.  If you'd like to get more details or track the update process in real time, you can look at  =/var/log/gums-service-admin.log=. 

---## Generate a grid-mapfile
The simplest way to validate GUMS functionality is to generate a grid-mapfile:
   1. Go to the Generate Grid-mapfile tab:  =https://<em>HOSTNAME</em>:8443/gums/generateGridMapfile_form.jsp=
   1. Type in the DN of your OSG CE (or other service), e.g. =/DC=org/DC=doegrids/OU=Services/CN=ce.example.com=. If you don't know the DN, you can log into your CE and run: <pre class="screen">
%UCL_PROMPT% openssl x509 -noout -subject -in /etc/grid-security/hostcert.pem
subject= %RED%/DC=org/DC=doegrids/OU=Services/CN=ce.example.com%ENDCOLOR%
</pre>
   1. Select "Include Extended Attributes".
   1. Click "generate grid-mapfile"
   1. You should see substantial output showing DNs, VOMS groups, and UNIX accounts. 

---## Map a known good user DN
   1. Go to Map Grid Identity to Account tab:  =https://<em>HOSTNAME</em>:8443/gums/map_grid_identity_form.jsp=
   1. Fill in the required info. Service DN means the DN of the host certificate of your CE (see above). Use the DN of a user (probably yourself) who you know belongs to a particular VO. Fill in the VO name in the VOMS FQAN field. 
   1. Click "map user". A failed mapping will display "null". A successful mapping will display a UNIX account name. 

---# Forcing GUMS to update the set of users

GUMS contacts each VOMS server to update its knowledge of VO membership every 6 hours. If you like, you can trigger them manually by going to the Update VO Members tab, and clicking update. 

You can track the progress of the update process by watching a log file: <pre class="rootscreen">
%UCL_PROMPT_ROOT% tail -f /var/log/tomcat5/gums-service-admin.log </pre>

With so many VOMS servers in the OSG config, several member updates may fail for various reasons (e.g., host down "connect timed out",  bad or expired host certificates,etc.). This is, sadly, normal.  

---# Updating the GUMS configuration
Periodically, the OSG Grid Operations Center will release an updated template for the GUMS configuration that updates information about an existing VO or adds a new VO. You may get the update as part of a regular update process, or you can force an update by using yum:

<pre class="rootscreen">
%UCL_PROMPT_ROOT% yum update osg-gums-config
</pre>

This will *not* update your GUMS configuration (which is in =/etc/gums/gums.config=) but will update the template for your configuration (which is in =/etc/gums/gums.config.template=). This is because RPM does not know how to merge changes to your configuration. Instead, you should use GUMS to do so:

   1. Go to the Merge Configuration tab: =https://<em>HOSTNAME</em>:8443/ gums/mergeConfiguration.jsp=
   1. Cut and paste the URL of the osg template into the Configuration URI field. If you are using the template provided by the RPM, it will be: =file:///etc/gums/gums.config.template= If you want to directly fetch it from the GOC, you can use =http://software.grid.iu.edu/pacman/tarballs/vo-version/gums.template= 
   1. Click Merge. You should get a green success message if it has worked, along with a suggestion that you update the VO members. 
   1. Check the Summary tab to verify the set of VOs you have, as well as their accounts.
accounts exist on your cluster.  

---# Stopping and Disabling Services

When you want to stop GUMS, you should shutdown the services in the opposite order that you started them:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/service tomcat5 stop
%UCL_PROMPT_ROOT% /sbin/service mysqld stop
</pre>

In addition, you can stop the service from starting up when you computer starts up:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/chkconfig mysqld off
%UCL_PROMPT_ROOT% /sbin/chkconfig tomcat5 off
</pre>

---# Troubleshooting

---## Useful Configuration and Log Files

Configuration Files
| *Service or Process* | *Configuration File* | *Description* |
| !MySQL | =/etc/my.cnf= | !MySQL configuration, e.g. server port |
| tomcat (EL5) | =/etc/tomcat5/= | Tomcat configuration files |
| tomcat (EL5) | =/etc/tomcat6/= | Tomcat configuration files |

Log files
| *Service or Process* | *Log File* | *Description* |
| tomcat (EL5) | =/var/log/tomcat5/catalina.out= | This is the Tomcat log file. Problems (and a lot of noise) are reported here. |
| | =/var/log/tomcat5/trustmanager.log= | The trustmanager handles things related to authentication. Useful errors are sometimes here. |
| tomcat (EL6) | =/var/log/tomcat6/catalina.out= | This is the Tomcat log file. Problems (and a lot of noise) are reported here. |
| | =/var/log/tomcat6/trustmanager.log= | The trustmanager handles things related to authentication. Useful errors are sometimes here. |

---# How to get Help?
To get assistance please use [[HelpProcedure][Help Procedure]].

---# Comments
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = JohnHover

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = VO

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = SuchandraThapa
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local TESTER       = SuchandraThapa
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED  = %IN_PROGRESS%


############################################################################################################
-->

%META:FILEATTACHMENT{name="GUMSConfigurationModel.png" attachment="GUMSConfigurationModel.png" attr="" comment="Schematic of GUMS Configuration Model" date="1335475353" path="GUMSConfigurationModel.png" size="62894" stream="GUMSConfigurationModel.png" tmpFilename="/usr/tmp/CGItemp58711" user="JohnHover" version="1"}%
