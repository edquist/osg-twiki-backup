%META:TOPICINFO{author="TimCartwright" date="1413486995" format="1.1" reprev="1.7" version="1.7"}%
<!--
   * Set TODO = <span style="color: white; background-color: #F0F; font-weight: bold; padding: 2px;">TODO:</span>
-->

---+ HTCondor CE Overview

At the heart of an OSG Compute Element (CE) is the _job gateway_ software. Primarily, it handles the following functions:

   * *Remote access,* allowing job queues at other locations to submit jobs to the CE;
   * *Job security,* authenticating submitters and authorizing them to runs jobs at the CE site; and
   * *Job delegation*, passing submitted jobs to one or more underlying batch systems to be run.

When talking about a CE, mostly we focus on its job delegation function; the other functions support this main one.

Historically, OSG used the Globus Toolkit’s GRAM-based gatekeeper as the job gateway. Now, another option is HTCondor CE, which is a special configuration of the HTCondor software to perform job gateway functions.

---++ How Jobs Run

In OSG, users submit jobs from HTCondor submit nodes to a job gateway on a site’s CE. The CE checks credentials of the job owner, and if the owner is authorized to run at the site, the job is placed into the job gateway’s scheduler and undergoes site-customizable transformations before it is submitted to the site’s batch system. The job gateway monitors the status of the job on the batch system and passes that information back to the intial submit node until the job reaches completion, where the process ends.

The HTCondor CE delegates jobs by having the client submit HTCondor jobs to a scheduler running on the CE.  We refer to this as the _grid job_. A separate daemon, the !JobRouter, is responsible for transforming the grid job to a format that the site’s resource manager can consume. This job transformation happens according to sets of customizable _job routes_ that can add, edit and remove attributes to jobs that meet specified criteria. We refer to the transformed job as the _routed job_.

[%TODO% Provide a more detailed process as a numbered list.]

---+++ How jobs run on HTCondor batch systems

For a site with a HTCondor batch system, the !JobRouter will transform and mirror the grid job into the routed job in the site's batch system.  The process is illustrated below:

<img src="%ATTACHURLPATH%/ce_condorbatchsystem.png" alt="condor-ce-condor-schematics.png" width='320' height='306' /> 

Notice the !JobRouter copies the job directly into the site's batch system and does not make use of =condor_submit=. This means that if the HTCondor batch system is setup to add attributes to incoming jobs when they are submitted (i.e. =SUBMIT_EXPRS=), these attributes will not be added to the routed jobs.

---+++ How jobs run on other batch systems

Submission into a non-HTCondor batch system is done slightly differently than with an HTCondor batch system. For example, with a PBS batch system, the routed job stays in the HTCondor CE schedd (as the !JobRouter does not know how to submit directly into the PBS queue), and the routed job is submitted into PBS using the BLAHP, resulting in the batch job. See the illustration below:

<img src="%ATTACHURLPATH%/ce_otherbatchsystem.png" alt="condor-ce-condor-schematics.png" width='320' height='306' /> 

Notice the BLAHP, not the !JobRouter, submits the job to PBS in this case. [%TODO% Is the rest of this paragraph useful?] The BLAHP is a common piece of software for interacting with batch systems – in addition to being integrated in the HTCondor grid universe, it also is used by the BOSCO project and the CREAM CE. 

---++ How Files are Transferred

[%TODO% Outline how existing HTCondor file-transfer mechanisms work for HTCondor CE.]

---++ How the CE is Customized

[%TODO% Describe major customization points, including the job router and HTCondor itself.]

---++ How Security Works

[%TODO% Add a higher-level overview of where security happens. Trust, delegation of trust, etc.]

In its default configuration, HTCondor CE use GSI-based authentication and authorization (the same as Globus GRAM), which will work with existing GUMS servers or grid mapfiles. Additionally, it can be reconfigured to provide alternate authentication mechanisms such as Kerberos, SSL, shared secret, or even IP-based authentication. [%TODO% Where to learn more.]

---++ Next steps

If you're transitioning from a GRAM CE to HTCondor CE, the process is the same as if you were setting up a completely new CE, whether you're installing it on a new machine or alongside your GRAM CE.

   * [[InstallHTCondorCE][Installing and configuring]] HTCondor CE
   * Setting up [[JobRouterRecipes][job routes]]
   * [[TroubleshootingHTCondorCE][Troubleshooting]] HTCondor CE
   * Register the CE with OIM
   * Register with the OSG !GlideinWMS factories and the ATLAS !AutoPyFactory

%META:FILEATTACHMENT{name="ce_condorbatchsystem.png" attachment="ce_condorbatchsystem.png" attr="h" comment="A diagram of the HTCondor CE/HTCondor batch system job submission" date="1412871085" path="ce_condorbatchsystem.png" size="22860" stream="ce_condorbatchsystem.png" tmpFilename="/usr/tmp/CGItemp14227" user="BrianLin" version="1"}%
%META:FILEATTACHMENT{name="ce_otherbatchsystem.png" attachment="ce_otherbatchsystem.png" attr="h" comment="A diagram of the HTCondor CE/non-HTCondor batch system job submission" date="1412871141" path="ce_otherbatchsystem.png" size="23591" stream="ce_otherbatchsystem.png" tmpFilename="/usr/tmp/CGItemp18203" user="BrianLin" version="1"}%
