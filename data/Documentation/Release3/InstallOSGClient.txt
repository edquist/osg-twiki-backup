%META:TOPICINFO{author="IgorSfiligoi" date="1317965010" format="1.1" reprev="1.11" version="1.11"}%
%META:TOPICPARENT{name="WebHome"}%
%LINKCSS%


---+!! Installing OSG RPM Client
%TOC%

---++ Requirements

%INCLUDE{"Documentation.InstallVDTRepo" headingoffset="1"}%
%INCLUDE{"Documentation/Release3.InstallCACerts" headingoffset="1"}%

---++ Install the Client
   1. Install the osg-client meta package, which will pull in all dependencies. <pre class="rootscreen">
%UCL_PROMPT_ROOT% yum install --enablerepo=osg-testing --nogpgcheck osg-client   </pre>

---+++ Enable and Start fetch-crl:
CRLs are not required on the client, but are recommended to keep your installation secure.<br>
However, be aware that this will periodically use a non-negligible amount of networking, so it may not be suitable for mobile installations (e.g. laptops).

To enable fetch-crl by default on the node:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% chkconfig fetch-crl-cron on
</pre>
To start fetch-crl:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% service fetch-crl-cron start
</pre>

You may also consider enabling fetch-crl at boot time, to guarantee up-to-date CRLs even after long power offs.
However, this may significantly lengthen your boot times, so decide for yourself what is more important.
<pre class="rootscreen">
%UCL_PROMPT_ROOT% chkconfig fetch-crl-boot on
</pre>
To start fetch-crl:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% service fetch-crl-boot start
</pre>

---++++ Configure Proxy Server
If you have a campus Web Proxy (e.g. Squid) that you can use, please use it, as it will drastically reduce the network bandwidth used by fetch-crl.

To configure fetch-crl to use a proxy server, create  =/etc/fetch-crl.conf= and add =export http_proxy=http://your.squid.fqdn= to the file.

---+++ Install Condor-G
Optionally, you may want to install Condor-G, too. Condor-G is needed to submit jobs directly to the OSG sites.<br>
*Note:* Most users don't need this.

   1. Install the osg-client-condor meta package, which will pull in all dependencies. <pre class="rootscreen">
%UCL_PROMPT_ROOT% yum install --enablerepo=osg-testing --nogpgcheck osg-client-condor   </pre>

---++++ Enable and Start Condor

To enable Condor by default on the node:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% chkconfig condor on
</pre>
To start Condor:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% service condor start
</pre>

---++++ Firewall tunning
*Add a few words about firewall tuning needed to use Condor-G.*

---++ Test the Client

[[Documentation/Release3.TestOSGClient][Instructions for testing the client]]. These are meant for the VDT/ITB teams, but may help you out.

---++ Known Issues
   * osg-discovery invokes "locate" to find Java.  This might cause a spurious error message if locate is not installed. Temporary workaround: install locate. 

%META:TOPICMOVED{by="JamesWeichel" date="1317239924" from="Documentation.InstallOSGClient" to="Documentation/Release3.InstallOSGClient"}%
