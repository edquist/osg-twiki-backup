%META:TOPICINFO{author="BrianBockelman" date="1313438378" format="1.1" version="1.8"}%
%META:TOPICPARENT{name="RPMTempDocuments"}%
%LINKCSS%

---+ Installing the CE from RPMs

---++ Requirements
A RHEL5 (or !CentOS 5, SL5) machine with [[http://fedoraproject.org/wiki/EPEL][EPEL]] repos enabled.

---++ Install Instructions

%INCLUDE{"InstallVDTRepo" headingoffset="1"}%
%INCLUDE{"InstallCACerts" headingoffset="1"}%
   1 Install the CE RPM.  Do ONE of the following installation lines, depending on your batch system  <pre class="rootscreen">
%UCL_PROMPT_ROOT% yum --enablerepo=osg-testing --nogpgcheck install osg-ce-condor 
%UCL_PROMPT_ROOT% yum --enablerepo=osg-testing --nogpgcheck install osg-ce-pbs 
%UCL_PROMPT_ROOT% yum --enablerepo=osg-testing --nogpgcheck install osg-ce-lsf 
%UCL_PROMPT_ROOT% yum --enablerepo=osg-testing --nogpgcheck install osg-ce-sge </pre>
      *If you want managedfork* and are using a non-Condor batch system, then you should *also* install osg-ce-condor.


---++ Configuration Instructions

As =configure-osg= is made to understand the new RPM structure, the number of manual steps will decrease. 

---+++ Config.ini

Generate an appropriate =config.ini=, based on the pacman docs.

---+++ Globus Gatekeeper

Configure the gatekeeper, GRAM, and the relevant jobmanagers:
 <pre class="rootscreen">
%UCL_PROMPT_ROOT% /usr/share/globus/setup/setup-globus-gatekeeper
%UCL_PROMPT_ROOT% /usr/share/globus/setup/setup-globus-gram-job-manager
%UCL_PROMPT_ROOT% /usr/share/globus/globus-job-manager-service -add -s jobmanager-fork -m fork # SEE MANAGED-FORK NOTE BELOW
%UCL_PROMPT_ROOT% /usr/share/globus/globus-job-manager-service -add -s jobmanager-condor -m condor -extra-config '-condor-arch x86_64 -condor-os Linux'
</pre>

Only the condor jobmanager needs the "extra-config" at this point.

If you want to enable jobmanager fork, replace the above invocation for jobmanager-fork with the following:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% /usr/share/globus/globus-job-manager-service -add -s jobmanager-fork -m condor -extra-config '-condor-arch x86_64 -condor-os Linux -service-tag managedfork'
</pre>
This should still be execute prior to the batch-system-specific service addition.

---+++ Condor-specific notes

   * The Condor jobmanager is configured to not use a shared file system.  There are some rare use cases where this break; if you think this is causing issues, set =isNFSLite=0= in =/etc/globus-condor/jobmanager.conf=.
   * You can control the mapping of jobs to Condor accounting groups using the files =/etc/globus-condor/ea_table.txt and =/etc/globus-condor/uid_table.txt=.  See the OSG's documentation on group accounting for more information.

---+++ Authorization

---++++ Authorization Option #1: GUMS

   * Edit =/etc/lcmaps.db= and =/etc/gums/gums-client.properties= to reflect your GUMS server
   * Uncomment the single line in =/etc/grid-security/gsi-authz.conf=.

---++++ Authorization Option #2: edg-mkgridmap

   * Edit /etc/edg-mkgridmap.conf
   * <pre class="rootscreen">%UCL_PROMPT_ROOT% /sbin/service edg edg-mkgridmap start</pre>

edg-mkgridmap is a cron job, but you control whether it runs or not using an init script, as shown above. 

---+++ Gratia

   * Add ProbeConfig
   * Create cron job
   * To be handled by configure-osg shortly.

---+++ Other

Run =gums-host-cron= by hand once:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% gums-host-cron
</pre>

---++ Services to enable

<pre class="rootscreen">
%UCL_PROMPT_ROOT% service fetch-crl-cron start
%UCL_PROMPT_ROOT% service fetch-crl-boot start
%UCL_PROMPT_ROOT% service condor start # Replace with batch system of your choice
%UCL_PROMPT_ROOT% service globus-gatekeeper start
%UCL_PROMPT_ROOT% service osg-info-services start
</pre>

Do the relevant =chkconfig=, of course.

---++ Things left undocumented

   * =gums-host-cron= should be init based like the other cron jobs.