%META:TOPICINFO{author="DaveDykstra" date="1418754528" format="1.1" reprev="1.30" version="1.30"}%
%DOC_STATUS_TABLE%

---+!! Procedures for handling OASIS externally-hosted Repositories

*Technical information contained here is believed to be reliable but administrative procedures, particularly as concerns organizational entities outside the OSG, should be considered unapproved proposals.*

%TOC%

<noautolink>


---+ About OASIS
OASIS is the OSG Application Software Installation Service.  It is the recommended method to install software on the Open Science Grid.  It is implemented using !CernVM !FileSystem (CVMFS) technology.  


---+ About this Document
This document describes the detailed procedures for dealing with CVMFS repositories that are part of the OASIS system but are not hosted at the OSG Global Operations Center (GOC).  Rather, they are hosted at the home institution of a Virtual Organization (VO).    The procedures include the steps performed by both the GOC and by the repository service administrator.   If you are only interested in using an OASIS repository that is hosted at the GOC, see instead [[UpdateOasis]].

%INCLUDE{"Documentation/DocumentationTeam/DocConventions" section="Header"}%
%INCLUDE{"Documentation/DocumentationTeam/DocConventions" section="CommandLine"}%



---+ Requirements: setting up a CVMFS repository server
This document doesn't cover requirements for the GOC computers since those are already set up.  The requirements for a CVMFS repository server are that it have installed cvmfs-server and cvmfs client, both version 2.1.19 or greater.  This requires using aufs, which is standard on Scientific Linux 5-based systems, but requires a modified kernel from CERN for Redhat EL6-based systems.  Also an apache httpd server needs to be enabled.  NOTE: multiple cvmfs repositories can be hosted on the same machine.

Redhat EL5-based systems that are not Scientific Linux-based should first build the [[http://ftp.scientificlinux.org/linux/scientific/5x/SRPMS/SL/aufs-0.20090202.cvs-6.sl5.src.rpm][SL5 aufs source rpm]] and install the resulting rpm in their own yum repository.

This is the procedure for installing it on a Redhat EL5-based system:<pre class="rootscreen">
%UCL_PROMPT_ROOT% rpm -i http://repo.grid.iu.edu/osg/3.2/osg-3.2-el5-release-latest.rpm
%UCL_PROMPT_ROOT% yum install aufs cvmfs-server.x86_64 oasis-config</pre>

This is the procedure for installing it on a Redhat EL6-based system:<pre class="rootscreen">
%UCL_PROMPT_ROOT% rpm -i http://cvmrepo.web.cern.ch/cvmrepo/yum/cvmfs/EL/6/x86_64/cvmfs-release-2-4.el6.noarch.rpm
%UCL_PROMPT_ROOT% rpm -i http://repo.grid.iu.edu/osg/3.2/osg-3.2-el6-release-latest.rpm
%UCL_PROMPT_ROOT% yum install --enablerepo=cernvm-kernel --disablerepo=cernvm kernel aufs2-util cvmfs-server.x86_64 oasis-config
%UCL_PROMPT_ROOT% reboot</pre>

In addition, apache needs to listen on port 8000 and be started.  Use these commands:<pre class="rootscreen">
%UCL_PROMPT_ROOT% echo Listen 8000 >>/etc/httpd/conf.d/cvmfs.conf
%UCL_PROMPT_ROOT% chkconfig httpd on
%UCL_PROMPT_ROOT% service httpd start</pre>
Make sure that port 8000 is available to the internet through any firewalls.


---+ Procedure to add an externally-hosted repository to OASIS

   1. A VO representative who will have responsibility for the contents of the repository chooses a name for the repository.  This name should be either the name of the VO or be derived from it or derived from a project registered under the VO in OIM.  The name used as an example in this document is *reponame*.   Note: the VO representative's name will be registered in OIM as an OASIS manager for the VO, and names can be added or changed later with GOC tickets.  If there is more than one repository for the VO, all the OASIS managers are assumed to be contacts for all the repositories.
   1. Using whatever mechanism is appropriate at their institution, the VO representative requests the local CVMFS repository service administrator to create this repository called =reponame.opensciencegrid.org=.
   1. The repository service administrator creates the repository with these commands where ownerid is the user id that will have write access:<pre class="rootscreen">
%UCL_PROMPT_ROOT% echo -e "*\t\t-\tnofile\t\t16384" >>/etc/security/limits.conf
%UCL_PROMPT_ROOT% ulimit -n 16384
%UCL_PROMPT_ROOT% cvmfs_server mkfs -o ownerid reponame.opensciencegrid.org
%UCL_PROMPT_ROOT% (echo Order deny,allow;echo Deny from all;echo Allow from 127.0.0.1;echo Allow from 129.79.53.0/24) >/srv/cvmfs/reponame.opensciencegrid.org/.htaccess</pre>
      If you might be hosting any hardlinks that span directories (e.g. the git package), also do the following:<pre class="rootscreen">
%UCL_PROMPT_ROOT% echo "CVMFS_IGNORE_XDIR_HARDLINKS=true" >>/etc/cvmfs/repositories.d/reponame.opensciencegrid.org/server.conf</pre>
      Verify that the repository is readable over http with the following command:<pre class="rootscreen">
%UCL_PROMPT_ROOT% wget -qO- http://localhost:8000/cvmfs/reponame.opensciencegrid.org/.cvmfswhitelist|cat -v</pre>
      That should print several lines including some gibberish at the end.
   1. The repository service administrator next creates a [[https://ticket.grid.iu.edu/goc/submit][GOC ticket]] using the following format: <pre class="file">
Please add a new CVMFS repository to OASIS for VO voname using the URL
    http://fully.qualified.domain:8000/cvmfs/reponame.opensciencegrid.org
by doing step #5 at
    https://twiki.grid.iu.edu/bin/view/Documentation/Release3/OasisExternalRepositories
The VO responsible manager will be Vorep Name.
</pre>
      replacing "voname" with the VO's name (and also add "project projname" if it is for a registered project), "fully.qualified.domain" with the full name of the repository server, "reponame" with the name of the repository, and "Vorep Name" with the name of the VO representative.  
   1. The GOC representative next ensures that the repository service administrator is a valid representative of a host site for the VO.  This can be done by (a) the GOC representative already having a relationship with the person or (b) the GOC representative contacting the VO manager to find out.  If that is OK, the GOC representative adds the repository service administrator and the VO responsible manager as OASIS managers for the VO in OIM, if they are not yet there.   The GOC representative also makes sure that the reponame in the URL is either derived from the VO or derived from a project of the VO registered in OIM, and that the reponame ends in opensciencegrid.org.  Finally, on the oasis machine the GOC representative temporarily installs the oasis signing key and runs [[http://svn.usatlas.bnl.gov/svn/oasis/oasis-server/trunk/bin/add_osg_repository][add_osg_repository]], giving it as a parameter the given URL.  This will download the =.cvmfswhitelist= file from the repository, sign it, publish it back on the oasis http server, and set it to be re-signed every time repository keys are signed (which is about every 20 days).  The ticket should remain open because there's another step to do after the repository service administrator's next step.
   1. The repository service administrator next executes the following commands:<pre class="rootscreen">
%UCL_PROMPT_ROOT% wget -O /srv/cvmfs/reponame.opensciencegrid.org/.cvmfswhitelist http://oasis.opensciencegrid.org/cvmfs/reponame.opensciencegrid.org/.cvmfswhitelist
%UCL_PROMPT_ROOT% ln -sf opensciencegrid.org.pub /etc/cvmfs/keys/reponame.opensciencegrid.org.pub</pre>
      Next the administrator verifies that a publish operation using the owner's privileges succeeds by making sure there's no errors from the following commands replacing "ownerid" with the owner's username:<pre class="rootscreen">
%UCL_PROMPT_ROOT% su ownerid -c "cvmfs_server transaction reponame.opensciencegrid.org"
%UCL_PROMPT_ROOT% su ownerid -c "cvmfs_server publish reponame.opensciencegrid.org"</pre>
      If that works then add the wget command to a daily cron:<pre class="rootscreen">
%UCL_PROMPT_ROOT% echo "5 4 * * * ownerid wget -qO /srv/cvmfs/reponame.opensciencegrid.org/.cvmfswhitelist http://oasis.opensciencegrid.org/cvmfs/reponame.opensciencegrid.org/.cvmfswhitelist" >>/etc/cron.d/fetch-cvmfs-whitelist</pre>
      Then the repository service administrator goes back to the open GOC ticket and asks that the repository be replicated onto OSG stratum 1s.
   1. If the repository previously existed on oasis-replica, the GOC representative next runs the command =cvmfs_server rmfs reponame.opensciencegrid.org= there. The GOC representative then runs the same [[http://svn.usatlas.bnl.gov/svn/oasis/oasis-server/trunk/bin/add_osg_repository][add_osg_repository]] command with the same URL on oasis-replica as was done in step 5.  It does different things there; it configures the repository for replication and pulls the first snapshot.  It is recommended to run the command with =nohup= because it can take hours if the repository is large.  The GOC representative also adds the URL in OIM under OASISRepoURLs for the VO.
   1. The GOC representative then asks the administrators of the FNAL and BNL stratum 1s to also add the new repository.  They should set up their stratum 1s to read from =http://oasis-replica.opensciencegrid.org:8000/cvmfs/reponame.opensciencegrid.org=.  When they have reported back that the replication is ready, the GOC representative reports in the ticket that the repository is ready on the OSG and closes the ticket.
   1. The repository service administrator then gives the VO representative access to the repository under the "ownerid" login, informs them of the [[http://cernvm.cern.ch/portal/filesystem/maintain-repositories][CVMFS documentation on maintaining repositories]], requests that they adhere to the [[http://cernvm.cern.ch/portal/filesystem/repository-limits][CVMFS documentation on repository content limitations]], and informs them that if they want the repository to be accessed outside of the U.S. they should open a separate OSG GOC ticket requesting that.
   1.  If the VO representative opens a new ticket requesting repository access outside of the U.S., the GOC representative creates three GGUS tickets for the sites of RAL, NIKHEF, and ASGC, asking them to add the repository to their CVMFS stratum 1 and giving them the same URL that was given to the OSG Stratum 1 administrators.  When those are all done, the GOC representative can report that to the requester and close the ticket.

---+ Emergency procedure to blank an externally-hosted repository to OASIS

   1. If there is an emergency request from OSG security to shut down the distribution of a repository, the GOC representative just needs to run [[http://svn.usatlas.bnl.gov/svn/oasis/oasis-server/trunk/bin/blank_osg_repository][blank_osg_repository]] on oasis-replica and give it the full name of the repository.  This will rename the repository directories to a name with the current timestamp and replace it with a blank repository.  It includes a step to run on the oasis machine, and attempts to do it with ssh, but if that fails it prints instructions on how to finish by logging in to the oasis machine manually.
   1. When it is time to put the repository back into production, the GOC representative runs [[http://svn.usatlas.bnl.gov/svn/oasis/oasis-server/trunk/bin/unblank_osg_repository][unblank_osg_repository]] on oasis-replica and gives it the full name of the repository again.  This will find the directory with the old timestamp and put it back into service.

</noautolink>

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = DaveDykstra

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = HowTo

  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = ScottTeige

 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 

 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->
