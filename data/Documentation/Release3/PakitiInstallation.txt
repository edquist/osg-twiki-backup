%META:TOPICINFO{author="KevinHill" date="1357854470" format="1.1" version="1.18"}%
%DOC_STATUS_TABLE%

<!--
   * Local MYSQL_USER = pakiti
   * Local MYSQL_PASS = 123kljgh125
   * Local MYSQL_DB = pakiti
-->

---+ *Pakiti Installation*

%TOC{depth="2"}%

%ICON{hand}% This document is intended for System Administrators that are installing the Pakiti Server software and/or client software.

   * [[http://pakiti.sourceforge.net/#Documentation][Original Pakiti documentation site]]



---++ Server Installation
---+++ Install OSG repo and certificate packages as appropriate
   * Documentation/Release3.InstallCertAuth

---+++ Install HTTP service cert if not previously done
   * Documentation/Release3.GetHostServiceCertificates

---+++ Install pakiti-server package
<pre class="rootscreen">
%UCL_PROMPT_ROOT% yum --enablerepo osg-testing install pakiti-server
</pre>

If some other dependency are needed, yum should find them automatically.

---+++ Configure the !MySQL server
   * Configure !MySQL to start at boot
<pre class="rootscreen">
%UCL_PROMPT_ROOT% chkconfig mysqld on
</pre>
   * Start the mysqld service
<pre class="rootscreen">
%UCL_PROMPT_ROOT% service mysqld start
</pre>
   * run "/usr/bin/mysql_secure_installation" - Default answers should be fine. Make sure to create a password for the !MySQL root user. 
<pre class="rootscreen">
%UCL_PROMPT_ROOT% mysql_secure_installation 




NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MySQL
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!


In order to log into MySQL to secure it, we'll need the current
password for the root user.  If you've just installed MySQL, and
you haven't set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none): 
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MySQL
root user without the proper authorisation.

Set root password? [Y/n] 
New password: 
Re-enter new password: 
Password updated successfully!
Reloading privilege tables..
 ... Success!


By default, a MySQL installation has an anonymous user, allowing anyone
to log into MySQL without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] 
 ... Success!

Normally, root should only be allowed to connect from 'localhost'.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] 
 ... Success!

By default, MySQL comes with a database named 'test' that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] 
 - Dropping test database...
 ... Success!
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] 
 ... Success!

Cleaning up...



All done!  If you've completed all of the above steps, your MySQL
installation should now be secure.

Thanks for using MySQL!
</pre>

   * Create the pakiti database
<pre class="rootscreen">
%UCL_PROMPT_ROOT% mysqladmin -u root -p create %MYSQL_DB%
</pre>
   * Fill the tables
<pre class="rootscreen">
%UCL_PROMPT_ROOT% mysql -u root -p %MYSQL_DB% < /usr/share/doc/pakiti-server-*/pakiti2.sql
</pre>
   * Create a Pakiti user
<pre class="rootscreen">
%UCL_PROMPT_ROOT% mysql -u root -p mysql
~ GRANT LOCK TABLES, SELECT,INSERT,UPDATE,DELETE ON %MYSQL_DB%.* TO  '%MYSQL_USER%'@'localhost' IDENTIFIED BY '%MYSQL_PASS%';
~ flush privileges;
~ quit;
</pre>
Of course, !MySQL user name and password are up to you.

---+++ Configure Apache
It is *strongly* recommended to use HTTPS and client authentication. One way of doing this is to create a /etc/httpd/conf.d/pakiti.conf containing:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% cp /usr/share/doc/pakiti-server-2.1.4/pakiti2.apache2 /etc/httpd/conf.d/pakiti.conf
%UCL_PROMPT_ROOT% cat /etc/httpd/conf.d/pakiti.conf

&lt;VirtualHost *:443&gt;

        SSLEngine on
        SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP
        SSLVerifyClient optional
        SSLVerifyDepth 2
        SSLOptions +StdEnvVars

        SSLCertificateKeyFile "/etc/grid-security/http/httpkey.pem"
        SSLCertificateFile "/etc/grid-security/http/httpcert.pem" 
        SSLCACertificatePath "/etc/grid-security/certificates/"

        # Configure servername and admin contact here if not already in httpd.conf
        #ServerName pakiti.server.com:443
        #ServerAdmin admin@admin.com

        DocumentRoot /var/lib/pakiti2/www/pakiti
        Alias /pakiti /var/lib/pakiti2/www/pakiti

        # Uncomment to have seperate log files for pakiti
        #ErrorLog /var/log/apache2/pakiti-error
        #CustomLog /var/log/apache2/pakiti-access common
        #CustomLog /var/log/apache2/ssl_request_pakiti_log ssl_combined

        Alias /feed "/var/lib/pakiti2/www/feed"
        &lt;Directory "/var/lib/pakiti2/www/feed"&gt;
                SSLRequireSSL
                Options +FollowSymLinks
                AllowOverride None
                Order allow,deny
                Allow from all
                DirectoryIndex index.php
        &lt;/Directory&gt;

        Alias /link "/var/lib/pakiti2/www/link"
        &lt;Directory "/var/lib/pakiti2/www/link"&gt;
                SSLRequireSSL
                Options +FollowSymLinks
                AllowOverride None
                Order allow,deny
                Allow from all
                DirectoryIndex index.php
        &lt;/Directory&gt;

        &lt;Directory "/var/lib/pakiti2/www/pakiti"&gt;
# Restrict access to this directory by your own auth mech
                SSLRequireSSL
                Options +FollowSymLinks
                AllowOverride None
                Order allow,deny
                Allow from all
                DirectoryIndex index.php
        &lt;/Directory&gt;

&lt;/VirtualHost&gt;

</pre>

   * If you are running !SElinux, then do:
<pre class="rootscreen">
%UCL_PROMPT_ROOT%  chcon -t httpd_sys_content_t /var/lib/pakiti2
%UCL_PROMPT_ROOT%  chcon -t httpd_sys_content_t /var/lib/pakiti2/www
%UCL_PROMPT_ROOT%  chcon -t httpd_sys_content_t /var/lib/pakiti2/www/feed
%UCL_PROMPT_ROOT%  chcon -t httpd_sys_content_t /var/lib/pakiti2/www/pakiti
%UCL_PROMPT_ROOT%  chcon -t httpd_sys_content_t /var/lib/pakiti2/www/pakiti/img
%UCL_PROMPT_ROOT%  chcon -t httpd_sys_content_t /var/lib/pakiti2/config
%UCL_PROMPT_ROOT%  chcon -t httpd_sys_content_t /var/lib/pakiti2/include 
</pre>

If you are using the default ssl.conf config file, you might see a warning like this:
<pre class="rootscreen">
[warn] _default_ VirtualHost overlap on port 443, the first has precedence
</pre>

Thats ok if there was not web pages/apps being served over port 443 previously. If there was, you should re-consider moving pakiti to another port.

---+++ Configure the Pakiti Server
The top level configuration of the Pakiti server must be changed in /etc/pakiti2/pakiti2-server.conf to reflect the !MySQL authentication information.
<pre class="rootscreen">
%UCL_PROMPT_ROOT% vi /etc/pakiti2/pakiti2-server.conf
# Configuration file for the Pakiti webinterface.

# Set the parameters for connecting to
# the Pakiti database.

[mysql]
hostname = localhost
dbname   = %MYSQL_DB%
username = %MYSQL_USER%
password = %MYSQL_PASS%

[webinterface]
# URL of your local Pakiti server
url = https://pakiti.server.com
title = My_Organization
</pre>

Edit the file /var/lib/pakiti2/config/config.php and add administrators' DN's to admin_dn's array

<pre class="rootscreen">
%UCL_PROMPT_ROOT% vi /var/lib/pakiti2/config/config.php
$admin_dns = array( "/DC=org/DC=doegrids/OU=People/CN=Kevin Hill 629678" )
</pre>

---+++ Configure firewall
If you are using iptables firewalls, create a rule to allow https (tcp port 443) inbound traffic.

---+++ Configure via web browser
Connect to your server via a web browser

Settings are devided into three sections:

---++++ !RedHat OVAL Definitions

Provide URLs to the OVAL definitions. Then you can select which one will be checked once a day for the updates. 
   * Add all OVAL definitions, including current year.
   * From the command line, anually run:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% cd /var/lib/pakiti2/scripts/
 %UCL_PROMPT_ROOT% /usr/bin/php process_oval_rh.php
</pre>
 to fill Pakiti database with information from all OVAL definitions
   * Afterwards you can uncheck "Check this source for updates" for prior year OVAL definitions.
 
   * Add RHEL/SL release numbers (currently 5 and 6 are supported by the vendors).

---++++ Os Group Definitions

This section can be configured after all of your host (or the majority of them) report to the Pakiti server. Each host will report its OS name to the Pakiti server and in this section you can define OS groups. OS groups are used for repository definitions. Groups contain both standard repos as well as security update repos, add-on repos, etc.

 
---++++ Repositories Definitions

On the bottom of the page, there is a from with fields:

Repository Name: Put some name here, e.g. SL58.
Architecture, select for which the repository is defined. Usually there will be i686 and x86_64.
URL: Put the full path to the file which contains the list of packages provided by the repository, e.g.: http://linuxsoft.cern.ch/cern/slc54/x86_64/yum/os/repodata/primary.xml.gz
Check "Contains Security Updates", if the repository contains security updates.
Select previously created Os group for which the repository is provided.
Above the form you can see the list of Oses which does not have assigned any repository. You should create corresponding Os groups and add to them these Oses, then you can add repositories for that Os groups.

---+++ Enable updates
<pre class="rootscreen">
%UCL_PROMPT_ROOT% chkconfig pakiti2 on
%UCL_PROMPT_ROOT% service pakiti2 start
</pre>

---++ Client Installation

---+++ Install OSG repo and certificate packages as appropriate
   * Documentation/Release3.InstallCertAuth

<!--
---+++ Install HTTP service cert if not previously done
   * Documentation/Release3.GetHostServiceCertificates
-->

---+++ Install rpm
<pre class="rootscreen">
%UCL_PROMPT_ROOT% yum --enablerepo osg-testing install pakiti-client
</pre>
---+++ Edit /etc/pakiti2/pakiti2-client.conf
   * Change servers_name to point to your server
   * Comment out the host_cert line, unless you want the clients to authenticate when reporting to the server. If you do, you will need to concatinate your host cert and key in one file and enter it on this line. Make sure its only readable by root! 

---+++ Enable client updates
<pre class="rootscreen">
%UCL_PROMPT_ROOT% chkconfig pakiti2-client on
%UCL_PROMPT_ROOT% service pakiti2-client start
</pre>

<!--
   * Set ALLOWTOPICVIEW = Main.GridGroup    
   * Set ALLOWTOPICCHANGE = Main.SecurityTeamGroup    
   * Set DENYTOPICVIEW = Main.TwikiGuest
-->

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = KevinHill

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA       = Security

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %NO%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = 
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################
-->

-- Main.KevinHill - 04 Oct 2012

%META:TOPICMOVED{by="KevinHill" date="1355340345" from="Security.PakitiInstallation" to="Documentation/Release3.PakitiInstallation"}%
