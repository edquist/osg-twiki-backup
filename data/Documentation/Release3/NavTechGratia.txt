%META:TOPICINFO{author="CarlEdquist" date="1395160562" format="1.1" version="1.12"}%
%DOC_STATUS_TABLE%

---+!! Gratia

Gratia is used for accounting of jobs and data transfers in OSG. There are individual _Gratia probes_ at sites that collect data as well as _Gratia services_ that collect data. Most sites send data directly to a central Gratia service, but sites can install a local Gratia service if they prefer. They can use the accounting data locally and also forward it to the central OSG Gratia service.

---+ Documents
   * [[https://twiki.grid.iu.edu/bin/view/Accounting/WebHome][Description of the Gratia project]]
   * [[TroubleshootingGratia][Troubleshooting Gratia]]
   * [[InstallGratiaService][Installing the Gratia Service]]
   * [[InstallGratiaReporting][Installing Gratia email reporting]]
   * [[http://gratiaweb.grid.iu.edu/][Gratia Web Graphs]]
   * [[http://display.grid.iu.edu/][Summary accounting data, based on Gratia]]

---++ Gratia Service
Installation and Troubleshooting of the Gratia Service (aka Collector)
   * [[InstallGratiaService][Installing the Gratia Service]]

---++ Gratia Probes
Currently, there are 15 probes that can report to Gratia. The probes could be subdivided into several major categories:
   1. __Local Batch System probe__. A probe specific to  to the type of site's batch system is running at each grid site. It collects information about finished jobs. Condor, Torque(PBS), LSF, SGE and Slurm Batch Systems are supported. The probes are installed with installation of a Compute Element.
   1. __Transfer Probes__. A probe collects information about the file transfers from/to Storage installed at each grid site. GridFTP, dCache, xrootd, hadoop transfer probes are supported. A probe is installed with installation of a Storage Element.
   1. __Storage Probes__.A probe gathers information about physical and logical pools utilization of a Storage installed at each grid site.   dCache, xrootd, hadoop storage probe are supported. A probe is installed with installation of a Storage Element.
   1. __Worker Node Probes__.The probes that  may be installed on a worker node are ps-acctounting probe and glexec probes. ps-accounting probe collects unix accounting information about finished processes ran by user. Glexec probe reports information about identity  of the user running jobs via glidein pilot. More information about glexec could be found [[InstallGlexec][here]].
Installation and setup of the Gratia probes

---++ specific probes documents
   * [[Accounting.ProbeConfigGlideinWMS][Gratia probe for HTCondor]]
   * [[Documentation/Release3.InstallGlideinWMSFrontend#Adding_Gratia_Accouting_and_a_Lo][Installing the HTCondor probe on a VO Frontend]]

<!-- CONTENT MANAGEMENT PROJECT

   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = AlainRoy

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = General

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (Scientist|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Navigation
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = AlainRoy
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
 
-->
