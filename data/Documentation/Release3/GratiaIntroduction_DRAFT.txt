%META:TOPICINFO{author="BrianLin" date="1479158385" format="1.1" reprev="1.2" version="1.2"}%
---+ Introduction to Gratia Accounting

%TOC{depth="3"}%

---++ About This Guide

---+!! Gratia
Gratia is used for accounting of jobs and data transfers in OSG. There are individual _Gratia probes_ at sites that collect data as well as _Gratia services_ that collect data. The data is sent to a _Gratia service_ (aka _Collector_), by default to the central Gratia service maintained by OSG, but
other local Gratia services can be installed, receive the data and optionally forward it also to the central one.

The information stored in Gratia can be accessed using web clients like the the [[http://display.grid.iu.edu/][OSG Display]] or [[http://gratiaweb.grid.iu.edu/][Gratia-Webtool]]. Otherwise you can subscribe to the regular [[Accounting.ReportsDescription][Email reports]].

   * If you are interested in *browsing the data* stored in Gratia, please check the links in in the previous paragraph or contact [[mailto:osg-accounting@opensciencegrid.org][Gratia oprerations]] if you have special needs.
   * If you are *installing/configuring Gratia probes or Gratia services*, please check the _Sysadmin Documents_ below for the components of your interest
   * If you are developing a probe or Gratia services then you may be interested in reading most of this document and the linked ones.

     <img src="%ATTACHURLPATH%/gratia-basics.png" alt="gratia-basics.png" width='400' height='139' />    

---+ Sysadmin Documents
This section gives a description of the Gratia system and presents documents to install, configure and troubleshoot components of the Gratia system.

---++ Gratia Probes
Currently, there are 15 probes that can report to Gratia. The probes could be subdivided into several major categories:
   1. __Local Batch System probe__. A probe specific to  to the type of site's batch system is running at each grid site. It collects information about finished jobs. Condor, Torque(PBS), LSF, SGE and Slurm Batch Systems are supported. The probes are installed with installation of a Compute Element.
   1. __Transfer Probes__. A probe collects information about the file transfers from/to Storage installed at each grid site. !GridFTP, !dCache, xrootd, hadoop transfer probes are supported. A probe is installed with installation of a Storage Element.
   1. __Storage Probes__.A probe gathers information about physical and logical pools utilization of a Storage installed at each grid site.   dCache, xrootd, hadoop storage probe are supported. A probe is installed with installation of a Storage Element.
   1. __Worker Node Probes__.The probes that  may be installed on a worker node are ps-acctounting probe and glexec probes. ps-accounting probe collects unix accounting information about finished processes ran by user. Glexec probe reports information about identity  of the user running jobs via glidein pilot. More information about glexec could be found [[InstallGlexec][here]].

---+ Gratia: The big picture

Gratia is software used in OSG to gather accounting information. The information is collected from individual resources at a site, such as a Compute Element or a Storage Element. The program that collects the data is called a "Gratia probe". The information is transfered to a Gratia server. Most sites will choose to send the accounting data to the central OSG Gratia server, but you can also use a Gratia server at your site (which can send forward the data to the central OSG Gratia server). Here is a diagram:

<img src="%ATTACHURLPATH%/gratia-basics.png" alt="gratia-basics.png" />    

These are the definitions of the major elements in the above figure.

   * *Gratia probe*: A piece of software that collects accounting data from the computer on which it's running, and transmits it to a Gratia server.
   * *Gratia server*: A server that collects Gratia accounting data from one or more sites and can share it with users via a web page. 
   * *Reporter*: A web service running on the Gratia server. Users can connect to the reporter via a web browser to explore the Gratia data.
   * *Collector*: A web service running on the Gratia server that collects data from one or more Gratia probes. Users do not directly interact with the collector.

You can see the OSG's Gratia reports at [[http://gratia-osg-prod-reports.opensciencegrid.org/gratia-reporting/][the central OSG Gratia server]].

You can see a fancier version of the Gratia data at [[http://display.grid.iu.edu/][display.grid.iu.edu]]. This is *not* running a Gratia collector, but is a separate service. 

---+ Overall process of how Gratia probes work

By and large, the Gratia probes share this common process for uploading data to a Gratia server. 

---++ Uploading data

When the cron jobs are enabled and run, the go through the following process, with minor changes between different Gratia probes:

   1. The probe is invoked. It reads its configuration from =/etc/gratia/%RED%PROBE-NAME%ENDCOLOR%/ProbeConfig=.
   1. It collects the accounting information from the underlying system. For example, the Condor probe will read it from the =PER_JOB_HISTORY_DIR=, which is usually =/var/lib/gratia/data=.
   1. It transforms the data into Gratia records and saves them into =/var/lib/gratia/tmp/gratiafiles/=
   1. When there are sufficient Gratia records, or when sufficient time has passed, it uploads sets of records in batches to the Gratia server, then removes them from the =gratiafiles= directory.
   1. All progress is logged to =/var/log/gratia=.
   1. If there are failures in uploading the files to the Gratia server
      1. Files are not removed from =gratiafiles= until they are successfully uploaded.
      1. Errors are logged to log files in =/var/log/gratia=.
      1. The uploads will be tried again later.
      1. %RED% TO DO: In some cases, failed transfers get moved somewhere else. No details, [todo] ask Brian%ENDCOLOR%

---# Identity Information
Job usage records collect the following information:
   * Local user - local (e.g. UNIX) user name
   * Local Group - local (e.g. UNIX) group name
   * Global user name 
   * VO name - Name of the virtual organization, as retrieved, e.g. FQDN string or "voi" string from =users-vo-mapfile=
   * Reportable VO name - Extracted name of the VO, e.g. the first name in the FQDN or "VOc" string from =users-vo-mapfile=
   * Common name (or Distinguished name, DN) - FQDN as present in the user certificate used for the job or as reconstructed form the VO

This information is retrieved via a series of functions, sometimes specific to a probe (e.g. the HTCondor probe), sometimes common to all probes (in =gratia-common=).
The mapping is affected by some configuration variables that affect which records are reported to Gratia, which are quarantined (stored in a directory for possible later processing) and which are discarded (without being reported to Gratia). These variables are (0, 1 correspond to false, true):
   * !SuppressNoDNRecords - discard records without a DN (in the final record - DNs in certinfo file are OK) [default: 0]
   * !SuppressGridLocalRecords - discard records from local users (users not coming via a Grid submission, e.g. GRAM or HTCondor-CE) [defaults: 0, was 1 for rel.<1.13.30]
   * !SuppressUnknownVORecords - discard records that have no VO [default: 0]
   * !QuarantineUnknownVORecords - quarantine records that have no VO [default: 0]
   * !MapUnknownToGroup - use the local user group (UNIX group name) as VO for records that have no VO otherwise established [default: 0]
   * !MapGroupToRole - add to the record DN "/LocalGroup=GROUP_NAME" using the local user group [default: 0]
   * !VOOverride - map all records to the specified VO (ignoring all other mappings) [default: NULL, no override]


---# How the identity information is determined

The main information used to attribute resources used or provided is the VO, available in 2 record entries: VOName (can be a complex string indicating the VO affiliation, Similar to the VO extension of a FQDN), and !ReportableVOName (contains only the VO name, as one of the names in OIM).
The keyword "Unknown" (case insensitive) is not a valid VO name.

If !VOOverride in the probe configuration file is set to some value, then both !VOName and !ReportableVOName will be set to that value in all records reported.

Some probes can extract this information from the job record. E.g. the HTCondor probe (condor_meter) uses the classads !x509UserProxyFirstFQAN and !x509UserProxyVOName respectively for the !VOName and !ReportableVOName.

A Gratia extension of the job managers (in =globus-gram-job-manager-scripts= and =gratia-probe-gram=) generates files mapping the jobs (job IDs) to the user credentials. These files are called certinfo files, are saved in the Gratia data direcotry (=/var/lib/gratia/data=) and contain a vo_info record where the DN of the x509 certificate used to submit the job is mapped to a VO. This information is used if the initial !VOName is not available or not a valid VO name.

If also the certinfo file is not providing a valid VOName then the !JobIdentity record from from the HTCondor_CE is attempted. 

If also that one is not available (e.g. you are not on a HTCondor_CE), then the =user-vo-mapfile= is used.
This file contains lines mapping local (UNIX) users to VO names (VOName) and lines defining valid VO names (voi) and the corresponding !ReportableVOName (VOC).

If everything else fails and !MapUnknownToGroup is set in the configuration file, then the local user group name is used as VO name and !ReportableVOName. 

If !MapGroupToRole is set and there is not already a valid FQDN associated with the job record, then the VOName is modified assigning a Local group part like: =="%s/LocalGroup=%s" % (vo_name, local_group_name)==


#ReferenceSection
---++ Reference

%META:FILEATTACHMENT{name="gratia-basics.png" attachment="gratia-basics.png" attr="h" comment="" date="1479158384" path="gratia-basics.png" size="28705" stream="gratia-basics.png" tmpFilename="/usr/tmp/CGItemp44201" user="BrianLin" version="1"}%
%META:TOPICMOVED{by="BrianLin" date="1478905155" from="Documentation/Release3.GratiaIntroduction" to="Documentation/Release3.GratiaIntroduction_DRAFT"}%
