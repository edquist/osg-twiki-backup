%META:TOPICINFO{author="RohanMathure" date="1349319559" format="1.1" reprev="1.4" version="1.4"}%
---+!! OSG Operations / Grid Operations Center at Indiana University 

%STARTINCLUDE%
<table width="100%" border="0"> 
<tbody>
 <tr>
  <td width="30%"valign="top">%TOC% </td> 
  <td width="10%"></td>
  <td width="25%" valign="center">
   <table border="1" cellpadding="1" cellspacing="0" >
    <tr>
     <td>
      
<table border="0" cellpadding="3" cellspacing="2">
        <tr>
         <td><h4>[[http://myosg.grid.iu.edu/miscstatus?count_sg_1&count_active=on&count_enabled=on&datasource=status][Operations Service Overview]]</h4>
         </td>
        </tr>
        <tr>
         <td><h4>Contact OSG Operations</h4>
 - [[http://ticket.grid.iu.edu][Open a ticket]]<br/>
 - Email: goc [at] opensciencegrid.org <br/>
 - Mailing list: osg-operations [at] opensciencegrid dot org<br/>
 - Phone: (800) 940-6112 or (812) 856-3600<br/>
- Participant PIN: 001174#
 - [[https://oim.grid.iu.edu][Register with OSG]]<br/>
 - Follow us on Twitter: @OSGGOC
         </td>
        </tr>
     </table>
      <table border="0" cellpadding="3" cellspacing="3">
        <tr>
          <td><h4>Weekly Teleconference</h4>
 - Every Tuesday, 2.00pm Central<br/>
 - Phone: +1-866-740-1260, code 8266135<br/>
 - [[ProductionMeetingMinutes][Meeting Minutes]]<br/>
<div><!-- - [[GOCServiceUpdate033010][Upcoming Service Upgrade]] --> </div>
        </td>
        </tr>
      </table>
     </td>
     </tr>
    </table>
  </td> 
  <td width="20%"></td>
</tr>
</tbody>
</table> 




---++ OSGPKIClients Manual
---+++ User Documentation

The scripts are tested to work on python environment 2.4 or higher. 

The scripts have two modes of execution.
First is the normal mode of execution, where the user invokes the scripts with the parameters specified below. In this mode he connects to the production server and requests from the productions OIM server.
In the second mode, the user provides a '-T' parameter where the user connects to the OIM-ITB server which is the test server and all his requests are handled at the test server.

---++++ OSG Cert Request

 Request a host certificate for registered users. 

This script:
   * Generates a new host private key and CSR
   * Only important part of CSR is CN=<hostname> component
   * Saves the host private key to disk (as specified by the user)
   * Prompts the user for their private key pass phrase
   * Authenticates to OIM and posts the CSR as a request to OIM
   * Returns the request Id to the user

*Inputs:*
   * fully-qualified hostname
   * filename to store private key [Optional, default is ./hostkey.pem]
   * path to user's certificate [Optional, default is path specified by
    $X509_USER_CERT environment variable, ~/.globus/usercert.pem]
   * path to user's private key [Optional, default is path specified by
    $X509_USER_KEY environment variable, ~/.globus/userkey.pem]
   * Passphrase for user's private key via non-echoing prompt.

*Outputs:*
   * Private key, to filename specified or ./hostkey.pem
   * Request Id, to stdout

*Usage*: osg-cert-request [options]
<verbatim>
*Options*:

  -h, --help            show this help message and exit
  -c CSR, --csr=CSR     Specify CSR name (default = gennew.csr)
  -k PRIKEY, --key=PRIKEY
                        Specify Private Key Name (default=genprivate.key)
  -o Output Keyfile, --outkeyfile=Output Keyfile
                        Specify the output filename for the retrieved user
                        certificate.  Default is ./hostkey.pem
  -t CN, --hostname=CN  Specify hostname for CSR (FQDN)
  -e EMAIL, --email=EMAIL
                        Email address to receive certificate
  -n NAME, --name=NAME  Name of user receiving certificate
  -p PHONE, --phone=PHONE
                        Phone number of user receiving certificate
  -T, --test            Run in test mode
  -q, --quiet           don't print status messages to stdout

</verbatim>

*e.g:* python osg-cert-request -t hostname.domain.com -e emailaddress@domain.com -n "Your Name" -p 9999999999

---++++ OSG Cert Retrieve

Retrieve a certificate (host or user) from OIM given a request Id. Since certificates are public, it does not authenticate to OIM. The user needs to have a pre approved certificate for this script to retrieve the requested certificate.

This script:
   * Accepts a request Id from the user
   * Connects to OIM and requests the certificate identified by the request id
   * Write the certificate to disk (as specified by the user)

*Inputs:*
   * Request Id
   * Filename to store certificate [Optional, default is ./hostcert.pem]

*Outputs:*
   * Host certificate as PEM, to filename specified or ./hostcert.pem

*Usage*:osg-cert-retrieve -h/--help [for detailed explanations of options]
<verbatim>
Options:
  -h, --help            show this help message and exit
  -i ID, --id=ID        Specify ID# of certificate to retrieve[Required]
  -o ID, --certfile=ID  Specify the output filename for the retrieved user
                        certificate . Default is ./hostcert.pem
  -T, --test            Run in test mode
  -q, --quiet           don't print status messages to stdout

</verbatim>
*e.g.* python osg-cert-retrieve -i 555

---++++ OSG GridAdmin Cert Request

Request and retrieve mutliple host certificates from OIM. Authenticates to OIM and is only for use by Grid Admins for certificates they are authorized to vet.
The certificates when requested are stored with the format of hostname-requestid.pem (i.e. the id generated from the request for the certificate)
The key is generated as hostname-serial number for that hostname.

This script does the following in the process of acquiring certificates for the hostnames specified:
   * Reads a list of fully-qualified hostnames from a file specified by the user.
   * For reach hostname:
   * Generates a new private key and CSR
   * Only important part of CSR is CN=<hostname> component
   * Writes the private key to a file with filename:
       <prefix>/<hostname>-key.pem
   * Prompts the user for their private key pass phrase
   * Pass phrase is cached so user is not re-prompted
   * Authenticates to OIM and posts the CSRs as a single request to OIM
   * Request id is returned and subsequently used
   * Authenticates to OIM and approves the request
   * Waits one minute for request to be processed by OIM
   * Connects to OIM and attempts to retrieve certificates
   * Writes out any certificates it retrieves with filename
        of <prefix>/<hostname>-<red-id>.pem
   * if all certificates have been retrieved, exits loop
   * Wait 5 seconds and repeat.

*Inputs:*
   * filename of list of hostnames
   * prefix path in which to write private keys and certificares [default: .]
   * path to user's certificate [Optional, default is path specified by
    $X509_USER_CERT environment variable, ~/.globus/usercert.pem]
   * path to user's private key [Optional, default is path specified by
    $X509_USER_KEY environment variable, ~/.globus/userkey.pem]
   * Passphrase for user's private key via non-echoing prompt.

*Outputs:*
   * N host certificates in PEM format
   * N private keys in PEM format

*Usage*:osg-gridadmin-cert-request -h/--help [for detailed explanations of options]

<verbatim>

*Options*:
  -h, --help            show this help message and exit
  -k PKEY, --pkey=PKEY  Specify Requestor's private key (PEM Format).  If not
                        specified will take the value of X509_USER_KEY or
                        $HOME/.globus/userkey.pem
  -c CERT, --cert=CERT  Specify Requestor's certificate (PEM Format).  If not
                        specified will take the value of X509_USER_CERT or
                        $HOME/.globus/usercert.pem
  -T, --test            Run in test mode
  -q, --quiet           don't print status messages to stdout

*Hostname Options*:
    Use either of these options.     Specify hostname as a single hostname
    using -H/--hostname     or specify from a file using -f/--hostfile.

    -H HOSTNAME, --hostname=HOSTNAME
                        Specify the hostname or service/hostname for which you
                        want to request the certificate for.  If specified
                        -f/--hostfile will be ignored
    -f HOSTFILE, --hostfile=HOSTFILE
                        Filename with one hostname or service/hostname per
                        line
</verbatim>

*e.g.* 
   * python osg-gridadmin-cert-request -f filename -k privatekeyfile -c certificatefile
   * python osg-gridadmin-cert-request -H hostname.domain.com -k privatekeyfile -ccertificatefile


