%META:TOPICINFO{author="MarianZvada" date="1463697369" format="1.1" version="1.13"}%
<style type="text/css">
code em, pre em { color: red; font-weight: normal; font-style: normal; }
</style>

---+ Installing and Using !StashCache

%TOC{depth="3"}%

---++ About This Guide

This document describes how to install a !StashCache cache, a server that caches files locally rather than serving files to the !StashCache federation. The installation utilizes !XRootD and HTCondor for file storage and monitoring, respectively.

---++ Before Starting

Before starting the installation process, consider the following points:

   * *User IDs:* If they do not exist already, the installation will create the Linux user IDs =condor= and =xrootd=
   * *Service certificate:* The !StashCache service uses a host certificate at =/etc/grid-security/host*.pem=
   * *Network ports:* The !StashCache service must talk to the central collector on port 9619 (TCP) and !XRootD services on port 1094 (TCP)
   * *Hardware requirements:* We recommend that a !StashCache server has at least 10Gbps connectivity, 1TB of disk space, and 8GB of RAM.

As with all OSG software installations, there are some one-time steps to prepare in advance:

   * Ensure the host has [[SupportedOperatingSystems][a supported operating system]]
   * Obtain root access to the host
   * Prepare [[YumRepositories][the required Yum repositories]]
   * Install [[InstallCertAuth][CA certificates]]


---++ Installing the !StashCache metapackage

The !StashCache daemon consists of an !XRootD server and an HTCondor-based service for collecting and reporting statistics about the cache. To simplify installation, OSG provides convenience RPMs that install all required software with a single command:

<ol>
%INCLUDE{"Documentation/Release3/OSGReleaseSeries" section="Update"}%
  <li>
    <p>Install the !StashCache metapackage from OSG3.3 repository:</p>
    <pre class="rootscreen">%UCL_PROMPT_ROOT% yum install stashcache-daemon fetch-crl <stashcache-cache-server || stashcache-origin-server></pre>
  </li>
  <li>
    <p>Mount the disk that will be used for the cache to =/stash= and set owner of the directory to =xrootd= user.
  </li>
</ol>

---++ Configuring !StashCache

The following section describes required configuration to have a functional !StashCache cache. !StashCache packages need to be manually configured from pre-existing !xrootd configuration.

---+++ Origin server
Assuming that the origin server connects only to a redirector (not directly to cache server), minimal xrootd configuration is required. The configuration file, =/etc/xrootd/xrootd-stashcache-origin-server.cfg=, in this release is overkill. Here are recommended settings to use: \
<pre class="file">
all.export /
set localroot = /stash
xrd.port 1094
all.role server
all.manager redirector.osgstorage.org+ 1213
oss.localroot $(localroot)
xrootd.trace emsg login stall redirect
ofs.trace none
xrd.trace conn
cms.trace all
sec.protocol  host
sec.protbind  * none
all.adminpath /var/spool/xrootd
all.pidpath /var/run/xrootd
</pre>
      
---+++ Cache server
One needs to declare =pss.origin redirector.osgstorage.org:1024= instead of configuring the role manger (only the xrootd daemon, role server, is required on the cache server). Example of the configuration of cache server is as follows:
<pre class="file">
all.export  /
set cachedir = /stash
xrd.allow host *
sec.protocol  host
sec.protbind  * none
all.adminpath /var/spool/xrootd
all.pidpath /var/run/xrootd

xrootd.trace emsg login stall redirect
ofs.trace all
xrd.trace all
cms.trace all

pss.trace all

ofs.osslib  libXrdPss.so
#This is using access to data in the stash federation via redirector
pss.origin  redirector.osgstorage.org:1094
pss.cachelib libXrdFileCache.so

oss.localroot $(cachedir)

pfc.cachedir  $(cachedir)
pfc.nramprefetch 4
pfc.nramread 4
</pre>

---+++ Common sysconfig/xrootd configuration
In both cases (origin and cach server), administrator needs to set the path of custom configuration file for its xrootd/cmds instance in =/etc/sysconfig/xrootd=. For example, for origin server change the cmds default from: \
<pre class="file">
CMSD_DEFAULT_OPTIONS="-l /var/log/xrootd/cmsd.log -c /etc/xrootd/xrootd-clustered.cfg -k fifo"
</pre> \
to \
<pre class="file">
CMSD_DEFAULT_OPTIONS="-l /var/log/xrootd/cmsd.log -c <span style="background-color: #FFCCFF;">/etc/xrootd/xrootd-stashcache-origin-server.cfg</span> -k fifo" 
</pre>

And, modify =XROOTD_DEFAULT_OPTIONS= in the !XRootD system configuration, =/etc/sysconfig/xrootd=, so that it uses the configuration file provided by the =stashcache-cache-server= package: 

<pre class="file">
XROOTD_DEFAULT_OPTIONS="-l /var/log/xrootd/xrootd.log -c <span style="background-color: #FFCCFF;">/etc/xrootd/xrootd-stashcache-cache-server.cfg</span> -k fifo"
</pre>

#OptionalConfiguration
---++ Optional configuration

The following configuration is not required to have a functional !StashCache cache, recommended, though. The default configuration should be sufficient so you should make changes to the configuration only if you have specific reasons to do so.

---+++ Adjust disk utilization
To adjust the disk utilization of your !StashCache cache, modify the values of =pfc.diskusage= in =/etc/xrootd/xrootd-stashcache-cache-server.cfg=:
<pre class="file">
pfc.diskusage <span style="background-color: #FFCCFF;">0.98 .99</span>
</pre>
The first value and second values correspond to the low and high usage watermarks, respectively, in percentages. When the high watermark is reached, the !XRootD service will automatically purge cache objects down to the low watermark. 

---+++ Export HTTP on !StashCache machine
There is possiblity to export via the HTTP protocol on the StashCache machines. One can enable adding following configuration line to =/etc/xrootd/xrootd-stashcache-cache-server.cfg= and bounce the service.
<pre class="file">
xrd.protocol http:8000 libXrdHttp.so
</pre>
%NOTE% Port 8000 must be open to public.

---+++ Sending monitoring information
We're testing Kibana based monitoring which collects xrootd information via UDP packets. It's recommended each xrootd server sets the following in the config:
<pre class="file">
all.sitename SiteName # e.g. all.sitename Nebraska
xrd.report uct2-collectd.mwt2.org:9931
xrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930
</pre>

---++ Using !StashCache

---+++ Managing !StashCache and associated services
Ensure that your =/stash= disk is mounted, and then start the =fetch-crl= and =condor= service:

%TABLE{sort="off"}%
| *Software* | *Service name* | *Notes* |
| Fetch CRL | On EL 6: =fetch-crl-boot= and =fetch-crl-cron= %BR% On EL 5: =fetch-crl3-boot= and =fetch-crl3-cron= | See [[InstallCertAuth#Start_Stop_fetch_crl_A_quick_gui][CA documentation]] for more info |
| HTCondor | =condor= | for the sending !StashCache stats to GOC htcondor collector |
| !XRootD | =xrootd= | for the cache server and origin |
| !XRootD | =cmsd= | for the origin only become data server in the Stash Federation |

Start the services in the order listed and stop them in reverse order. As a reminder, here are common service commands (all run as =root=):

%TABLE{sort="off"}%
| *To &hellip;* | *Run the command &hellip;* |
| Start a service | =service <em>SERVICE-NAME</em> start= |
| Stop a service | =service <em>SERVICE-NAME</em> stop= |
| Enable a service to start during boot | =chkconfig <em>SERVICE-NAME</em> on= |
| Disable a service from starting during boot | =chkconfig <em>SERVICE-NAME</em> off= |

---+++ Validating !StashCache

To verify that your cache is being monitored properly, run the following command:

<pre class="screen">
%UCL_PROMPT% condor_status -any -l -const "Name==\"xrootd@`hostname`\""
</pre>

Where <span style="background-color: #D1CAF2;">hostname</span> is the string returned by the =hostname= command. The output of the above command should provide an HTCondor !ClassAd that details the status of your cache.

---++ Registering StashCache and Monitoring

---+++ Monitoring resources
To join in on the monitoring you'll need to [[https://twiki.grid.iu.edu/bin/view/Documentation/Release3/InstallStashCache#Registering_cache_proxy][Register your resource]] and send me some information about your cache instructions in the [[https://twiki.grid.iu.edu/bin/view/Documentation/Release3/InstallStashCache#Configuring_resource_monitoring][Configuring resource monitoring]].

You can see the current state of affairs here:
   * *Status history*: [[http://tinyurl.com/pwz7tw2][link]]
   * *Status details*: [[http://myosg.grid.iu.edu/rgcurrentstatus/index?datasource=currentstatus&rg=on&rg_433=on&end_type=now&active=on&active_value=1][link]] (click on the "+" sign for more detail)
   * *Availability metrics*: [[http://tinyurl.com/qx6wgq7][link]]

---+++ Registering cache proxy
To register a cache instance go [[https://oim.grid.iu.edu/oim/resourceedit][here]] (with a cert in your browser). Fill in the required fields, example is displayed below:
 
   * Registering !StashCache resource information: <br />
      * the site *must be* OSG-GOC <br />
      * the resource group *must be* Monitored Caches <br />
     <img src="%ATTACHURLPATH%/resource-info.png" alt="resource-info.png" width='500' height='408' />    

   * Registering !StashCache resource services: <br />
      * the service *must be* !XRootD component <br />
     <img src="%ATTACHURLPATH%/resource-services.png" alt="resource-services.png" width='500' height='330' />    

Contact Information (will be pre-filled, add or modify as you see fit) - there are several types of contact, administrative and security are the most important to the GOC - <em>DO NOT</em> check the WLCG resource box; Add a Update comment if you'd like.
 
   * Confirming and submitting !StashCache resource registration: <br />
      * you *must* click the "Acceptable Use Policy" checkbox <br />
     <img src="%ATTACHURLPATH%/resource-confirm.png" alt="resource-confirm.png" width='500' height='335' />  

Hit the *blue* submit button.

---+++ Configuring resource monitoring
E.g. for the Indiana instance the status of the following command is checked:
=xrdcp root://redirector.osgstorage.org//stash/user/test.1M /tmp/dump=

If the return status is zero, the cache is working, otherwise it is not. What we need from you is:
   * the equivalent =//stash/user/test.1M= a file you select that will always be there.

---++ Getting Help

To get assistance, please use the [[Documentation.HelpProcedure][this page]].  

%META:FILEATTACHMENT{name="resource-info.png" attachment="resource-info.png" attr="h" comment="Registering StashCache resource information" date="1441837226" path="resource-info.png" size="95718" stream="resource-info.png" tmpFilename="/usr/tmp/CGItemp44915" user="MarianZvada" version="1"}%
%META:FILEATTACHMENT{name="resource-services.png" attachment="resource-services.png" attr="h" comment="Registering StashCache resource services" date="1441837287" path="resource-services.png" size="60582" stream="resource-services.png" tmpFilename="/usr/tmp/CGItemp44801" user="MarianZvada" version="1"}%
%META:FILEATTACHMENT{name="resource-confirm.png" attachment="resource-confirm.png" attr="h" comment="Registering StashCache resource confirmation" date="1441838450" path="resource-confirm.png" size="71779" stream="resource-confirm.png" tmpFilename="/usr/tmp/CGItemp44879" user="MarianZvada" version="1"}%
%META:TOPICMOVED{by="MarianZvada" date="1441825821" from="Main.LBStashCache" to="Documentation/Release3.InstallStashCache"}%
