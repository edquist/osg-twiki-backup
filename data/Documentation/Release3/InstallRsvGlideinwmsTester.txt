%META:TOPICINFO{author="EdgarMauricioFajardoHernandez" date="1472772260" format="1.1" reprev="1.5" version="1.5"}%
*TODO:*
   * <strike>Write useful comments in /etc/rsv/metrics/org.osg.local-gfactory-site-querying-local.conf</strike>
   * How often will the probes run?
      * The main probe that queries the factory runs every 30 min
      * The probes will run every hour (although this can be modified)
   * <strike>How to view results?</strike>
   * What to do if results are not perfect? Contact Edgar of course :)
      * Contact Factory Ops (osg-gfactory-support@physics.ucsd.edu) about the non working site




<style type="text/css">
code strong, pre strong { color: red; font-weight: normal; font-style: normal; }
pre[class="rootscreen"] em { background-color: #FFFF00; font-weight: normal; font-style: normal; }
pre[class="file"] em { background-color: #FFCCFF; font-weight: normal; font-style: normal; }
</style>


---+ Installing and Using the RSV !GlideinWMS Tester

%TOC{depth="3"}%


---++ About This Guide

The RSV !GlideinWMS Tester (or _Tester_, in this document) is a tool that a VO front-end administrator can use to test remote sites for the ability to run the VO&rsquo;s jobs. It is particularly useful when setting up a VO for the first time or when changing the sites at which a VO&rsquo;s jobs can run. For a site to pass the test, it must successfully run a simple test job via the normal !GlideinWMS mechanisms, in much the same way as a real VO job.

Use this page to learn how to install, configure, and use the Tester for your VO front-end.


---++ Before Starting

Before starting the installation process, consider the following points (consulting [[#ReferenceSection][the Reference section below]] as needed):

   * *Software:* You must have [[InstallGlideinWMSFrontend][a GlideinWMS Front-end]] installed
   * *Configuration:* The !GlideinWMS Front-end must be configured to have at least one group that matches pilots to sites using DESIRED_SITES, and to support the is_itb user job attribute
   * *Host choice:* The Tester should be installed on its own host; a small Virtual Machine (VM) is ideal
   * *Service certificate:* The Tester requires a host certificate at =/etc/grid-security/host*.pem=
   * *Network ports:* Test jobs must be able to contact HTCondor on ports 9615 (TCP), and you must be able to contact a web server on port 80 (TCP) to view test results

As with all OSG software installations, there are some one-time (per host) steps to prepare in advance:

   * Ensure the host has [[SupportedOperatingSystems][a supported operating system]]
   * Obtain root access to the host
   * Prepare [[YumRepositories][the required Yum repositories]]
   * Install [[InstallCertAuth][CA certificates]]


---++ Installing the Tester

The Tester software takes advantage of several other OSG software components, so the installation will add OSG&rsquo;s site validation system (RSV) and the !GlideinWMS pilot submission software if not present already.

<ol>
  <li>
    <p>Install the software:</p>
    <pre class="rootscreen">%UCL_PROMPT_ROOT% yum install rsv-gwms-tester</pre>
  </li>
</ol>


---++ Configuring the Tester

Before you use the Tester, there are some one-time configuration steps to complete.

   1. <p>Configure the Tester for the VOs that your Front-end supports</p>\
      <p>Edit the file <code>/etc/rsv/metrics/org.osg.local-gfactory-site-querying-local.conf</code>. The =constraint= line is an HTCondor !ClassAd expression containing one =stringListMember= function per VO that your Front-end supports. If there is more than one VO, the function invocations are joined by the “logical or” operator, =||=. Edit the =constraint= line for your Front-end.</p>\
      <p>For example, for a single VO named <code>Foo</code>, the line would be:</p>\
      <pre class="file">constraint = stringListMember("Foo", GLIDEIN_Supported_VOs)</pre>\
      <p>For two VOs named =Foo= and =Bar=, the line would be:</p>\
      <pre class="file">constraint = stringListMember("Foo", GLIDEIN_Supported_VOs) || stringListMember("Bar", GLIDEIN_Supported_VOs)</pre>\
      <p>Do not change the other settings in this file, unless you have clear and specific reasons to do so.</p>
   1. <p>Authorize your central manager to connect to this scheduler:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% glidecondor_addDN -allow-others -daemon '<em>your_comment</em>' '<em>/the/central/manager/DN</em>' condor</pre> for example:  <pre class="rootscreen">%UCL_PROMPT_ROOT% glidecondor_addDN -allow-others -daemon 'The central manager DN at UCSD' '/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=osg-ligo-1.t2.ucsd.edu' condor </pre>
   1. <p>Configure the special HTCondor-RSV instance with your host IP address</p>\
      <p>Create the new file =/etc/condor-cron/config.d/98_public_interface.config= with this content:</p>\
      <pre class="file">NETWORK_INTERFACE = <em>ADDRESS</em>
CONDOR_HOST = <em>your_glidein_pool_central_manager</em>
</pre>\
      <p>Where =ADDRESS= is the IP address of your Tester host</p>
   1. <p>Enable and activate the Tester&rsquo;s RSV probe:</p>\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% rsv-control --enable org.osg.local-gfactory-site-querying-local --host <em>ADDRESS</em>
%UCL_PROMPT_ROOT% rsv-control --on org.osg.local-gfactory-site-querying-local --host <em>ADDRESS</em></pre>\
      <p>Where =ADDRESS= is the IP address of your Tester host</p>


---++ Using the Tester

There are at least two aspects of using the Tester:

   * Managing the services that are associated with the Tester software
   * Viewing results from the Tester

---+++ Managing Tester services

Because the Tester is built on other OSG software, there are a number of services in your installation. The specific services are:

%TABLE{sort="off"}%
| *Software* | *Service name* | *Notes* |
| Apache HTTP Server | =httpd= | Web server for results |
| HTCondor-Cron | =condor-cron= | cron-like jobs in HTCondor |
| RSV | =rsv= | OSG site validator |

Start the services in the order listed and stop them in reverse order. As a reminder, here are common service commands (all run as =root=):

%TABLE{sort="off"}%
| *To &hellip;* | *Run the command &hellip;* |
| Start a service | =service <em>SERVICE-NAME</em> start= |
| Stop a service | =service <em>SERVICE-NAME</em> stop= |
| Enable a service to start during boot | =chkconfig <em>SERVICE-NAME</em> on= |
| Disable a service from starting during boot | =chkconfig <em>SERVICE-NAME</em> off= |

---+++ Viewing Results

Connect to =https://<em>HOSTNAME</em>/rsv/= to see the results of the probes.


Once the installation and configuration are finished. Results can be seen in two ways. First connect to =https://<em>HOSTNAME</em>/rsv/= to see the results of the probes. And a similar output as this one should be encountered:

* RSV-GWMS-tester web page output: <br />
     <img src="%ATTACHURLPATH%/Screen_Shot_2016-09-01_at_3.46.19_PM.png" alt="Screen_Shot_2016-09-01_at_3.46.19_PM.png" width='1225' height='664' />    



Second to check the main probe is working this command can be run:
<pre class="rootscreen">%UCL_PROMPT_ROOT% rsv-control --run org.osg.local-gfactory-site-querying-local --host ADDRESS</pre>
And a similar output as this should be seen:

<verbatim>

Running metric org.osg.local-gfactory-site-querying-local:

metricName: org.osg.local-gfactory-site-querying-local
metricType: status
timestamp: 2016-09-01 15:41:39 PDT
metricStatus: OK
serviceType: Local-Gfactory
serviceURI: cabinet-10-10-4.t2.ucsd.edu
gatheredAt: cabinet-10-10-4.t2.ucsd.edu
summaryData: OK
detailsData: OK: Everything OK
2016-09-01T22:41:39Z
MSG: constraint for factory querying: MyType=?="glidefactory" && stringListMember("LIGO",GLIDEIN_Supported_VOs) || stringListMember("VIRGO",GLIDEIN_Supported_VOs)
MSG: Gfactory queried: glidein-itb.grid.iu.edu
MSG: Proccesing metric: org.osg.general.dummy-vanilla-probe
MSG: Getting list of enabled nodes
MSG: Calculating list of enabled and disabled nodes
MSG: Enabling nodes [] 
MSG: Disabling nodes [] 
MSG: Updating configuration for host CCIN2P3
MSG: Updating configuration for host CA-SCINET-T2
MSG: Updating configuration for host MIT
MSG: Updating configuration for host LIGO-LA
MSG: Updating configuration for host Wisconsin
MSG: Updating configuration for host Michigan
MSG: Updating configuration for host NIKHEF
MSG: Updating configuration for host GATech
MSG: Updating configuration for host FNAL
MSG: Updating configuration for host MWT2
MSG: Updating configuration for host CNAF
MSG: Updating configuration for host Omaha
MSG: Updating configuration for host Purdue
MSG: Updating configuration for host Stampede
MSG: Updating configuration for host Nebraska
MSG: Updating configuration for host BNL
MSG: Updating configuration for host SU-OG
MSG: Updating configuration for host FNAL_GPGrid
MSG: Updating configuration for host PL_CAMK-CYFRONET
MSG: Updating configuration for host HOSTED_BOSCO_CE
MSG: Updating configuration for host UCSD
MSG: Updating configuration for host UChicago

EOT

</verbatim>



---++ Getting Help

To get assistance, please use the [[Documentation.HelpProcedure][this page]].


---++ Reference

---+++ Certificates

%STARTSECTION{"Certificates"}%
| *Certificate* | *User that owns certificate* | *Path to certificate* |
| Host certificate | =root= | =/etc/grid-security/hostcert.pem= <br> =/etc/grid-security/hostkey.pem= |

Find instructions to request a host certificate [[Documentation/Release3.GetHostServiceCertificates][here]].
%ENDSECTION{"Certificates"}%

---+++ Networking

%STARTSECTION{"Firewalls"}%
%INCLUDE{"FirewallInformation" section="FirewallTable" lines="condorscheddshared,rsvin"}%

%ENDSECTION{"Firewalls"}%

   

%META:FILEATTACHMENT{name="Screen_Shot_2016-09-01_at_3.46.19_PM.png" attachment="Screen_Shot_2016-09-01_at_3.46.19_PM.png" attr="" comment="RSV-GWMS-tester web page output" date="1472770147" path="Screen Shot 2016-09-01 at 3.46.19 PM.png" size="170143" stream="Screen Shot 2016-09-01 at 3.46.19 PM.png" tmpFilename="/usr/tmp/CGItemp14173" user="EdgarMauricioFajardoHernandez" version="1"}%
