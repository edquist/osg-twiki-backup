%META:TOPICINFO{author="TimCartwright" date="1453398612" format="1.1" reprev="1.4" version="1.4"}%
---+ Troubleshooting Guide for Yum Repository Scripts

%TOC{depth="3"}%

---++ About This Guide

The =repo1.grid.iu.edu= and =repo2.grid.iu.edu= hosts contain the OSG Yum software repositories plus related services and tools. In particular, the =mash= software is used to download RPMs from where they are built (at the University of Wisconsin–Madison), and there are some associated scripts to configure and invoke =mash= periodically. Use this guide to monitor the =mash= system for problems and to perform basic troubleshooting when such problems arise.

---++ Monitoring 

To monitor the repository hosts for proper =mash= operation, do the following steps on each host:

   1. Access http://repo1.grid.iu.edu/web/log/ or http://repo2.grid.iu.edu/web/log/ to view logs from =mash= updates
   1. Examine the “Last modified” timestamp of all of the =update_repo.*.log= files\
       <p><strong>Note:</strong> The timestamps are displayed in UTC, so convert to local time accordingly</p>
   1. If the timestamps are all less than 2 hours old, life is good and you can skip the remaining steps below
   1. Otherwise, examine the “Last modified” timestamp of the =update_all_repos.err= file
   1. If the =update_all_repos.err= timestamp is current, there may be a =mash= process that is hung; see the Troubleshooting steps below
   1. If *all* timestamps are more than 6 hours old, something may be wrong with cron or its mash entries:
      1. If possible, verify that cron is running and that the cron entries for mash are still present; if not, try to restore things
      1. Otherwise, create a GOC ticket with a subject like “Repo update logs are too old on repo<strong>N</strong>” and with relevant details in the body
      1. Assign the ticket to “Software Support (Triage)”
      1. Email Carl Edquist <edquist@cs.wisc.edu> and CC Tim Cartwright <cat@cs.wisc.edu> with the ticket URL

---++ Troubleshooting and Mitigation

<style type="text/css">
  em.pgid { color: red; font-weight: bold; }
  em.start { color: blue; font-weight: bold; }
</style>

---+++ Identifying and fixing a hung mash process

If a mash update process hangs, all future invocations from cron of the mash scripts will exit without taking action because of the hung process. Thus, it is important to identify and remove any hung processes so that future updates can proceed. Use the procedure below to remove any hung mash processes; doing so is safe in that it will not adversely affect the Yum repositories being served from the host.

   1. On the web listing of log files (see above), click on the =update_all_repos.err= link
   1. In the error log file, look for messages such as:\
       <pre class="file">Wed Jan 20 18:10:02 UTC 2016: <strong>Can't acquire lock, is update_all_repos.sh already running?</strong></pre>\
       <p>This message indicates that the most recent update attempt quit early due to the presence of a lock file, most likely from a hung =mash= process.</p>
   1. Log on to the host as =root= or with your regular user account
   1. Look for =mash= processes:\
       <pre class="rootscreen"># <strong>ps -C mash -o pid,ppid,pgid,start,command</strong>
  PID  PPID  <em class="pgid">PGID</em>  <em class="start">STARTED</em> COMMAND
24551 24549 <em class="pgid">23455</em>   <em class="start">Jan 15</em> /usr/bin/python /usr/bin/mash osg-3.1-el5-release -o
24552 24551 <em class="pgid">23455</em>   <em class="start">Jan 15</em> /usr/bin/python /usr/bin/mash osg-3.1-el5-release -o
</pre>
   1. If there are =mash= processes that started on a previous date or more than 2 hours ago, it is best to remove their corresponding process groups (PGID, highlighted above):\
       <p><strong>Note:</strong> You must have =root= privileges or prefix the =kill= command with =sudo=.</p>
       <pre class="rootscreen"># <strong>kill -TERM -<em class="pgid">23455</em></strong></pre>\
       <p>Then verify that the old processes are gone using the same =ps= command as above:\
       <pre class="rootscreen"># <strong>ps -C mash -o pid,ppid,pgid,start,command</strong>
  PID  PPID  PGID  STARTED COMMAND
#</pre>
   1. If any part of this process does not look or work as expected:
      1. Create a GOC ticket with a subject like “Problems with mash on repo<strong>N</strong>” and with relevant details in the body
      1. Assign the ticket to “Software Support (Triage)”
      1. Email Carl Edquist <edquist@cs.wisc.edu> and CC Tim Cartwright <cat@cs.wisc.edu> with the ticket URL
