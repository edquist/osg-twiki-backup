%META:TOPICINFO{author="JoseCaballero" date="1400195212" format="1.1" reprev="1.6" version="1.6"}%
---+!! *OSG Application Software Installation Service (OASIS)*
This document is a draft, not intended to be used as documentation or guidelines yet.

%DOC_STATUS_TABLE%
%TOC{depth="3"}%

---++ Description
In order to effectively use the Open Science Grid (OSG) user jobs often require software that is too large or complicated to be sent along with the job. OASIS (OSG Application Software Installation Service) is a system that allows Virtual Organizations to install their software once, centrally, and have it visible and usable, via a distributed filesystem, from any OSG worker node.

OASIS consists of several components, along with specified procedures and practices, which together deliver the service. OASIS is currently built on CVMFS, a global distributed filesystem which provides secure, cacheable content served over HTTP. CVMFS handles the task of allowing content to be distributed, but it lacks the surrounding infrastructure to manage content installation and delivery safely, securely, and reliably. 

Repository (Stratum 0)
A standard CVMFS deployment includes a 'repository server' which contains the content and converts it to the format published globally. CVMFS provides simple tools for publishing content after it is added. This is the area where OASIS most provides value beyond basic CVMFS.  

Stratum 1
A Stratum 1 is a web server which exports published content, and is essentially Apache with an optional cache. OASIS adds utilities to manage exported content on a VO basis, providing the ability to block content that may be found to be invalid. 

Client
CVMFS makes content appear to be local to the worker node filesystem via a fuse-based client. OASIS adds configuration information pointing the client at the appropriate OSG distribution layer. It also may optionally include additional configuration mechanisms. 


Overall the purpose of OASIS is to 'productize' the CVMFS distributed filesystem to make it easy, safe, deployable, manageable, and secure.


Some nomenclature:

| * OASIS as a Service (!OaaS) * | it is the central OASIS service provided by GOC. One or more CVMFS  stratum-0s, stratum-1s, repositories... It can be generalized, and consider that any site running the same service at home can be called one !OaaS, being therefore the one at GOC just the central one.  | 
| * OASIS as a Repository (!OaaR) * | it is the actual CVMFS repo /cvmfs/oasis.opensciencegrid.org/  | 
| * OASIS as a Product (!OaaP) * | it is the actual code distributed via RPM that can be deployed by any one on top of their CVMFS service, including GOC. | 
| * OASIS as a Network (!OaaN) * | the set of CVMFS severs (and replicas) being somehow connected to this  project. Either because their keys are being signed by our keys, because we distribute the keys with a CVMFS repo served by !OaaS, because we replicate the content of external servers and add their content to the repos in the central !OaaS, etc. | 


---+++ OASIS 1

Current version of the service provides direct GSISSH login as mechanism for authenticating and authorizing write access to the server in order to place and publish content.
Procedure to update content with the current service are described in section [[OasisService#Joining_Oasis_as_a_Service_OaaS][Joining OASIS as a Service]]

---+++ OASIS 2

OASIS 2, besides direct GSISSH access, will also provide for a job-oriented interface, controlled by user membership and roles in VOMS. Depending on the interface used, OASIS provides additional feedback to users and more informative logging for repository administrators. This is useful for troubleshooting and accounting. OASIS also encapsulates user actions to minimize the chance of accidental damage to new or existing content by aborting the publication process when errors occur.  

OASIS 2 will allow VOs and repository administrators to define and run arbitrary actions on content before publication, again providing feedback and logging. These probes can either validate the content however needed, or optionally take action on the content (e.g. adding nested catalogs, or deleting .svn directories).   Examples of probes:

| * Probe * | * Scope * | *Description* |
| * Overquota * | OASIS | Ensures the VO does not use more space than allowed |
| * !FileSize * | OASIS, VO | Ensures every new file is neither smaller than a minsize nor larger than a maxsize |
| * !NoDeletion * | VO | Guarantees that no previous file has been deleted |
| * !NoReWrite * | VO | Guarantees that no previous file has been modified |
| * !NoTarball * | OASIS | Prevents from a tarball file being distributed |
| * !NoSVN * | OASIS | Prevents from hidden .svn directories being distributed |
| * !CatalogSize * | OASIS | Checks the total number of files and the size of the resulting !CvmFS catalog. If needed, it can take corrective actions such as forcing the splitting of the catalog into several subcatalogs |
| * !FilePermissions * | OASIS | Ensures all files have proper read permissions |


OASIS 2 will provide various VO-oriented administrative utilities for repo admins, e.g. to create or delete individual repositories, to rollback of content after publication on a VO-by-VO basis, to handle the key signing necessary for third-party repositories (i.e. run directly by the VO rather than OSG).


<!-- 
Include sections, as needed, to cover the content of the document.  Use [[TWiki.TextFormattingRules][TWiki Formatting]] and [[DocFormattingRules][OSG Formatting Standards]] in the document.
-->

---++ Joining OASIS

---+++ Joining Oasis as a Service (!OaaS)

Every VO in OSG will be allowed to use the central OASIS service provided at the GOC, no matter the size of the content that VO wants to distribute, or how frequently new content is added.
The only limitations are those impossed by the underlying technology, CVMFS, as they are explained below.
Instructions on how to update VO content using current OASIS 1 service are here: [[UpdateOasis][update VO content with OASIS 1]]

One important advantage of using the centralized OASIS service at the GOC is the guaranteed quality of the service provided to the user community, as it is describe in the [[https://twiki.grid.iu.edu/bin/view/Operations/OASISServiceLevelAgreement][Service Level Agreement document]].

---+++ Joining Oasis as a Network (!OaaN)

 Even the central service is intented to satisfy all users need, sites deploying and maintaining their own repositories will be accepted.
Instructions on how to add your home based repository to the OASIS Network are [[OasisExternalRepositories][here]]

For protection in case non proper content is distributed from an external repository, an [[OasisExternalRepositories#Emergency_procedure_to_blank_an][emergency procedure]] has been designed to block that repository.

 When ready, OASIS 2 code deployed at the GOC as a central service will also be available as an RPM for those sites who wants to use it on top of their bare CVMFS server installations, so a perfect copy of the architecture at the GOC can be reproduced at home.
 

---++ Guidelines

There are no currently dedicated limitations or guidelines on how to distribute content on OASIS. The only guidelines users should follow are those required by !CvmFS itself, as they can be read [[http://cernvm.cern.ch/portal/filesystem/repository-limits][here]]

---++ References

   1. J Caballero et al.; "OASIS: a data and software distribution service for Open Science Grid" CHEP 2013 [[http://indico.cern.ch/getFile.py/access?contribId=277&sessionId=4&resId=0&materialId=slides&confId=214784][slides]] <!--[[http://indico.cern.ch/contributionDisplay.py?contribId=277&sessionId=4&confId=214784][contribution]] -->[[http://www.usatlas.bnl.gov/~caballer/files/oasis/chep2013_proceeding.pdf][proceedings]]
   1. [[http://cernvm.cern.ch/portal/sites/cernvm.cern.ch/files/cvmfstech-2.1-4.pdf][CVMFS technical report]]
   1. J Blomer et al.; "CernVM-FS: delivering scientific software to globally distributed computing resources"; Proceedings of the first international workshop on Network-aware data management

<!--   1. [[http://www.usatlas.bnl.gov/~caballer/files/oasis/oasis.pdf][Proposal for OSG Application Software Installation Service (OASIS)]]  -->


<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = JoseCaballero

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = Documenter

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = Knowledge
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = 
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->

-- Main.JoseCaballero - 15 May 2014

%META:TOPICMOVED{by="JoseCaballero" date="1399922191" from="Documentation/Release3.OASIS" to="Documentation/Release3.OasisService"}%
