%META:TOPICINFO{author="MarcoMambelli" date="1397508589" format="1.1" version="1.32"}%
%META:TOPICPARENT{name="InstallBestPractices"}%
---+!! Worker Node Client RPM Install
%DOC_STATUS_TABLE%
%TOC%

---# Introduction

This document is intended to guide system administrators through the process of installing the worker node software and configuring the installed worker node software.
The OSG worker node software is also available as [[InstallWNClientTarball][TAR ball distribution]] and in the OASIS repository maintained by the software team: =/cvmfs/oasis.opensciencegrid.org/osg-software/osg-wn-client/=

---# About This Document

%ICON{hand}% This document is intended for system administrators that are installing the worker node software on compute nodes.  It covers installation and configuration of the worker node software using the RPMs distributed by OSG.


---# Requirements
Requirements for the OSG worker node installation:

---## Host and OS
   * OS is %SUPPORTED_OS%.
   * Root access

---## Minimum Version

Starting on 11 February 2014, all OSG-issued Digicert certificates (host, service, and personal) use the SHA-2 algorithm. Some software in the Worker Node Client — notably <span style="color: #F60;">dCache SRM client</span> — must be on a recent version to support SHA-2 certificates. Please visit [[SHA2Compliance][our SHA-2 compliance page]] for more information about minimum required versions of software components.


#WnContents
---# Contents of the worker node

The worker node may be updated from time to time. As of OSG 3.1.8 in September 2012, the OSG worker node client contains:

   * Bestman2 Client
   * curl
   * !dCache SRM client
   * dcap-tunnel-gsi
   * dccp
   * edg-gridftp-client
   * Fetch CRL
   * FTS client
   * globus-url-copy (!GridFTP client)
   * lcg-utils
   * ldapsearch
   * LFC (client and Python bindings)
   * !MyProxy
   * osg-system-profiler
   * osg-version
   * !UberFTP
   * vo-client (includes /etc/vomses file)
   * wget

If you like, you can see exactly what your version of the worker node package installed:

<pre class="screen">
%UCL_PROMPT% rpm -q --requires osg-wn-client
</pre>

[[YumRpmBasics#ListDeps][More details on using RPM to see what was installed]]

---# Install Instructions
%INCLUDE{"YumRepositories" section="OSGRepoBrief" TOC_SHIFT="+"}%

Some of the worker node client software verifies proxies or certificates.  In order to do this, they will need the CA certificates used to sign the proxies.  
%INCLUDE{"InstallCertAuth" section="OSGBriefCaCerts" TOC_SHIFT="+"}%

---## Install the Worker Node Client

Install the WN-Client RPM: <pre class="rootscreen">
%UCL_PROMPT_ROOT% yum install osg-wn-client </pre>

---# Running ATLAS jobs
%WARNING% If you may run ATLAS jobs, i.e. if you are an ATLAS site or allow opportunistic usage by ATLAS, you have to install a couple of additional packages. These are some additional LFC-python bindings necessary to run ATLAS jobs. They were included in the Pacman release of the worker node client and have been removed in the migration to the RPM one.

To run ATLAS jobs, install the LFC-python RPMs:
%NOTE% Depending on your yum configuration the first 2 commands (installing lfc-python26 and lfc-python.i386) may be sufficient. Only if you have =multilib_policy=best= (instead of the default =multilib_policy=all= , current default) in =/etc/yum.conf=, then yum will install only the x86_64 package on an x86_64 system, so you'll need to install explicitly also =lfc-python26.i386=.
<pre class="rootscreen">
%UCL_PROMPT_ROOT% yum install lfc-python26
%UCL_PROMPT_ROOT% yum install lfc-python.i386
%UCL_PROMPT_ROOT% yum install lfc-python26.i386
</pre>

---# Services
The only service is fetch-crl that keeps uptodate the CRLs.

---## Starting and Enabling Services
To start the services:
   1. %INCLUDE{"InstallCertAuth" section="OSGBriefFetchCrlStart"}%

You should also enable the appropriate services so that they are automatically started when your system is powered on: 
   * %INCLUDE{"InstallCertAuth" section="OSGBriefFetchCrlEnable"}%

---## Stopping and Disabling Services
To stop the services:
   1. %INCLUDE{"InstallCertAuth" section="OSGBriefFetchCrlStop"}%

In addition, you can disable services by running the following commands.  However, you don't need to do this normally.
   * %INCLUDE{"InstallCertAuth" section="OSGBriefFetchCrlDisable"}%


---# Configuring the CE for wn-client RPMs
Using the wn-client software installed from RPMs will require a few changes on the compute element so that the resource's configuration can be correctly reported.  The =$OSG_GRID= variable, which points to the location of the wn-client installation directory, will need to change.  Most jobs source =$OSG_GRID/setup.sh= before performing any work.  For backwards capability, we have created =/etc/osg/wn-client/setup.sh= to mimic this functionality.  Setting =$OSG_GRID= (in the CE config.ini) to =/etc/osg/wn-client= should provide backward capability.

On an mixed RPM/pacman based system, a possible solution would be to symlink the existing =$OSG_GRID= location to =/etc/osg/wn-client=.

---# Using the RPM-based worker nodes with a Pacman-based CE

[[Documentation.Release3.KnownProblems#SetWNPath][See our notes in the "Known Problems"]] if you are using a Pacman-based CE with your RPM-based worker nodes.


---# How to get Help?
To get assistance please use this [[HelpProcedure][Help Procedure]].


---# References
Please see the documentation on using [[Documentation/Release3.YumRpmBasics][yum and RPM]], [[Documentation/Release3.InstallBestPractices][the best practices]] for using yum to install software, and using [[Documentation/Release3.YumRepositories][yum repositories]].

---# Comments
%COMMENT{type="tableappend"}%

<!-- REVIEW PROCESS

   * Local DOC_ROLE		  = SysAdmin
   
   * Local DOC_TYPE		  = Installation
   
   * Local DOC_AREA               = ComputeElement

   * Local OWNER                  = SuchandraThapa
   * Local INCLUDE_REVIEW = %YES%
   * Local INCLUDE_TEST   = %YES%
   * Local REVIEW_READY   = %YES%
   * Local TEST_READY     = %YES%
   * Local RELEASE_READY  = %YES%

   * Local REVIEWER       = MarcoMambelli
   * Local REVIEW_PASSED  = %YES%
 
   * Local TESTER         = AlainRoy
   * Local TEST_PASSED  = %YES%

-->

%META:TOPICMOVED{by="JamesWeichel" date="1317238795" from="Documentation/Release3.InstallWorkerNode" to="Documentation/Release3.InstallWNClient"}%
