%META:TOPICINFO{author="MatyasSelmeci" date="1378825003" format="1.1" version="1.14"}%
%DOC_STATUS_TABLE%

---+!! Installing OSG Software to Use !OpenJDK 7

%TOC{depth="2"}%

---# About This Document

This document explains how to install Java-based OSG Software components in such a way that the preferred Java implementation is !OpenJDK 7. It also explains how to remove all other Java implementations from a system. The procedure is intended for site administrators who want to ensure that their systems are running only a supported Java implementation; specifically, it is part of the OSG plan to migrate away from all Java 6 implementations, which are no longer supported by their vendors.

The procedure below does *not* describe how to install or configure specific components. For that, please refer to [[WebHome][OSG 3.1 documentation home page]].

<!-- Variables used in this Document 
   * Local UCL_USER = root
   * Local UCL_HOST = host
-->

---# Applicable Versions

Currently, only the Java-based software contained in the =osg-upcoming= repositories have been tested with !OpenJDK 7. See the [[SoftwareTeam.Java6Migration][Software team’s Java migration project page]] for more information about the overall project.

---# Background

Many OSG Software packages, including !BeStMan 2, Gratia, GUMS, HDFS, Pegasus, and VOMS Admin, contain Java code. Historically, we built and tested them using the Oracle JDK 1.6 implementation of Java 6. We even included the Oracle distributions in the OSG Software stack. However, Oracle officially discontinued public support for Java 6 at the end of February 2013, including security fixes. This is a problem for us due to the numerous security flaws in Java that people keep discovering. Therefore we must move away from Oracle JDK 1.6 and Java 6 in general. [[Java6Migration][As announced earlier]], our plan has been to migrate all OSG Software Java components to work with !OpenJDK 7.

---# Requirements

To use !OpenJDK 7, the system must have or be capable of installing the =java-1.7.0-openjdk= package from the operating system vendor’s yum repository. This package is available on both EL5 and EL6 systems, although only the latest releases of EL5 systems contain it. Thus, you may need to upgrade your operating system to install !OpenJDK 7 as a prerequisite for using these instructions.

To see if your system has !OpenJDK 7 available:

   1. Install the =yum-utils= package, if not already installed (run =rpm -q yum-utils= to check)
   1. Check for the !OpenJDK 7 package:<pre class="screen">%UCL_PROMPT_SHORT% repoquery --plugins java-1.7.0-openjdk</pre>

The =repoquery= command should return at least one line of output, something like this:

<pre class="screen">java-1.7.0-openjdk-1:1.7.0.19-2.3.9.1.el5_9.x86_64</pre>

If it does not, then you probably need to update your operating system to the latest release, which is beyond the scope of this document.

---# Installation Instructions

---## Install Software and Select !OpenJDK 7

---### Install OSG Java-Based Software

   1. Install Java-based software from the OSG Upcoming software repository:\
      <p>Follow the detailed installation instructions contained in the documents linked from the [[WebHome][documentation home page]].</p>\
      <p><b>For each =yum= command used</b>, be sure to enable the Upcoming repository by using the following =yum= command-line option:</p>\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% yum ... --enablerepo=osg-upcoming ...</pre>

Installing any Java-based components from this repository will cause !OpenJDK 7 to be installed as well, if not present already.

---### Fix Bad Symlinks from Oracle JDK

   1. Check to see if the Oracle JDK package (named just "jdk") is installed:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% rpm -q jdk</pre>\
      <p>If the RPM is installed, the command will output the specific RPM name and version -- for example =jdk-1.6.0_45-fcs.1.osg.el5=. *If not installed,* skip to the next section!</p>
   1. Remove incorrect symlinks:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% rm -f /usr/bin/java /usr/bin/javac /usr/bin/javadoc /usr/bin/jar</pre>
   1. If !OpenJDK 7 was installed in the previous section, you must reinstall it to create the correct symlinks:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% yum reinstall --enablerepo=osg-upcoming java-1.7.0-openjdk java-1.7.0-openjdk-devel</pre>

---### Select Preferred Java (JRE and, if installed, JDK) Versions

   1. Select the preferred version of the Java runtime (JRE):\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% alternatives --config java</pre>\
      <p>Select =jre-1.7.0-openjdk=.</p>
   1. Verify that the correct version is installed:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% java -version</pre>\
      The version should start with =1.7=.
   1. Check to see if the Java development packages (JDK) are installed:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% rpm -q java-1.7.0-openjdk-devel</pre>\
      <p>If the RPM is installed, the command will output the specific RPM name and version. *If not installed,* skip to the next section!</p>
   1. Select the preferred version of the Java development tools:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% alternatives --config javac</pre>\
      <p>Select =java-1.7.0-openjdk=.</p>
   1. Verify the correct version is in place:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% javac -version</pre>\
      The version should start with =1.7=.


---### Fix Tomcat environment (if tomcat is installed)

---#### On EL5 systems

   1. Check if tomcat5 is installed:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% rpm -q tomcat5</pre>\
      <p>If the RPM is installed, the command will output the specific RPM name and version. *If not installed,* skip to the next section!</p>
   1. Open =/etc/sysconfig/tomcat5=
   1. Check if there is a line setting =JAVA_HOME= and that line is uncommented.\
      <p>If so, change that line to:\
      <pre class="file">JAVA_HOME="/etc/alternatives/jre"</pre></p>\
      <p>If not, then you do not need to do anything.</p>
   1. Do the same check for =/etc/tomcat5/tomcat5.conf=

---#### On EL6 systems


   1. Check if tomcat6 is installed:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% rpm -q tomcat6</pre>\
      <p>If the RPM is installed, the command will output the specific RPM name and version. *If not installed,* skip to the next section!</p>
   1. Open =/etc/sysconfig/tomcat6=
   1. Check if there is a line setting =JAVA_HOME= and that line is uncommented.\
      <p>If so, change that line to:\
      <pre class="file">JAVA_HOME="/etc/alternatives/jre"</pre></p>\
      <p>If not, then you do not need to do anything.</p>
   1. Do the same check for =/etc/tomcat6/tomcat6.conf=

---### Fix !BeStMan environment (if bestman2 is installed)

   1. Check if any bestman2 packages are installed:\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% rpm -qa | grep \^bestman2</pre>\
      <p>If any bestman2 !RPMs are installed, the command will output the specific names and versions. *If not installed,* skip to the next section!</p>
   1. Open =/etc/sysconfig/bestman2=
   1. Check if there is a line setting =JAVA_HOME= and that line is uncommented.\
      <p>If so, change that line to:\
      <pre class="file">JAVA_HOME="/etc/alternatives/java_sdk"</pre></p>\
      <p>If not, then you do not need to do anything.</p>

---## Optional: Purge Other JDK Packages

Additional steps are necessary if you want to remove all other versions of Java from your system. Even if you do not follow these steps, the previous steps ensure that !OpenJDK 7 is the preferred Java runtime.

---### Install yum-utils to Get yumdownloader

A script called =yumdownloader= is needed in one of the remaining steps. Install the =yum-utils= package to get it, if not already installed.

<pre class="rootscreen">%UCL_PROMPT_ROOT% yum install -y yum-utils</pre>

---### Purge Other Java Implementations

In this section, you erase other, old JDKs to keep them from being used, while tricking yum into leaving installed the packages that depend on them. This is done by forcibly erasing the packages, then adding entries for them back into the RPM database. After this procedure, all existing and subsequent installations of Java-based software will use Java 7 (or later).

   1. Make and change to a directory that will contain RPMs of the old JDKs\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% mkdir -p /tmp/javarpms; cd /tmp/javarpms</pre>
   1. Save a list of old JDKs that are installed\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% rpm -qa | egrep '^(java|jdk)-1.[1-6]' | grep -v java-1.7.0 &gt; oldjava.txt</pre>
   1. Download RPMs for the old JDKs\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% xargs -a oldjava.txt yumdownloader</pre>
   1. Erase old JDKs, without removing dependent Java software\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% xargs -a oldjava.txt rpm -ev --nodeps</pre>
   1. Add entries for the old JDKs into the RPM database — essentially making it pretend they are installed\
      <pre class="rootscreen">%UCL_PROMPT_ROOT% rpm -ivh --justdb --nodeps *.rpm</pre>


---## Optional: Prevent Oracle JDK from being installed onto the node in the future

   1. Edit =/etc/yum.conf= and add the line <code>exclude=jdk java-1.6.0-sun-compat</code> to the end of the file.%BR%\
      (If a line starting with <code>exclude=</code> already exists in =/etc/yum.conf=, then add =jdk= and =java-1.6.0-sun-compat= to the end of that line, separated by spaces).


---## Restart Java-Based Services

If you have any Java-based services, such as VOMS Admin or GUMS, then restart them using the =service= command.


---# Get Help/Support

To get assistance please use [[Documentation/Release3.HelpProcedure][this page]]. 


---# Comments

%COMMENT{type="tableappend"}%


<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = CarlEdquist

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE = Installation

  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER = TimTheisen
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER = HorstSeverini
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED = %YES%
############################################################################################################
-->
