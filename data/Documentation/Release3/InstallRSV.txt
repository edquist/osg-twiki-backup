%META:TOPICINFO{author="MarcoMambelli" date="1320086524" format="1.1" reprev="1.18" version="1.18"}%
%META:TOPICPARENT{name="NavTechRSV"}%
---+!! Install RSV
%DOC_STATUS_TABLE%
%TOC%

<!-- conventions used in this document
   * Local GLOSSARY_RSV = [[Documentation.GlossaryR#DefsRsv][Resource and Service Validation (RSV)]]
   * Local UCL_HOST = %URLPARAM{"INPUT_HOST" encode="quote" default="voms"}%
   * Local UCL_USER = %URLPARAM{"INPUT_USER" encode="quote" default="user"}%
   * Local UCL_DOMAIN = %URLPARAM{"INPUT_DOMAIN" encode="quote" default="opensciencegrid.org"}%
   * Set TWISTY_OPTS_DETAILED = mode="div" showlink="Show Detailed Output" hidelink="Hide" showimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleopen-small.gif" hideimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleclose-small.gif" remember="on" start="hide" 
-->

---+ About this Document
Here we describe how to install and configure the %GLOSSARY_RSV% service on your Linux machine. 

The installation section will give you a bare-bones installation. 

The other sections help in troubleshooting and knowing what is running.

%STARTSECTION{"RsvDefinition"}%
---+%SHIFT% Introduction
The Resource and Service Validation (!RSV) software provides a scalable and easy to maintain resource/service monitoring infrastructure for an OSG site admin. The components of !RSV are:
   * *RSV Client:* The client allows OSG site administrators to run tests against their CEs/SEs.  This provides a set of metrics to test the resource, Condor-Cron for scheduling,  and a Gratia infrastructure for collecting and storing the results.
      * This is [[InstallComputeElement][included in the OSG CE]]</a>.
      * It is also available stand-alone.
      * The !RSV Client runs metrics at scheduled time intervals.  It produces a simple webpage of local !RSV results for a site administrator's viewing.  It also has the capability to upload those probe results to a central collector (addressed next).
   * *RSV Collector/Server:* The server collects results from any number of !RSV clients and stores them in a database. You can view these central results on <a href="http://myosg.grid.iu.edu/rgcurrentstatus/index?datasource=currentstatus&summary_attrs_showservice=on&summary_attrs_showrsvstatus=on&summary_attrs_showfqdn=on&gip_status_attrs_showtestresults=on&downtime_attrs_showpast=&account_type=cumulative_hours&ce_account_type=gip_vo&se_account_type=vo_transfer_volume&start_type=7daysago&start_date=12/25/2009&end_type=now&end_date=12/25/2009&all_resources=on&gridtype=on&gridtype_1=on&service_central_value=0&service_hidden_value=0&active=on&active_value=1&disable_value=1">the !MyOSG-based !RSV current status page</a>.  Other !RSV-based choices are available in the <em>Resource Group menu</em> within !MyOSG.
   * *Periodic Availability Reports:* The availability of all active registered OSG resources and the services running on each of those resources is calculated using the results received for <a href="https://twiki.grid.iu.edu/bin/view/Operations/RsvEquivalency#Critical_Tests_for_OSG_Resources" target="_new">critical metrics</a>. Once a day, these availability numbers are <a href="http://rsv.grid.iu.edu/daily-reports">published online</a> and via email <a href="https://twiki.grid.iu.edu/bin/view/MeasurementsAndMetrics/RsvReportsOverview" target="_new"> as explained here</a> (More information: <a href="https://twiki.grid.iu.edu/bin/view/Operations/RSVPeriodicReporting" target="_new">Outline of reports</a>,     <a href="https://twiki.grid.iu.edu/bin/view/MeasurementsAndMetrics/RsvReports" target="_new">Installation guide for GOC staff</a>).
   * *RSV-SAM Transport:* The WLCG !RSV-SAM Transport infrastructure pushes out !RSV results, for resources that are flagged to be part of the WLCG Interoperability agreement, from the GOC collector to WLCG's Service Availability Monitoring (SAM) system. More information <a href="https://twiki.grid.iu.edu/bin/view/Operations/RsvSAMGridView" target="_new"> on viewing these results is available here</a>
      * <strong>MyOSG and OIM Links: </strong> RSV picks up resource information, WLCG interoperability information, etc. from a MyOSG resource group summary listing, which is in turn based on the <a href="https://oim.grid.iu.edu" target="_new">OSG Information Management (OIM) (topology) system</a> (Requires registration). Resource <a href="https://twiki.grid.iu.edu/twiki/bin/view/Operations/OIMMaintTool">maintenance scheduled on OIM</a>, are forwarded to WLCG SAM, if applicable. 
%ENDSECTION{"RsvDefinition"}%

---+ How to get Help?
To get assistance please use [[HelpProcedure][Help Procedure]].


---+ Requirements
   * A host to install the VOMS Service (Pristine node)
   * OS is %SUPPORTED_OS%. Currently most of our testing has been done on Scientific Linux 5.
   * Root access
   * A RSV service certificate. [[InstallCertScripts][Here]] are instructions to request a service certificate.
   * Allow outbound network connection _to all servers that you want to test_
   * A http server and open inbound connections for the servers/client querying your RSV status (probably to the world)


---+ Installation 

%INCLUDE{"YumRepositories" section="OSGRepoBrief" TOC_SHIFT="+"}%
%INCLUDE{"InstallCertAuth" section="OSGBriefCaCerts" TOC_SHIFT="+"}%

---++ Install RSV
To install !RSV:
   * Install !RSV via RPMs.  Doing this will automatically create a user named =rsv= on your system.
<pre class="screen">
%UCL_PROMPT_ROOT% yum  --enablerepo=osg-testing install rsv
</pre>

   * Install your service certificate at =/etc/grid-security/rsvcert.pem= and the service key at =/etc/grid-security/rsvkey.pem=.  Make these two files owned by the =rsv= user.  Adjust the permissions if necessary (cert needs to be readable by all, key needs to be readable by nobody but owner).


---+ Configuration 
   1. Edit =/etc/osg/config.d/30-rsv.ini=.  There are detailed comments for each setting.  In the simplest case, if you just want to monitor a CE, put the (fully qualified) name of your CE in the =ce_hosts= variable..
   1. Run osg-configure to complete the configuration: <pre class="rootscreen">
%UCL_PROMPT_ROOT% osg-configure -v
%UCL_PROMPT_ROOT% osg-configure -c
</pre>
   1. Enable the services: <pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/service httpd start
%UCL_PROMPT_ROOT% /sbin/service condor-cron start
%UCL_PROMPT_ROOT% /sbin/service rsv start
</pre>

---+ Test RSV

Run the metrics by hand or wait for them to run via cron.  To run them by hand immediately, do: <pre class="rootscreen">
%UCL_PROMPT_ROOT% rsv-control --run --all-enabled
</pre>

Your results will be available on !MyOSG (if you have the gratia-consumer enabled, which it is by default) and/or in your local HTML results page (http://example.com/rsv)

---+ Debugging

Metric log files: =/var/log/rsv/metrics=

Consumer log files: =/var/log/rsv/consumers=

---+ Comments
%COMMENT{type="tableappend"}%


<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = ScotKronenfeld

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %NO%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MarcoMambelli
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = NehaSharma
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->

%META:TOPICMOVED{by="JamesWeichel" date="1317239260" from="Documentation.InstallRSV" to="Documentation/Release3.InstallRSV"}%
