%META:TOPICINFO{author="MarcoMambelli" date="1320111673" format="1.1" version="1.21"}%
%META:TOPICPARENT{name="NavTechRSV"}%
---+!! Install RSV
%DOC_STATUS_TABLE%
%TOC%

<!-- conventions used in this document
   * Local GLOSSARY_RSV = [[Documentation.GlossaryR#DefsRsv][Resource and Service Validation (RSV)]]
   * Local UCL_HOST = %URLPARAM{"INPUT_HOST" encode="quote" default="rsv"}%
   * Local UCL_USER = %URLPARAM{"INPUT_USER" encode="quote" default="user"}%
   * Local UCL_DOMAIN = %URLPARAM{"INPUT_DOMAIN" encode="quote" default="opensciencegrid.org"}%
   * Set TWISTY_OPTS_DETAILED = mode="div" showlink="Show Detailed Output" hidelink="Hide" showimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleopen-small.gif" hideimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleclose-small.gif" remember="on" start="hide" 
-->

---+ About this Document
Here we describe how to install and configure the %GLOSSARY_RSV% service on your Linux machine. 
This document is intended for site administrators who want to use these RSV to monitor their systems. 
It explains how to install and configure the RSV service and the default probes. 
For documents on specific probes or on how to write your own probes please check the [[#References][References section]].

%INCLUDE{"Documentation/DocumentationTeam/DocConventions" section="Header"}%
%INCLUDE{"Documentation/DocumentationTeam/DocConventions" section="CommandLine"}%

%STARTSECTION{"RsvDefinition"}%
---+%SHIFT% Introduction
The Resource and Service Validation (!RSV) software provides a scalable and easy to maintain resource/service monitoring infrastructure for an OSG site admin. The components of !RSV are:
   * *RSV Client:* The client allows OSG site administrators to run tests against their CEs/SEs.  This provides a set of metrics to test the resource (on the same or different hosts), Condor-Cron for scheduling,  and a Gratia infrastructure for collecting and storing the results.
      * This is [[InstallComputeElement][included in the OSG CE]]</a>.
      * It is also available stand-alone.
      * The !RSV Client runs metrics at scheduled time intervals.  It produces a simple webpage of local !RSV results for a site administrator's viewing.  It also has the capability to upload those probe results to a central collector (addressed next).
   * *RSV Collector/Server:* The server collects results from any number of !RSV clients and stores them in a database. You can view these central results on <a href="http://myosg.grid.iu.edu/rgcurrentstatus/index?datasource=currentstatus&summary_attrs_showservice=on&summary_attrs_showrsvstatus=on&summary_attrs_showfqdn=on&gip_status_attrs_showtestresults=on&downtime_attrs_showpast=&account_type=cumulative_hours&ce_account_type=gip_vo&se_account_type=vo_transfer_volume&start_type=7daysago&start_date=12/25/2009&end_type=now&end_date=12/25/2009&all_resources=on&gridtype=on&gridtype_1=on&service_central_value=0&service_hidden_value=0&active=on&active_value=1&disable_value=1">the !MyOSG-based !RSV current status page</a>.  Other !RSV-based choices are available in the <em>Resource Group menu</em> within !MyOSG.
   * *Periodic Availability Reports:* The availability of all active registered OSG resources and the services running on each of those resources is calculated using the results received for <a href="https://twiki.grid.iu.edu/bin/view/Operations/RsvEquivalency#Critical_Tests_for_OSG_Resources" target="_new">critical metrics</a>. Once a day, these availability numbers are <a href="http://rsv.grid.iu.edu/daily-reports">published online</a> and via email <a href="https://twiki.grid.iu.edu/bin/view/MeasurementsAndMetrics/RsvReportsOverview" target="_new"> as explained here</a> (More information: <a href="https://twiki.grid.iu.edu/bin/view/Operations/RSVPeriodicReporting" target="_new">Outline of reports</a>,     <a href="https://twiki.grid.iu.edu/bin/view/MeasurementsAndMetrics/RsvReports" target="_new">Installation guide for GOC staff</a>).
   * *RSV-SAM Transport:* The WLCG !RSV-SAM Transport infrastructure pushes out !RSV results, for resources that are flagged to be part of the WLCG Interoperability agreement, from the GOC collector to WLCG's Service Availability Monitoring (SAM) system. More information <a href="https://twiki.grid.iu.edu/bin/view/Operations/RsvSAMGridView" target="_new"> on viewing these results is available here</a>
      * <strong>MyOSG and OIM Links: </strong> RSV picks up resource information, WLCG interoperability information, etc. from a MyOSG resource group summary listing, which is in turn based on the <a href="https://oim.grid.iu.edu" target="_new">OSG Information Management (OIM) (topology) system</a> (Requires registration). Resource <a href="https://twiki.grid.iu.edu/twiki/bin/view/Operations/OIMMaintTool">maintenance scheduled on OIM</a>, are forwarded to WLCG SAM, if applicable. 
%ENDSECTION{"RsvDefinition"}%

---+ How to get Help?
To get assistance please use [[HelpProcedure][Help Procedure]].


---+ Requirements
   * A host to install the RSV Service (pristine node or a CE)
   * OS is %SUPPORTED_OS%. Currently most of our testing has been done on Scientific Linux 5.
   * Root access
   * A RSV service certificate. [[InstallCertScripts][Here]] are instructions to request a service certificate.
   * Allow outbound network connection _to all servers that you want to test_
   * A http server and open inbound connections for the servers/client querying your RSV status (probably to the world)


---+ Installation 

%INCLUDE{"YumRepositories" section="OSGRepoBrief" TOC_SHIFT="+"}%
%INCLUDE{"InstallCertAuth" section="OSGBriefCaCerts" TOC_SHIFT="+"}%

---++ Install RSV
To install !RSV:
   1. Install !RSV via RPMs.  Doing this will automatically create a user named =rsv= on your system.<pre class="screen">
%UCL_PROMPT_ROOT% yum  --enablerepo=osg-testing install rsv
</pre>
   1. Install your service certificate at =/etc/grid-security/rsvcert.pem= and the service key at =/etc/grid-security/rsvkey.pem=.  Make these two files owned by the =rsv= user.  Adjust the permissions if necessary (cert needs to be readable by all, key needs to be readable by nobody but owner).


---+ Configuration 
You can configure RSV using osg-configure:
   1. Edit =/etc/osg/config.d/30-rsv.ini= following the instructions in the file.  There are detailed comments for each setting.  In the simplest case, if you just want to monitor a CE, put the (fully qualified) name of your CE in the =ce_hosts= variable. %TWISTY{showlink="Show rsv.ini example"}% <br>Here is a simple configuration file with only a CE enabled: <pre class="file">
;===================================================================
;                       IMPORTANT
;===================================================================
;
; 
; You can get documentation on the syntax of this file at:
; https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/ConfigurationFileFormat
; You can get documentation on the options for each section at:
; https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/ConfigurationFileHelp
;

;===================================================================
;                            RSV
;===================================================================


[RSV]
; The enable option indicates whether RSV should be enabled or disabled.  It should
; be set to True, False, or Ignore.  
;
; If you are using rsv-control to enable or disable specific metrics, you should set 
; this to Ignore so that your configuration does not get overwritten each time that
; configure-osg is run.
enabled = True


; This option will enable RSV record uploading to the central RSV collector at
; the GOC.  This is required for WLCG availability reporting.
;
; Note: It no longer matters if your site is production or ITB.  All records
;       will be reported to the same place.
;
; Set this to True or False
enable_gratia = False

; This option will set the gratia_collector you will report to.  Leave this 
; option commented out to use the default Gratia collector.  If you want to
; report to a different collector instead of the default OSG collector then
; supply the hostname:port here.  Note: this must be of the form hostname:port
; gratia_collector = <your host>:<your port>



; You must use a certificate with RSV.  Either you can use a service certificate
; or a user certificate.  Using a service certificate is highly recommended
; because it will be automatically renewed for you with each job that runs.
;
; To use a service certificate, set the following variables:
;   - service_cert
;   - service_key
;   - service_proxy
;
; To use a user certificate, set the following variable:
;   - user_proxy

; This setting will be used if you have enabled use_service_cert.  
; This should point to the public key file (pem) for your service 
; certificate.
; 
; If this is left blank or set to UNAVAILABLE  and the use_service_cert 
; setting is enabled, it will default to /etc/grid-security/rsvcert.pem
service_cert  = UNAVAILABLE

; This setting will be used if you have enabled the use_service_cert.  
; This should point to the private key file (pem) for your service 
; certificate.
;
; If this is left blank or set to UNAVAILABLE and the use_service_cert 
; setting is enabled, it will default to /etc/grid-security/rsvkey.pem
service_key  = UNAVAILABLE


; This setting will be used if you have enabled the use_service_cert.
; This should point to the location of the RSV proxy file.
;
; If this is left blank or set to UNAVAILABLE and the use_service_cert 
; setting is enabled, it will default to /tmp/rsvproxy
service_proxy = UNAVAILABLE


; If you don't use a service certificate for RSV, you will need to specify a 
; proxy file that RSV should use in the user_proxy setting.  If you use this
; option you need to renew this proxy file periodically.
; This needs to be set if use_service_cert is disabled.  
;user_proxy = UNAVAILABLE


; The ce_hosts options lists the FQDN of the CEs that the RSV CE metrics should
; run against.  This is a list of FQDNs separated by a comma, for example:
;   ce_hosts = ce.example.com, ce2.example.com, ce3.example.com
;
; Leave this setting blank or set it to UNAVAILBLE to disable CE monitoring.
ce_hosts = %RED%ce.mycluster.org%ENDCOLOR%


; The gridftp_hosts options lists the FQDN of the gridftp servers that the RSV
; GridFTP metrics should monitor.  This is be a list of FQDNs separated by a
; comma, for example:
; gridftp_hosts = gridftp.example.com, gridftp2.example.com, gridftp3.example.com
;
; If this option is commented out then the value of ce_hosts will be used.
; If you want to disable the GridFTP probes then uncomment this entry and
; set it to UNAVAILABLE
;gridftp_hosts = UNAVAILABLE


; The gridftp_dir option gives the directory on the gridftp servers that the 
; RSV GridFTP probes should try to write and read from.
;
; This setting will be used if the enable_gridftp_probes option is enabled. It
; will default to /tmp if left blank or set to UNAVAILABLE 
gridftp_dir = UNAVAILABLE


; This setting specifies which type of Gratia probes RSV should monitor.  Set
; this to UNAVAILABLE to disable Gratia monitoring.  Otherwise, list the Gratia
; types you wish to monitor separated by commas.  Valid metrics are:
; metric, condor, pbs, lsf, sge, hadoop-transfer, gridftp-transfer.
; 
; If you are monitoring multiple CEs with different Gratia metrics you can
; put them into lists using parentheses.  Each parenthesized entry corresponds
; to the same entry in the ce_hosts option.  For example, here is the syntax
; for monitoring 3 CEs:
; gratia_probes = (condor, metric), (pbs, condor), (condor)
;
; Note: if you have multiple CEs but only one entry then that entry will be used
; for each CE.  Otherwise, the number of CE hosts must match the number of
; Gratia entries.
; 
; If you are monitoring a CE, you want to add the batch system used by that CE.
; If you are monitoring a CE using RSV, add the 'metric' type
; If you are monitoring a CE using managed-fork, add 'condor'
;
; For example, on a CE using PBS and Managed-Fork, you will probably use:
; gratia_probes = metric, pbs, condor
gratia_probes = UNAVAILABLE


; The gums_hosts options lists the FQDN of the GUMS server that the RSV GUMS 
; metrics should monitor.  This should be a list of FQDNs separated by a comma:
; gums_hosts = gums.example.com, gums2.example.com, ce.example.com
gums_hosts = UNAVAILABLE


; The srm_hosts options lists the FQDN of the SRM servers that the RSV SRM
; metrics should monitor. This should be a list of FQDNs separated by a comma.
; You can specify the port on a host using host:port.  For example:
; srm_hosts = srm.example.com:8443, srm2.example.com:10443, srm3.example.com
srm_hosts = UNAVAILABLE

; The srm_dir options gives the directory on the srm servers that the RSV SRM
; probes should try to write and read from.  This should be a comma separated
; list containing the same number of entries as srm_hosts (the first entry
; in srm_hosts corresponds to the first entry in srm_dir, etc)
srm_dir = UNAVAILABLE

; This option gives the webservice path that SRM metrics need along with the
; host: port. For dcache installations this should be set to srm/managerv2
; However Bestman-Xrootd SEs normally use srm/v2/server as the web service
; path, and so Bestman-Xrootd admins will have to pass this option with the
; appropriate value (for example: "srm/v2/server") for the SRM metrics to work
; on their SE.
;
; This is optional.  If it is set it should be a comma separated list containing
; the same number of entries as srm_hosts (the first entry in srm_hosts
; corresponds to the first entry in srm_webservice_path, etc)
srm_webservice_path = UNAVAILABLE


; enable_local_probes will enable metrics to run against the local host 
; that RSV is running on.  Currently there are local probes to monitor the
; validity of the hostcert and httpcert.
enable_local_probes = True


; The enable_nagios option indicates whether RSV will report information to a
; local nagios instance.
;
; Set this to True or False
enable_nagios = False

; The nagios_send_nsca option chooses which script to use to send nagios
; records.  If this is true then rsv2nsca.py will be used.  If this is false
; then rsv2nagios.py will be used.  The default is rsv2nagios.py.  This value
; is optional.
nagios_send_nsca = False
</pre>  %ENDTWISTY%
   1. Run osg-configure to complete the configuration: <pre class="rootscreen">
%UCL_PROMPT_ROOT% osg-configure -v
%UCL_PROMPT_ROOT% osg-configure -c
</pre>  %TWISTY{%TWISTY_OPTS_DETAILED%}%  <br>The output is quite verbose and you should not worry about the warning messages during =osg-configure -c= :<pre class="rootscreen">
%UCL_PROMPT_ROOT% osg-configure -v
Configuration verified successfully
%UCL_PROMPT_ROOT% osg-configure -c
Enabling consumer html-consumer
WARNING: No enabled consumers defined in consumers.conf
WARNING: No enabled consumers defined in consumers.conf
Creating configuration file '/etc/rsv/consumers.conf'
Enabling metric 'org.osg.globus.gram-authentication' for host 'gc2-wn1.mwt2.org'
Enabling metric 'org.osg.general.osg-version' for host 'gc2-wn1.mwt2.org'
Enabling metric 'org.osg.general.vo-supported' for host 'gc2-wn1.mwt2.org'
Enabling metric 'org.osg.batch.jobmanagers-available' for host 'gc2-wn1.mwt2.org'
Enabling metric 'org.osg.general.ping-host' for host 'gc2-wn1.mwt2.org'
Enabling metric 'org.osg.certificates.cacert-expiry' for host 'gc2-wn1.mwt2.org'
Enabling metric 'org.osg.general.osg-directories-CE-permissions' for host 'gc2-wn1.mwt2.org'
Creating configuration file '/etc/rsv/gc2-wn1.mwt2.org.conf'

One or more metrics have been enabled and will be started the next time RSV is started.  To turn them on immediately run 'rsv-control --on'.
Enabling metric 'org.osg.globus.gridftp-simple' for host 'gc2-wn1.mwt2.org'

One or more metrics have been enabled and will be started the next time RSV is started.  To turn them on immediately run 'rsv-control --on'.
Enabling metric 'org.osg.local.httpcert-expiry' for host 'gc2-wn3.mwt2.org'
Enabling metric 'org.osg.local.hostcert-expiry' for host 'gc2-wn3.mwt2.org'
Creating configuration file '/etc/rsv/gc2-wn3.mwt2.org.conf'

One or more metrics have been enabled and will be started the next time RSV is started.  To turn them on immediately run 'rsv-control --on'.
/usr/sbin/osg-configure completed successfully
</pre> %ENDTWISTY%


---+ Start/Stop Services
RSV probes and consumers are run by default using Condor-cron and the HTML consumers uses a http server to display the data.
So you need Condor-cron in order for RSV to work and you need the httpd server to view the pages produced.

Start the services:
   1. Start auxiliary services (httpd and Condor-cron): <pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/service httpd start
%UCL_PROMPT_ROOT% /sbin/service condor-cron start
</pre>
   1. Start RSV: <pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/service rsv start
</pre>

Stop the services
   1. Stop RSV: <pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/service rsv stop
</pre>
   1. Stop the auxiliary services (httpd and Condor-cron) if desired: <pre class="rootscreen">
%UCL_PROMPT_ROOT% /sbin/service httpd stop
%UCL_PROMPT_ROOT% /sbin/service condor-cron stop
</pre>

---+ Test RSV

Run the metrics by hand or wait for them to run via cron.  To run them by hand immediately, do: <pre class="rootscreen">
%UCL_PROMPT_ROOT% rsv-control --run --all-enabled
</pre>

Your results will be available on !MyOSG (if you have the gratia-consumer enabled, which it is by default) and/or in your local HTML results page (http://example.com/rsv)

---+ Troubleshooting

Important files:
   * Metric log files: =/var/log/rsv/metrics=
   * Consumer log files: =/var/log/rsv/consumers=

To find the metrics and the other files in RSV you can use also the RPM commands: =rpm -ql rsv-metrics= and =rpm -ql rsv=.

---+ References
RSV documents
   * A [[MonitoringInformation.RSV][Introduction to RSV]]
   * The [[MonitoringInformation.RSVArchitecture][RSV architecture]]
Specific probes:
   * [[MonitoringInformation.RSVStorageProbes][Storage probes]]

---+ Comments
%COMMENT{type="tableappend"}%


<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = ScotKronenfeld

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MarcoMambelli
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = NehaSharma
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->

%META:TOPICMOVED{by="JamesWeichel" date="1317239260" from="Documentation.InstallRSV" to="Documentation/Release3.InstallRSV"}%
