%META:TOPICINFO{author="TimCartwright" date="1360345567" format="1.1" version="1.7"}%
%META:TOPICPARENT{name="SoftwareTeam.SwitchToFetchCrl3"}%
%LINKCSS%

%DOC_STATUS_TABLE%

---+!! %SPACEOUT{ "Upgrading Fetch-Crl 2 to Fetch-Crl 3 on EL5 (draft)" }%
%TOC%


---++ Overview

The version of Fetch-CRL version 2, which is the version of Fetch-CRL that is normally installed on Enterprise Linux 5 systems is outdated and is unlikely to receive updates. Therefore, the OSG Software stack is starting to require Fetch-CRL 3 instead for software that requires CRLs. An upgrade from Fetch-CRL 3 is recommended.

Because the configuration format has changed between versions, some manual work is required to migrate the configuration.


---++ Procedure

   1. Install the Fetch-CRL 3 RPM. You may either do this explicitly by running =yum install fetch-crl3=, or it will be done as part of an update to one of the packages that requires =fetch-crl=.
   1. If any changes were made to the =/etc/cron.d/fetch-crl= file, then see \
      if those changes need to be migrated in =/etc/cron.d/fetch-crl3=.%BR%
      Note that the =-r= or =--randomwait= option was given to =fetch-crl= in \
      minutes, but is given to =fetch-crl3= in seconds.%BR%
      =/etc/cron.d/fetch-crl3= is marked as a configuration file, so changes \
      will be preserved across upgrades.
   1. Edit =/etc/fetch-crl3.conf= as desired, see the translation table below \
      on how to migrate customizations made in =/etc/fetch-crl.conf= to
      =/etc/fetch-crl3.conf=. Also see the example file below the translation \
      table.
   1. Disable fetch-crl 2 by running the following:%BR%
      =service disable fetch-crl-boot= %BR%
      =service disable fetch-crl-cron= %BR%
   1. Make sure fetch-crl 2 is not currently running.
   1. (Optional) Test fetch-crl 3 by running =/usr/sbin/fetch-crl3= from the
      command line.
   1. Enable fetch-crl 3 by running the following:%BR%
      =service enable fetch-crl3-boot= %BR%
      =service enable fetch-crl3-cron= %BR%
   1. If satisfied that fetch-crl 3 works, then remove fetch-crl 2 by running:%BR%
      =yum erase fetch-crl=

---++ *Translation table from fetch-crl.conf to fetch-crl3.conf:*

| *fetch-crl.conf* | *fetch-crl3.conf* |
|<code>ALLWARNINGS=yes</code> | can't be set, but see =nowarnings= and =verbosity= <sup>1</sup> |
|<code>CACHEDIR=/var/cache/fetch-crl</code> |<code>statedir = /var/cache/fetch-crl3</code> |
|<code>CACHEDIR=</code> (disables cache) |<code>nocache</code> or <code>stateless</code> <sup>2</sup> |
|<code>CRLDIR=/etc/grid-security-certificates</code> |<code>infodir = /etc/grid-security/certificates</code> |
|<code>CRL_AGING_THRESHOLD=24</code> |<code>agingtolerance = 24</code> |
|<code>FETCH_CRL_OPENSSL=/usr/bin/openssl</code> |<code>openssl = /usr/bin/openssl</code> |
|<code>FORCE_OVERWRITE=yes</code> | always 'yes' |
|<code>HTTP_PROXY=...</code> |<code>http_proxy = ...</code> or set in <code>/etc/sysconfig/fetch-crl3</code> and use <code>http_proxy = ENV</code> |
|<code>QUIET=yes</code> |<code>verbosity = 0</code> <sup>1</sup> |
|<code>RESETPATHMODE=yes</code> |<code>path = /bin:/usr/bin</code> <sup>3</sup> |
|<code>RESETPATHMODE=searchopenssl</code> | not available |
|<code>SERVERCERTCHECK=no</code> | always 'no'<sup>4<sup/> |
|<code>SLOPPYCRLHASHES=yes</code> | can't be set |
|<code>SYSLOGFACILITY=daemon</code> |<code>syslogfacility = daemon</code> |
|<code>WGET_OPTS=...</code> | can't be set |
|<code>WGET_RETRIES=2</code> | can't be set |
|<code>WGET_TIMEOUT=120</code> |<code>httptimeout = 120</code> |

   1. Setting <code>nowarnings = 1</code> in the =fetch-crl3.conf= silences a few warnings, mostly about not being able to execute openssl commands.%BR%
      The <code>verbosity</code> variable, which is an integer from -1 to 7, is a more fine-grained way of controlling the amount of output.%BR%
      The default <code>verbosity</code> is 0.
   1. <code>nocache</code> disables caching of CRLs, while <code>stateless</code> also disables saving metadata (such as last update time).
   1. The =$PATH= used internally in the script can now be explicitly specified by setting the =path= variable in the =fetch-crl3.conf= file.%BR%
      =searchopenssl= was primarily used to find a copy of openssl in a non-standard location, such as under the Globus hierarchy.
   1. The CRLs themselves are signed, so checking the server cert is unnecessary and may give false positives for security warnings.%BR%
      If you still want to check, perform the following:
      1. yum install the package =perl-Crypt=SSLeay=
      1. Edit or create =/etc/sysconfig/fetch-crl3= and set the variable =HTTPS_CA_FILE= to the CA cert you want to check the server cert against.


See also =/usr/share/doc/fetch-crl3-*/fetch-crl.conf.example=

Example =fetch-crl3.conf= file, based on the default configuration file shipped
with fetch-crl 2.8.5 in the EPEL 5 repository:

<verbatim class="file">
# Configuration file for fetch-crl 3.0.x

# Directory containing .crl_url files and output directory

info_dir = /etc/grid-security/certificates
verbosity = 0
nowarnings

# The time in hours for which CRL download failures are accepted
# without printing an error (instead, a warning is generated)
# Default=24hours (used to be 0 for versions <= 2.6.6).
#agingtolerance = 24

# What do we set the path to? Uses $PATH in environment by default.
#path = /bin:/usr/bin

# Write messages also to syslog using logger(1) if and only if the facility
# name is set. When empty, no syslog messages are generated. Default is
# empty. For valid facility values see logger(1)
#syslogfacility = 

# Path to an explicit OpenSSL version to use. Default will look through
# the path.
#openssl = <path>

# Path of a download cache directory, *exclusively writable by the user
# running fetch-crl*, where the original downloads are stored. The
# cache is used unless "nocache" or "stateless" are set. Default is a cache
# in "/var/cache/fetch-crl3" if that exists.
# You will need to manually create this directory first with proper permissions
#statedir=/var/cache/fetch-crl3

# What http proxy to use. By default, no proxy is used. If set to "ENV", then
# the value of the HTTP_PROXY environment variable (in the environment
# fetch-crl3 is run) is used. This environment variable is often set in
# "/etc/sysconfig/fetch-crl3", which does not exist by default.
#http_proxy = ENV
#http_proxy = http://myproxy.domain.com:8080

</verbatim>

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = MatyasSelmeci

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = HowTo
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %NO%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = 
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->


<!-- vim:ft=twiki
-->

%META:TOPICMOVED{by="MatyasSelmeci" date="1358884724" from="Documentation.UpgradeFetchCrl2to3_Preview" to="Documentation.UpgradeFetchCrl2to3_draft"}%
