%META:TOPICINFO{author="BrianBockelman" date="1486498298" format="1.1" reprev="1.11" version="1.11"}%
----+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

The SRM/dCache model is a superset of the [[Trash.ReleaseDocumentationLcgModel][LCG Model]], so this CE satisfies that model, too.  

In the SRM/dCache model, read access is via dcap, while write access is via srmcp only. DCache does not allow modification of a file once it is closed, although write access via dcap is possible in principle and could provide $OSG_SITE_WRITE.  A typical deployment allows writes only via srmcp (i.e., $OSG_DEFAULT_SE) while reads may use either srmcp ($OSG_DEFAULT_SE) or dcap ($OSG_SITE_READ). 

The current SRM implementation in dCache does not allow overwriting of logical files, This guarantees that all physical file replicas of the same logical file remain the same. 

The SRM/dCache model includes the following storage areas:
   * [[StorageParameterOsgGrid][$OSG_GRID]]
   * [[StorageParameterOsgApp][$OSG_APP]]
   * [[Trash.ReleaseDocumentationStorageParameterOsgSiteRead][$OSG_SITE_READ]]
   * [[Trash.ReleaseDocumentationStorageParameterOsgDefaultSe][$OSG_DEFAULT_SE]]
   * [[StorageParameterOsgWnTmp][$OSG_WN_TMP]]

A dataflow example may be: 
   * Site administrator's intervention or external transfer 
   * Job execution (open/seek/read from OSG_SITE_READ using dcap)
   * =srmcp=: OSG_WN_TMP &rarr; OSG_DEFAULT_SE
   * External stage-out

---++ See Also
   * [[http://www.dcache.org/][dCache documentation]]
   * [[https://srm.fnal.gov/twiki/pub/SrmProject/SrmPresentations/SRMDesign.pdf][dCache SRM presentation (PDF) from Dec 2005 dCache/SRM design meeting]]
   * [[GridThreeModelWithOsgSiteRead][Grid3 Model using OSG_SITE_READ and OSG_SITE_WRITE instead of OSG_DATA]]
   * [[Trash.ReleaseDocumentationLcgModel][LCG Model]]
   * [[Trash.ReleaseDocumentationSrmDcacheModel][SRM/dCache Model]]
   * LocalStorageRequirements

%BR%
%COMPLETE1% %BR%
%RESPONSIBLE% Main.RobGardner - 17 Oct 2007 %BR%
%REVIEW% Main.RobGardner - 17 Oct 2007
