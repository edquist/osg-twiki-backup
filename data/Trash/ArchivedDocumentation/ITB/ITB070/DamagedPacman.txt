%META:TOPICINFO{author="KyleGross" date="1225985924" format="1.1" version="1.4"}%
%META:TOPICPARENT{name="PacmanBestPractices"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

---++ How damage happens
Pacman installations can be damaged for any number of reasons. I (Steve Timm) present a case that happened in OSG 0.6.0 (VDT 1.6.1).   A couple
of new packages had been released and so  I tried to do a pacman --update (without actually specifying a particular package) to pull down all the packages at once.  No error was reported but
the setup.sh and setup.csh had shrunk to half of their normal size. A pacman -setup gave the following:

<pre class="screen">
Installation contains uninstalled packages.  See % pacman -lc.
Package [http://vdt.cs.wisc.edu/vdt_161_cache:SRM-V1-Client] not [installed]: Package [http://vdt.cs.wisc.edu/vdt_161_cache:SRM-V1-Client] has not been installed.  Can't setup.
Package [/usr/local/vdt-1.6.1:OSG:ce] not [installed]:
    Package [/usr/local/vdt-1.6.1:OSG:ce] has not been installed.  Can't setup.
[root@d0cabosg2 vdt]# 
</pre>

---++ Diagnosing a busted cache
<pre class="screen">
pacman -lc .
</pre>
This will give you input of which packages are OK, marked by [*], which are partially missing, marked by [X] and which should be there and are
missing altogether, marked by [ ].

<pre class="screen">
[root@d0cabosg2 vdt]# pacman -lc .
/usr/local/vdt-1.6.1
    [*] Ant
    [*] Ant-Questions
    [*] Apache
    [*] Apache-Questions
    [*] BC-Provider
    [*] Berkeley-DB
    [*] CA-Certificates
    [*] CA-Certificates-Base
    [*] CA-Certificates-Questions
    [*] CEMon
    [*] CEMon-Server
    [*] CEMon-Server-Questions
    [*] Condor
    [*] Condor-Environment
    [*] Condor-Questions
    [*] Configure-Apache
    [*] Configure-CEMon
    [*] Configure-Cert-Request
    [*] Configure-Cert-Request-Questions
    [*] Configure-Condor
    [*] Configure-EDG-Make-Gridmap
    [*] Configure-Fetch-CRL
    [*] Configure-GIP
    [*] Configure-GUMS
    [*] Configure-Globus-Gatekeeper
    [*] Configure-Globus-WS
    [*] Configure-Globus-WSGRAM
    [*] Configure-Gratia
    [*] Configure-GridFTP
    [*] Configure-MDS
    [*] Configure-MonaLisa
    [*] Configure-MySQL
    [*] Configure-PRIMA
    [*] Configure-PRIMA-GT4
    [*] Configure-RFT
    [*] Configure-Tomcat
    [*] Configure-VDT-Logrotate
    [*] EDG-Environment
    [*] EDG-Make-Gridmap
    [*] EDG-Make-Gridmap-Questions
    [*] Expat
    [*] Fetch-CRL
    [*] Fetch-CRL-Questions
    [*] GLUE-Schema
    [*] GPT
    [*] GUMS-Client
    [*] GUMS-Client-Questions
    [*] Generic-Information-Provider
    [*] Generic-Information-Provider-Questions
    [*] Globus-Base-Data-Server
    [*] Globus-Base-Data-Server-Questions
    [*] Globus-Base-Essentials
    [*] Globus-Base-Essentials-Questions
    [*] Globus-Base-Info-Client
    [*] Globus-Base-Info-Client-Questions
    [*] Globus-Base-Info-Essentials
    [*] Globus-Base-Info-Essentials-Questions
    [*] Globus-Base-Info-Server
    [*] Globus-Base-Info-Server-Questions
    [*] Globus-Base-Jobmanager-Common
    [*] Globus-Base-Jobmanager-Common-Questions
    [*] Globus-Base-RFT-Client
    [*] Globus-Base-RFT-Client-Questions
    [*] Globus-Base-RFT-Essentials
    [*] Globus-Base-RFT-Essentials-Questions
    [*] Globus-Base-RFT-Server
    [*] Globus-Base-RFT-Server-Questions
    [*] Globus-Base-RM-Client
    [*] Globus-Base-RM-Client-Questions
    [*] Globus-Base-RM-Essentials
    [*] Globus-Base-RM-Essentials-Questions
    [*] Globus-Base-RM-Server
    [*] Globus-Base-RM-Server-Questions
    [*] Globus-Base-WS-Essentials
    [*] Globus-Base-WS-Essentials-Questions
    [*] Globus-Base-WSGRAM-Client
    [*] Globus-Base-WSGRAM-Client-Questions
    [*] Globus-Base-WSGRAM-Essentials
    [*] Globus-Base-WSGRAM-Essentials-Questions
    [*] Globus-Base-WSGRAM-Server
    [*] Globus-Base-WSGRAM-Server-Questions
    [*] Globus-Base-WSMDS-Server
    [*] Globus-Base-WSMDS-Server-Questions
    [*] Globus-Client
    [*] Globus-Client-Questions
    [*] Globus-Condor-Setup
    [*] Globus-Condor-Setup-Questions
    [*] Globus-Environment
    [*] Globus-ManagedFork-Setup
    [*] Globus-ManagedFork-Setup-Questions
    [*] Globus-PBS-Setup
    [*] Globus-PBS-Setup
    [*] Globus-PBS-Setup-Questions
    [*] Globus-RLS-Client
    [*] Globus-RLS-Client-Questions
    [*] Globus-Server
    [*] Globus-Server-Questions
    [*] Globus-Simple-CA
    [*] Globus-Simple-CA-Questions
    [*] Globus-User-Environment
    [*] Globus-WS
    [*] Globus-WS-Client
    [*] Globus-WS-Client-Questions
    [*] Globus-WS-Container
    [*] Globus-WS-Container-Questions
    [*] Globus-WS-Options
    [*] Globus-WS-PBS-Setup
    [*] Globus-WS-PBS-Setup-Questions
    [*] Globus-WS-Questions
    [*] Globus-WS-Server
    [*] Globus-WS-Server-Questions
    [*] Gratia-Common-Probe
    [*] Gratia-Condor-Probe
    [*] Gratia-Condor-Probe-Questions
    [*] Gratia-PBS-Probe
    [*] Gratia-PBS-Probe-Questions
    [*] JDK-1.4
    [*] JDK-1.4-Questions
    [*] Job-Environment
    [*] Job-Environment-Questions
    [*] KX509
    [*] KX509-Questions
    [*] Licenses
    [*] Licenses-Questions
    [*] Logrotate
    [*] Logrotate-Questions
    [*] ManagedFork
    [*] MonaLisa
    [*] MonaLisa-Questions
    [*] MyProxy
    [*] MyProxy-Questions
    [*] MySQL
    [*] MySQL-JDBC
    [*] MySQL-JDBC-Questions
    [*] MySQL-Questions
    [*] OSG-CE
    [*] OSG-CE-Questions
    [*] OSG-Site-Verify
    [*] OSG-VO-Map
    [*] PPDG-Cert-Scripts
    [*] PPDG-Cert-Scripts-Questions
    [*] PRIMA
    [*] PRIMA-GT4
    [*] PRIMA-GT4-Questions
    [ ] Perl
    [*] Perl-Environment
    [*] Perl-Modules
    [*] Perl-Modules-SSL
    [*] Perl-Modules-SSL-Questions
    [*] Python
    [*] Tomcat-5
    [*] Tomcat-5-Questions
    [*] UberFTP
    [*] UberFTP-Questions
    [*] VDS-Worker
    [*] VDS-Worker-Questions
    [*] VDT-Common
    [*] VDT-Configure-Base
    [*] VDT-Core
    [*] VDT-Core-Bin
    [*] VDT-Environment
    [*] VDT-Get-Job-Info
    [*] VDT-Logrotate
    [*] VDT-Logrotate-Questions
    [*] VDT-Questions-Base
    [*] VDT-Service-Management
    [*] VDT-System-Profiler
    [*] VDT-Version
    [*] VDT-Version-Info
    [*] VOMS-Client
    [*] VOMS-Client-Questions
    [*] VOMS-Environment
    [*] VOMS-Essentials
    [*] Wget
    [*] Wget-Questions
    [X] ce
    [*] client
    [*] gLite-Environment
    [*] osg-auto-0.6.0
    [*] vo-0.6
</pre>
Note that the "ce" package is the one with the [X].

I then show the following: (The =-d 2= shows two levels deep of dependencies.. you can go up to 9 levels deep if you want).

<pre class="screen">
[root@d0cabosg2 vdt]# pacman -l ce -d 2
[X] ce
    [*] osg-auto-0.6.0
    [*] OSG-CE
        [*] VDT-Common...
        [*] OSG-CE-Questions...
        [*] VDS-Worker...
        [*] Globus-Server...
        [*] Globus-WS...
        [*] PRIMA...
        [*] KX509...
        [*] GLUE-Schema...
        [*] Generic-Information-Provider...
        [*] EDG-Make-Gridmap...
        [*] VOMS-Client...
        [*] PPDG-Cert-Scripts...
        [*] Globus-RLS-Client...
        [*] GUMS-Client...
        [*] Globus-Client...
        [*] UberFTP...
        [*] MyProxy...
        [*] Job-Environment...
        [*] MonaLisa...
        [*] Wget...
        [*] PRIMA-GT4...
        [*] OSG-VO-Map...
    [*] CEMon
        [*] CEMon-Server...
    [*] vo-0.6
    [ ] SRM-V1-Client
        [*] VDT-Common...
        [ ] SRM-V1-Client-Questions...
        [*] Licenses...
        [ ] JDK-1.5...
        [*] Globus-Base-Essentials...
        [ ] Configure-SRM...
        [*] CA-Certificates...
    [ ] SRM-V2-Client
        [*] VDT-Common...
        [ ] SRM-V2-Client-Questions...
        [*] Licenses...
        [*] JDK-1.4...
        [*] Globus-Base-Essentials...
        [*] CA-Certificates...
    [*] OSG-Site-Verify
        [*] VDT-Common...
[root@d0cabosg2 vdt]#      
</pre>

So what had happened is that someone had added packages SRM-V1-Client and SRM-V2-Client to the default definition of OSG:ce *after* the OSG 0.6.0
release.  Pacman is smart enough to detect they are missing but not to just go out and get them.

The first time I tried to debug this, I did pacman -repair.  That was a mistake. It blew some 15 packages away and I was forced to reinstall them one by one.
I could have and should have just installed the SRM clients. First verifying from http://software.grid.iu.edu which cache they are supposed to come from, i.e. straight from the VDT or via the OSG.

Then 
<pre>
pacman -get http://vdt.cs.wisc.edu/vdt_161_cache:SRM-V1-Client
pacman -get http://vdt.cs.wisc.edu/vdt_161_cache:SRM-V2-Client
</pre>
After this I got the following:
<pre>
Message has not been shown
Package [/usr/local/vdt-1.6.1:OSG:ce] not [installed]:
    Package [/usr/local/vdt-1.6.1:OSG:ce] has not been installed.  Can't setup.
[root@d0cabosg2 vdt]#      
root@d0cabosg2 vdt]# pacman -get OSG:ce
Package [/usr/local/vdt-1.6.1:OSG:ce] not [installed]:
    Package [/usr/local/vdt-1.6.1:OSG:osg-auto-0.6.0] not [installed]:
        Failure attempting to [cd /usr/local/vdt-1.6.1/auto-vdt-1.6.1, retract to /usr/local/vdt-1.6.1] at [/usr/local/vdt-1.6.1].
</pre>
But by making the directory, then the install was successful.
<pre>
[root@d0cabosg2 vdt]# mkdir auto-vdt-1.6.1
[root@d0cabosg2 vdt]# pacman -get OSG:ce

Pacman Installation of OSG-0.6.0 Complete
</pre>

It was then necessary to make sure that necessary services which had been updated were re-enabled.  Sometimes this can be done with =vdt-control --on=, other times you have to run configure-osg.sh again.


%STOPINCLUDE%
%BR%
%COMPLETE1% %BR%
%RESPONSIBLE% Main.StevenTimm - 18 Oct 2007 %BR%
%REVIEW%