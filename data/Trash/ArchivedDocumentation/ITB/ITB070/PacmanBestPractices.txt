%META:TOPICINFO{author="AnneHeavey" date="1188942664" format="1.1" version="1.23"}%
%LINKCSS%
<!-- This is the default OSG Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!! Pacman Guide for OSG
%TOC%
%STARTINCLUDE%

%INCLUDE{"PacmanInstall"}%

---++ General Instructions for using Pacman
%EDITTHIS%

These are general instructions for installing any software from a Pacman cache.
<pre class="screen">
 > <b>mkdir INSTALLATION_DIRECTORY</b>  <em># e.g. /usr/local/osg</em>
 > <b>cd INSTALLATION_DIRECTORY</b>
 > <b>pacman -get %CACHE%:PACKAGE_NAME</b>  <em># e.g. ce (for %CACHE%)</em> 
</pre>

Note that you can skip the questions on whether to trust the various pacman caches by saying
<pre class="screen">
 > <b>pacman -trust-all-caches ....</b>
</pre>

---++ Troubleshooting pacman

---+++ Installation problems
As you install, monitor the $VDT_LOCATION/vdt-install.log.  

   * If pacman tries to retrieve something from a website that's having problems, you'll get an error message that's unrelated to the real problem because pacman can't recognize 404 errors when downloading tarballs.  For example, when the PRIMA download site was down, it told us the file wasn't in the correct format:
<pre>
vdt-untar is untarring prima-0.3.x86_rh_9.tar.gz
gzip: stdin: not in gzip format 
</pre>

---+++ Unsupported Platforms
If you get an error message indicating ".....is not yet supported", you may need to specify the pacman command with the following argument:
<pre class="screen">
 > <b>pacman -pretend-platform:<em>[PLATFORM]</em> -get OSG:ce</b>
</pre>

where =<em>[PLATFORM]</em>= is your platform (e.g., =RHEL-3=).

To see a list of the defined pacman platforms (not all of which are yet supported), execute:

<pre class="screen">
 > <b>pacman -platforms</b>
</pre>

---+++ setup.sh issues
Pacman normally removes =setup.sh= at the start of an installation and, if successful, restores the file. The VDT grid middleware will fail to work if the setup.sh script is unavailable.

*To allow out of date setup scripts to remain during installation or updates:*

<pre class="screen">
 > <b>pacman -allow save-setup</b>
</pre>

*To attempt recovery of the setup.sh file:*
<pre class="screen">
 > <b>pacman -setup</b>
</pre>

---+++ Dealing with a damaged pacman installation
---++++ Stop the damage before it starts:
If you are doing a dicey pacman installation, copy the whole installation
to a backup directory, so you can move it back later.

If you just have to do pacman -update of a single package, by all means 
specify that just one package.  That usually works.

Never under any circumstances try to add pacman packages from
a newer or older vdt version to an existing pacman directory.

Pacman installations don't work if you move them to some other
directory than what you installed them as.  I recommend using
a versioned directory, for example /usr/local/vdt-1.6.1 and then
symlink /usr/local/vdt to be the current version of whatever you are using.

---++++ How damage happens
Pacman installations can be damaged for any number of reasons.  
I present a case that happened in OSG 0.6.0 (VDT 1.6.1).   A couple
of new packages had been released and so  I tried to do a 
pacman --update (without actually specifying a particular package) to pull
down all the packages at once.  No error was reported but
the setup.sh and setup.csh had shrunk to half of their normal size.
a pacman -setup gave the following:

<pre>
Installation contains uninstalled packages.  See % pacman -lc.
Package [http://vdt.cs.wisc.edu/vdt_161_cache:SRM-V1-Client] not [installed]: Package [http://vdt.cs.wisc.edu/vdt_161_cache:SRM-V1-Client] has not been installed.  Can't setup.
Package [/usr/local/vdt-1.6.1:OSG:ce] not [installed]:
    Package [/usr/local/vdt-1.6.1:OSG:ce] has not been installed.  Can't setup.
[root@d0cabosg2 vdt]# 
</pre>
---++++ Diagnosing a busted cache
<pre>
pacman -lc .
</pre>
This will give you input of which packages are OK, marked by [*], which
are partially missing, marked by [X] and which should be there and are
missing altogether, marked by [ ].
<pre>
[root@d0cabosg2 vdt]# pacman -lc .
/usr/local/vdt-1.6.1
    [*] Ant
    [*] Ant-Questions
    [*] Apache
    [*] Apache-Questions
    [*] BC-Provider
    [*] Berkeley-DB
    [*] CA-Certificates
    [*] CA-Certificates-Base
    [*] CA-Certificates-Questions
    [*] CEMon
    [*] CEMon-Server
    [*] CEMon-Server-Questions
    [*] Condor
    [*] Condor-Environment
    [*] Condor-Questions
    [*] Configure-Apache
    [*] Configure-CEMon
    [*] Configure-Cert-Request
    [*] Configure-Cert-Request-Questions
    [*] Configure-Condor
    [*] Configure-EDG-Make-Gridmap
    [*] Configure-Fetch-CRL
    [*] Configure-GIP
    [*] Configure-GUMS
    [*] Configure-Globus-Gatekeeper
    [*] Configure-Globus-WS
    [*] Configure-Globus-WSGRAM
    [*] Configure-Gratia
    [*] Configure-GridFTP
    [*] Configure-MDS
    [*] Configure-MonaLisa
    [*] Configure-MySQL
    [*] Configure-PRIMA
    [*] Configure-PRIMA-GT4
    [*] Configure-RFT
    [*] Configure-Tomcat
    [*] Configure-VDT-Logrotate
    [*] EDG-Environment
    [*] EDG-Make-Gridmap
    [*] EDG-Make-Gridmap-Questions
    [*] Expat
    [*] Fetch-CRL
    [*] Fetch-CRL-Questions
    [*] GLUE-Schema
    [*] GPT
    [*] GUMS-Client
    [*] GUMS-Client-Questions
    [*] Generic-Information-Provider
    [*] Generic-Information-Provider-Questions
    [*] Globus-Base-Data-Server
    [*] Globus-Base-Data-Server-Questions
    [*] Globus-Base-Essentials
    [*] Globus-Base-Essentials-Questions
    [*] Globus-Base-Info-Client
    [*] Globus-Base-Info-Client-Questions
    [*] Globus-Base-Info-Essentials
    [*] Globus-Base-Info-Essentials-Questions
    [*] Globus-Base-Info-Server
    [*] Globus-Base-Info-Server-Questions
    [*] Globus-Base-Jobmanager-Common
    [*] Globus-Base-Jobmanager-Common-Questions
    [*] Globus-Base-RFT-Client
    [*] Globus-Base-RFT-Client-Questions
    [*] Globus-Base-RFT-Essentials
    [*] Globus-Base-RFT-Essentials-Questions
    [*] Globus-Base-RFT-Server
    [*] Globus-Base-RFT-Server-Questions
    [*] Globus-Base-RM-Client
    [*] Globus-Base-RM-Client-Questions
    [*] Globus-Base-RM-Essentials
    [*] Globus-Base-RM-Essentials-Questions
    [*] Globus-Base-RM-Server
    [*] Globus-Base-RM-Server-Questions
    [*] Globus-Base-WS-Essentials
    [*] Globus-Base-WS-Essentials-Questions
    [*] Globus-Base-WSGRAM-Client
    [*] Globus-Base-WSGRAM-Client-Questions
    [*] Globus-Base-WSGRAM-Essentials
    [*] Globus-Base-WSGRAM-Essentials-Questions
    [*] Globus-Base-WSGRAM-Server
    [*] Globus-Base-WSGRAM-Server-Questions
    [*] Globus-Base-WSMDS-Server
    [*] Globus-Base-WSMDS-Server-Questions
    [*] Globus-Client
    [*] Globus-Client-Questions
    [*] Globus-Condor-Setup
    [*] Globus-Condor-Setup-Questions
    [*] Globus-Environment
    [*] Globus-ManagedFork-Setup
    [*] Globus-ManagedFork-Setup-Questions
    [*] Globus-PBS-Setup
    [*] Globus-PBS-Setup
    [*] Globus-PBS-Setup-Questions
    [*] Globus-RLS-Client
    [*] Globus-RLS-Client-Questions
    [*] Globus-Server
    [*] Globus-Server-Questions
    [*] Globus-Simple-CA
    [*] Globus-Simple-CA-Questions
    [*] Globus-User-Environment
    [*] Globus-WS
    [*] Globus-WS-Client
    [*] Globus-WS-Client-Questions
    [*] Globus-WS-Container
    [*] Globus-WS-Container-Questions
    [*] Globus-WS-Options
    [*] Globus-WS-PBS-Setup
    [*] Globus-WS-PBS-Setup-Questions
    [*] Globus-WS-Questions
    [*] Globus-WS-Server
    [*] Globus-WS-Server-Questions
    [*] Gratia-Common-Probe
    [*] Gratia-Condor-Probe
    [*] Gratia-Condor-Probe-Questions
    [*] Gratia-PBS-Probe
    [*] Gratia-PBS-Probe-Questions
    [*] JDK-1.4
    [*] JDK-1.4-Questions
    [*] Job-Environment
    [*] Job-Environment-Questions
    [*] KX509
    [*] KX509-Questions
    [*] Licenses
    [*] Licenses-Questions
    [*] Logrotate
    [*] Logrotate-Questions
    [*] ManagedFork
    [*] MonaLisa
    [*] MonaLisa-Questions
    [*] MyProxy
    [*] MyProxy-Questions
    [*] MySQL
    [*] MySQL-JDBC
    [*] MySQL-JDBC-Questions
    [*] MySQL-Questions
    [*] OSG-CE
    [*] OSG-CE-Questions
    [*] OSG-Site-Verify
    [*] OSG-VO-Map
    [*] PPDG-Cert-Scripts
    [*] PPDG-Cert-Scripts-Questions
    [*] PRIMA
    [*] PRIMA-GT4
    [*] PRIMA-GT4-Questions
    [ ] Perl
    [*] Perl-Environment
    [*] Perl-Modules
    [*] Perl-Modules-SSL
    [*] Perl-Modules-SSL-Questions
    [*] Python
    [*] Tomcat-5
    [*] Tomcat-5-Questions
    [*] UberFTP
    [*] UberFTP-Questions
    [*] VDS-Worker
    [*] VDS-Worker-Questions
    [*] VDT-Common
    [*] VDT-Configure-Base
    [*] VDT-Core
    [*] VDT-Core-Bin
    [*] VDT-Environment
    [*] VDT-Get-Job-Info
    [*] VDT-Logrotate
    [*] VDT-Logrotate-Questions
    [*] VDT-Questions-Base
    [*] VDT-Service-Management
    [*] VDT-System-Profiler
    [*] VDT-Version
    [*] VDT-Version-Info
    [*] VOMS-Client
    [*] VOMS-Client-Questions
    [*] VOMS-Environment
    [*] VOMS-Essentials
    [*] Wget
    [*] Wget-Questions
    [X] ce
    [*] client
    [*] gLite-Environment
    [*] osg-auto-0.6.0
    [*] vo-0.6
</pre>
Note that the "ce" package is the one with the [X]

I then show the following:
(The =-d 2= shows two levels deep of dependencies.. you can go up to 9 levels
deep if you want).
<pre>
[root@d0cabosg2 vdt]# pacman -l ce -d 2
[X] ce
    [*] osg-auto-0.6.0
    [*] OSG-CE
        [*] VDT-Common...
        [*] OSG-CE-Questions...
        [*] VDS-Worker...
        [*] Globus-Server...
        [*] Globus-WS...
        [*] PRIMA...
        [*] KX509...
        [*] GLUE-Schema...
        [*] Generic-Information-Provider...
        [*] EDG-Make-Gridmap...
        [*] VOMS-Client...
        [*] PPDG-Cert-Scripts...
        [*] Globus-RLS-Client...
        [*] GUMS-Client...
        [*] Globus-Client...
        [*] UberFTP...
        [*] MyProxy...
        [*] Job-Environment...
        [*] MonaLisa...
        [*] Wget...
        [*] PRIMA-GT4...
        [*] OSG-VO-Map...
    [*] CEMon
        [*] CEMon-Server...
    [*] vo-0.6
    [ ] SRM-V1-Client
        [*] VDT-Common...
        [ ] SRM-V1-Client-Questions...
        [*] Licenses...
        [ ] JDK-1.5...
        [*] Globus-Base-Essentials...
        [ ] Configure-SRM...
        [*] CA-Certificates...
    [ ] SRM-V2-Client
        [*] VDT-Common...
        [ ] SRM-V2-Client-Questions...
        [*] Licenses...
        [*] JDK-1.4...
        [*] Globus-Base-Essentials...
        [*] CA-Certificates...
    [*] OSG-Site-Verify
        [*] VDT-Common...
[root@d0cabosg2 vdt]#      
</pre>
So what had happened is that someone had added packages SRM-V1-Client 
and SRM-V2-Client to the default definition of OSG:ce *after* the OSG 0.6.0
release.  Pacman is smart enough to detect they are missing but not
to just go out and get them.

The first time I tried to debug this, I did pacman -repair.  That was a mistake.
It blew some 15 packages away and I was forced to reinstall them one by one.
I could have and should have just installed the SRM clients.
First verifying from http://software.grid.iu.edu which cache they are
supposed to come from, i.e. straight from the VDT or via the OSG.

%RED%Does all this info belong here?%ENDCOLOR%

Then 
<pre>
pacman -get http://vdt.cs.wisc.edu/vdt_161_cache:SRM-V1-Client
pacman -get http://vdt.cs.wisc.edu/vdt_161_cache:SRM-V2-Client
</pre>
After this I got the following:
<pre>
Message has not been shown
Package [/usr/local/vdt-1.6.1:OSG:ce] not [installed]:
    Package [/usr/local/vdt-1.6.1:OSG:ce] has not been installed.  Can't setup.
[root@d0cabosg2 vdt]#      
root@d0cabosg2 vdt]# pacman -get OSG:ce
Package [/usr/local/vdt-1.6.1:OSG:ce] not [installed]:
    Package [/usr/local/vdt-1.6.1:OSG:osg-auto-0.6.0] not [installed]:
        Failure attempting to [cd /usr/local/vdt-1.6.1/auto-vdt-1.6.1, retract to /usr/local/vdt-1.6.1] at [/usr/local/vdt-1.6.1].
</pre>
But by making the directory, then the install was successful.
<pre>
[root@d0cabosg2 vdt]# mkdir auto-vdt-1.6.1
[root@d0cabosg2 vdt]# pacman -get OSG:ce

Pacman Installation of OSG-0.6.0 Complete
</pre>
It was then necessary to make sure that necessary services which had
been updated were re-enabled.  sometimes this can be done with vdt-control --on,
other times you have to run configure-osg.sh again.

---+++ Removing packages with pacman
If you installed a package that you may later have deemed unnecessary, you can remove it by issuing the pacman command with the remove option.

<pre class="screen">
 > <b>pacman -remove <em>package_name</em></b>
</pre>

For details on these commands, see the [[http://physics.bu.edu/pacman][Pacman home page]].

%STOPINCLUDE%

<hr/>
%BOTTOMMATTER%

<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->
*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.ForrestChristian - 30 Jan 2007: copyedits<br>
-- Main.AlainRoy- 22 Feb 2007: Minor edits%BR%
-- Main.JohnWeigand - 09 Jul 2007 - updated for VDT 1.7.1%BR%

<!-- This INCLUDE produces a WHU cross-reference for this topic -->


%META:TOPICMOVED{by="ForrestChristian" date="1166056473" from="Integration.PacmanInfo050" to="Integration/ITB_0_5.PacmanInfo"}%
