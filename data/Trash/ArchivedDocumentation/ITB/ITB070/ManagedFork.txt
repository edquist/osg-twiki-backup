%META:TOPICINFO{author="BrianBockelman" date="1486495942" format="1.1" reprev="1.28" version="1.28"}%
%META:TOPICPARENT{name="Trash.ReleaseDocumentationComputeElementInstall"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

%STARTINCLUDE%
%BR%
---+ _%INCLUDEHEADING%  %SPACEOUT{ "%TOPIC%" }%_
%EDITTHIS%
%BR%

---++ Introduction to Managed Fork

With OSG 0.4.1 and greater an optional service called the Managed Fork has been introduced. This service replaces the default jobmanager fork with a jobmanager which uses Condor to manage the incoming jobmanager fork requests.  condor_q and condor_history can then be used to see the actual command lines of the fork jobs as they run and afterwards, providing an important logging capacity. More importantly, the number of fork jobs can be controlled with a configurable policy, to help ensure that the CE is not overwhelmed by fork jobs. This is a very important consideration: the standard fork manager allows a user to accidentally or maliciously "fork bomb" a CE.

%IMPORTANT% Using the Managed Fork job manager does not require you to use Condor for your entire cluster: it can be run just on the CE in order to manage fork jobs. 

The standard fork jobmanager is used to spawn jobs on the gatekeeper/headnode, the Managed Fork updates the fork jobmanager to submit requests to the local universe Condor queue instead. These jobs are still run on the gatekeeper/headnode, but the jobs may now be subject to limitations and
priority as assigned by the local system administrator.
 

By using the "local universe" fork jobs are not actually subject to scheduling delays, unless the total number of allowed fork jobs of a given type is exceeded.


---++ Managed Fork Package Installation

There are two methods for setting up the Managed Fork Job Manager:

---+++ !!Method 1: If you want to use Condor from the VDT

If you want to use Condor from the VDT, installation is simple:

<pre class="screen">
&gt; <b>cd $VDT_LOCATION</b>
&gt; <b>source $VDT_LOCATION/setup.sh</b>
&gt; <b>pacman -get  %CACHE%:Trash.ReleaseDocumentationManagedFork</b>
</pre>

---+++ !!Method 2: If you want to use your own version of Condor

Some sites install Condor separately from the VDT and want to use that installation for the Managed Fork jobmanger. The installation process is similar, but make sure you have =VDTSETUP_CONDOR_LOCATION= and =VDTSETUP_CONDOR_CONFIG= defined as shown in Trash.ReleaseDocumentationPreparingComputeElement in order to specify your external Condor installation.  The installation is done in same directory as the OSG CE software. 

[[%VDT_DOCS_URL%/existing-condor.html][More information on these environment variables]]

Once you do this, do the same installation:
<pre class="screen">
&gt; <b>cd $VDT_LOCATION</b>
&gt; <b>source $VDT_LOCATION/setup.sh</b>
&gt; <b>pacman -get  %CACHE%:Trash.ReleaseDocumentationManagedFork</b>
</pre>

---++ Enabling/Disabling Managed Fork 
---+++ !!Enable

To configure the default jobmanager to be the managed fork jobmanager, execute the following command.
<pre class="screen">
&gt; <b>source $VDT_LOCATION/setup.sh</b>
&gt; <b>$VDT_LOCATION/vdt/setup/configure_globus_gatekeeper --managed-fork y --server y</b>
</pre>

By default, the managed fork jobmanager will behave just like the fork jobmanager.  If you wish to restrict it, you need to modify your local Condor configuration.  If you're using Condor from the VDT this can be done by editing =$VDT_LOCATION/condor/local.&lt;hostname&gt;/condor_config.local=.

Only allow 20 local universe jobs to execute concurrently: 
<pre class="programlisting">
   START_LOCAL_UNIVERSE = TotalLocalJobsRunning < 20
</pre>

Set a hard limit on most jobs, but always let grid monitor jobs run (strongly recommended):
<pre class="programlisting">
   START_LOCAL_UNIVERSE = TotalLocalJobsRunning < 20 || GridMonitorJob =?= TRUE
</pre>

---+++ !!Disable
To put back in place the default fork jobmanager (i.e. to disable managed fork jobmanager), execute the following command.
<pre class="screen">
&gt; <b>source $VDT_LOCATION/setup.sh</b>
&gt; <b>$VDT_LOCATION/vdt/setup/configure_globus_gatekeeper --managed-fork n --server y</b>
</pre>

---++ Further Details on Managed Fork

For more details on setup and configuration, refer to the [[%VDT_DOCS_URL%/notes/Globus-Trash.ReleaseDocumentationManagedFork-Setup.html][VDT Managed Fork Jobmanager Release Notes]].

%STOPINCLUDE%
%BR%
%COMPLETE2% %BR%
%RESPONSIBLE% Main.StevenTimm - 25 Oct 2007 %BR%
%REVIEW%

%META:TOPICMOVED{by="ForrestChristian" date="1166051931" from="Integration.ManagedFork050" to="Integration/ITB_0_5.ManagedFork"}%
