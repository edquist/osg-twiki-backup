%META:TOPICINFO{author="KyleGross" date="1225985924" format="1.1" version="1.3"}%
%META:TOPICPARENT{name="VomsWhatToDo"}%
%LINKCSS%


---+!! Verifying The VirtualOrganizations/VOInfoMS Installation
%TOC%

%STARTINCLUDE%
---++Verifying the Success of the VirtualOrganizations/VOInfoMS Installation
%EDITTHIS%

If all the required certificates were in place prior to the pacman installation, a default VirtualOrganizations/VOInfo called <i>VDT</i> has been created. The =init.d= services have been started.  To start those services and verify the success of your installation:
<pre class="screen">
> cd $VDT_LOCATION
> source setup.sh
> vdt-control --on
</pre>

All the daemon services should be up and running. This section will take you through the steps necessary to verify that and can also serve as a basic operational trouble shooting guide.

For  all the verifications, you will need to source the VDT setup.(c)sh script:

<pre class="screen">
&gt; <b>cd <em>VDT_LOCATION</em></b>
&gt; <b>source setup.sh</b>
</pre>

---+++ Verifying  the CRL update cron
The EDG CRL update process (essential if you are collaborating with EDG people) updates the certificate revocation lists on a daily (default) basis.  With the OSG-0.5.0 release, this process is now invoked as a <i>root</i> cron process. 

<pre class="programlisting">
33 5 * * * YOUR_VDT_LOCATION/fetch-crl/share/doc/fetch-crl-2.6.0/fetch-crl.cron
</pre>

The time (05:33 in this case) was selected randomly at installation time and should be different for each installation. This was done to avoid contention on the CA hosts.

To verify it is running is a little more difficult now that it is a cron process.  If the time has past for the cron <i>fetch-crl.cron</i> process to run, you can simply go to your certificates directory and see if the <i>*.r0</i> files exist and have time stamps close to the cron time.  If they exist and have a timestamp close to the cron time, all is well.

<pre class="screen">
&gt; <b>cd <em>VDT_LOCATION</em></b>
&gt; <b>source setup.sh</b>
&gt; <b>cd $X509_CADIR</b>
&gt; <b>ls -l *.r0</b>
<i>....(some sample output)....</i>
-rw-r--r--    1 root     root        10024 Sep  1 05:33 9dd23746.r0
-rw-r--r--    1 root     root        62032 Sep  1 05:33 a317c467.r0
-rw-r--r--    1 root     root        17723 Sep  1 05:33 a692434d.r0
</pre>

If it does not look like it is working, you can run the <i>fetch-crl.cron</i> process manually and review the output.  

The current <i>fetch-crl.cron</i> script checks a variable called <i>QUIET</i> to suppress output.  Set and export this variable, then run the script as seen in the crontab.

<pre class="screen">
&gt; <b>export QUIET=no</b>
</pre>

%NOTE% The number of CRL files does not directly correlate to the number of CAs, but there should be at least one and they should never be more than a day old unless the cron or cron job is not working.


---+++ Verifying  the apache/tomcat daemon
To verify that Apache is running:
<pre class="screen">
&gt; <b>ps -efwww |  grep  apache  |grep httpd</b>
  <em>(there will be a number of these)</em>
root        25014        1  0 Aug31 ?    00:00:03 /usr/local/osg-voms/apache/bin/httpd 
                    -d /usr/local/osg-voms/apache -k start -f /usr/local/osg-voms/apache/conf/httpd.conf
daemon   30034 25014  0 Aug31 ?    00:00:00 /usr/local/osg-voms/apache/bin/httpd 
                    -d /usr/local/osg-voms/apache -k start -f /usr/local/osg-voms/apache/conf/httpd.conf
      :
</pre>

%NOTE% Verify that it is the only one running with <i>init (pid=1)</i> as it's parent and the path contains your VDT_LOCATION.  

To verify Tomcat is running:
<pre class="screen">
&gt; <b>ps -efwww |  grep tomcat</b>
daemon   30097     1  0 Aug31 ?        00:00:12 /usr/local/osg-voms/jdk1.4/bin/java            
                  -Djava.endorsed.dirs=/usr/local/osg-voms/tomcat/v5/common/endorsed 
                  -classpath /usr/local/osg-voms/jdk1.4/lib/tools.jar:/usr/local/osg-voms/tomcat/v5/bin/bootstrap.jar:/usr/local/osg-voms/tomcat/v5/bin/commons-logging-api.jar      
                  -Dcatalina.base=/usr/local/osg-voms/tomcat/v5 -Dcatalina.home=/usr/local/osg-voms/tomcat/v5 
                  -Djava.io.tmpdir=/usr/local/osg-voms/tomcat/v5/temp org.apache.catalina.startup.Bootstrap start
    :
    :
</pre>

%NOTE% Verify that it is the only one running with <tt>init (pid=1)</tt> as it's parent and the path contains your VDT_LOCATION.  


---+++Verifying  the mysql daemon
<nop>MySql  is used to provide persistent storage of the VirtualOrganizations/VOInfoMS VirtualOrganizations/VOInfo membership data. To verify it is running:

<pre class="screen">
&gt; <b>ps -efwww |  grep  mysql</b>
root     22826     1  0 Aug31 ?        00:00:00 /bin/sh /usr/local/osg-voms/mysql/real-bin/mysqld_safe 
                   --defaults-file=/usr/local/osg-voms/mysql/var/my.cnf 
                   --datadir=/usr/local/osg-voms/vdt-app-data/mysql/var
                   --pid-file=/usr/local/osg-voms/vdt-app-data/mysql/var/cms-xen3.fnal.gov.pid
    :
    :
</pre>

%NOTE% Verify that it is the only one running with <i>init (pid=1)</i> as it's parent and the path contains your VDT_LOCATION. 

---+++Verifying the VirtualOrganizations/VOInfoMS WEB UI
If all the certificates were in place prior to the pacman installation, a default VirtualOrganizations/VOInfo called <i>VDT</i> was configured.
To verify it is accessible:

   1. Point a certificate-enabled browser window to https://<i>your.host.name</i>:8443/voms/VDT
      * You should be prompted for your certificates passphrase
      * You should get a <i>Welcome to the VDT VO</i> page
   1. In the left hand menu under <i>FOR VirtualOrganizations/VOInfo USERS</i>, select *My membership details*. The membership details page should say <i>You are not currently a member of this VO</i>, which you  are not yet.
   1. Go <i>Back</i>  in your browser.
   1. Click *Administer the VO* under *FOR VirtualOrganizations/VOInfo MANAGERS* on the left menu, then click *Create a New VirtualOrganizations/VOInfo User*.  You should get <i>Access denied</i>.
   1. Go <i>Back</i> twice in your browser to return to the main page.
   1. Click *Configuration information* under *Configuration*. The 3 items displayed provide the syntax and data content used for the various authorization modes available on the grid  for your VO.  

At this point, you know your VirtualOrganizations/VOInfoMS WEB UI is functional.

---+++Verifying the VirtualOrganizations/VOInfoMS server daemon
The VirtualOrganizations/VOInfoMS server's only purpose is to service <i>voms-proxy-init</i> requests for your VO. 
To verify the VirtualOrganizations/VOInfoMS server is running:
<pre class="screen">
&gt; <b>ps -efwww | grep edg-voms</b>
daemon   28440     1  0 Aug31 ?        00:00:00 /usr/local/osg-voms/glite/sbin/edg-voms 
                                       --conf /usr/local/osg-voms/glite/etc/voms/VDT/voms.conf
daemon   29287     1  0 Aug31 ?        00:00:00 /usr/local/osg-voms/glite/sbin/edg-voms 
                                      --conf /usr/local/osg-voms/glite/etc/voms/VDT/voms.conf
</pre>

%NOTE% There are individual <i>VirtualOrganizations/VOInfoMS servers</i> for each VO, each using a unique port to service requests.
%NOTE% There are usually 2 <i>edg-voms</i> processes that are running for each VO. There are times when only 1 is running and the server works fine. This is one of those mysteries in life that one just accepts.
%NOTE% Verify that  the path contains your <i>VDT_LOCATION</i>.

---+++Verifying the VirtualOrganizations/VOInfoMS version
The voms-admin and voms server versions can be verified using the following command:
<pre class="screen">
&gt; <b>voms-admin -vo VDT  -version</b>
voms-admin v1.2.13-1
server side is v1.2.15
</pre>

If the versions do not display, then there is a problem with either the web interface or the VirtualOrganizations/VOInfoMS server.

---++Securing your server
All access to VirtualOrganizations/VOInfoMS is through apache and tomcat, even the command line <i>voms-admin</i> command.  To secure your server and require only authenticated access, run the following command.

<pre class="screen">
&gt; <b>source $VDT_LOCATION/setup.sh</b>
&gt; <b>$VDT_LOCATION/vdt/setup/configure_apache --secure</b>
&gt; <b>/etc/init.d/apache restart</b>
restart
</pre>

---++Securing the <nop>MySQL database
The installation does <b>not</b> set the <i>root</i> password for the <nop>MySQL database used by VirtualOrganizations/VOInfoMS.  

%NOTE% Once the <i>root</i> password is set, you will be prompted for your password on all subsequent =configure_voms= and =voms-admin= admin commands.

To set the <i>root</i> password:

<pre class="screen">
&gt; <b>source $VDT_LOCATION/setup.sh</b>
&gt; <b>mysqladmin -uroot  password 'YOUR_ROOT_PASSWORD'</b>
</pre>






%STOPINCLUDE%

%BOTTOMMATTER%

-- Main.JohnWeigand - 27 Feb 2007

%META:TOPICMOVED{by="JohnWeigand" date="1172606959" from="Integration/ITB_0_5.VOMSInstallationVerification" to="Integration/ITB_0_5.VomsInstallationVerification"}%
