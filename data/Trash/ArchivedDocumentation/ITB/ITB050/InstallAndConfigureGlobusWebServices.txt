%META:TOPICINFO{author="ForrestChristian" date="1170776003" format="1.1" reprev="1.4" version="1.4"}%
%META:TOPICPARENT{name="DocumentationTable"}%
%LINKCSS%
---+!! Installing and Configuring Globus Web Services
%TOC%

%STARTINCLUDE%
%EDITTHIS%
d15 1
<a name="gridmap" />
---++ Basic web services with gridmap authorization
The intent of this section is to provide a basic understanding of some of the files and configurations that have been or have to be done to enable WS-GRAM.
---+++ Installing GLOBUS web services with gridmap authorization
   * ./vdt/setup/configure_globus_wsgram - (see http://vdt.cs.wisc.edu/releases/1.3.10/config/configure_globus_wsgram)
The necessary software for web services using the grid-mapfile for authorizing access is already installed with OSG. Some of the configuration has already been completed, but the service has not been activated.

---+++ Configuring GLOBUS web services
During the installation above, the following configuration scripts have already been run. You can view their output in =$VDT_LOCATION/vdt-install.log=.

d19 1
| =./vdt/setup/configure_globus_ws= | [[http://vdt.cs.wisc.edu/releases/1.3.10/config/configure_globus_ws][VDT description]] |
| =./vdt/setup/configure_globus_wsgram= | [[http://vdt.cs.wisc.edu/releases/1.3.10/config/configure_globus_wsgram][VDT description]] |
d21 4
There are four security configuration files that identify the authorization service.  By default, they are set to using the ==grid-mapfile==. These can be found in =$VDT_LOCATION/globus/etc/=:

There are four security configuration files that identify use of the default <i>gridmap</i> authorization services.  These can be found in =$VDT_LOCATION/globus/etc/=:
d26 2
There are four security configuration files that identify the authorization service.  By default, they are set to using the =grid-mapfile= authorization mode. These can be found in =$VDT_LOCATION/globus/etc/=:
   * globus_delegation_service/factory-security-config.xml
   * globus_wsrf_core/global_security_descriptor.xml
   * globus_wsrf_rft/factory-security-config.xml
   * =globus_delegation_service/factory-security-config.xml=
   * =globus_wsrf_core/global_security_descriptor.xml=
   * =globus_wsrf_rft/factory-security-config.xml=
   * =gram-service/managed-job-factory-security-config.xml=
=$VDT_LOCATION/post-install/README= contains a section called <i>Globus-Base-WS-Essentials</i> with the following:
The =$VDT_LOCATION/post-install/README= contains a section called <i>Globus-Base-WS-Essentials</i> indicating some additional modifications that were made to enable web services:
   * The user selected to run the Globus web services (container) as <i>globus</i> if it already exists. If not, then <i>daemon</i>.
   * That your host certificate was <i>cloned</i> as <i>containercert.pem/containerkey.pem</i> since the globus ws container runs as a non-root user.
The user selected to run the Globus web services (container) is <i>globus</i> if it already exists. If not, then the <i>daemon</i> user is used.
---++++ Web services container user account

---+++ Configuring GLOBUS web services
   * The original configuration file has also been modified to support both =gridmap= and =PRIMA= authorization modes.
---+++ Modifying =/etc/sudoer=
d60 1
   * The sudo home page at http:www.gratisoft.us/sudo/
The specific configuration of the =/etc/sudoers= file for the =gridmap= and =PRIMA= authorization modes are detailed in their respective sections later in this document.
---+++ Modifying =/etc/sudoer= for gridmap authorization
 
The _Globus-Base-WSGRAM-Server_ section in =$VDT_LOCATION/post-install/README= describes the necessary modifications to the =/etc/sudoer= file for the web services GRAM to function properly.

%NOTE% This must be done manually.
%IMPORTANT% Modifications to the =/etc/sudoers= file must be performed manually and should be done using the =visudo= command.  This command insures single user access to the file and also performs some basic validation on the syntax before allowing you to save the file. Paths to =/etc/sudoer= cannot be soft links. Use full paths only.
Make these changes now, keeping in mind the user under which VDT determined your container will run.
In the example that follows, the web services user is the <i>daemon</i> user and the VDT_LOCATION = =/usr/local/osg-ce=:
---+++ Gridmap authorizations
%IMPORTANT% Paths =/etc/sudoer= cannot be soft links. Use full paths only.
Manually modify the =/etc/sudoers= file keeping in mind the user under which VDT determined your container will run.
In the example that follows, the web services user is the _daemon_ user and the <tt>VDT_LOCATION = /usr/local/osg-ce</tt>:

%IMPORTANT% Modifications to the =/etc/sudoers= file must be performed manually and should be done using the =visudo= command.  This command insures single user access to the file and also performs some basic validation on the syntax before allowing you to save the file. Paths to =/etc/sudoer= cannot be soft links. Use full paths only.

<pre class="programlisting">
Runas_Alias GLOBUSUSERS = ALL, !root
<b>daemon</b> ALL=(GLOBUSUSERS) &#92;
     NOPASSWD: /usr/local/osg-ce/globus/libexec/globus-gridmap-and-execute &#92;
     -g /etc/grid-security/grid-mapfile &#92;
     /usr/local/osg-ce/globus/libexec/globus-job-manager-script.pl *
<b>daemon</b> ALL=(GLOBUSUSERS) &#92;
---+++ Globus-WS for Condor
     -g /etc/grid-security/grid-mapfile &#92;
To set up Condor to work with WS, see [[][Job Manager (Condor) not configured for web services]].
     /usr/local/osg-ce/globus/libexec/globus-gram-local-proxy-tool *
There is a gram-services configuration file that is not getting updated correctly if your certificates directory is _not_ =/etc/grid-security/certificates=. You will need to manually change the <i>value</i> element in the =$VDT_LOCATION/globus/etc/gram-service/jndi-config.xml=:

<pre class="programlisting">
&lt;parameter&gt;
  &lt;name&gt;
   x509CertDir
  &lt;name&gt;
  &lt;value&gt;
    /usr/local/osg-ce/globus/share/certificates
  &lt;value&gt;
&lt;parameter&gt;
</pre>

If you have already started the Globus container, you will have to re-start it.  If not, you can wait and do it in a later step.

---+++ Logging Web services logging
Web services are logged to =/VDT_LOCATION/globus/var/container-real.log=. The default settings provide zero visibility into what is happening, but will identify error or warnings when they occur.

You can use the default settings or use custom ones.


---+++ Reset permissions for web services
Just to be safe, it is probably a good idea to make sure the ownership and  permissions on some of the web services files are set correctly. This is done with the <i>$VDT_LOCATION/vdt/setup/configure_globus_ws</i> that is run automatically during installation.  However, depending on the sequence in which your installation is performed, some of these files may get reset.

<pre class="screen">
&gt; <b>$VDT_LOCATION/vdt/setup/configure_globus_ws -permissions-only</b>
</pre>


---+++ Start the web services container

Be sure you have an <i>/etc/grid-security/grid-mapfile</i> in place or the start will fail for sure.

<pre class="screen">
&gt; <b>/etc/init.d/globus-ws start</b>
</pre>

If the container does not start, check the log file.

%WARNING% If you are trying this on a node that was configured for pre-ws prima authorization, you will likely have the file =/etc/grid-security/gsi-authz.conf=. In globus-ws, any output (including stdout/stderr) uses <i>gridftp</i> as the transport mechanism. The gridftp service still uses the C callout of the pre-ws gatekeeper.  %BR% %BR% If the <i>gsi-authz.conf</i> exists, rename it to anything.  %BR%  %BR% You can leave the <i>/etc/grid-security/prima-authz.conf</i> in place as its existence does not affect ws gridmap authorization. 

d79 1
d147 1
Continue with the [[InstallAndConfigureGlobusWebServices#CommonSteps][Common Common Concluding Steps]]
</pre>
---++ PRIMA authorizations in web services
---+++ Installing GLOBUS web services with PRIMA authorization
The necessary software for web services using the grid-mapfile for authorizing access is already installed. Some of the configuration has already been completed, but the service  has not been activated.
All the necessary software needed to use PRIMA for web services authorizations is available on your node.  As with pre-ws PRIMA authorization, there are some configuration changes that must be made.  The =configure_prima_gt4= script will do everything except the manual changes needed to the =/etc/sudoers= file.
<!-- Additonally, for OSG 0.4.1, you will need to install the <i>PRIMA-GT4</i> pacman cache from VDT. <br><b>Note:</b>For OSG 0.5.n, this cache is already installed. -->
%INCLUDE{ "GlobusWsWithPrimaAuthz" }%
<pre class="screen">
&gt; <b>cd $VDT_LOCATION</b>
&gt; <b>source setup.sh</b>
&gt; <b>source $PACMAN_LOCATION/setup.sh</b>
&gt; <b>pacman -get http://www.cs.wisc.edu/vdt/vdt_1310_cache:PRIMA-GT4</b>
</pre>
%IMPORTANT% If you are not already using PRIMA for pre-ws authorizations, this will enable it.  If you are using PRIMA for pre-ws, this will not have any affect other than enabling web services use of PRIMA.
This should not prompt you with questions.

This installs the following jar files in =$VDT_LOCATION/globus/lib=:
   * bcprov-jdk14-122.jar
   * opensaml-renamed-1.0.1.jar
   * prima-gt4-0.1.0.jar
   * glite-security-util-java-1.0.0dev.jar  
   * org.glite.security.voms-api-java-unknown.jar  
   * privilege-1.1.0.jar


---+++ Configuring PRIMA web services authorization
During the installation above, the following configuration scripts have already been run.  You can view their output in the =$VDT_LOCATION/vdt-install.log=:

| =./vdt/setup/configure_globus_ws= | [[http://vdt.cs.wisc.edu/releases/1.3.10/config/configure_globus_ws][VDT description]] |
| =./vdt/setup/configure_globus_wsgram= | [[http://vdt.cs.wisc.edu/releases/1.3.10/config/configure_globus_wsgram][VDT description]] |

If you are going to continue with the configuration for PRIMA, you should stop the stop the globus web services container if it is already running:

<pre class="screen">
&gt; <b>/etc/init.d/globus-ws stop</b>
 <i>... verify it is stopped</i>
&gt; </b>ps -efwww |grep "org.globus.wsrf.container.ServiceContainer"</b>
</pre>

You then need to configure web services for prima authorization by running the <i>configure_prima_gt4</i> script (see the [[http://vdt.cs.wisc.edu/releases/1.3.10/config/configure_prima_gt4.html][VDT description]])

<pre class="screen">
&gt; <b>cd $VDT_LOCATION</b>
&gt; <b>source setup.sh</b>
&gt; <b>./vdt/setup/configure_prima_gt4 --enable --gums-server YOUR_GUMS_SERVICE</b>
</pre>

E.g., =./vdt/setup/configure_prima_gt4 --enable --gums-server cmssrv09.fnal.gov=

There are four security configuration files that identify use of the default <i>gridmap</i> authorization services.  These can be found in =$VDT_LOCATION/globus/etc/=:

<pre>
globus_delegation_service/factory-security-config.xml
globus_wsrf_core/global_security_descriptor.xml
globus_wsrf_rft/factory-security-config.xml
gram-service/managed-job-factory-security-config.xml
</pre>

=$VDT_LOCATION/post-install/README= contains a section called <i>Globus-Base-WS-Essentials</i> with the following:
   * The user selected to run the Globus web services (container) as <i>globus</i> if it already exists. If not, then <i>daemon</i>.
   * It will say your host certificate was <i>cloned</i> as =containercert.pem/containerkey.pem= since the globus ws container runs as a non-root user.
%IMPORTANT% When you renew your host certifcate, be sure to clone it in these =container*.pem= files as well.
   * The init script was copied to =/etc/init.d/globus-ws=


---+++ Modifying =/etc/sudoer=

In =$VDT_LOCATION/post-install/README=, the section <i>Globus-Base-WSGRAM-Server</i> describes the modifications to =/etc/sudoer= necessary for the web services GRAM to function properly.

%NOTE% This must be done manually.

Make these changes now, keeping in mind the user under which VDT determined your container will run.

%IMPORTANT% Paths =/etc/sudoer= cannot be soft links. Use full paths only.

Example =/etc/sudoer= recommendations from an installation where local user IDs do _not_ have to be maintained. In the example that follows, the web services user is the <i>daemon</i> user: 

<pre class="programlisting">
Runas_Alias GLOBUSUSERS = ALL, !root
daemon ALL=(GLOBUSUSERS) \
     NOPASSWD: \
     /usr/local/osg-ce/globus/libexec/globus-job-manager-script.pl *
daemon ALL=(GLOBUSUSERS) \
     NOPASSWD: \
     /usr/local/osg-ce/globus/libexec/globus-gram-local-proxy-tool *
</pre>



<a name="vomsdir-install" />

---+++ Additional configurations required

Ensure that you have a =/etc/grid-security/vomsdir= directory containing one certificate. Your host certtificate will do. You will need to create the directory and populate it with your host certificate until this is resolved.

%STARTInsetBox%
---++++ prima-authz.conf vomsdir and verifyAC behavior
%INCLUDE{ "PrimaauthzConfAndVerifyACBehavior" }%
%ENDInsetBox%

As root:
<pre class="screen">
> <b>cd /etc/grid-security</b>
> <b>mkdir vomsdir</b>
> <b>cp -p containercert.pem vomsdir/.</b>
</pre>


---+++ Globus-WS for Condor
To set up Condor to work with WS, see these troubleshooting notes related to [[GlobusWsJobManagerNotConfigured][Job Manager (Condor) not configured for web services]]

There is a gram-services configuration file that is not getting updated correctly if your certificates directory is _not_ =/etc/grid-security/certificates=. You will need to manually change the <i>value</i> element in the =$VDT_LOCATION/globus/etc/gram-service/jndi-config.xml=:

<pre class="screen">
&lt;parameter&gt;
  &lt;name&gt;
   x509CertDir
  &lt;name&gt;
  &lt;value&gt;
    /usr/local/osg-ce/globus/share/certificates
  &lt;value&gt;
&lt;parameter&gt;
</pre>

If you have already started the Globus container, you will have to re-start it.  If not, you can wait and do it in a later step.


---+++ Web services logging
Web services logging logged to =/VDT_LOCATION/globus/var/container-real.log=.

The default settings provide zero visibility into what is happening, but will identify error/warnings when they occur. You can use the default settings or these [[#GridmapLog4JRecommendations][recommendations for PRIMA authorization mode]].


---+++ Reset permissions for web services
Just to be safe, it is probably a good idea to make sure the ownership and permissions on some of the web services files are set correctly. This is done with the =$VDT_LOCATION/vdt/setup/configure_globus_ws= that is run automatically during installation.  However, depending on the sequence in which your installation is performed, some of these files may get reset.

<pre class="screen">
&gt; <b>$VDT_LOCATION/vdt/setup/configure_globus_ws -permissions-only</b>
</pre>


---+++ Start the web services container
<pre class="screen">
&gt; <b>/etc/init.d/globus-ws start</b>
</pre>

If the container does not start, check the log file.

d97 1
The =VDT_LOCATION/vdt/setup/configure_prima_gt4= script will make most of the necessary changes to enable web services with PRIMA authorizations.  This script will do the following:
---++ Common Concluding Steps 
%INCLUDE{ "GlobusWsCommonSteps" }%
The =VDT_LOCATION/vdt/setup/configure_prima_gt4= script will make most of the necessary changes to enable web services with =Privilege= authorizations.  This script will do the following:
   * Create the =/etc/grid-security/gsi-authz.conf= file if it does not already exist. This invokes PRIMA for pre-ws and for any web services streamed output (stdout/stderr).
<pre class="screen">
&gt; source $VDT_LOCATION/setup.sh
&gt; vdt-control --on globus-ws
</pre>

---++ Trouble-shooting web services
#GridmapLog4JRecommendations
---++ Gridmap container-log4j.properties recommendations
%INCLUDE{ "PrimaAuthzModeRecommendations" }%
---+++ WS container does not start
   1 If you are implementing  with gridmap authorization, you must have a =/etc/grid-security/grid-mapfile= in place or the start will fail. 
-- Main.JohnWeigand
---+++ Failures occurring when output is streamed 
   1 If you are implementing  with gridmap authorization on a node that was configured for pre-ws prima authorization, you will likely have the file =/etc/grid-security/gsi-authz.conf=. In globus-ws, any output (including stdout/stderr) uses <i>gsiftp</i> as the transport mechanism. The <i>gsiftp</i> service still uses the C callout of the pre-ws gatekeeper.  %BR% %BR% If the =gsi-authz.conf= exists, rename it to anything.  %BR%  %BR% You can leave the =/etc/grid-security/prima-authz.conf= in place as its existence does not affect ws gridmap authorization. 



-- Main.ForrestChristian - 01 Feb 2007

%STOPINCLUDE%


%BOTTOMMATTER%
-- Main.JohnWeigand %BR%
-- Main.ForrestChristian - 01 Feb 2007%BR%
-- Main.JohnWeigand - 12 Feb 2007%BR%
