%META:TOPICINFO{author="JohnWeigand" date="1171309533" format="1.1" reprev="1.9" version="1.9"}%
%META:TOPICPARENT{name="DocumentationTable"}%
%LINKCSS%
---+!! Installing and Configuring Globus Web Services
%TOC%

%STARTINCLUDE%
%EDITTHIS%
d15 1
The necessary software for web services using the =grid-mapfile= for authorizing access has already been installed during the OSG installation process.  Much of the configuration has also been completed, but the service has not been activated.  There are still a couple of things left to do. This section will:
   * provide a little insight into the some of the basics of the files and configuration that are required for web services
   * describe the configuration necessary for the auhtorization mode desired: use of the +grid-mapfile= file or =Privilege=.
   * describe some basic tests that can be performed.

---+++ Some web services basics
---++ Some web services basics
The intent of this section is to provide a basic understanding of some of the files and configurations that have been or have to be done to enable WS-GRAM.

---+++ Globus web services configuration files
During the installation process, the following configuration scripts have already been run. You can view their output in =$VDT_LOCATION/vdt-install.log=.
   * ./vdt/setup/configure_globus_ws - (see http://vdt.cs.wisc.edu/releases/1.6.1/config/configure_globus_ws)
   * ./vdt/setup/configure_globus_wsgram - (see http://vdt.cs.wisc.edu/releases/1.3.10/config/configure_globus_wsgram)

There are four security configuration files that identify the authorization service.  By default, they are set to using the =grid-mapfile= authorization mode. These can be found in =$VDT_LOCATION/globus/etc/=:
   * globus_delegation_service/factory-security-config.xml
   * globus_wsrf_core/global_security_descriptor.xml
   * globus_wsrf_rft/factory-security-config.xml
   * gram-service/managed-job-factory-security-config.xml

---+++ Additional configurations performed during the installation process
The =$VDT_LOCATION/post-install/README= contains a section called =Globus-Base-WS-Essentials= indicating some additional modifications that were made to enable web services.

---++++ Web services container user account
The user selected to run the Globus web services (container) is =globus= if it already exists. If not, then the =daemon= user is used.

---++++ Web services container certificate
Since the Globus web services container runs as a non-root user, another certificate is needed for it to identify itself.  It uses =containercert.pem/containerkey.pem=.  The VDT web services configuration scripts clone  your  host certificate creating these two files.
%IMPORTANT% When you renew your host certificate, be sure to clone it in these =container*.pem= files as well.

If you are using the =Privilege= authorization mode, this is the certificate that is passed to the GUMS server identifying your CE node. For pre-ws, the host certificate is used since the =gatekeeper= process does run as the =root= user.  Hence, the reason for the cloning.

---+++ Starting/stopping the web services container
During the installation process the web services configure scripts create an entry in the =VDT_LOCATION/vdt/services/state= file enabling web services.
<pre class="programlisting">
globus-ws       init    enable  YOUR_VDT_LOCATION/post-install/globus-ws
</pre>
To start or stop the service, you would issue the appropriate command:
<pre class="screen">
&gt; source $VDT_LOCATION/setup.sh
&gt; vdt-control --on globus-ws
<b>   or</b>
&gt; vdt-control --off globus-ws
</pre>

You can use the following command to view the parent web services container process.  There can be upwards of 50 threads running in the container.
<pre  class="screen">
&gt; ps -efwww | grep "org.globus.wsrf.container.ServiceContainer" | head -1
<i><b>... sample output .... </b></i>
daemon   15848     1  0 Feb09 ?  00:00:08 /usr/local/osg-ce/jdk1.4/bin/java 
   -Dlog4j.configuration=container-log4j.properties 
   -Xmx512M 
   -Dorg.globus.wsrf.container.persistence.dir=/usr/local/osg-ce/vdt-app-data/globus/persisted 
   -DGLOBUS_LOCATION=/usr/local/osg-ce/globus 
   -Djava.endorsed.dirs=/usr/local/osg-ce/globus/endorsed 
   -DX509_CERT_DIR=/usr/local/osg-ce/globus/TRUSTED_CA 
   -Djava.security.egd=/dev/urandom 
   -classpath /usr/local/osg-ce/globus/lib/bootstrap.jar:
                  /usr/local/osg-ce/globus/lib/cog-url.jar:
                  /usr/local/osg-ce/globus/lib/axis-url.jar 
    org.globus.bootstrap.Bootstrap 
    org.globus.wsrf.container.ServiceContainer 
   -p 9443
</pre>

---+++ Log files for web services
Web services logging is controlled using the =VDT_LOCATION/globus/container-log4j.properties= configuration file.  Several changes have been made to the basic Globus distribution of this file for the following reasons:

   * In the basic Globus distribution, the log file is called =container.log=.  For the OSG installation, this has been changed to =container-real.log=.  There is a resolved bug that has not made its way into the VDT distribution yet that corrects a problem where the startup of the ws container opens a hard-coded =container.log= file thereby erasing any old log data.  So, in the =VDT_LOCATION/globus/var= directory, you will see two  log files: =container.log= and =container-real.log=.  The =container.log= file is sometimes useful in trouble-shooting any startup problems.

   * The basic Globus distribution provides visibility only when error conditions occur.  Changes have been made to the class and logging levels to provide additional verbosity into the actual authorizations that occur, successful or not.

   * The original configuration file has also been modified to support both =gridmap= and =Privilege= authorization modes.

Sample listing:
<pre class="programlisting">
# Set root category priority to WARN and its only appender to A1.
# A1 is set to be a ConsoleAppender.
# A1 uses PatternLayout.
# Display any warnings generated by our code
log4j.category.org.globus=INFO
# Comment out the line below if you want to log every authorization
# decision the container makes.
# Enable SOAP Message Logging
# log4j.category.org.globus.wsrf.handlers.MessageLoggingHandler=DEBUG
# Uncomment the following line to enable MDS debugging
# log4j.category.org.globus.mds=DEBUG
# Uncomment the following line to enable GRAM debugging
# log4j.category.org.globus.exec=DEBUG
# Uncomment the following line to enable RFT debugging
# log4j.category.org.globus.transfer=DEBUG
# --- Added by the VDT on 2007-02-09 12:20:53 ---
log4j.category.org.opensciencegrid.authz.gt4=INFO    <b><i>(For Privilege authorizations)</i></b>
log4j.category.org.globus.wsrf.impl.security.authorization.GridMapAuthorization=DEBUG
log4j.rootCategory=WARN
log4j.rootLogger=WARN, A1
log4j.appender.A1.MaxBackupIndex=10
log4j.appender.A1.MaxFileSize=10MB
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1=org.apache.log4j.RollingFileAppender
log4j.appender.A1.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} [%t,%M:%L] %m%n
<b>log4j.appender.A1.File=YOUR_VDT_LOCATION/globus/var/container-real.log</b>
log4j.category.org.globus.wsrf.impl.security.authorization.ServiceAuthorizationChain=INFO
</pre>

---+++ Sudo and web services
In order to use web services GRAM, =sudo= must be installed and configured. The web services run as a non-root user (either =globus= or =daemon= user), but need to submit jobs as different users. Configuring =sudo= for this is more secure than allowing GRAM to run as =root=. 

For general information on sudo, see 
   * The sudo home page at http:www.gratisoft.us/sudo/
   * The VDT post install configuration page at http://vdt.cs.wisc.edu/releases/1.6.1/installation_post_server.html

The specific configuration of the =/etc/sudoers= file for the =gridmap= and =Privilege= authorization modes are detailed in their respective sections later in this document.

%IMPORTANT% Modifications to the =/etc/sudoers= file must be performed manually and should be done using the =visudo= command.  This command insures single user access to the file and also performs some basic validation on the syntax before allowing you to save the file. Paths to =/etc/sudoer= cannot be soft links. Use full paths only.

d147 1
---++ Authorization modes
---+++ Gridmap authorizations
The only changes specific to using the =/etc/grid-security/grid-mapfile= for authorizations are to the =/etc/sudoer= file.

---++++ Sudo file changes - gridmap
Manually modify the =/etc/sudoers= file keeping in mind the user under which VDT determined your container will run.
In the example that follows, the web services user is the =daemon= user and the VDT_LOCATION used is =/usr/local/osg-ce=.

%IMPORTANT% Modifications to the =/etc/sudoers= file must be performed manually and should be done using the =visudo= command.  This command insures single user access to the file and also performs some basic validation on the syntax before allowing you to save the file. Paths to =/etc/sudoer= cannot be soft links. Use full paths only.

<pre class="programlisting">
Runas_Alias GLOBUSUSERS = ALL, !root
<b>daemon</b> ALL=(GLOBUSUSERS) &#92;
     NOPASSWD: /usr/local/osg-ce/globus/libexec/globus-gridmap-and-execute &#92;
     -g /etc/grid-security/grid-mapfile &#92;
     /usr/local/osg-ce/globus/libexec/globus-job-manager-script.pl *
<b>daemon</b> ALL=(GLOBUSUSERS) &#92;
     NOPASSWD: /usr/local/osg-ce/globus/libexec/globus-gridmap-and-execute &#92;
     -g /etc/grid-security/grid-mapfile &#92;
     /usr/local/osg-ce/globus/libexec/globus-gram-local-proxy-tool *
</pre>

Any type of error in the =sudoers= file, may show up as an [#Unhandled_fault_code_200_in_container-real.log][Unhandled fault code 200 in the container-real.log]].

---+++ Privilege authorizations
All the necessary software needed to use Privilege for web services authorizations is available on your node.  As with pre-ws =Privilege= authorization, there are some configuration changes that must be made.  The =configure_prima_gt4= script will do everything except the manual changes needed to the =/etc/sudoers= file.

%IMPORTANT% If you are not already using Privilege for pre-ws authorizations, this will enable it.  If you are using =Privilege= for pre-ws, this will not have any affect other than enabling web services use of Privilege.

---++++ configure_prima_gt4
The =VDT_LOCATION/vdt/setup/configure_prima_gt4= script will make most of the necessary changes to enable web services with =Privilege= authorizations.  This script will do the following:

   * Modify the four Globus web services configuration files described in the beginning of this document ([[#Globus_web_services_configuratio][Globus web services configuration files]]) to use the =org.opensciencegrid.authz.gt4.OSGAuthorization= class.

   * Create the =/etc/grid-security/gsi-authz.conf= file if it does not already exist. This invokes Privilege for pre-ws and for any web services streamed output (stdout/stderr).

   * Create the =/etc/grid-security/prima-authz.conf= file if it does not already exist for the GUMS server you specify as an argument.

   * A =/etc/grid-security/vomsdir= directory will be created and populated with an empty =*.pem= file.if one does not already exist.  The subsection that follows gives a little explanation as to why this directory and file are needed.
<pre class="screen">
&gt; cd $VDT_LOCATION
&gt; source setup.sh
&gt; ./vdt/setup/configure_prima_gt4 --enable &#92;
               --gums-server YOUR_GUMS_SERVICE
<b><i>... for example...</i></b>
&gt; ./vdt/setup/configure_prima_gt4 --enable &#92;
               --gums-server cmssrv09.fnal.gov
</pre>

%STARTInsetBox%
---++++ prima-authz.conf vomsdir and verifyAC behavior
%INCLUDE{ "PrimaauthzConfAndVerifyACBehavior" }%
%ENDInsetBox%


---++++ Sudo file changes - Privilege

Manually modify the =/etc/sudoers= file keeping in mind the user under which VDT determined your container will run.
In the example that follows, the web services user is the =daemon= user and the VDT_LOCATION used is =/usr/local/osg-ce=.

%IMPORTANT% Modifications to the =/etc/sudoers= file must be performed manually and should be done using the =visudo= command.  This command insures single user access to the file and also performs some basic validation on the syntax before allowing you to save the file. Paths to =/etc/sudoer= cannot be soft links. Use full paths only.

<pre class="programlisting">
Runas_Alias GLOBUSUSERS = ALL, !root
daemon ALL=(GLOBUSUSERS) &#92;
     NOPASSWD: &#92;
     /usr/local/osg-ce/globus/libexec/globus-job-manager-script.pl *
daemon ALL=(GLOBUSUSERS) &#92;
     NOPASSWD: &#92;
     /usr/local/osg-ce/globus/libexec/globus-gram-local-proxy-tool *
</pre>
---++ Reset permissions for web services
---+++ Reset permissions for web services
Just to be safe, it is probably a good idea to make sure the ownership and  permissions on some of the web services files are set correctly. This is done using the =$VDT_LOCATION/vdt/setup/configure_globus_ws= script  that is run automatically during installation.  However, depending on the sequence in which your installation is performed, some of these files may get reset.
<pre class="screen">
&gt; source $VDT_LOCATION/setup.sh
&gt; $VDT_LOCATION/vdt/setup/configure_globus_ws  --permissions-only
</pre>
---++ Start the container
---+++ Start the container
<pre class="screen">
&gt; source $VDT_LOCATION/setup.sh
&gt; vdt-control --on globus-ws
</pre>
If the container does not start, check the log files.


---++ Simple tests of web services

%INCLUDE{ "GlobusWsSimpleTestsOfWebServices" }%
---++ Trouble-shooting
---++ Trouble-shooting web services
---+++ WS container does not start
   1 If you are implementing  with gridmap authorization, you must have a =/etc/grid-security/grid-mapfile= in place or the start will fail. 
   1 If you have a =grid-mapfile= and the =container-real.log= file indicates an corrupt =grid-mapfile= record, you will have to remove that corrupt record from the file and restart _globus-ws_.  This condition has been reported to Globus, but was not available in the current release used in the OSG distribution.

---+++ Failures occurring when output is streamed 
   1 If you are implementing  with gridmap authorization on a node that was configured for pre-ws prima authorization, you will likely have the file =/etc/grid-security/gsi-authz.conf=. In globus-ws, any output (including stdout/stderr) uses <i>gsiftp</i> as the transport mechanism. The <i>gsiftp</i> service still uses the C callout of the pre-ws gatekeeper.  %BR% %BR% If the =gsi-authz.conf= exists, rename it to anything.  %BR%  %BR% You can leave the =/etc/grid-security/prima-authz.conf= in place as its existence does not affect ws gridmap authorization. 



d232 1

%STOPINCLUDE%


%BOTTOMMATTER%
-- Main.JohnWeigand %BR%

-- Main.ForrestChristian - 01 Feb 2007%BR%
-- Main.JohnWeigand - 12 Feb 2007%BR%
