%META:TOPICINFO{author="ForrestChristian" date="1180642636" format="1.1" reprev="1.1" version="1.1"}%
%LINKCSS%

<!-- This is the default OSG documentation template. Please modify it in -->
<!-- the sections indicated to create your topic.                        --> 

<!-- By default the title is the WikiWord used to create this topic. If  -->
<!-- you want to modify it to something more meaningful, just replace    -->
<!-- %TOPIC% below with i.e "My Topic".                                  -->

---+!! GUMS Client Installation
d13 1
%TOC%
%STARTINCLUDE%

%STARTINCLUDE%
%EDITTHIS%
A GUMS Client package exists that provides the capability to remotely administer GUMS from a node other than the server. It also provides the capability of retrieving any information available via the gums, gums-host and gums-service commands.
A <nop>GUMS Client package exists that provides the capability to remotely administer <no[>GUMS from a node other than the server. It also provides the capability of retrieving any information available via the gums, gums-host and gums-service commands.
d138 1
A couple of key items to note:
   * You will need to be defined in GUMS as belonging to the 'admin' group.
     The DN of your certificate identifies you to GUMS (from the proxy).
     The DN of your certificate identifies you to <nop>GUMS (from the proxy).
     GUMS remotely just as you do on the server when running command line
     <nop>GUMS remotely just as you do on the server when running command line
     processes.
  * Both =voms-proxy-init= and =grid-proxy-init= are available in the client package.
---+++<nop>GUMS Client Installation instructions
Download and install <nop>Pacman (if not already available); see [[PacmanInfo][Pacman Info]]. You will use pacman to install the <nop>GUMS client.
---

---++ Installation instructions:

---+++++ Install pacman
Install pacman if it is not already available on the node using the following instructions: %BR% =/DC=org/DC=doegrids/OU=Services/CN=cmssrv09.fnal.gov=

---++++ Source pacman
<LI>
Source the pacman setup script in the pacman installation directory.
---++++ Create gums-client directory
<LI>
Create a directory for the gums-client and 'cd' into that directory. We recommend that you name the directory =gums-client=.
---++++ Get gums-client
Retrieve the gums-client package from the VDT pacman cache. 

%NOTE% OSG 0.6.0 GUMS servers use the VDT 1.6.1 cache.
%NOTE% OSG 0.6.0 <nop>GUMS servers use the VDT 1.6.1 cache.
  
To be safe, you may want to run these commands or if you like, you can wait and see if you get any errors during the installation process.

<pre class="screen">
$ <userinput>export VDT_ALLOW_UNSUPPORTED=y</userinput>
$ <userinput>pacman -pretend-platform:RHEL-3</userinput>
$ <userinput>pacman -allow trust-all-caches</userinput>
</pre>
Then, install the gums-client package from VDT: 
Then, install the <nop>GUMS client package from VDT: 

<pre class="screen">
$ <userinput>pacman -get http://vdt.cs.wisc.edu/vdt_161_cache:GUMS-Client</userinput>
</pre>


d92 1
You will be asked the following questions (answers in bold):
<pre class="screen">
VDT 1.6.1 installs a variety of software, each with its own license.
In order to continue, you must agree to the licenses.
You can view the licenses online at:

     http://vdt.cs.wisc.edu/licenses/1.6.1

After the installation has completed, you will also be able to
view the licenses in the "licenses" directory.

Do you agree to the licenses? [y/n]  <userinput>y</userinput>

The VDT typically installs public certificates and signing policy files 
for the well-known public CA's. This is necessary in order for you to 
perform GSI authentication with any remote Grid services (that have 
service/host certificates signed by these CA's).

For more information please refer to the VDT documentation:
http://vdt.cs.wisc.edu/setup_ca.html

Where would you like to install CA files?

Choices:
        l (local) - install into $VDT_LOCATION/globus/share/certificates
        n (no)    - do not install
<userinput>l</userinput>

</pre>
     
The last line of the installation for VDT 1.6.1 should be:
d94 1
<pre class="screen">
Downloading [gums-service-script] from [http://vdt.cs.wisc.edu/software//gums/1.1.0]...
</pre>
---++++ Source your VDT_LOCATION/setup.sh script.  
<LI>Source your VDT_LOCATION/setup.sh script.<BR>
=VDT_LOCATION= will be the directory you execeted the 'pacman -get' in step 4. %BR% =$ source VDT_LOCATION/setup.sh=
</pre>
d129 1
---++++  Disable =gums-host-cron=
<LI>Disable =gums-host-cron=

By default, the gums-host-cron cron script is enabled.  It should be _disabled_ if this is not a CE node.  To do this execute:

<pre class="screen">
$ <userinput>vdt-register-service --name gums-host-cron --type cron --disable</userinput>=
<replaceable># _Sample output_</replaceable>
 vdt-register-service: updated cron service 'gums-host-cron'
 vdt-register-service: desired state = disable
 vdt-register-service: cron time     = '21 4,10,16,22 * * *'
 vdt-register-service: cron command  = '/home/weigand/osg/gums-client/gums/bin/gums-host-cron'
</pre>
     

You can verify, all VDT installed processes are disabled by executing:
<pre class="screen">
$ <userinput>vdt-control --list</userinput>
<replaceable># Sample output</replaceable>
 Service            | Type   | Desired State
 -------------------+--------+--------------
 fetch-crl          | cron   | do not enable
 gums-host-cron     | cron   | do not enable
</pre>
All proceeses should show as 'do not enable' under the Desired State..
All processes should show as 'do not enable' under the Desired State..
---++++ Configure the <i>gums-client.properties</i> file to point to your GUMS server.
<LI>Configure the <i>gums-client.properties</i> file to point to your GUMS server.
<LI>Configure the <i>gums-client.properties</i> file to point to your <nop>GUMS server.
Edit =$VDT_LOCATION/gums/etc/gums-client.properties= and change the gums.location and gums.authz variable to point to your GUMS server. It is populated by default to the node you installed the gums-client on (in the sample below, it is =gratiax31=).
Edit =$VDT_LOCATION/gums/etc/gums-client.properties= and change the =gums.location= and =gums.authz= variable to point to your <nop>GUMS server. It is populated by default to the node you installed the gums-client on (in the sample below, it is =gratiax31=).

<pre class="programlisting">
  gums.location=https://gratiax31.fnal.gov:8443/gums/services/GUMSAdmin
  gums.authz=https://gratiax31.fnal.gov:8443/gums/services/GUMSAuthorizationServicePort
---

</OL>

The installation is now complete.  You should now be able to execute any of the command line tools available in =$VDT_LOCATION/gums/bin= using a grid-proxy to identify yourself:
The installation is now complete.  You should now be able to execute any of the command line tools availble in =$VDT_LOCATION/gums/bin= using a grid-prixy to identify yourself:
   * gums
   * gums-host
   * gums-hosts-cron
   * gums-service
%NOTE% You must be defined as a member of the _admin_ group in GUMS.   This may not be a requirement in future GUMS releases, but it is in GUMS 1.1 distributed with OSG 0.6.0.
<hr width="75%"/>

As an example, you could generate a <i>grid-mapfile</i> listing remotely as

---+++Simple Test  of the <nop>GUMS Client
1. Generate a grid proxy for yourself

Your proxy is valid until: Thu May 31 21:48:34 2007
   &gt; source <VDT_LOCATION>/setup.sh
   &gt; grid-proxy-init 
   <b><i>....output...</b></i>

   Your identity: /DC=org/DC=doegrids/OU=People/CN=John Weigand 458491
   Enter GRID pass phrase for this identity:
      <b><i>....enter your password...</b></i>
   Creating proxy .................................... Done
   Your proxy is valid until: Thu May 31 21:48:34 2007
2. To generate a grid-mapfile:   
</pre>

<LI>To generate a grid-mapfile:   
d170 2
   &gt; gums generateGridMapfile "/DC=org/DC=doegrids/OU=Services/CN=cmssrv09.fnal.gov"
<pre class="screen">
$ gums generateGridMapfile "/DC=org/DC=doegrids/OU=Services/CN=cmssrv09.fnal.gov"
   
</pre>
   The DN shown above is the DN of the CE node's host certificate that would be doing the 
   The output would above will go to stdout. On all the command line scripts,

   The output above will go to stdout. On all the command line scripts,
   the '--help' argument will provide more detail on the options.
</OL>


%STOPINCLUDE%

%BOTTOMMATTER%

-- Main.ForrestChristian - 31 May 2007
