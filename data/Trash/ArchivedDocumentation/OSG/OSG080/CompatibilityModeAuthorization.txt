%META:TOPICINFO{author="JayPackard" date="1194453429" format="1.1" reprev="1.11" version="1.11"}%
%META:TOPICPARENT{name="ComputeElementAuthorization"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%
---++ Introduction
In Compatibliity mode, authorization is still performed using the <i>grid-mapfile</i> but your site must run a GUMS server; see [[InstallConfigureAndManageGUMS][GUMS installation instructions]].  The difference relative to the Grid3 configuration is in the source of the VO membership data/account assignments.  Instead of each CE node pulling independently from the VO VOMS servers, each CE node for your site pulls the data from your site's GUMS server.  Thus, centralized mapping is enabled.  Your site's GUMS server polls the VOs' VOMS servers much the same as the <i>edg-mkgridmap</i> process did, the difference being that all CE nodes account assignments are managed in one place, the GUMS server.  Given the GUMS configuration options, account pools (many accounts, one-to-one DN-to-account mapping) can be implemented as well as group accounts (many-to-one DN-to-account mapping).

The GUMS client software, which is installed with every CE node installation, contains a script that periodically creates/updates the grid-mapfile. This script is a <i>root</i> cron process.

A couple of points to be aware of regarding this configuration relative to Full Privilege:
   * You will not be able to provide role based authorization in this configuration. For info, see [[Documentation/VORolesAndGroups][How Fine-Grained Authorization is Implemented using VO-defined Roles and Groups]]. In particular, users belonging to multiple VOs will always be mapped to the same Unix account. This will introduce inaccuracies in the accounting records.
   * You will introduce delays since each gatekeeper will have to regenerate the map before implementing the new policy or allowing new users. 

In the compatibility configuration, you will have:
   * One GUMS server per local account domain to manage the mapping from Grid identity (DN+attributes) to local username
   * The GUMS client program <i>gums-host</i> running via cron on your gatekeeper(s) to retrieve both the forward and inverse maps (where forward is DN-to-account, inverse is user-to-VO).

---++ Compatibility Mode Requirements
Your site needs to install and configure a GUMS service. There needs to be one GUMS server per map of 'DN to local uid'. An institution would only need one GUMS server if there is a global uid assignment (eg. a single NIS domain).  If you will have multiple account domains, you will need a GUMS server for each domain.   Each account domain can cover  any number of CE hosts, clusters storage elements (SEs)  as long as all systems have a consistent set of POSIX Users|UIDs|Groups|GIDs. 

The CE administrators enable and configure the GUMS client software on the CE node(s), and for each CE, identify the appropriate GUMS server to point to (if more than one is available).

---++ GUMS client software on the CE
The GUMS-Client package is installed as part of the OSG CE install. The essential files are located in the =$VDT_LOCATION/gums/scripts= directory.

---+++ !!gums-client.properties file
You need to edit the =$VDT_LOCATION/gums/config/gums-client.properties= configuration file to point to the appropriate GUMS server.  Upon installation, the file contains two entries both populated with the hostname of the CE node you are configuring, in the following example, cmssrv09.  For compatibility mode, only the <i>gums.location</i> needs to be changed to the hostname of your GUMS server. 

<pre class="programlisting">
gums.location=https://cmssrv09:8443/gums/services/GUMSAdmin
gums.authz=https://cmssrv09:8443/gums/services/GUMSAuthorizationServicePort
</pre>

The <i>gums.authz</i> entry is only used if you wish to use the <i>gums</i> client tool to test specific mappings from this host.  Documentation of this client is found at the [[https://www.racf.bnl.gov/Facility/GUMS/1.2/use_test.html][GUMS web site]].  This same functionality can be executed using the GUMS web UI.

---+++ !!gums-host executable
In Compatibility mode the =$VDT_LOCATION/gums/scripts/gums-host= command is used to generate two essential files:
   * =/etc/grid-security/grid-mapfile=
   * =$VDT_LOCATION/monitoring/osg-user-vo-map.txt=

This is done as a cron job by the gums-host-cron script, which is addressed later in this section under the gums-host-cron entry. 

---++++ !!Test grid-mapfile generation
To test the <i>grid-mapfile</i> generation, you need to run as <i>root</i>.  This uses the host certificate.

<pre class="screen">
# <b>source $VDT_LOCATION/setup.sh </b>
# <b>cd $VDT_LOCATION/gums/scripts </b>
# <b>./gums-host generateGridMapfile</b>    <em>(output goes  to stdout. To get 
                                      a file: either redirect stdout or 
                                      use '--file file_name')</em>
     <em>...output  should look similar to the following dependent on your 
     GUMS server mappings..</em>
   #---- members of vo: osg ----#
    "/DC=org/DC=doegrids/OU=People/CN=Alexis Rodriguez 233072" osg01
   "/DC=org/DC=doegrids/OU=People/CN=Andrew Zahn 730598" osg01
   "/DC=org/DC=doegrids/OU=People/CN=Craig Phillip Prescott 50911" osg01
   #---- members of vo: Test3userGroup ----#
   "/DC=org/DC=doegrids/OU=People/CN=Anne Heavey 830711" osg01account
   "/DC=org/DC=doegrids/OU=People/CN=John Weigand 458491" osg01account
      <em>.... and so on</em>
</pre>

If it fails, contact your GUMS administrator(s).  The problem is likely in the GUMS server's =gums.config= file:
   * GUMS 1.1 syntax:  your host in not in the <i>cn</i> attribute of the <i>hostToGroupMapping</i> element.

---++++ !!Test osg-user-vo-map generation
To test the <i>osg-user-vo-map</i> generation, you need to run as <i>root</i>.  This uses the host certificate.

<pre class="screen">
# <b>source $VDT_LOCATION/setup.sh </b>
# <b>cd $VDT_LOCATION/gums/scripts </b>
# <b>./gums-host generateOsgUserVoMap</b>   <em>(output goes  to stdout. To get
                                        a file: either redirect stdout 
                                        or use '--file file_name')</em>
     <em>...output  should look similar to the following dependent on your GUMS
     server mappings..</em>
  #User-VO map
  # #comment line, format of each regular line line: account VO
  # Next 2 lines with VO names, same order, all lowercase, with case (lines starting with #voi, #VOc)
  #voi xxx test3
  #VOc OSG TEST3
  #---- accounts for vo: osg ----#
  osg01 xxx
  #---- accounts for vo: Test3userGroup ----#
  osg01account test3
  <em>  .... and so on</em>
</pre>

If it fails, contact your GUMS administrator(s).  The problem is likely in the GUMS server's gums.config file:
   * GUMS 1.1 syntax:  your host in not in the <i>cn</i> attribute of the <i>hostToGroupMapping</i> element.

---+++ !!The cron file - gums-host-cron
See GumsHostCron.

---++ Retest the compatibility configuration
Run the [[ValidateSiteVerify][Site Verification]] script again locally (as a regular user, not root) and verify that the authorization still works. 

---++ Enable monitoring of GUMS server
In this configuration, it is recommended to enable monitoring of the GUMS server via DBII. This requires two steps:

   1. Enable the GUMS Monitoring information provider when [[GenericInformationProvider][installing GIP on a CE Node]]. The GIP configuration script asks a direct question about this.  
   1. Ask your GUMS administrator to authorize a mapping for the information provider. This is done by following instructions from [[http://vdt.cs.wisc.edu/releases/1.8.0/notes/GUMS.html][VDT]].

%BR%
%COMPLETE3% %BR%
%RESPONSIBLE% Main.JayPackard - 31 Oct 2007 %BR%
%REVIEW%

%META:TOPICMOVED{by="AnneHeavey" date="1192818795" from="Integration/ITB_0_7.OsgCEAuthCompatibility" to="Integration/ITB_0_7.CompatibilityModeAuthorization"}%
