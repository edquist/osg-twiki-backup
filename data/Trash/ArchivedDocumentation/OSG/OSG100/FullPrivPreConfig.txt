%META:TOPICINFO{author="JohnWeigand" date="1248206703" format="1.1" reprev="1.21" version="1.21"}%
%META:TOPICPARENT{name="ComputeElementInstall"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

%STARTINCLUDE%
%BR%
---+ _%INCLUDEHEADING%  %SPACEOUT{ "%TOPIC%" }%_
Enabling Full Privilege Authentication for CE Install

%EDITTHIS%
%BR%
---++Introduction
It is necessary to enable some mode of authentication before you can successfully 
run the OSG configuration script.  There is no mode of authentication that is enabled by 
default.  This section of the document describes how to enable the recommended Full Privilege Authorization using a GUMS server that all OSG sites are strongly encouraged to use.  There is more 
background information about the other privilege modes  at AboutAuthorizationForCE.   If you  
wish to enable a different mode, please consult [[CompatibilityAuthPreConfig][Compatibility authorization page]] or [[LocalAuthPreConfig][Local authorization page]].

In Full Privilege mode,  the PRIMA authorization module with a GUMS service is used for all authorizations and does not use a grid-mapfile.  The Globus gatekeeper and WS-GRAM  use a callout to PRIMA such that upon receipt of each request, PRIMA forwards the request to a GUMS service which performs the dynamic mapping of the user's certificate to a local Unix account. PRIMA and GUMS can process VOMS FQAN (Fully Qualified Attribute Names), thus enabling mappings based on VO groups and roles as defined in a VOMS server.   This removes the need for maintaining a =grid-mapfile= on each gatekeeper and/or gridftp server.   

Obviously, your site must run a GUMS server in order to run in Full Privilege mode. 

<b>Note:</b> If you are migrating from [[CompatibilityAuthPreConfig][Compatibility authorization mode]], the only configuration step you need to perform is the Globus configuration to use the PRIMA callout and the =sudoers= file modifications.

---++ Prerequisites
   * To successfully complete the steps below, you need to have installed a GUMS service. See the [[InstallConfigureAndManageGUMS][Install Configure And Manage GUMS]] topic of the %CACHE% documentation for information on installing GUMS. 
      %BR%
      <b>Note:</b> The GUMS service should be installed on a host independent of any CE node.
   * You will also need a valid host certificate, or maintain a valid host proxy.
   * Local accounts must be created on the CE and worker nodes for all potential accounts that will be assigned by your GUMS service.  Your local GUMS administrator can identify these for you.%BR%%BR%
   Alternatively, once you have configured Globus and your GUMS client, and run the =gums-host-cron=, there are two files created that can be reviewed to verify  you can get the list from the =$VDT_LOCATION/monitoring/osg-user-vo-map.txt= when the =gums-host-cron= service is run .  A listing of those local accounts that do not exist, but can be assigned by your GUMS service, can be seen in the =$VDT_LOCATION/monitoring/osg-undefined-accounts.txt= file which is also generated by the =gums-host-cron= script.


---++ Configure GUMS clients to point to the correct GUMS service
The GUMS-Client package is installed as part of the %CACHE% CE install  The essential commands are located in the =$VDT_LOCATION/gums/scripts= directory, and the essential configuration files are located in =$VDT_LOCATION/gums/config= directory.  You will need to configure these for Full Privilege authorization mode, which is explained in the following sections.

---+++!! gums-client.properties file
You need to edit the =$VDT_LOCATION/gums/config/gums-client.properties= configuration file to point to the appropriate GUMS server.   Upon installation, the file contains two entries both populated with the hostname of the CE node you are configuring, in the following example, the GUMS node is on =gums.domain.org= .   Change both the =gums.location= and the =gums.authz= properties to the hostname of your GUMS server.
 
*Note* If you set the VDT_GUMS_HOST environment variable while installing the CE, the modifications will have already been made to these template files.

<pre class="programlisting">
gums.location=https://gums.domain.org:8443/gums/services/GUMSAdmin
gums.authz=https://gums.domain.org:8443/gums/services/GUMSAuthorizationServicePort
</pre>

The =gums.authz= entry is used by the client tool to test specific mappings from this host.  Documentation of this client is found at the [[https://www.racf.bnl.gov/Facility/GUMS/1.2/use_test.html][GUMS web site]].  This same functionality can be executed using the GUMS web UI.

---++ Configure Globus to use the PRIMA callout
The Globus gatekeeper is a CE service (also known as Pre_WS-GRAM) that submits user jobs from the grid to an underlying local batch system. Users present their grid identities (user proxy) to Globus. 
This identity is mapped to a local user (UNIX username) using the PRIMA libraries.
Jobs are then run in the batch system using this local identity.

To configure Globus to use the Full Privilege Authorization, you need to configure =prima-authz.conf= and =gsi-authz.conf= in the =/etc/grid-security/= directory.
Templates for both the configuration files are located in the =$VDT_LOCATION/post-install= directory.  Both files must be copied into =/etc/grid-security/=. 
These are critical for both Pre-WS-GRAM and WS-GRAM (see below).

*Note* If you set the VDT_GUMS_HOST environment variable while installing the CE, the modifications will have already been made to these template files.

Starting with %CACHE% %VERSION%, GUMS and PRIMA can use two different ways to communicate with each other  
   * the old PRIMA legacy protocol, based on SAML v1
   * the new XACML2 protocol defined by the OSG-EGEE interoperability group

The default installation will use the old PRIMA legacy protocol, for backward compatibility.
However, if you installed GUMS v1.3.0 or later, you should switch to the new interface, since the SAML v1 protocol will be deprecated. Only the =gsi-authz.conf=  needs to be changed.

---+++ Using the legacy SAML v1 GUMS interface

The presence of an  =/etc/grid-security/gsi-authz.conf= file, containing an entry for the PRIMA callout,  tells the Globus gatekeeper and gsiftp services to use PRIMA.  It does not need to be edited, just copied from the VDT location over to =/etc/grid-security/=. 
 The PRIMA callout is identified by this entry:
<pre>
globus_mapping /usr/local/osg-ce/prima/lib/libprima_authz_module_gcc32dbg globus_gridmap_callout
   <b>OR</b>
globus_mapping /usr/local/osg-ce/prima/lib/libprima_authz_module_gcc64dbg globus_gridmap_callout
</pre>

   *Note:* =gsi-authz.conf= is the key to the callout being invoked.  If you remove this file from =/etc/grid-security/= (or if you comment out the line for the PRIMA callout),  the Globus services will revert to local grid-mapfile mode.
  
The =/etc/grid-security/prima-authz.conf= file configuration file is used by the PRIMA callout and  identifies the GUMS service.  The appropriate line comes pre-configured with the CE hostname in the =imsContact= string.  
For example, say one installed a *%CACHE% %VERSION%* CE on host =osg-ce.domain.org=, but the GUMS service was on host =gums.domain.org=.   Then, one would change these lines:
<pre>
imsContact <nop>https://osg-ce.domain.org:8443/gums/services/GUMSAuthorizationServicePort
    <b>TO</b>
imsContact <nop>https://gums.domain.org:8443/gums/services/GUMSAuthorizationServicePort
   
    <b>and</b>

xacmlContact <nop>https://osg-ce.domain.org:8443/gums/services/GUMSXACMLAuthorizationServicePort
    <b>TO</b>
xacmlContact <nop>https://gums.domain.org:8443/gums/services/GUMSXACMLAuthorizationServicePort
</pre>
and copy this file to =/etc/grid-security/=.   

You may notice that this file also contains the =xacmlContact= string. The reason for both being contained in the =prima-authz.conf= is to support an easy switch to the new XACML2 GUMS interface.

By default, the installation has the =prima-authz.conf= file's log file verbosity set to 'debug'.  You may want to change the =logLevel= attribute  to 'info'.

---+++ Using the new XACML2 GUMS interface

As explained above, the presence of an  =/etc/grid-security/gsi-authz= file, containing an entry for the PRIMA callout,  tells the Globus gatekeeper and gsiftp services to use PRIMA.
It should be copied from the VDT location over to =/etc/grid-security/= and changed to:
<pre>
globus_mapping /usr/local/osg-ce/prima/lib/libprima_authz_module_scas_gcc32dbg globus_gridmap_callout
   <b>OR</b>
globus_mapping /usr/local/osg-ce/prima/lib/libprima_authz_module_scas_gcc64dbg globus_gridmap_callout
</pre>

The =/etc/grid-security/prima-authz.conf= file configuration file is used by the PRIMA callout and  identifies the GUMS service.  The appropriate line comes pre-configured with the CE hostname in the =xacmlContact= string.  
For example, say one installed a *%CACHE% %VERSION%* CE on host =osg-ce.domain.org=, but the GUMS service was on host =gums.domain.org=.   Then, one would change these lines:
<pre>
imsContact <nop>https://osg-ce.domain.org:8443/gums/services/GUMSAuthorizationServicePort
    <b>TO</b>
imsContact <nop>https://gums.domain.org:8443/gums/services/GUMSAuthorizationServicePort
   
    <b>and</b>

xacmlContact <nop>https://osg-ce.domain.org:8443/gums/services/GUMSXACMLAuthorizationServicePort
    <b>TO</b>
xacmlContact <nop>https://gums.domain.org:8443/gums/services/GUMSXACMLAuthorizationServicePort
</pre>
and copy this file to =/etc/grid-security/=.   

You may notice that this file also contains the |imsContact| string. The reason for both being contained in the |prima-authz.conf| is to allow for an easy switch back to the SAML v1 protocol, should any need arise. Note that the WS-GRAM PRIMA callout (gt4) does not support the XACML protocol, since support will be provided natively by various clients in Globus WS-GRAM v4.2. This will also, in the near future, be supported by the authorization framework in EGEE (SCAS client/server).

---++ Enable and run  the gums-host-cron service
To keep the  =osg-user-vo-map.txt= file up to date, a cron file script (=gums-host-cron=) was  installed but not  activated. 
The activation of this service is *critical* to make GRATIA accounting work.

Enable it with the following command (as root)

<pre>
vdt-control --enable gums-host-cron
vdt-control --on gums-host-cron
</pre>
Then run =gums-host-cron= manually once to populate the =osg-user-vo-map.txt= :  
<pre>
$VDT_LOCATION/gums/scripts/gums-host-cron --gumsdebug
</pre>

This step is critical because it is the full list of VO's you will support and this information is needed as input to
the OSG configuration step which comes next.  Be sure to check the output for any potential problems, such as missing user accounts in =osg-undefined-accounts.txt=.

For more information about =osg-undefined-accounts.txt=, see  [[OsgSupportedVos][Supported VOs and Undefined UNIX Accounts]].

---++ WS-GRAM services configuration
WS-GRAM is a CE service that submits user jobs from the grid to an underlying local batch system. Users present their grid identities (user proxy) to WS-GRAM. This identity is mapped to a local user (UNIX username), for example using a gridmap-file (as explained above). Jobs are run in the batch system using this local identity. 

---+++!! WS-GRAM configuration for full privilege mode
The default authorization mode for WS_GRAM is Local or Compatibility.  It uses the =/etc/grid-security/grid-mapfile= as the basis for authorization.  

To enable Full Privilege mode you must configure  =/etc/grid-security/gsi-authz.conf= as described in the 
[[#Configure_Globus_to_use_the_PRIM][Configure Globus]] section above, and then set wsgram set to "enabled" in the config.ini file of =configure-osg.py=.
 The =configure-osg.py= (previously =configure-osg.sh=) script will then automatically do the changes needed to configure the WS-GRAM
software to use PRIMA.   All that is necessary is to add an =/etc/sudoers= file manually.
The =/etc/sudoers= file may be added either at this time or after the configuration tool is run.

---+++!! WS-GRAM services sudoers file
Pre-WS-GRAM and WS-GRAM use two different mechanisms to switch to the appropriate local user.

The <i>pre-WS</i> GRAM processes run as privileged user (root) and can, therefore, change to any local unprivileged user. This mechanism, however, may present security risks: bugs in the code, which runs as root, may be exploited to gain privileged access to the machine.

To mitigate this risk, WS-GRAM processes run as an unprivileged user (either <b>globus</b> or <b>daemon</b>, depending on the local configuration). In order for these users to be able to switch to another local unprivileged user, though, the local =sudo= service must be appropriately configured. The configuration requires editing the =/etc/sudoers= file manually.  

In =$VDT_LOCATION/post-install/README=, the section <i>Globus-Base-WSGRAM-Server</i> describes the modifications to =/etc/sudoers= necessary for the web services GRAM to function properly.  To facilitate the necessary modification, the =configure-osg.py= script produces the necessary additions for the =/etc/sudoers= file and writes them into a new file =$VDT_LOCATION/monitoring/sudo-example.txt= . The administrator should simply copy and paste the content of that file into the =/etc/sudoers= file using =visudo=.
*Note the following:*
   * You __must__ use the same authorization mode for pre-ws and web services.
   * This must be done manually.
   * The path defined in =/etc/sudoer= cannot be soft links. Use full paths only. Therefore, if you have your $VDT_LOCATION (e.g. /opt/local/ce-1.0/) soft linked from a generic directory (e.g. /opt/local/ce), it is the explicit path (e.g. ce-1.0) that *must* used in the =/etc/sudoers= file. If you install another version of the software into a different directory, you must change the =/etc/sudoers= to reflect the new installation since making a softlink will not work.
   * Use the =visudo= command to modify the =/etc/sudoers= file. 
   * Beware of extra whitespace when modifying the =sudoers= file, especially at the end of a line.

Make these changes now, keeping in mind the user under which VDT determined your container will run.

In the example (for Full Privilege mode) that follows, the web services user is the <i>daemon</i> user and the real path to the VDT_LOCATION is =/usr/local/osg-ce=:
<pre class="programlisting">
Runas_Alias GLOBUSUSERS = ALL, !root
daemon ALL=(GLOBUSUSERS) \
     NOPASSWD: \
     /usr/local/osg-ce/globus/libexec/globus-job-manager-script.pl *
daemon ALL=(GLOBUSUSERS) \
     NOPASSWD: \
     /usr/local/osg-ce/globus/libexec/globus-gram-local-proxy-tool *
</pre>

---++ Various notes on the Full Privilege Authorization

---+++!! prima-authz.conf's verifyAC attribute 
This is just a comment about the behavior of the =verifyAC= attribute in the =prima-authz.conf= file that should be addressed in the future.  To avoid any problems, this attribute should never be changed from the installed setting of =false=.

When the =verifyAC= attribute is set to 'true' (the CE installation sets this to 'false'), it checks the directory specified by the =issuerCertDir= attribute (set to  =/etc/grid-security/vomsdir=) for a certificate of trusted VOMSes.

If the submitter's proxy is not from one of the trusted VOMS, it is treated as a grid proxy and the FQAN in the proxy is *ignored*. This may generate confusion, since the authorization request is still forwarded to the GUMS authorization service and, if the submitter exists in a VO that allows grid proxies, the authorization service will return a =PERMIT=.

This behavior is the same for Pre-WS-GRAM and WS-GRAM authorizations.

At least one certificate must exist in this directory regardless of the |verifiyAC| setting (e.g. your host cert). In any case, |verifyAC| /must/ be set to |false| in order for the library to extract all information (DN and FQAN) from VOMS proxies. This behavior is essentially the same for pre-WS and WS PRIMA, with the difference that pre-ws PRIMA does not require the directory to exist with any certificate in it.  It should be noted that this might generate confusion, since WS-PRIMA still requires the existence of the directory and of certificates to function properly.


%STOPINCLUDE%
%BR%
%COMPLETE2% %BR%
%RESPONSIBLE% Main.StevenTimm - 20 May 2008 %BR%
%REVIEW% Main.JohnWeigand - 20 Jul 2009 %BR%
%REVFLAG% %S% %BR%

---++ *Comments*
| A large portion of this has become obsolete and is handled by the configure-osg script and by entries in the config.ini file... including the use of the xacml. | Main.JohnWeigand | 21 Jul 2009 - 20:01 |
%COMMENT{type="tableappend"}%
