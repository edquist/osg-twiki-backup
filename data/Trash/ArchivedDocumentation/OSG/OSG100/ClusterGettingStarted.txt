%META:TOPICINFO{author="RobGardner" date="1256327519" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="GridColombiaWorkshop2009"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

---++ Introduction
   * The purpose of this exercise is to setup a small test cluster that can be  used to illustrate creating a site capable of receiving Grid jobs and data.
   * It will have a minimal number of "head nodes" that will host various services such as a Condor job manager, an OSG gatekeeper and storage element.
   * It will have a two or more "compute nodes" that will receive and execute jobs.


---++ Site planning
   * Take a look at SitePlanning
   * Probably the first option will be to just use a gridmap file rather than a GUMS service
   * Identify which software (service) will be installed on which host.
   

---++ Identify the hosts and and assign their roles
Lets say your test grid cluster is going to have in its name,  "tg1",  and you have 7 machines.

   * =tg1-ce.yourdomain.org=  
   * =tg1-se.yourdomain.org=  
   * =tg1-nfs.yourdomain.org= an NFS server 
   * =tg1-ui.yourdomain.org=  your user interface machine
   * =tg1-c001.yourdomain.org= compute node 1
   * =tg1-c002.yourdomain.org= compute node 2
   * =tg1-c003.yourdomain.org= compute node 3
   
We may double up on services on some of the head nodes, and may add/subtract compute nodes (but you need at least one).  But this would be the basic host-role assignment.   You might call this your *node matrix*.




%BR%
%COMPLETE2% %BR%
%RESPONSIBLE% Main.RobGardner - 23 Oct 2009 %BR%
%REVIEW%
