%META:TOPICINFO{author="DouglasStrain" date="1284058116" format="1.1" version="1.9"}%
%META:TOPICPARENT{name="Storage.OpportunisticStorage"}%
%DOC_STATUS_TABLE%
https://twiki.grid.iu.edu/twiki/pub/Storage/WebHome/images.jpg

---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

The Discovery Tool uses XQuery scripts to search the LDAP directory. All scripts supplied with the tool include wrapper scripts that allow easy execution from the command line. See the page [[OpportunisticStorageSearchScripts][Opportunistic Storage Search Scripts]] for documentation on all the scripts.

This page shows how to run XQuery scripts directly. It is intended to support development and custom use of the Discovery Tool. Links to the project development pages can be found at [[http://cd-97177.fnal.gov:8088/wiki/xpathsearch][XPathSearch Development Site]].

---++++ XQuery Scripts

The XQuery scripts are by default run against the OSG BDII service. The endpoint can be changed by altering conf/xpathsearch.rc, see the [[OSGStorageDiscoveryTool][OSG Discovery Tool main page]] for details.

%TWISTY{%TWISTY_OPTS_REVIEW%}%
The following command has to be run to be run from the specific discovery tools directory.  I would either remove the "bin/" directory since setup.sh will put it in the path (and state that surl.xq is in the discovery directory), or state which directory it should be run from.
%ENDTWISTY%

This section shows how to run an XQuery directly by use of the "xquerybase" command supplied with the Discovery Tool. For example, the XQuery for obtaining SURLs from storage elements authorizing the engage VO can be run by invoking "get_surl --vo engage". It can also be run by the following

<pre>
bin/xquerybase bin/surl.xq --vo engage --storage_element_id "" --free_online_size 0 --show_storage_element_id false
</pre>

%TWISTY{%TWISTY_OPTS_REVIEW%}%
I'd change the below paragraph to be a table to be consistent with the rest of the documentation.
All other parts of the discovery tools have parameters in a table.
%ENDTWISTY%

It can be seen below that the script takes the "vo" parameter as an external variable. Notice that the script also takes storage_element_id, free_online_size, and show_storage_element_id as external variables. These parameters are optional in running the get_surl wrapper script, but they are not optional in running the xquery directly. The get_surl wrapper script supplies default values as shown above.


%TWISTY{%TWISTY_OPTS_REVIEW%}%
I have no clue what the below is or why I would use it.  I think this should, at the very least, have an introduction, such as "Here is an example Xquery script you can use for parsing BDII output:"  I think it should actually have a whole sub-section with some additional explanation.
%ENDTWISTY%

<pre>
xquery version "1.0";
(: Finds the Storage Elements for which the vo or role is authorized and constructs an example SURL with the appropriate root path. :)

import module namespace osg="http://opensciencegrid.org" at "functions.xq";

declare variable $vo as xs:string external;
declare variable $fqan := osg:clean_fqan($vo);
declare variable $storage_element_id as xs:string external;
declare variable $free_online_size as xs:decimal external;
declare variable $free_online_size_arg as xs:decimal:= if ($free_online_size=0) then 0 else $free_online_size;
declare variable $show_storage_element_id as xs:string external;

declare variable $header_str := concat("&#x22;", "STORAGE ELEMENT ID", "&#x22;", "&#x20;", "&#x22;", "SURL", "&#x22;", "&#xA;");
declare variable $header := if ($show_storage_element_id='') then $header_str else "";

concat($header,
string-join(
for $acbr in (//GlueSE[@GlueSEUniqueID]/GlueSEControlProtocol[@GlueSEControlProtocolVersion='2.2.0'][@GlueSEControlProtocolEndpoint]/../GlueSA[@GlueSAFreeOnlineSize>=$free_online_size_arg][@GlueSAPath]/(@GlueSAAccessControlBaseRule | GlueVOInfo[@GlueVOInfoPath]/@GlueVOInfoAccessControlBaseRule))
  let $child_acbrs := $acbr/../GlueVOInfo[@GlueVOInfoPath]/@GlueVOInfoAccessControlBaseRule
  let $rootpath := $acbr/../(@GlueSAPath|@GlueVOInfoPath)
  let $endpoint := $acbr/(.|..)/../../GlueSEControlProtocol[@GlueSEControlProtocolVersion='2.2.0']/@GlueSEControlProtocolEndpoint
  let $seid := $acbr/(.|..)/../../@GlueSEUniqueID  
  return    
    if ($storage_element_id="" or $storage_element_id=$seid) then
      if(osg:acbr_match($acbr, $fqan)) then
        if($acbr/..[@GlueVOInfoPath] or ($acbr/..[@GlueSAPath] and fn:not(osg:acbr_nodes_match($child_acbrs, $fqan)))) then
          if($show_storage_element_id='') then                  
            concat("&#x22;", $seid, "&#x22;", "&#x20;", "&#x22;", "srm", substring($endpoint[1], 6), "?SFN=", $rootpath,  "/TESTFILE", "&#x22;", "&#xA;")
          else
            concat("&#x22;", "srm", substring($endpoint[1], 6), "?SFN=", $rootpath,  "/TESTFILE", "&#x22;", "&#xA;") 
        else()
      else() 
    else() 
,""))
</pre>

%TWISTY{%TWISTY_OPTS_REVIEW%}%
I am not too familiar with XQuery, but I have a feeling that people without intimate knowledge of the GLUE schema will be completely lost here.
I think this needs a little more detailed explanation and possibly also a link to the GLUE schema where people can get more information.
Just my opinion.
%ENDTWISTY%

Notice that the script does some formatting of the output. More complete formatting, such as producing columnar output, is done by passing the result through the "formatting" script (supplied with the Discovery Tool) and would therefore not be seen when running an XQuery directly.


-- Main.TedHesselroth - 29 Jul 2009

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = TedHesselroth 

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Storage

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = EndUser

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = HowTo
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = TanyaLevshina
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = DouglasStrain
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->

%META:TOPICMOVED{by="TedHesselroth" date="1271192453" from="Storage.OpportunisticStorageXQueryScripts" to="ReleaseDocumentation.OpportunisticStorageXQueryScripts"}%
