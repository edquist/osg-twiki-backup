%META:TOPICINFO{author="ScotKronenfeld" date="1287509097" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! *<nop>%SPACEOUT{%TOPIC%}%*
%DOC_STATUS_TABLE%
%TOC{depth="2"}%


%BR%
%STARTINCLUDE%
---++ Update Instructions
If you have OSG 1.2 services installed you can follow the instructions below to *update* your existing installation.  This method will work for all OSG packages including =ce=, =client=, =wn-client=, and Storage Elements.  This release can be applied to all OSG 1.2 installations..

%NOTE% If you are using packages from OSG 1.0.x or earlier, you must do a brand new installation because OSG 1.2.x uses a different Pacman cache from prior releases. There are installation guides for installing from scratch the various components available in ReleaseDocumentation.WebHome. In addition, for experienced admins, there is a ReleaseDocumentation.QuickInstallGuide available.

%NOTE% If you are updating from OSG version 1.2.14 or later you can follow [[OSG12NewUpdateInstructions][these streamlined update instructions]] (use the =osg-version= command to check your OSG version).

---++ Update Instructions from OSG 1.2.x to the latest OSG 1.2.x version 

---++++ Preliminaries
Go to the directory where you installed your software (root directory of the Pacman installation, =VDT_LOCATION=) and source the setup script so that the following steps will work correctly.
<pre class="screen">
cd VDT_LOCATION
source setup.sh
</pre>

Make sure that your batch system binaries are in your PATH, especially if you are running SGE.

---++++ Stop VDT Services
Some packages (e.g. =client= or =wn-client=) may not be running any services, however, doing this step will not cause problems.  

<pre class="screen">
vdt-control --off
</pre>

---++++ Backup your software
<pre class="screen">
cp -a $VDT_LOCATION BACKUP_LOCATION
</pre>

---++++ Update the VDT updater script itself

Get the latest version of the vdt-updater script:
<pre class="screen">
pacman -update VDT-Updater
</pre>

Note: If you do not yet have the updater script (look for =$VDT_LOCATION/vdt/update/vdt-updater=), then fetch it with this command:
<pre class="screen">pacman -get %VDT_CACHE_URL%:VDT-Updater</pre>

---++++ Backup

Backup again since the vdt-updater script will request the location of your backup and verify that the backup is identical to the current contents of the install directory before updating your installation.
<pre class="screen">
cp -a $VDT_LOCATION BACKUP_LOCATION
</pre> 

---++++ Get VDT Updates
This will update VDT packages specifically.
<pre class="screen">
vdt/update/vdt-updater
</pre>

---++++ Get OSG Updates
The =osg-version= and =osg-config= packages must be updated on all OSG installations:
 
First backup your config.ini file:
<pre class="screen">
cp osg/etc/config.ini /tmp/config.ini-backup
</pre>

Then  update your osg packages:
<pre class="screen">
pacman -update osg-version</verbatim>
pacman -update osg-config</verbatim>
</pre>

Finally, restore your backup:
<pre class="screen">
cp  /tmp/config.ini-backup osg/etc/config.ini
</pre>

After updating, re-source the setup.sh file to load any changes in the environment:
<pre class="screen">
source setup.sh
</pre>


#PostInstallConfiguration
---++++  Post Install Configuration 
After you complete the updates of your packages, you will need to run the =vdt-post-install= script in order to complete any post-installation setups needed after your packages have been updated:

<pre class="screen">
vdt-post-install
</pre>


---+++++ Config.ini changes
There are a few changes in the config.ini that you need to be aware of if you are updating an existing CE.  The changes deal with how !CEMon, Gratia, and resource names are configured.

!CEMon configuration is now done in a separate section of the config.ini.  This is a change from OSG 1.2.3 or earlier where the !CEMon configuration was handled automatically.  This change allows admins to specify which !CEMon servers their site should report to.  If you are using a config.ini, from OSG 1.2.3 or earlier, you *must* make sure that at least one job manager is enabled in order for !CEMon to be configured and enabled correctly.  If a job manager is enabled, then the =CEMon= section does not have to be present in the config.ini for !CEMon to be configured.  However, if you do have a =CEMon= section, you *must* make sure that the =enabled= setting is set to =True=.  If you are configuring a new system, then you *must* make sure that the =enabled= setting in the CEMon section is set to =True=.

Gratia configuration is now done in a separate section of the config.ini.  This is a change from OSG 1.2.3 or earlier where the Gratia configuration was handled automatically.  This change allows admins to have their CE report to a local gratia collector as well as the central OSG gratia collector.  If you are using a config.ini, from OSG 1.2.3 or earlier, you *must* make sure that at least one job manager is enabled in order for Gratia to be configured and enabled correctly.  If a job manager is enabled, then the =Gratia= section does not have to be present in the config.ini for Gratia to be configured.  However, if you do have a =Gratia= section, you *must* make sure that the =enabled= setting is set to =True=. If you are configuring a new system, then you *must* make sure that the =enabled= setting in the Gratia section is set to =True=.

The other user visible change in the configuration is in the =Site Information= section.  The =site_name= setting has been deprecated in favor of =resource= and =resource_group= settings.  This allows the information that your site reports to the GOC to more closely match the registration information for your site.  Although you can keep using the =site_name= setting, replacing that with =resource= and =resource_group= settings that match the OIM registration for your resource will allow for better accounting and information reporting concerning your site and jobs run on your site.


---+++++ Reconfiguration
On a CE, you will also need to reconfigure your system
<pre class="screen">
configure-osg -v
configure-osg -c
</pre>

On an SE, you may need to rerun configure_bestman and configure_xrootd before you start your services again. 

---++++ Restart VDT Services
This step can be omitted if you are not running any services.  If you are not certain, you can run it since services are disabled by default so the only services that will be started are ones that you have explicitly enabled.
<pre class="screen">
vdt-control --on
</pre>

%STOPINCLUDE%

---++ *Comments*
%COMMENT{type="tableappend"}%


<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = SuchandraThapa

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = ComputeElement

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = ScotKronenfeld 
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = IwonaSakrejda
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################
-->
