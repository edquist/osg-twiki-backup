%META:TOPICINFO{author="KyleGross" date="1476804104" format="1.1" version="1.4"}%
%META:TOPICPARENT{name="SiteAdminsWorkshopTutorialsAug09"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

%STARTINCLUDE%
%BR%
---+ _%INCLUDEHEADING%  %SPACEOUT{ "%TOPIC%" }%_
_One line introduction._

%EDITTHIS%
%BR%

---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%


---+++ Motivation
Having a drop-in SLC4 machine, configured as necessary for Athena analysis with the latest useful releases, and equipped with appropriate DDM software, can be a great advantage for a physics end user who wants full Athena/ARA analysis on a laptop but does not have the time or expertise necessary to set this up.

The machine offered (for now) at http://www-hep.uta.edu/~stradlin/Trash/Tier3VM is an initial stab at such a system. Implemented in a standard VMware container is a SLC4.7 virtual machine, with separate VM disks containing ROOT 5.24 (built for the installation), Python 2.5, VDT-Client for grid support, DDM client tools, automatic SSH key generation scripts to ease linking with an lxplus account for authenticated CVS/cmt checkouts.

In preparation for this install, please be sure you have the following:
   1. Your machine should probably be running a Core Duo processor or better for good results. The VX processor extensions help a lot with virtual machine performance. *The more RAM you have, the happier you will be with your VM.* 
   1. Either [[http://www.vmware.com/products/fusion][VMware Fusion]], [[http://www.vmware.com/download/player/][VMware Player for Windows]], or [[http://www.vmware.com/download/player/][VMware Player for Linux]] must be installed on the host computer you intend to use.
   1. Verify that you have at least 30 GB of disk free for this. 
   1. More RAM is always better for virtualization, and 2 GB is more or less the minimum. RAM is cheap - one can find 4 GB for ~ $30-50 ([[http://newegg.com][Newegg]]). Invest.
   1. Create a folder (like /DataShare on Linux or OS X, or c:\DataShare on Windows) intended for sharing with the VM. For performance reasons, this would ideally be on a different physical volume than your boot volume, though this is uncommon with laptops.

---+++ Configuration
This VM was created using the VMware Fusion product. While this should _in principle_ work with any VMware product, including the free Player software, I have made no tests to be sure that this is true. *The Mac VMware Fusion version you should use with this particular VM is the [[http://vmware.com/products/fusion/][VMware Fusion 2.0.5]], which is fast, stable and easy to use, and allows up to 4 cores per VM.*

This VM is build to be as CERN-independent as possible (though there will surely be changes and improvements to this as time goes on). The idea is to be able to install it on any site, in any country, or on your laptop, without CERN services dependencies, as bandwidth is sometimes a problem.

This installation contains the following:
   * SLC 4.7, kernel 2.6.9-89.3.EL.cern, rebuilt with correct parameters for good VM performance.
   * Athena 14.2.20 (Athena 13.0.40, with recent EV Group Area, and Athena 14.2.0 are also available)
   * ROOT 5.24, built to order and preinstalled
   * DQ 2 Client Tools (the new dq2-ls and etc.)
   * VDT-Client 1.10.1
   * VMware Tools installed for ease of use in GUI mode
   * vmnet network drivers for enhanced performance

The present VM version has been touched up a bit (version 3.1.2), but is functionally the same as previous releases. The corrected VM images were posted 6 August 2009.
Another immature SLC5 version (which has problems running Athena) is posted as well.

---+++ Network Configuration and Data Storage
   * The VM will be operating in NAT mode. This means that the host machine runs a process that emulates a router with a NAT enabled. Most NATs run in the address space of 192.168.xxx.xxx. Your VMware installation will choose the 192.168.xxx part of this, and the DHCP server inside that NAT will assign the last three digits at will to individual VMs. Since this is a NAT, these IP addresses are not accessible from the outside without [[http://www.vmware.com/support/gsx3/doc/network_nat_advanced_gsx.html][special configuration]]. The NAT emulator is presently somewhat processor-hungry. We recommend using it in spite of this defect because shared filesystems with the host are much faster in NAT mode than in bridged mode.

   * The VM is not operated in Bridged network mode because of the severe constraints on file transfer bandwidth we observed in VM benchmarking (which may be obsolete, now -- it was several versions ago). It is also worth considering that the VM will be exposed to the breadth of the Internet in bridged mode, while in NAT mode is it fully isolated from incoming attacks.

   * This interest in shared filesystems (such as *hgfs*, *NFS* and *xrootd*) arises from a desire to be able to store both datasets and ATLAS software installations once and give access to both the host and several VMs as necessary, with the most performant access possible.
   
---+++ Installation
   1. Download the file located at http://www-hep.uta.edu/~stradlin/Trash/Tier3VM/Trash/Tier3.1.2.tbz ( [[http://www-hep.uta.edu/~stradlin/Trash/Tier3VM/Trash/Tier3.1.1.tbz][Trash/Tier3.1.2.tbz]]).
   1. Untar the virtual machine (=tar -xjf Trash/Tier3.1.2.tbz=) and place it somewhere on your boot volume.
   1. In the VM Settings (varies for different platforms), set a Shared Folder to point to your =/DataShare= directory, if it has not happened automatically.

---+++++ Logging in and first run
   1. Start up the VM. If it asks whether this VM has been copied or moved, state that it has been copied. This will change the MAC address for the VM, preventing future conflicts.
   1. As the VM starts up, it may have to reconfigure its virtual network card to account for the new IP address. Delete the old hardware configuration as prompted, and configure the new one to work via DHCP. Continue the boot process. *If this does not happen during boot* you will need to configure the network card after login.
   1. Once booted, log in to the *VM* as =root=, password =t3changeme=. 
   1. Go to the =Scripts= directory of the VM and run the =secureMe.sh= script to change the root password (!!)
   1. Create yourself a user in the system with the newUser.sh script, or by hand if you want special settings. If desired, add yourself to the =sudoers= file.
   1. Log out, then back in as your user.
   1. Run =/sbin/ifconfig= to find out the IP address your VM has been assigned by the VMware NAT daemon. 
      * If the address you see is =inet addr:127.0.0.1=, run =startx= to launch the GUI, open =Applications->System Settings->Network= and enter the root password when prompted. In the =Devices= tab, you will see device =eth0=. Select it, then click the _Edit_ button (the wrench icon) in the toolbar. Select the _Hardware Device_ tab in the window that comes up, and you'll see an entry called _Bind to MAC address_, with a button beside it labeled _Probe_. Click that button, and select the _OK_ button at the bottom of the window. Click on =eth0= again, and click the _Activate_ button in the toolbar (the green checkmark). Click to accept any dialogs you see. Run =/sbin/ifconfig= to find out the IP address your VM has been assigned by the VMware NAT daemon.
   1. If you created a =/DataShare= directory as mentioned previously, go to the VMware Settings (the lightswitch in the VM toolbar), select _Shared Folders_, and click the _Enabled_ checkbox. 
   1. Copy in any grid certificates necessary (see below)
   1. Make any necessary changes to the .bashrc
   1. Change things about the VM to suit your needs. Some of these things might be:
      * Turn on KDE activation when the machine starts by editing =/etc/inittab= and changing =id:3:initdefault:= to =id:5:initdefault:=.
      * Shell and other user prefs (using =Applications->System Settings->Users and Groups=)
      * sudo permissions - On the command line, do the following:
         <verbatim>su</verbatim>
         <verbatim>export EDITOR=/usr/bin/vim;/usr/sbin/visudo </verbatim>
      * Working by example from the "root" line, add your username (and any other users you might need to have sudo privileges) - save
   <verbatim>exit</verbatim>

---+++++ Grid Setup
All that is necessary to gain access is to copy your =usercred.p12= file to your =~/.globus= directory, and do either a 

<verbatim>grid-proxy-init</verbatim> 

or 

<verbatim>voms-proxy-init -voms atlas</verbatim>

or whatever your favorite VOMS is.

---+++ NFS Configuration

On OS X Leopard, it's terribly simple to set up a host NFS server. Add the line:

=/DataShare -network 192.168.0.0 -mask 255.255.0.0= 

to 

=/etc/exports=

then, 

=sudo nfsd restart=

On the guest side, add the NFS shared drive to your VM's /etc/fstab:
=sudo mkdir /DataShare=
<verbatim>sudo cat "192.168.190.1:/DataShare	/DataShare	nfs	rw,rsize=32768,wsize=32768" >> /etc/fstab
sudo mount -a</verbatim>

The =192.168.xxx.1= will change based on what you see when you type 

=/sbin/ifconfig=

The IP address you assign to the NFS server in this network should be the same as the guest VM's IP address, with a "1" as the last of the four IP address fields.

And all is done.

---+++ xrootd Setup

Also simple. I assume that you have installed ROOT on the host machine. On OS X Leopard, ROOT versions before 5.19 are not recommended. Once ROOT is set up on the host, create the following =/Atlas/ROOT/root/xrootd.cf= file:
<verbatim>
all.role server
xrootd.fslib $ROOTSYS/lib/root/libXrdOfs.so
xrootd.export /DataShare
xrd.port 1094
xrd.adminpath /tmp
</verbatim>

Run the command:

=xrootd -b -l /tmp/xrootd.log  -c /Atlas/ROOT/root/xrootd.cf=

And on the guest, all =xrootd= calls can be made as

<verbatim>root://192.168.150.1//DataShare/...</verbatim>

---+++ Recommendations
The VM you download here has been starved down, minimizing the disk sizes for bandwidth reasons. They will expand as necessary to take your datasets.
Use the Shared Folders as your dataset containers, but do not install software in them, or trust their reported filesizes. 

If you want to shrink or expand the VM disks, do so by creating new disks and copying the contents of the old disks over to them. VMware offers a slow, inefficient solution for disk size management that I have abandoned - it is far faster to do the whole thing by hand. Detailed instructions can be found [[https://twiki.cern.ch/twiki/bin/view/Main/VMwareDiskWrangling][VMwareDiskWrangling]]. Until that page is actually working, you can email me if you need instructions for this.

---++ Single-Processor Machines (for previous VM versions)
VMs created in April 2008 had assumed multicore host machines. If you have such a computer and the VM will not boot, please select (at the very beginning of the boot process) a different kernel - the CERN non-SMP kernel. Once logged in as root, download 

http://www-hep.uta.edu/~stradlin/Trash/Tier3VM/kernel-SLC4/

and install it via 

=rpm -ivh kernel-*=

Then select the non-SMP =cernvm= kernel next time you boot. 

%STOPINCLUDE%
%BR%
%COMPLETE1% %BR%
%RESPONSIBLE% Main.AldenStradling - 04 Aug 2009 %BR%
%REVIEW%