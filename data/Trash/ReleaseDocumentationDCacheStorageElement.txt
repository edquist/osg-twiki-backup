%META:TOPICINFO{author="TedHesselroth" date="1271186415" format="1.1" reprev="1.4" version="1.4"}%
%META:TOPICPARENT{name="ReleaseDocumentation.StorageInfrastructureSoftware"}%
%DOC_STATUS_TABLE%

---+!! *<noop>%SPACEOUT{ "dCache Storage Element" }%*
https://twiki.grid.iu.edu/twiki/pub/Storage/WebHome/images.jpg

%TOC%


   * SRM-dCache

[[ReleaseDocumentation/PreparingForDCache]]

[[Documentation/StorageDcacheOverview]]

[[Documentation/StorageDcachePnfs]]

[[ReleaseDocumentation.DCache]]

[[Storage.DCacheChimera]]


*Purpose*: The purpose of this document is to provide dCache based SE administrators the information on how to prepare, install and validate the SE.


---+++ Introduction

%STARTINCLUDE%
dCache is a disk-caching system jointly developed by Deutsches Elektronen-Synchrotron (DESY) and Fermi National Accelerator Laboratory (Fermilab). Although it was initially developed to provide disk caching for tertiary storage, dCache makes an excellent grid Storage Element (SE) &ndash; even without tape backend &ndash; because it has a [[https://srm.fnal.gov/twiki/bin/view/SrmProject/WebHome][Storage Resource Manager]] interface and supports multiple transfer protocols: gridftp, xrootd, dcap, and http. dCache also provides a single name space across the entire pool of disk servers, making it look like a single file system to the users. It simplifies administration by providing mechanisms for internal clean-up and load balancing, which allows efficient use of storage space and handling of users' requests.
%STOPINCLUDE%


dCache is a storage element implementation that meets the SRM v2.2 specification. dCache is not packaged with the base Virtual Data Toolkit installation, but is available through the VDT as a separately downloadable package. In addition, OSG provides Gratia storage and transfer probes for site and grid-wide monitoring. Recently, subset of [[http://datagrid.ucsd.edu/toolkit][community toolkit]] was added to vdt-dcache distribution.

The dCache distributed components are implemented with the Cells package. Cells communicate with each other and components of dCache are implemented as cells. Hardware resources on a dCache node depend on what cells are running on that node. For a detailed description of dCache cells and the resources they require, see <a target="_top" href="https://plone4.fnal.gov/P0/DCache/dcachedoc/cell-descriptions/">Descriptive Cell Listing</a>. !dCache also uses !PostgreSQL databases for SRM and [[https://twiki.grid.iu.edu/bin/view/Documentation/StorageDcachePnfs][Pretty Normal File System (PNFS)]] to provide transparent file access.

---+++ Architecture
The detailed dcache architecture is provided at [[http://www.dcache.org][dCache Project Home Page]].
Main dCache components are listed in the table below:
| *Component Name* | *Purpose* |
|Location Manager|Instructs a newly started domains to which domain they should connect |
|PNFS, Chimera| Name servers|
|PNFS Manager|Manages the name space functionality|
|Info Provider|Provides a description of a !dCache instance using the GLUE information model|
|!gPlasma|Manages authorization of the clients|
|!Storage.PoolManager|Selects which pool is used for an incoming request|
|!ResilientManager|Keeps track of the number of replicas of each file within a certain subset of pools and makes sure this number is always withina specified range|
|!SrmSpaceManager|Provides a standardized webservice interface for managing a storage resource. Provides means to reserve space, initiate file storage or retrieve, and replicate files to another SRM|
|Doors ||
|  dcap door|Supports dcap protocol|
|  gsiftp door|Supports !GridFTP protocols v1 and !GridFTP v2. |
|  gsidcap door|Supports dCap protocol with a GSI authentication wrapper|
|  xrootd door|Supports xroot file transfer protocol|
|  NFSv4.1| Supports NFSv4.1 protocol|
|Pools| Store retrieved files and provide access to that data. Data access is supported via movers. A machine may have multiple pools| 


<div class="figure">
  <p><img src="%ATTACHURLPATH%/dcache_tier2.png" class="scaled" alt="Medium-sized dCache installation (click to enlarge)" /></a></p>
  <p>[[%ATTACHURLPATH%/dcache_tier2.png][Medium-sized dCache installation (click to enlarge)]] %BR% </p></div>



<!-- CONTENT MANAGEMENT PROJECT

   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = TedHesselroth

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = Storage
   * Local DOC_AREA       = 

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (Scientist|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = All

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = Knowledge
   * Local DOC_TYPE       = 
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %NO%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       =  TanyaLevshina
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################ 
-->


-- Main.TedHesselroth - 05 Mar 2010

   * WhatisaSE.png: <br />
     <img src="%ATTACHURLPATH%/WhatisaSE.png" alt="WhatisaSE.png" width='630' height='473' />    


Pull vs Push Mode in SRM
From Difference between srm copy in push and pull mode explained.
SRM Pull Mode

   1. SRM Client contacts the Destination Server SRM.
   2. The SRM at the Destination Server sends a SrmGet? request to the Source Server's SRM.
   3. Source Server computes the Transfer URL (TURL) of the data file.
   4. Source Server SRM sends TURL to the Destination Server SRM.
   5. Destination Server initiates a transfer from the Source Server directly, bypassing the SRM client.
   6. When the transfer has been completed, Destination Server SRM notifies the SRM Client that the transfer is done. 

The pull mode exchange can be illustrated by the following diagram:

  Client  ---> Destination <----> Source

SRM Push Mode

   1. SRM Client contacts the Source Server SRM with an SrmPut? request.
   2. Source Server SRM contacts the Destination Server SRM with the SrmPut? request.
   3. Destination Server SRM computes the Transfer URL (TURL) for the data file.
   4. Destination Server SRM sends the TURL to the Source Server SRM.
   5. Source Server starts a transfer to the Destination Server, bypassing the SRM Client.
   6. Destination Server SRM sends a completion notice to the SRM Client after the file has successfully been transfered. 

The push mode exchange can be illustrated by the following diagram:

  Client  ----> Source <------> Destination


   * Data life cycle: <br />
     <img src="%ATTACHURLPATH%/Data_lifecycle_and_role_of_SRM.png" alt="Data_lifecycle_and_role_of_SRM.png" width='797' height='580' />    

   * storage system: <br />
     <img src="%ATTACHURLPATH%/FNAL_SRM_system_context.png" alt="FNAL_SRM_system_context.png" width='878' height='506' />    

     <img src="%ATTACHURLPATH%/SRMCopytodisk.png" alt="SRMCopytodisk.png" width='872' height='1851' />  
   * prepare to put state diagram: <br />
     <img src="%ATTACHURLPATH%/SRMPrepareToPut.png" alt="SRMPrepareToPut.png" width='872' height='1851' />    

%META:FILEATTACHMENT{name="dcache_tier2.png" attachment="dcache_tier2.png" attr="" comment="Typical dCache service distribution for a Tier 2 level setup." date="1269445783" path="dcache_tier2.png" size="157327" stream="dcache_tier2.png" tmpFilename="/usr/tmp/CGItemp9503" user="TedHesselroth" version="1"}%
%META:FILEATTACHMENT{name="WhatisaSE.png" attachment="WhatisaSE.png" attr="" comment="" date="1270503415" path="WhatisaSE.png" size="62734" stream="WhatisaSE.png" tmpFilename="/usr/tmp/CGItemp10914" user="TedHesselroth" version="1"}%
%META:FILEATTACHMENT{name="Data_lifecycle_and_role_of_SRM.png" attachment="Data_lifecycle_and_role_of_SRM.png" attr="" comment="Data life cycle" date="1270503870" path="Data_lifecycle_and_role_of_SRM.png" size="54376" stream="Data_lifecycle_and_role_of_SRM.png" tmpFilename="/usr/tmp/CGItemp10934" user="TedHesselroth" version="1"}%
%META:FILEATTACHMENT{name="FNAL_SRM_system_context.png" attachment="FNAL_SRM_system_context.png" attr="" comment="storage system" date="1270503894" path="FNAL_SRM_system_context.png" size="67965" stream="FNAL_SRM_system_context.png" tmpFilename="/usr/tmp/CGItemp10940" user="TedHesselroth" version="1"}%
%META:FILEATTACHMENT{name="SRMCopytodisk.png" attachment="SRMCopytodisk.png" attr="" comment="srm copy state diagram" date="1270503917" path="SRMCopytodisk.png" size="35321" stream="SRMCopytodisk.png" tmpFilename="/usr/tmp/CGItemp10929" user="TedHesselroth" version="1"}%
%META:FILEATTACHMENT{name="SRMPrepareToPut.png" attachment="SRMPrepareToPut.png" attr="" comment="prepare to put state diagram" date="1270503954" path="SRMPrepareToPut.png" size="27226" stream="SRMPrepareToPut.png" tmpFilename="/usr/tmp/CGItemp10940" user="TedHesselroth" version="1"}%
%META:TOPICMOVED{by="TedHesselroth" date="1271186415" from="Storage.DCacheStorageElement" to="ReleaseDocumentation.DCacheStorageElement"}%
