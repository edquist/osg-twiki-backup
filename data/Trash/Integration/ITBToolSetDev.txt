%META:TOPICINFO{author="JeffPorter" date="1221608319" format="1.1" reprev="1.4" version="1.4"}%
%META:TOPICPARENT{name="WebHome"}%
%LINKCSS%

<!-- This is the default OSG Integration template. Please modify it in the sections indicated to create your topic! -->

<!-- By default the title is the WikiWord used to create this topic !--> <!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!! %SPACEOUT{ "%TOPIC%" }%

%TOC%

%STARTINCLUDE% 
%EDITTHIS%

---++ Overview

These pages are to document the development of a set of tools for running site validations on the OSG ITB. The starting point for what these tools should provide exist on the site validation tables produced for each ITB cycle. Those tables include specific tests of services on each CE and SE, links to ITB targeted information collectors, and summary information from each VO on their ITB test jobs. Such tables are currently filled by hand and many of the tests are run on each site by the site's administrater. The tool set described here are proposed to streamline the process and make the ITB cycle more relevant to the user community. The tools should provide:

   * automate testing of services deployed on the ITB 
   * easily extend tests to user supplied payloads 
   * Lower the threshold for new users to test running jobs on a GRID & provide immediate feedback 

The main idea is to develop an infrastructure that probes services deployed on ITB, tests their functionality, interacts with each site as a user process, and reports results to a central location for display. The developers are: Suchandra Thapa, Jeff Porter and Rob Gardner.

---++ Framework

The basic framework is built upon several distinct pieces:

   * a wrapper python script that runs a simple API that payload jobs must support and a communication channel to a collector service 
   * a collector service with a persistent store for data 
   * a set of payload jobs with well defined naming conventions 
   * a deployment package and job submission scripts 
   * a web-based display of results 

Jobs are submitted to the persistent ITB sites as the wrapper job with arguments to select what payloads to deploy on the destinations. The jobs run and report results back to the wrapper script. The wrapper job sends a series of job-status information back to the central collector.

Some Questions:
   * Will there be multiple payloads per wrapper? and, if so, will that be multi-threaded? 
   * There will be a unique ID to the job - will we grab that during submission from the collector? 

---++ 
---++ Packages

The user infrastructure should be lightweight and assembled into a single package containing:

   * installer script that can install the OSG client and set up a user submit host 
   * submission scripts for accessing the OSG-ITB wrapper script 
   * set of default payload scripts with a template for how to add new ones 
   * basic collector script for those wanting to report to a local collector 

In addition, a central collector and data display package could be provided separately. That package includes:

   * basic collector script 
   * database table definitions (mysql or postgres) 
   * collector -to- database loading software 
   * basic query tools and web display scripts 

It may be that all of these pieces are lightweight enough to be distributed in a single package.

---++ Payloads

As mentioned in the overview section, the base set of payloads should probe items relevant to site validation.

One category of such payloads is to verify information in the central information databases. In building the submission scripts, the OSG-ITB central information (VORS & BDII) should be queried about resources on each site. The payloads will then be sent to compare that information with that found on the actual site. There will be several different payloads of this type.

%STOPINCLUDE%

%BOTTOMMATTER%

-- Main.JeffPorter - 15 Sep 2008
