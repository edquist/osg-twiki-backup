%META:TOPICINFO{author="BrianBockelman" date="1486499645" format="1.1" reprev="1.24" version="1.24"}%
%META:TOPICPARENT{name="Trash.ReleaseDocumentationComputeElementAuthorization"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%
---++ Introduction
In Compatibliity mode, authorization is still performed using the <i>grid-mapfile</i> but your site must run a GUMS server; see [[Trash.ReleaseDocumentationInstallConfigureAndManageGUMS][GUMS installation instructions]].  The difference relative to the Grid3 configuration is in the source of the VO membership data/account assignments.  Instead of each CE node pulling independently from the VO VOMS servers, each CE node for your site pulls the data from your site's GUMS server.  Thus, centralized mapping is enabled.  Your site's GUMS server polls the VOs' VOMS servers much the same as the <i>edg-mkgridmap</i> process did, the difference being that all CE nodes account assignments are managed in one place, the GUMS server.  Given the GUMS configuration options, account pools (many accounts, one-to-one DN-to-account mapping) can be implemented as well as group accounts (many-to-one DN-to-account mapping).

The GUMS client software, which is installed with every CE node installation, contains a script that periodically creates/updates the grid-mapfile. This script is a <i>root</i> cron process.

A couple of points to be aware of regarding this configuration relative to Full Privilege:
   * You will not be able to provide role based authorization in this configuration. For info, see [[Documentation/VORolesAndGroups][How Fine-Grained Authorization is Implemented using VO-defined Roles and Groups]]. In particular, users belonging to multiple VOs will always be mapped to the same Unix account. This will introduce inaccuracies in the accounting records.
   * You will introduce delays since each gatekeeper will have to regenerate the map before implementing the new policy or allowing new users. 

In the compatibility configuration, you will have:
   * One GUMS server per local account domain to manage the mapping from Grid identity (DN+attributes) to local username
   * The GUMS client program <i>gums-host</i> running via cron on your gatekeeper(s) to retrieve both the forward and inverse maps (where forward is DN-to-account, inverse is user-to-VO).

---++ Compatibility Mode Requirements
Here is a list of the requirements to implement the Compatibility authorization mode:
   * A GUMS service. See the [[Trash.ReleaseDocumentationInstallConfigureAndManageGUMS][Install Configure And Manage GUMS]] topic of the %CACHE% documentation for information on installing GUMS.%BR%
   <b>Note:</b> The GUMS service should be installed on a host independent of any CE node.

   * Globus, by default, uses the =/etc/grid-security/grid-mapfile= for authorizations so no changes are required to effect this.

   * WS-GRAM uses a =sudoers= file which must be configured for use..

   * The GUMS Client software, which is installed as a part of the %CACHE% CE software, must be configured to point to your GUMS service.

   * A cron process, =gums-host-cron= , must be activated to periodically update the =osg-user-vo-map.txt= file used by Gratia, <nop>MonaALISA and GIP.

   * Local accounts must be created on the CE and worker nodes for all potential accounts that will be assigned by your GUMS service.  Your local GUMS administrator can identify these for you.%BR%%BR%
   Alternatively, once you have configured your GUMS client and run the =gums-host-cron=, there are two files created that can be reviewed to verify  you can get the list from the =$VDT_LOCATION/monitoring/osg-user-vo-map.txt= when the =gums-host-cron= service is run .  A listing of those local accounts that do not exist, but can be assigned by your GUMS service, can be seen in the =$VDT_LOCATION/monitoring/osg-undefined-accounts.txt= file which is also generated by the =gums-host-cron= script.

---++ WS-GRAM services sudoers file
WS-GRAM is a CE service that submits user jobs from the grid to an underlying local batch system. Users present their grid identities (user proxy) to WS-GRAM. This identity is mapped to a local user (UNIX username), for example using a gridmap-file (as explained above). Jobs are run in the batch system using this local identity. Pre-WS-GRAM and WS-GRAM use two different mechanisms to switch to the appropriate local user.

The <i>pre-WS</i> GRAM processes run as privileged user (root) and can, therefore, change to any local unprivileged user. This mechanism, however, may present security risks: bugs in the code, which runs as root, may be exploited to gain privileged access to the machine.

To mitigate this risk, WS-GRAM processes run as an unprivileged user (either <b>globus</b> or <b>daemon</b>, depending on the local configuration). In order for these users to be able to switch to another local unprivileged user, though, the local =sudo= service must be appropriately configured. The configuration requires editing the =/etc/sudoers= file manually.  

In =$VDT_LOCATION/post-install/README=, the section <i>Globus-Base-WSGRAM-Server</i> describes the modifications to =/etc/sudoer= necessary for the web services GRAM to function properly.  To facilitate the necessary modification, the =configure-osg.py= script produces the necessary additions for the =/etc/sudoers= file and writes them into a new file =$VDT_LOCATION/monitoring/sudo-setup.txt= . The administrator should simply copy and paste the content of that file into the =/etc/sudoers= file using =visudo=.

*Note the following:*
   * You __must__ use the same authorization mode for pre-ws and web services.
   * This must be done manually.
   * The path defined in =/etc/sudoer= cannot be soft links. Use full paths only. Therefore, if you have your $VDT_LOCATION (e.g. /opt/local/ce-0.8/) soft linked from a generic directory (e.g. /opt/local/ce), it is the explicit path (ce-0.8) that *must* used in the =/etc/sudoers= file. If you install another version of the software into a different directory, you must change the =/etc/sudoers= to reflect the new installation since making a softlink will not work.
   * Use the =visudo= command to modify the =/etc/sudoer= file. 
   * Beware of extra whitespace when modifying the =sudoers= file, especially at the end of a line.

Make these changes now, keeping in mind the user under which VDT determined your container will run.

In the example (for Compatibility mode) that follows, the web services user is the <i>daemon</i> user and the real path to the VDT_LOCATION is =/usr/local/osg-ce=:
<pre class="programlisting">
Runas_Alias GLOBUSUSERS = ALL, !root

daemon ALL=(GLOBUSUSERS) \
        NOPASSWD: /usr/local/osg-ce/globus/libexec/globus-gridmap-and-execute \
        -g /etc/grid-security/grid-mapfile \
        /usr/local/osg-ce/globus/libexec/globus-job-manager-script.pl *

daemon ALL=(GLOBUSUSERS) \
        NOPASSWD: /usr/local/osg-ce/globus/libexec/globus-gridmap-and-execute \
        -g /etc/grid-security/grid-mapfile \
        /usr/local/osg-ce/globus/libexec/globus-gram-local-proxy-tool *
</pre>

---++ GUMS client software on the CE
The GUMS-Client package is installed as part of the OSG CE install. The essential files are located in the =$VDT_LOCATION/gums/scripts= directory.

You will need to configure these for Compatibility authorization mode.

---+++ !!gums-client.properties file
You need to edit the =$VDT_LOCATION/gums/config/gums-client.properties= configuration file to point to the appropriate GUMS server.  Upon installation, the file contains two entries both populated with the hostname of the CE node you are configuring, in the following example, the GUMS node is on =gums.domain.org= .  For Compatibility mode, only the =gums.location= property needs to be changed to the hostname of your GUMS server. 

<pre class="programlisting">
gums.location=https://gums.domain.org:8443/gums/services/GUMSAdmin
gums.authz=https://gums.domain.org:8443/gums/services/GUMSAuthorizationServicePort
</pre>

The =gums.authz= entry is only used if you wish to use the  client tool to test specific mappings from this host.  Documentation of this client is found at the [[https://www.racf.bnl.gov/Facility/GUMS/1.2/use_test.html][GUMS web site]].  This same functionality can be executed using the GUMS web UI.

---+++ !!gums-host command
In Compatibility mode, the =$VDT_LOCATION/gums/scripts/gums-host= command is used to generate two essential files:
   * =/etc/grid-security/grid-mapfile=
   * =$VDT_LOCATION/monitoring/osg-user-vo-map.txt=

This command is run  by the =gums-host-cron= cron service, which is addressed in more detail in later a section of this document.

For Compatibility mode,  you will need to test the generation of both this files.

---++++ !!Test grid-mapfile generation
To test =grid-mapfile= generation, you need to run the below sequence (as root).  Note this uses the CE's host certificate.

<pre class="screen">
# <b>source $VDT_LOCATION/setup.sh </b>
# <b>cd $VDT_LOCATION/gums/scripts </b>
# <b>./gums-host generateGridMapfile</b>    <em>(output goes  to stdout. To get 
                                      a file: either redirect stdout or 
                                      use '--file file_name')</em>
     <em>...output  should look similar to the following dependent on your 
     GUMS server mappings..</em>
   #---- members of vo: osg ----#
    "/DC=org/DC=doegrids/OU=People/CN=Alexis Rodriguez 233072" osg01
   "/DC=org/DC=doegrids/OU=People/CN=Andrew Zahn 730598" osg01
   "/DC=org/DC=doegrids/OU=People/CN=Craig Phillip Prescott 50911" osg01
   #---- members of vo: Test3userGroup ----#
   "/DC=org/DC=doegrids/OU=People/CN=Anne Heavey 830711" osg01account
   "/DC=org/DC=doegrids/OU=People/CN=John Weigand 458491" osg01account
      <em>.... and so on</em>
</pre>

If gums-host generateGrid3UserVoMap fails, the GUMS server configuration may not be correct.  Please contact your administrator, or if you are the administrator, make sure you have the following elements in your gums.config (which can be easily configured from the web interface):
   * A hostToGroupMapping element which matches the host name from which you are issuing the request
   * A groupToAccountMapping (referenced by the hostToGroupMapping) element which contains a user group and account mapper
   * A userGroup element (referenced by the groupToAccountMapping) to validate membership of the requested DN
   * A accountMapper element (referenced by the groupToAccountMapping) to return the account for the requested DN

---++++ !!Test osg-user-vo-map generation
To test the =osg-user-vo-map= generation, you need to run as <i>root</i>.  This uses the CE host certificate.
<pre class="screen">
# <b>source $VDT_LOCATION/setup.sh </b>
# <b>cd $VDT_LOCATION/gums/scripts </b>
# <b>./gums-host generateOsgUserVoMap</b>   <em>(output goes  to stdout. To get
                                        a file: either redirect stdout 
                                        or use '--file file_name')</em>
     <em>...output  should look similar to the following dependent on your GUMS
     server mappings..</em>
  #User-VO map
  # #comment line, format of each regular line line: account VO
  # Next 2 lines with VO names, same order, all lowercase, with case (lines starting with #voi, #VOc)
  #voi xxx test3
  #VOc OSG TEST3
  #---- accounts for vo: osg ----#
  osg01 xxx
  #---- accounts for vo: Test3userGroup ----#
  osg01account test3
  <em>  .... and so on</em>
</pre>

If gums-host generateGrid3UserVoMap fails, the GUMS server configuration may not be correct.  Please contact your administrator, or if you are the administrator, make sure you have the following elements in your gums.config (which can be easily configured from the web interface):
   * A hostToGroupMapping element which matches the host name from which you are issuing the request
   * A groupToAccountMapping (referenced by the hostToGroupMapping) element which contains a user group and account mapper
   * A userGroup element (referenced by the groupToAccountMapping) to validate membership of the requested DN
   * A accountMapper element (referenced by the groupToAccountMapping) to return the account for the requested DN

---++ Enable the gums-host-cron service
To keep the =grid-mapfile=  and =osg-user-vo-map.txt= files up to date, a cron file script (=gums-host-cron=) was installed but not activated. The activation of this service is *critical* in Compatibility authorization mode.  This is discussed in the [[Trash.ReleaseDocumentationGumsHostCron][Gums Host Cron]] topic of the documentation..

---++ Retest the authorization mode using site verify
Run the [[Trash.ReleaseDocumentationValidateSiteVerify][Site Verification]] script again locally (as a regular user, not root) and verify that the authorization still works. 


%BR%
%COMPLETE3% %BR%
%RESPONSIBLE% Main.JayPackard - 31 Oct 2007 %BR%
%REVIEW% - Main.AnneHeavey - 14 Nov 2007 %BR%
%REVCOM% not tested during review

%META:TOPICMOVED{by="AnneHeavey" date="1192818795" from="Integration/ITB_0_7.OsgCEAuthCompatibility" to="Integration/ITB_0_7.CompatibilityModeAuthorization"}%
