%META:TOPICINFO{author="AnneHeavey" date="1188943892" format="1.1" version="1.24"}%
%META:TOPICPARENT{name="DocumentationTable"}%
%LINKCSS%

---+!! GUMS Installation and Admin Guide


%TOC%
%STARTINCLUDE%

---++Introduction
%EDITTHIS%

[[http://grid.racf.bnl.gov/GUMS][Grid User Management System (GUMS)]] is a Grid Identity Mapping Service. Identity mapping is necessary when a site's resources do not use grid credentials natively, but instead use a different mechanism to identify users, such as UNIX accounts or Kerberos principals. In these cases, the grid credential for each incoming job must be associated with an appropriate site credential. The GUMS server performs this mapping and communicates it to the gatekeepers. The gatekeepers are charged with enforcing the site mapping established by GUMS. The GUMS client (gatekeeper) portion consists of an admin tool for querying and/or changing the state of the server. Typically, the term "GUMS" refers to the server portion.

GUMS is particularly well suited to a heterogeneous environment with multiple gatekeepers; it allows the implemenation of a single site-wide usage policy, thereby providing better control and security for access to the site's grid resources. Using GUMS, individual resource administrators are able to assign different mapping policies to different groups of users and define groups of hosts on which the mappings will be used. GUMS was designed to integrate with the site's local information services (such as HR databases or LDAP).

GUMS is intended to be used with %CACHE%, but it (the server portion) does not get installed as part of compute element software; you must install it separately. For the OSG ITB you will need to use one of two scenerios, "Full Privilege" or the "Compatibility" site configurations. %RED%(for itb you can't use grid3, but you can for osg? Clarify!)%ENDCOLOR%

More Information can be obtained from the following resources:

   * The full GUMS service description and a detailed manual is available at the GUMS site: http://grid.racf.bnl.gov/GUMS
   * The Privilege project <a href="http://computing.fnal.gov/docs/products/voprivilege/">homepage</a> contains links to everything.  
   * Transition plan: http://computing.fnal.gov/docs/products/voprivilege/documents/transition-to-privilege.html
   * vo-admins@opensciencegrid.org - you can add yourself to this mail list by sending mail to listserv@opensciencegrid.org with the body of the mail being: add vo-admins 

---++Pre-requisites for a GUMS Installation

---+++ pacman install utility
Download and install Pacman (if not already available); see [[PacmanInfo][Pacman Info]]. You will use pacman to install GUMS.

---+++ A http certificate
You will need an  http certificate for your system installed in  =/etc/grid-security/http= as =httpcert.pem= / =httpkey.pem=.  If you do not already have one on this machine, this can  be done as a post-install step.

GUMS running in Tomcat v55 is generally setup by default to run as 'daemon' so be sure to set ownership on the certificate files  accordingly.

Besides information in _$VDT_LOCATION/vdt/post-install/README_, see the online [[http://www.cs.wisc.edu/vdt/requesting_cert.html][VDT instructions for getting the certificate]].

---+++ Known Problems
_[Add known problems here]_

---+++ Pre-existing GUMS installation 
If you have an OSG GUMS running and you're about to reinstall or if any of the following daemons are installed and running on your machine: 
      * Apache
      * Tomcat V5 or V5.5
      * !MySql
see the [[#Shutdown_Guide][Shutdown instructions]].


---++Install GUMS Server
If you want to be able to start GUMS automatically, you need to do the install as root. First of all, make sure no old copy of GUMS exists in the directory where you are installing the GUMS server. To do so, run:

<pre class="screen">
> ls $VDT_LOCATION/gums-service   <i><b>(for installations prior to VDT 1.7.1)</i></b>
        or
> ls $VDT_LOCATION/scripts  <i><b>(for VDT 1.7.1 or higher)</i></b>
</pre>

This should return "fail to find the file".  You should install GUMS from the [[http://www.cs.wisc.edu/vdt/whats_new.html][latest VDT version]]. 

If you have an existing GUMS installation and would like to migrate the existing mappings, gums.config, and admin user to the new GUMS installation, then set the OLD_VDT_LOCATION enviroment variable before installing the new version of GUMS:

<pre class="screen">
> export VDT_OLD_LOCATION=/path/to/prior/vdt_location
</pre>

Here we describe the pacman GUMS installation. You can choose to install GUMS manually, or [[https://www.racf.bnl.gov/Facility/GUMS/1.2/installation_manual.html][learn more about the installation]]. 

---++ Use pacman to install GUMS
If you have a $VDT_LOCATION, go to it. If you don't, then create one and cd to it.  From there, run the pacman install command:
<pre class="screen">
&gt; pacman -get %CACHE%:gums
</pre>

Output:


This installs both the GUMS server and the GUMS client. 

During the installation, you will be asked several questions about trusting the VDT caches and accepting the package licenses.

Under $VDT_LOCATION, these changes occur:
   * If mysql, tomcat v5 and/or apache aren't already installed, it/they will get installed
   * =apache/conf/httpd.conf= gets updated to include tomcat-5 installation of GUMS. 
   * There's a gums-service directory which is for tomcat-5 services provided by GUMS
   * There's a gums directory which contains the GUMS client and host scripts
   * A mysql GUMS database is created, (currently) named gums_1_1

If you have installed GUMS as root then you can start the services used by GUMS and configure them to start at boot time with the =vdt-control= script:

<pre class="screen">
&gt; source &lt;YOUR_VDT_LOCATION&gt;/setup.sh
&gt; vdt-control --on
</pre>

If you have installed GUMS as a non-root user then you will need to start the services used by GUMS manually, even after a reboot:

<pre class="screen">
&gt; source &lt;YOUR_VDT_LOCATION&gt;/setup.sh
&gt; $VDT_LOCATION/post-install/mysql start
&gt; $VDT_LOCATION/post-install/apache start 
&gt; $VDT_LOCATION/post-install/tomcat-55 start 
</pre>

Make sure that the user who starts gums has read access to the http certificate and key.

Verify that you have access to your GUMS services. Go to your GUMS web interface (in a certificate-enabled browser) at =<nop>https://your-gums-server:8443/gums=. You should get a screen up. You won't be able to do anything else until you configure a GUMS administrator.

---++Configure GUMS Server

---+++Create a GUMS administrator
Make sure you log into your GUMS host as root.  

   * Add yourself to the list of GUMS admins. If you have a root mysql password, you'll need it for this step.  If you don't have one, it won't be required. 

Run the following commands: (TODO:  You must specify the complete path to addMySqlAdmin in VDT 1.8.0.  VDT 1.8.1 and later correctly adds this executable to your $PATH) 
       
<pre class="screen">
&gt; <b>ssh -l root your.host </b> <em>#login as root however you like</em>
&gt; <b>source $VDT_LOCATION/setup.sh </b>
&gt; <b>addMySqlAdmin "<replaceable>your DN</replaceable>"</b>   <em>#quotes needed due to spaces in DN string</em>
</pre>

This will give you administrative access through your GUMS web interface.  This adds you (or the DN you provide) to the <b>admins</b> subGroup in the GUMS database.

Output of the <nop>addAdmin command:

<pre class="screen">
WARNING: You must have created the database before running this script!

Adding the following DN to the local database:
Certificate DN for administrator: "/DC=org/DC=doegrids/OU=People/CN=Anne Heavey 830711"

Is this correct? (Enter 'yes' to proceed)
yes

Adding the admin:
Enter the root mysql password
</pre>

If there's no password set, it will finish by itself.  Ignore the warning; the database got created during the installation.

Verify you have  administrative capabilities in GUMS:
   * Go to your gums web interface at =<nop>https://your-gums-server:8443/gums=. 
   * Click "Generate Grid Mapfile".  
   * Enter anything (e.g., xyz) as host computer just to test that the process runs.  
   * You should get "null" as a response. 

If you get the following, you have not added yourself correctly to the <b>admins</b> group or you are using the wrong certificate in your browser:
<pre class="screen">
  Error generating grid-mapfile: You are not authorized to perform this function. Contact your gums administrator if access is needed.
</pre>   

---+++Modify the gums.config file
 A default empty gums.config file is installed in =$VDT_LOCATION/vdt-app-data/gums/config/gums.config=.

%NOTE% =$VDT_LOCATION/gums= is symlinked to =/$VDT_LOCATION/gums-service/var/war=.

You can choose to follow the "instant gratification" path, below, or follow the GumsConfigStepByStep path.

<b>(Note from MichaelThomas:</b>  I think we should include an 'instant gratification' gums.config file with only the OSG vo in the VDT.  Setting up this initial VO using the GUI involves 5 different UI sections, which defeats the purpose of 'instant gratification')

To get some instant gratification:
<ol>
  <li> Add a 'VomsServers' section before the 'UserGroup' section.  Make sure the <b>sslKey</b>, <b>sslCertfile</b>, and <b>sslCAFiles</b> point to the correct locations for your installation.
<verbatim>
        <vomsServers>
                <vomsServer
                        name='osg'
                        description=''
                        persistenceFactory='mysql'
                        baseUrl='https://voms.opensciencegrid.org:8443/voms/osg/services/VOMSAdmin'
                        sslKey='/etc/grid-security/http/httpkey.pem'
                        sslCertfile='/etc/grid-security/http/httpcert.pem'
                        sslKeyPasswd=''
                        sslCAFiles='/etc/grid-security/certificates/*.0'/>
        </vomsServers>
</verbatim></li>
   <li>Add a new 'VomsUserGroup' for the OSG vo inside the existing 'UserGroups' section:
<verbatim>
                <vomsUserGroup
                        access='read self'
                        name='osg'
                        description=''
                        vomsServer='osg'
                        matchFQAN='vo'
                        acceptProxyWithoutFQAN='true'
                        voGroup='/osg'/>
</verbatim></li>
   <li>Replace the existing (empty) accountMappers, groupToAccountMappings, and hostToGroupMappings sections with the following.  Make sure to change the <b>cn='*.site.com</b> attribute to match your hostname, such as <b>cn='*.fnal.gov'</b> (wildcards are allowed).
<verbatim>
        <accountMappers>
                <groupAccountMapper
                        name='osg'
                        description=''
                        accountName='osg'/>
        </accountMappers>

        <groupToAccountMappings>
                <groupToAccountMapping
                        name='osg'
                        description=''
                        accountingVoSubgroup='osg'
                        accountingVo='OSG'
                        userGroups='osg'
                        accountMappers='osg'/>
        </groupToAccountMappings>

        <hostToGroupMappings>
                <hostToGroupMapping
                        groupToAccountMappings='osg'
                        description=''
                        cn='*.site.com'/>
        </hostToGroupMappings>
</verbatim></li>
   <li>On your GUMS web interface at =<nop>https://your-gums-server:8443/gums=, 
    <ul><li>click "Update VO Members" in the left pane
             <li>then the "Update VO Members Database" button
   </ul>This retrieves the members of the <b>/vos/osg</b> group from the Indiana VOMS server, and inserts them into the !MySql GUMS database.</li>
   <li>Still on your GUMS web interface, 
      <ul><li>Click on "Generate Grid Mapfile," 
       <li>Enter the hostname that you want to generate the grid mapfile for<br>
        <b>Key point</b>: In step 3, you specified certain hosts in the 
        <b>cn</b> attribute of the <b>hostToGroupMapping</b> element that these
        mappings applied to.  This is the value you would enter here. 
        For example, if you had entered <b>cn="*.fnal.gov"</b>, you can
        enter any host with a .fnal.gov domain.  Some host certificates are prepended with an extra string, 'host/.'  It is recommended that you also add this regex to the cn attribute to avoid possible problems with some gatekeepers (see above as an example).</li>
    <li>Click "Generate grid-mapfile."  <br>
        You should get the text of a grid-mapfile formatted output (as of this writing):
<pre class="programlisting">
#---- members of vo: osg ----#
"/DC=org/DC=doegrids/OU=People/CN=Alexis Rodriguez 233072" osg
"/DC=org/DC=doegrids/OU=People/CN=Andrew Zahn 730598" osg
"/DC=org/DC=doegrids/OU=People/CN=Craig Phillip Prescott 50911" osg
</pre></li> 
</ul>
</ol>

If you get errors and need to look in log files, they're kept under <tt>$VDT_LOCATION/tocmat/v5/logs</tt>.  The first one to check is the <tt>gums-service-admin.log</tt>, and second the <tt>gums-service-developer.log</tt>.

A few notes about maintenance:
   * The gums.config needs to be maintained such that it includes mappings for all active VOs in OSG. %RED%How to do this still needs to be addressed (Dane has some ideas) AH 5/27/05%ENDCOLOR%
   * You'll need to be notified of changes to the list of VOs in order to maintain this.

---+++Setting up email notification for GUMS errors
GUMS has the capability to notify an administrator via email of any errors that may occur. The =$VDT_LOCATION/tomcat/v55/webapps/gums/WEB-INF/classes/log4j.properties= contains these entries but are commented out.  Look for these lines:

<pre class="programlisting">
  #log4j.appender.mail=org.apache.log4j.net.SMTPAppender
  #log4j.appender.mail.from=gums@site.com
  #log4j.appender.mail.subject=gums e-mail alert
  #log4j.appender.mail.SMTPHost=smtp.site.com
  #log4j.appender.mail.to=admin@site.com
  #log4j.appender.mail.layout=org.apache.log4j.PatternLayout
  #log4j.appender.mail.layout.ConversionPattern=%d{DATE} [%-5p]: %m%n
</pre>

Uncomment them and set the "from", "SMTPHost", and "to" lines to the right values for your site.  "From" should be the username under which GUMS runs.  

Here is a sample:
<pre class="programlisting">
  log4j.appender.mail=org.apache.log4j.net.SMTPAppender
  log4j.appender.mail.from=daemon@cd-94372.dhcp.fnal.gov
  log4j.appender.mail.subject=gums e-mail alert
  log4j.appender.mail.SMTPHost=smtp.fnal.gov
  log4j.appender.mail.to=aheavey@fnal.gov
  log4j.appender.mail.layout=org.apache.log4j.PatternLayout
  log4j.appender.mail.layout.ConversionPattern=%d{DATE} [%-5p]: %m%n
</pre>

Towards the top of the same file (line 22) under the heading "Log for GUMS administrator", you'll see:
<pre class="programlisting">
  log4j.logger.gums.resourceAdmin=DEBUG, adminFile
  #log4j.logger.gums.resourceAdmin=DEBUG, mail, adminFile
</pre>

Comment out the first line and uncomment the second so that the resource info that you need to get comes to you via email in addition to going to a file.
   
After you change these files, stop and restart tomcat-55.

To test for notification, force an error.  E.g., in gums.config, give an incorrect sslCACertificates path:  
<verbatim>
                <vomsServer
                        name='osg'
                        ...
                        sslCAFiles='/dev/null/*.0'/>
</verbatim>

Now go to the GUMS-Admin UI <tt>https://your.gums.host:8443/gums</tt>, click Update Members. You should get an error which (among other text) should contain "Error Message: GUMS is misconfigured: please check the resource admin log for errors, and the gums.config file."

You should receive one or more email notifications as well. (The error shown above generated two messages.)  One of them contains the solution: 

<pre class="programlisting">
15 Aug 2007 11:44:35,198 [WARN ]: VOMSGroup: remainderUrl='' - voGroup='/osg' - role='' wasn't updated successfully:  [Couldn't retrieve users from VOMS server: ; nested exception is: 
	java.lang.Exception: The trusted certificate authority certificates reading failed:  java.io.IOException: No CA files found matching "/dev/null/*.0]
15 Aug 2007 11:44:35,201 [ERROR]: GridID[/DC=org/DC=doegrids/OU=People/CN=Michael Thomas 725374] - Failed to update all groups - Some groups weren't updated correctly: consult the logs for more details. Check GUMS configuration or the status of the VO servers.
</pre>

Don't forget to fix your error now! .... and restart tomcat!!!

---+++Setting the Frequency to Refresh GUMS from VOMS
GUMS will query the various VOMS VOs defined in the <b>gums.config</b> file on a periodic basis based on a parameter defined in =$VDT_LOCATION/gums-service/var/war/WEB-INF/web.xml=.

The third line from the bottom contains the interval in minutes. Default is every 12 hours.
<verbatim>
 <env-entry-value>720</env-entry-value>
</verbatim>

You may want to adjust the value.  You will need to restart tomcat to effect the change.

---+++Installation and Basic Configuration Postmortem
If you've made to this point, you should have a functioning GUMS server.  Congratulations! Savor the moment! You just completed the easy part.  The true challenge is ahead.

Now you will need configure GUMS for the VOs  your site will  support and the authorization policy you wish to deploy for assigning  accounts.  This is not a trivial task.  The following sections will provide some insight into the "instant gratification" configuration of the gums.config you just performed.. 


---++Connecting your GUMS to other VOMS installations
As you will see in the next section, as well as in the small configuration you just completed, that the various VOMS servers you will support are identified in the ==gums.config==  file's  ==userGroup url== attribute.

Your GUMS server needs to access the VOMS servers for the VOs you will be supporting. These VOMS servers can be configured to allow access in one of 2 ways:
   * allow anyone with a valid certificate read-only access
   * allow only specific hosts read access 

In either case, the http certificate you established for GUMS is this identification.  If, when you configure GUMS and you get an "Access Denied" message when performing the "Update Members" web UI function, you will need to contact that VOMS VO adminstrator and request access.



---++Understanding the GUMS configuration file (gums.config)
These links below contain the official documentation for GUMS:
|GUMS configuration guide|http://grid.racf.bnl.gov/GUMS/guide_howto_configuration.html|
|GUMS config reference|http://grid.racf.bnl.gov/GUMS/guide_config_gums.html|

The gums.config file has three parts:
   * *persistenceFactories* - defines where the local data can be stored. For example, GUMS will keep a local copy of the VO listings; you can decide where to keep them. Each component that needs persistence will retrieve it through the factory (not sure what this means. AH). This allows creation of a custom persistence layer for the facility. 
   * *groupMappings* - defines groups of users and sets how they are mapped. A groupMapping is defined by two things: a set of users (userGroup) and a policy for account mapping (accountMapping). Optionally, the policy can be composed of multiple policies (compositeAccountMapping) 
   * *hostGroups* - defines which groupMappings are used for the different hosts.

GUMS uses the gums.config file in this way.

Let's go through an example. A request comes in to map user DN="/DC=org/DC=doegrids/OU=People/CN=Gabriele Carcassi" FQAN="/atlas/usatlas" coming from gatekeeper "/DC=org/DC=doegrids/OU=Services/CN=mygk.usatlas.bnl.gov".

Gums will first look through the hostGroups section to find a match to the gatekeeper CN. Say we have:
<verbatim>
  <hostGroups>
    <!-- RHIC gatekeepers -->
    <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='star*.*.bnl.gov' ... />
    <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='phenix*.*.bnl.gov' ... />

    <!-- ATLAS test gatekeeper -->
    <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='mygk.usatlas.bnl.gov' ... />

    <!-- Rest of ATLAS gatekeepers -->
    <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='*.usatlas.bnl.gov' ... />
  </hostGroups>
</verbatim>

GUMS will go through that list *in the order specified*, and find the first match to the "wildcard" attribute. In this case, we match the third hostGroup specification. Notice that if you put the third hostGroup last, it would never actually be used, because mygk.usatlas.bnl.gov also matches "*.usatlas.bnl.gov", which covers a broader range of hosts. If you have broader match together with more specific cases, the more specific cases must preceed the broader case.

Let's look more closely at the hostGroup entry; there are additional attributes, in particular "groups".  This attribute refers to group mappings. In our case it is:
<verbatim>
    <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='mygk.usatlas.bnl.gov' 
groups='atlasProd,usatlasPool,ivdglPool, ...' />
</verbatim>

GUMS will now go through the list of groups (i.e. group mappings) *in the order specified* and take the first one that matches the given credentials.
GUMS will check whether the credentials are part of atlasProd; if not, then usatlasPool, and so on, until either a match is found or the list ends. *The first match will define the map*, and the user will get mapped accordingly. As before, if you have both a broad default and a more specific case, the specific case must come first.

In a correct configuration, each group (e.g., atlasProd, usatlasPool,...) must be defined in the groupMappings section in a groupMapping element. GUMS first checks the first one listed, e.g., atlasProd.  A groupMapping element contains userGroup elements.  Let's look at the atlasProd group mapping:
<verbatim>
    <groupMapping name='atlasProd' accountingVo='usatlas' accountingDesc='ATLAS'>
      <userGroup className='gov.bnl.gums.VOMSGroup' url='https://vo.racf.bnl.gov:8443/edg-voms-admin/atlas/services/VOMSAdmin' persistenceFactory='mysql'
                 name='atlasProd' voGroup="/atlas" voRole="production" sslCertfile='/etc/grid-security/gumscert.pem' sslKey='/etc/grid-security/gumskey.pem' />
      <accountMapping className='gov.bnl.gums.GroupAccountMapper' groupName='usatlas1' />
    </groupMapping>
</verbatim>

The userGroup defines "who is going to be part of this map". A userGroup element may include the attribute 'ignoreFQAN="true"'; if so, the incoming user's FQAN is ignored, and a match is made.  If this attribute is absent (or is set to false), then the FQAN must match (voGroup, voRole and/or voCapability(?), as defined)  in order for a mapping to take place. 

In this case, the groupMapping "atlasProd" has one userGroup, whose voGroup is "/atlas". The voRole of "production" is required. The attribute 'ignoreFQAN="true"' is absent, so the FQAN must match '/atlas/Role=production'. Our sample FQAN has only a name in it (/atlas/usatlas).  It doesn't match.
 
We proceed with the next group, usatlasPool. Its group mapping is as follows:

<verbatim>
    <groupMapping name='usatlasPool' accountingVo='usatlas' accountingDesc='ATLAS'>
      <userGroup className='gov.bnl.gums.VOMSGroup' url='https://vo.racf.bnl.gov:8443/edg-voms-admin/atlas/services/VOMSAdmin' persistenceFactory='mysql'
                 name='osgusatlas' voGroup="/atlas/usatlas" sslCertfile='/etc/grid-security/gumscert.pem' sslKey='/etc/grid-security/gumskey.pem' ignoreFQAN="true"/>
      <compositeAccountMapping>
        <accountMapping className='gov.bnl.gums.AccountPoolMapper' persistenceFactory='mysql' name='bnlPool' />
        <accountMapping className='gov.bnl.gums.GroupAccountMapper' groupName='usatlas1' />
      </compositeAccountMapping>
    </groupMapping>
</verbatim>

This says all the people in the ATLAS VO %RED%(where is this specified? userGroup name is osgusatlas -- that's different... AH)%ENDCOLOR%, part of /atlas/usatlas, are part of this group. The attribute 'ignoreFQAN="true"' means a matching FQAN is not required. Our case, <tt>DN="/DC=org/DC=doegrids/OU=People/CN=Gabriele Carcassi" FQAN="/atlas/usatlas", is clearly part of /atlas/usatlas</tt>. Even if it came in with no FQAN, however, it would still be considered a match, and get mapped.

Since there is a match, GUMS will use this groupMapping element to determine the account. It looks at the accountMapping, which happens to be composite (there's a pool of accounts and a group account): GUMS will go through the accountMapping elements *in the order listed*, until one returns a value. 

The first is a pool of accounts; if it has any available accounts left, it will return either an assigned account previously assigned to this user, or it will assign a new account to him. If its pool of accounts is exhausted, it will not return an account.  In this case, the next accountMapping element will be used; this one always maps to the same group account, usatlas1.


<!--   POOL ACCOUNTS --------------------------------- -->
---+++ Using pool accounts
When pool accounts are specified in your <i>gums.config</i>, as defined below in the <i>accountMapping</i> element, you will need to create the account names to be assigned as shown in the example below:
<pre>
&lt;accountMapping className='<b>gov.bnl.gums.AccountPoolMapper</b>' 
         persistenceFactory='mysql'  
        <b>name='uscmsPool'</b>/&gt;
</pre> 

The most difficult task in using pool accounts is in determining how many you need.  To figure this out, you will need to go into the <nop>MySql database and do a couple queries to see how many potential members there are in the VO(s) using pool accounts.  These are a series of steps you can use as a guideline:

First, if you have not already done so, you need to retrieve the VO membership defined by your <i>gums.config</i>

   * Using a browser containing your certificate  and assuming you are in the <i>admins</i> group and therefore have administrative privileges), go to your GUMS url  (<nop>https://&lt;YOUR_GUMS_HOST&gt;:8443/gums/)
   * Select <i>Update Members</i> in the menu on the left side of the page.
   * Then select the <i>Update VO Members Database</i> button.<br /> This may take awhile.

Now you need to go into <nop>MySql on the GUMS host machine and find the number of potential pool accounts that need to be available. 
This has to be done for each <i>userGroup</i> element using a different pool account name.  In the example below, the <i>GROUP_NAME</i> is the <i>userGroup</i> element's <i>name</i> attribute.

<pre class="screen">
> <b>mysql -uroot </b>
mysql> <b>use GUMS_1_1; </b>
mysql> <b>select count(distinct(DN)) from USER 
     where GROUP_NAME in ('cmsuser', 'cmsuser-null', 'uscmsuser'); </b>
+---------------------+
| count(distinct(DN)) |
+---------------------+
|                 563 |
+---------------------+
</pre>

Now, once you know how many accounts to allocate, you need to allocate them in GUMS. Do this by executing the following command as a user who was previously defined as a gums admin.  You will need a proxy to do this.  Another thing to keep in mind, is that you just determined the current VO membership count using this pool account.  It is likely that the membership will grow, so you may want to allocate more accounts than the current membership.

<pre class="screen">
&gt; <b>source <YOUR_VDT_LOCATION>/setup.sh</b>
&gt; <b>grid-proxy-init</b>
&gt; <b>$VDT_LOCATION/gums/bin/gums pool-addRange mysql <b>uscmsPool</b> uscmspool001-600 </b>
</pre>

This makes available 600 accounts for the <b>uscmsPool</b> <i>accountMapping</i> group.  They will be assigned sequentially as uscmspool001, uscmspool002... thru uscmspool600. As the VO membership grows it may become necessary to add more accounts.  In this example 600 accounts were created.  If you needed to add another 200, you would run this same command specifying 'uscmspool601-800' as the last argument.  It can take several minutes to create a pool of 600 users.

%IMPORTANT% Before doing this, be sure to notify CE nodes using this GUMS server that actual UNIX accounts must be created on all CE/WN nodes.

%NOTE% When you run out of pool accounts, GUMS will stop authorizing any new members (those who have not already been assigned an account).  It will not be at all obvious that this was the reason for denial.  None of the GUMS logs tell you this.  The PRIMA callouts do not tell you this.  You have to be aware when you are troubleshooting an authorization denial, that the user is attempting to authorize with a proxy for a VO using pool accounts.

You can view your used/unused pool account allocations on a periodic basis with the following <nop>MySql commands for each unique pool account:

Used pool allocations:

<pre class="screen">
mysql> <b>select count(*) from MAPPING where MAP = 'uscmsPool' and DN IS NOT NULL; </b>
+----------+
| count(*) |
+----------+
|      567 |
+----------+
</pre>

Unused pool allocations:

<pre class="screen">
mysql> <b>select count(*) from MAPPING where MAP = 'uscmsPool' and DN is NULL; </b>
+----------+
| count(*) |
+----------+
|       33 |
+----------+
</pre>



---+++[[GumsConfigExamples][gums.config examples]]

---++Set up CE Authorization To Use GUMS
Now that you have GUMS configured to perform the account authorizations, you need to effect it on the CE/gatekeeper node(s). There are 2 important aspects of this:
   * Using GUMS for authorization mappings toUNIX UID
   * Using GUMS to generate the !MonALISA monitoring VO-to-User map file.

Each of these is described in the [[OsgCEAuthorization050][OSG CE Authorization]]  page.

---+++OSG CE Authorizations
There are 2 authorization configurations involving GUMS described on the [[OsgCEAuthorization050][OSG CE Authorization]] page:
   * Compatibility configuration - where you are still using the grid-mapfile 
   * Full Privilege configuration - where the grid-mapfile is no longer used and is replaced by the globus gatekeeper callout of PRIMA which makes a web services authorization request oof GUMS.

---+++<nop>MonALISA Monitoring VO-to-User Map file
Under both configurations,now that you are using GUMS to establish your account assigments,  you will need to use the GUMS's *generateGrid3UserVoMap* to generate the *VDT_LOCATION/monitoring/grid3-user-vo-map.txt* file which is critical to the !MonALISA  [[VOModulesDescription][VO Modules]] accounting of the jobs and ftp IO activity on the CE/gatekeeper host.



---++Miscellaneous
---+++Managing the GUMS log files
GUMS logging is managed using the [[http://logging.apache.org/log4j/docs][Apache log4j logging services]].  

The GUMS web server processes log files, covering the web user  interface and the authorization services, are managed  in =VDT_LOCATION/gums-service./var/war/WEB-INF/classes/log4j.properties=.

The GUMS client and host log configuration file, which  may be on host different from the GUMS web server, is located in
=VDT_LOCATION/gums/etc/log4j.properties=.

More detailed description on GUMS logging can be found at the primary GUMS web portal  ([[http://grid.racf.bnl.gov/GUMS/guide_logging.html][general]] and [[http://grid.racf.bnl.gov/GUMS/guide_logging_details.html][detailed]] information).

---+++ Publishing your authorization service status (optional)
This is optional capability that allows each of the CE nodes that use your GUMS authorization service to publish, via classads, the availability/status of your authorization service.  It is only available if your CEs are operating in Full Privilege authorization mode.  This is a =GIP/CEmon= service detailed in the [[CEInstallGuide#gumsprobe][CE Installation Guide section on CEMon]]

In addition to the configuration on each of the CE nodes, the following needs to be performed on the GUMS node.  You do not need to take your service down to do this.

1. Add these entries to your =$VDT_LOCATION/vdt-app-data/gums/gums.config= file:
<verbatim>
<groupMappings>
  <groupMapping name='gums-test'>
    <userGroup className='gov.bnl.gums.ManualUserGroup'
               persistenceFactory='mysql'
               name='gums-test'/>
    <accountMapping className='gov.bnl.gums.GroupAccountMapper'
                    groupName='GumsTestUserMappingSuccessful' />
  </groupMapping>
</groupMappings>

<hostGroups>
  <hostGroup className='gov.bnl.gums.CertificateHostGroup'
             cn='ldap/*.my.site'         
             groups='gums-test' />
</hostGroups>
</verbatim>
%IMPORTANT%You will need to change the <b>cn='ldap/*.my.site'</b> to reflect your sites domain name.

2. You will need to add the =subject= values from each CE node LDAP certificate as members of the =gums-test= =userGroup=.  Execute the following command using the administrative user credentials. Make sure you substitute the identity of the probe as the last parameter i.e. the subject of the LDAP service certificate on the CE running the generic information provider.
<pre class="screen">
> gums manualGroup-add mysql gums-test <subject>
Example:
> gums manualGroup-add mysql gums-test "/DC=org/DC=doegrids/OU=Services/CN=ldap/mymachine.fnal.gov"
</pre>


%INCLUDE{"GumsClientInstall"}%

---++Shutdown Guide
The GUMS installation starts up several processes.  If you try to re-install/upgrade the GUMS without shutting them down it will fail.  Run the following commands to turn off the GUMS services in VDT 1.6.0 and earlier releases before upgrading:

   * =/etc/init.d/apache stop=
   * =/etc/init.d/tomcat-5 stop=
   * =/etc/init.d/gums stop=
   * =/etc/init.d/mysql stop=

In VDT 1.6.1 and later, you need to use the =vdt-control= script to shut off the services:

   * =vdt-control --off apache=
   * =vdt-control --off tomcat-5=
   * =vdt-control --off mysql=
or turn all VDT services off in VDT 1.6.1 and later with
   * =vdt-control --off=

---++Troubleshooting

PRIMA 0.2 can not interface to a GUMS server that runs with a service (rather than host) certificate.  If you will be using PRIMA you need to switch the certificate used by gums:

<pre class="screen">
> <b>cd /etc/grid-security/http</b>
> <b>mv httpkey.pem httpkey.pem.sav</b>
> <b>mv httpcert.pem httpcert.pem.sav</b>
> <b>cd ..</b>
> <b>cp hostkey.pem http/httpkey.pem</b>
> <b>cp hostcert.pem http/httpcert.pem</b>
> <b>chown -R daemon:daemon http </b>
</pre>

---++Appendix A: %CACHE% gum.config groupmappings

[[http://software.grid.iu.edu/pacman/tarballs/vo-version/gums.template][The current gums.template]] contains an example of pool accounts in all the uscms entries.

---
| *Links:* | | [[Documentation/AdminDocHub][Documentation for Resource and Service Providers]]  | |  [[Documentation/WebHome][Documentation Hub]]  |  | [[DocumentationTable#InstallOptions]["Install Optional Components" in documentation table]] |

%STOPINCLUDE%

%BOTTOMMATTER%


<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->
---++!! Major updates
<!--Future editors should add their signatures beneath yours!-->
-- Main.LeighGrund - 19 Apr 2005<br>
-- Main.AnneHeavey - 17 May 2005<br>
-- Main.JohnWeigand - 17 May 2005<br>
-- Main.JohnWeigand - 08 Jun 2005 - added gums.config example page<br>
-- Main.JohnWeigand - 14 Jun 2005 - expanded the pre-requisites TOC section<br>
-- Main.JohnWeigand - 16 Jun 2005 - expanded the 'Set up CE Authorizations To Use GUMS' TOC section<br>
-- Main.JohnWeigand - 23 Jun 2005 - modified a fair portion of the "Modify the gums.config TOC for clarity"<br>
-- Main.JohnWeigand - 08 Jul 2005 - added  Installation and Basic Configuration Postmortem TOC and modified the Connect your GUMS to a VOMS installation section   %BR%  
-- Main.RobQ - 01 May 2006   %BR%  
-- Main.JohnWeigand - 26 Jan 2007 - added/update a section on managing pool accounts %BR%
-- Main.JohnWeigand - 08 Jun 2007 - added inclusion of the remote admin via gums-client%BR%

%META:TOPICMOVED{by="ForrestChristian" date="1166050613" from="Integration.GumsAdmins050" to="Integration/ITB_0_5.GumsAdmins"}%
