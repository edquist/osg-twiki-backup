%META:TOPICINFO{author="JeffPorter" date="1195564301" format="1.1" version="1.33"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%



---++ Preliminaries
This process assumes that you have already [[Documentation/CertificateGet][obtained a grid certificate]] from an OSG-recognized Certificate Authority and joined an OSG Virtual Organization. If you have not, you will not be able to complete this process.

See %VDT_DOCS_URL% for system requirements.  If you do a non-root install, make sure that you own your =$HOME/.globus= directory and its permissions are 755.  Use [[PacmanInstall][Pacman]] to install the client and consult PacmanBestPractices if you have trouble.  You'll need a personal grid certificate to use the installation.

---++ Install the OSG client
Create a directory for the client and =cd= to it, such as:

<pre class="screen">
[~]$ <userinput>mkdir osg-client</userinput>
[~]$ <userinput>cd osg-client/</userinput>
</pre>

And install:

<pre class="screen">
[~/osg-client]$ <userinput>pacman -get %CACHE%:client</userinput>
Do you want to add [http://software.grid.iu.edu/pacman/] to [trusted.caches]? (y or n): <userinput>y</userinput>
Package [client] found in [OSG]...
Package [OSG:vo-client-0.6] found in [OSG]...
Package [vo-client-0.6] found in [OSG]...
Do you want to add [http://vdt.cs.wisc.edu/vdt_161_cache] to [trusted.caches]? (y or n): <userinput>y</userinput>
Package [VDT-Client] found in [http://vdt.cs.wisc.edu/vdt_161_cache]...
Package [http://vdt.cs.wisc.edu/vdt_161_cache:VDT-Common] found in [http://vdt.cs.wisc.edu/vdt_161_cache]...

<replaceable>&lt; - - SNIP! - - ></replaceable>
</pre>


There are many lines of output. Eventually it continues with:

<!-- After the installation has completed, you will also be able to... -->

<pre class="screen">
VDT 1.6.1 installs a variety of software, each with its own license.
In order to continue, you must agree to the licenses.
You can view the licenses online at:

     http://vdt.cs.wisc.edu/licenses/1.6.1

After the installation has completed, you will also be able to
view the licenses in the "licenses" directory.

Do you agree to the licenses? [y/n] <userinput>y</userinput>

</pre>

Answer =y= to continue the installation.

<pre class="screen">
If you would like, we can configure the Condor batch system to
start automatically at boot time.

Configuring the Condor daemon requires changes to
- /etc/init.d (or /etc/rc.d/init.d)

Would you like to enable the Condor batch system to run automatically?

Possible Answers:
     y: Yes. Please remove any old instances of the service and run
        this one..
     n: No. Please remove any old instances of the service, but don't
        run this one.
</pre>

Answer =y= to start up the Condor.  This is a personal condor that is only for submitting jobs to remote sites. It is not the server Condor for receiving jobs. If you are submitting jobs from a machine that is also receiving jobs with Condor, answering "yes" to this will *not* overwrite the server Condor. Only your condor-g will be affected.

<pre class="screen">
Several services provided by the VDT create unbounded log files.  If you wish, we can rotate those file on a daily basis.

Would you like to setup daily rotation of VDT log files?

Possible Answers:
     y: Yes. Please remove any old instances of the service and run
        this one..
     n: No. Please remove any old instances of the service, but don't
        run this one.

<userinput>y</userinpu>
</pre>

You will probably want to answer "yes" and have your VDT log files rotated. They can get rather large if you are running many jobs.


<pre class="screen">
Do you want to run a cron job that will update the CA certificate
revocation lists automatically? This will use the fetch-crl program
that comes with the VDT. The cron job will run at a random time
between midnight and 6:00am. We select a random time to avoid having
all VDT installations fetching CRLs at the same time.

Do you want to update the CA certification revocation lists (CRLs) automatically
? [y/n] <userinput>y</userinput>
</pre>

Most of the time answering "yes" to updating your CRLs automatically is preferred.

<pre class="screen">
The VDT typically installs public certificates and signing policy files
for the well-known public CA's. This is necessary in order for you to
perform GSI authentication with any remote Grid services (that have
service/host certificates signed by these CA's).

For more information please refer to the VDT documentation:
Where would you like to install CA files?

Choices:
        r (root)  - install into /etc/grid-security/certificates
                   (existing CA files will be preserved)
        l (local) - install into $VDT_LOCATION/globus/share/certificates
        n (no)    - do not install
</pre>

Answer =l= (lowercase "L") so that the CA files will be installed inside of your installation directory.

If all goes well, the client's pacman installation will complete with the following output:

<pre class="screen">
The VDT version 1.8.1 has been installed.

The OSG Client package ITB version 0.7.1 has been installed.
</pre>

If you encounter and problems, look at the tail end of the *vdt-install.log* file.  You can view what has been installed by:

<pre class="screen">
> source <i>your-osg-client-dir</i>/setup.(c)sh
> vdt-version
You have installed a subset of VDT version 1.8.1a:
    CA Certificates v32 (includes IGTF 1.17 CAs)
    Condor/Condor-G 6.8.6
    cURL 7.16.2
    Fetch CRL 2.6.2
    Globus Toolkit, pre web-services, client 4.0.5
    Globus Toolkit, web-services, client 4.0.5
    GPT 3.2
    GSI-Enabled OpenSSH 4.0
    Java 5 SDK 1.5.0_12
    KX509 20031111
    lcg-info 1.11.0-1
    lcg-infosites 2.6-2
    Logrotate 3.7
    MyProxy 3.9
    Pegasus 2.0.1
    PPDG Cert Scripts 2.5
    pyGlobus gt4.0.1-1.13
    PyGlobus URL Copy 1.1.2.11
    RLS, client 3.0.041021
    SRM V1 Client 1.25
    SRM V2 Client 2.2.0.3
    UberFTP 1.24
    Wget 1.10.2
</pre>

---++ Run a test
Log back on as yourself. Now that the OSG Client has been installed, you will have to configure it with your grid user certificate in order to start submitting jobs.  First, setup your environment and get a proxy certificate:
<pre class="screen">
> source <i>your-osg-client-dir</i>/setup.(c)sh
> voms-proxy-init .... <i>or</i> 
> grid-proxy-init ....
</pre>
Use *-help* in the proxy-init commands to find out options.  You will be prompted to enter your certificate password.

To make sure your proxy is working, pick a known node and run =globusrun=. The node shown is just an example:
<pre class="screen">
> globusrun -a -r testwulf.hpcc.ttu.edu
</pre>
If successful, this returns:
<pre class="screen">
GRAM Authentication test successful
</pre>

---++ Start services
Logon as root or as the owner of the client package and source the setup script:
<pre class="screen">
# source <i>your-osg-client-dir</i>/setup.[c]sh
</pre>

You can determine which services are configured by running *vdt-control --list*. (For a more detailed review of turning VDT services on and off, consult [[http://vdt.cs.wisc.edu/releases/1.8.1/man/vdt-control.html][vdt-control]] and OSG StartingServices documentation written for the Compute Element).

If you answered %BLUE%y%ENDCOLOR% to the questions during the install, you will find:

<pre class="screen">
# vdt-control --list
Service            | Type   | Desired State
-------------------+--------+--------------
fetch-crl          | cron   | enable
condor             | init   | enable
vdt-rotate-logs    | cron   | enable
globus-ws          | init   | do not enable
</pre>

For condor-g submissions: =fetch-crl= and =condor= are needed. Do not worry about =globus-ws= as it is disabled and its inclusion is an artifact of the vdt installation.  Turning on all configured services is done by:

<pre class="screen">
# vdt-control --on
enabling cron service fetch-crl... ok
enabling init service condor... ok
enabling cron service vdt-rotate-logs... ok
skipping init service 'globus-ws' -- marked as disabled
</pre>

You can verify the services are running by 
<pre class="screen">
# crontab -l
</pre>

for =fetch-crl= and =vdt-rotate-logs= and by
<pre class="screen">
# ps -elf | grep condor
</pre>

for =condor=. 

---++ Testing the Client

A series of validation tests of the client tools can be found in the ValidateClients documentation. These basic tests include querying services, submitting jobs, and transfering files.


---++  Firewall Considerations
Some GRAM job initiation and management operations require call backs to the client machine.

   * If your client host is behind a firewall and not registered in DNS, assign your client's ip-address to the =GLOBUS_HOSTNAME= variable: 
      * <pre class="screen">  export GLOBUS_HOSTNAME=<i>your-ip-address</i> </pre>
   * If your client is behind a firewall blocking ephemeral ports, an ephemeral port range should be intentified for use and opened for incoming connections.  Opening the port range may depend on your firewall implementation. If you are doing a personal non-root installation, check with your administrator to determine which ports are open for you to use.  Then, indentifying the port range in the client tools is done in two ways (numbers shown here are just examples):
      * specifiy the GLOBUS_TCP_PORT_RANGE variable in the $VDT_LOCATION/setup.sh (and setup.csh) script: <pre class="screen">
GLOBUS_TCP_PORT_RANGE=20000,22000
export GLOBUS_TCP_PORT_RANGE
</pre>
      * specify range in for use by Condor-g in the $CONDOR_CONFIG file ( *Note:* condor must be restarted):  <pre class="screen">
HIGHPORT = 22000 
LOWPORT  = 20000
</pre>

%BR%
%COMPLETE3% %BR%
%RESPONSIBLE% Main.JeffPorter - 17 Oct 2007 %BR%
%REVIEW% 

%META:TOPICMOVED{by="ForrestChristian" date="1166046231" from="Integration.ClientInstallationGuide050" to="Integration/ITB_0_5.ClientInstallationGuide"}%
