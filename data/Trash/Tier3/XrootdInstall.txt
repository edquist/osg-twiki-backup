%META:TOPICINFO{author="RobGardner" date="1269880769" format="1.1" reprev="1.12" version="1.12"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! *<nop>%SPACEOUT{ "Xrootd Installation" }%*
%TOC%

---++ Introduction
Xrootd is a high performance network storage system widely used in high energy physics experiments such as ATLAS and ALICE. The underlying Xroot data transfer protocol provides highly efficient access to ROOT based data files.  Xrootd also provides POSIX-like access to files and their enclosing directory namespace (see further [[http://xrootd.slac.stanford.edu/papers/Scalla-Intro.htm Xrootd Home Page]]).

---++++++!!Applicable Versions
This document applies to an install of 
%RED%
*osg-version 1.2.4* 
%ENDCOLOR%
(or higher) and 
%RED%
*vdt-version  2.0.0*
%ENDCOLOR%
(or higher).

---++++++!!Engineering Considerations
   * In order to have a working Xrootd installation you will need 2 or more nodes.  One node will serve as a redirector; the other node(s) will be data servers. 
   * Xrootd is using two storage areas (partitions or directories). One storage area (referred in this document as  _storage_path_) could be accessed by clients using xroot protocol. This area contains symbolic links to the data files that are located in the other storage area (here referred as _storage_cache_ ). It is recommended to use a separate partition for each storage area, but for _storage_path_ a directory can work. 
      * *Note:* in the Xrootd production installation at SLAC _storage_path_ uses a separate ext3 partition with block size set to 1k (thus limiting the size of real files at ~256GB). Choosing the right amount of inodes is tricky: too many inodes means small block size and for real files, that limits the file size. The _storage_path_ requires a significant amount of inodes, though the consequence is not clear because are sym linked files, which are big in size but are filled with empty holes.

---++Checklist
   1. [[ReleaseDocumentation/PacmanInstall][pacman]] version >=%PACMAN_VERSION% is required.
   1. If a firewall is enabled, iptables must modified to allow incoming connections to xrootd services.  See instructions about how to configure firewall on [[#Firewall_iptables_configuration][redirector]] and [[#Firewall_iptables_configurat_AN1][data server nodes]].
   1.  All xrootd daemons should run under some user name (not root!), the user account should be created on all the nodes and it should have a login shell.

---++Installation Procedure
You should use this procedure on each node where you want Xrootd, both redirector and data servers. They differ only in the configuration.

Login as root and set up  pacman, make sure that >=%PACMAN_VERSION% is installed:


<pre class="screen">
su root
. &lt;PACMAN_LOCATION&gt;/setup.sh
pacman -version
</pre>

Create a user (e.g _xrootd_).The user (this user SHOULD have a login shell) !!!!
<pre class="screen">
#/usr/sbin/groupadd xrootd 
#/usr/sbin/useradd --gid xrootd xrootd
</pre>

Decide what area you would use as a _storage_path_ and _storage_cache_ (e.g /storage/data and /storage/cache - these could be a directory or a separate partition).

Next create and change to an installation directory. This directory will later be used to get the !GridFTP-Xrootd package  from the %CACHE% cache.
<pre class="screen">
mkdir -p /opt/xrootd/
cd /opt/xrootd/
</pre>


You will need to install !Xrootd package from the %CACHE% cache. 
Pacman will ask whether you want to trust the cache (=yall=) and whether you want to accept the license (=y=).

<pre class="screen">
pacman -get %CACHE%:Xrootd
</pre>
 

Update the environment and run the post installation script:
<pre class="screen">
source setup.sh
vdt-post-install
</pre>


You can verify that the version installed is the version you expected by executing =vdt-version=. T
<pre class="screen">
vdt-version
</pre>

This completes the installation of the Xrootd. Move to the next step to configure  !Xrootd on redirector and data server nodes. 

---++ Service Configuration
---+++ Configuring Xrootd on Redirector Node
The  !Xrootd is configured by the =configure-osg= script located in =$VDT_LOCATION/osg/bin/configure-osg= based on the =$VDT_LOCATION/osg/etc/config.ini= configuration file.

The =$VDT_LOCATION/osg/etc/= directory contains two template files =config.ini=. Edit the =$VDT_LOCATION/osg/etc/config.ini= file. Each entry is preceded by instructions on how to modify it. You'll have to edit only the Xrootd section like the one shown here:

<pre class="file">
;===================================================================
;                       Xrootd
;===================================================================


[Xrootd]
enabled = %(enable)s
user = xrootd
mode = redirector
redirector_host = &lt;your_redirector_fqn&gt;
redirector_storage_path = /storage/data
redirector_storage_cache = /storage/cache
token_list = %(default)s
; This setting gives the size of the storage area allocated to public use in GB,
; i.e. not allocated to a space token
public_cache_size = 10
</pre>
You can verify that your configuration is valid by executing =configure-osg -v=. Finally execute =configure-osg -c= to configure the !Xrootd installation.
<pre class="screen">
cd osg1.2-xrootd
. setup.sh
configure-osg -v
configure-osg -c
</pre>


Hopefully all steps completed successfully and =vdt-control -list= shows the list of available services:
<pre class="screen">
#vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
xrootd                  | init   | enable
</pre>

---+++ Configure Xrootd Data Server node (for slave nodes)

Once you installed Xrootd as described above, on the Data Server nodes (hosts providing the shared disk space) you have to do the following steps:
Also in the Data Servers !Xrootd is configured by the =configure-osg= script located in =$VDT_LOCATION/osg/bin/configure-osg= based on the =$VDT_LOCATION/osg/etc/config.ini= configuration file.

The =$VDT_LOCATION/osg/etc/= directory contains two template files =config.ini=. Edit the =$VDT_LOCATION/osg/etc/config.ini= file. Each entry is preceded by instructions on how to modify it. You'll have to edit only the Xrootd section like the one shown here:
<pre class="file">
;===================================================================
;                       Xrootd
;===================================================================


[Xrootd]
enabled = %(enable)s
user = xrootd
mode = data
redirector_host = &lt;your_redirector_fqn&gt;
redirector_storage_path = /storage/data
redirector_storage_cache = /storage/cache
token_list = %(default)s
; This setting gives the size of the storage area allocated to public use in GB,
; i.e. not allocated to a space token
public_cache_size = 10
</pre>
You can verify that your configuration is valid by executing =configure-osg -v=. Finally execute =configure-osg -c= to configure the !Xrootd installation.
<pre class="screen">
cd osg1.2-xrootd
. setup.sh
configure-osg -v
configure-osg -c
</pre>


Hopefully all steps completed successfully and =vdt-control -list= shows the list of available services:
<pre class="screen">
#vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
xrootd                  | init   | enable
</pre>
---++ Firewall configuration

---+++ Firewall (iptables) configuration for Xrootd Redirector node

Edit the =/etc/sysconfig/iptables= file to add these lines ahead of the reject line
<pre class="file"># Xrootd connections  (from anywhere) 
-A RH-Firewall-1-INPUT -m state --state NEW,ESTABLISHED -p tcp -m tcp --dport 1094 -j ACCEPT 
-A RH-Firewall-1-INPUT -m state --state NEW,ESTABLISHED -p tcp -m tcp --dport 1213 -j ACCEPT 
-A RH-Firewall-1-INPUT -m state --state NEW,ESTABLISHED -p tcp -m tcp --dport 2094 -j ACCEPT 
-A RH-Firewall-1-INPUT -m state --state NEW,ESTABLISHED -p tcp -m tcp --dport 2525 -j ACCEPT 
# </pre>

Check the status of iptables<pre class="screen">
/etc/init.d/iptables status</pre> 
Restart iptables<pre class="screen">
/etc/init.d/iptables restart</pre> 
Check the status of the iptables to see the changes<pre class="screen">
/etc/init.d/iptables status</pre>

---+++ Firewall (iptables) configuration for Xrootd Data Server node

Edit the =/etc/sysconfig/iptables= file to add these lines ahead of the reject line
<pre class="screen"># Xrootd connections  (from anywhere) 
-A RH-Firewall-1-INPUT -m state --state NEW,ESTABLISHED -p tcp -m tcp --dport 2525 -j ACCEPT 
# </pre>

Check the status of iptables<pre class="screen">/etc/init.d/iptables status</pre> 
Restart iptables<pre class="screen">/etc/init.d/iptables restart </pre> 
Check the status of the iptables to see the changes<pre class="screen">/etc/init.d/iptables status</pre>
Now edit the file =$VDT_LOCATION/xrootd/etc/xrootd.cfg=. Change "_xrd.port any_" to *xrd.port 2525*

---++ Start/Stop !Xrootd

You will need to login to node where  !Xrootd is installed  to start/stop xrtood:

To start:

<pre class="screen">
cd /opt/xrootd
source setup.sh
vdt-control -on
</pre>

To stop:

<pre class="screen">
cd /opt/xrootd
source setup.sh
vdt-control -on
</pre>


---++ Validation of Service Operation

 Login on redirector node as an ordinary user.

<pre class="screen">cd /opt/xrootd 
source setup.sh 
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$VDT_LOCATION/xrootd/lib 
export LD_PRELOAD=$VDT_LOCATION/xrootd/lib/libXrdPosixPreload.so 
echo &ldquo;This is a test&rdquo; &gt;/tmp/test 
cp /tmp/test xroot://gc1-xrdr:1094///xrootd/data/test 
cp xroot://gc1-xrdr:1094///xrootd/data/test /tmp/test1 
diff /tmp/test1 /tmp/test 
</pre>

For example:
<pre class="screen">cp /tmp/test xroot://gc1-xrdr.yourdomain.org:1094//xrootd/data/test </pre>


---++++++!!File Locations
!Xrootd on redirector node
   * Configuration files:
      * $VDT_LOCATION/xrootd/etc/xrootd.cfg
      * $VDT_LOCATION/xrootd/etc/xrootd_cnd.cfg
   * Log Files
      * $VDT_LOCATION/xrootd/var/logs/xrdlog
      * $VDT_LOCATION/xrootd/var/log/cmslog
      * $VDT_LOCATION/xrootd/var/log/xrootd_cnd/xrdog

!Xrootd on data server nodes
   * Configuration files:
      * $VDT_LOCATION/rootd/etc/xrootd.cfg
   * Log Files
      * $VDT_LOCATION/xrootd/var/logs/xrdlog
      * $VDT_LOCATION/xrootd/var/log/cmslog
      * $VDT_LOCATION/xrootd/var/log/cnsd.log


---++++++!!Debugging Procedure
   * Look at the [[#Checklist][Checklist]] and make sure you really checked those items.

---++++++!!Caveates/Known Issues
---++++++!!Screendump of Install
%TWISTY%
<pre class="screen">
#  pacman -get http://software.grid.iu.edu/osg-1.2:Xrootd
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check...

All prerequisite checks are satisfied.

# vdt-post-install
Starting...
Nothing needs to be done at this time.
 vdt-version

You have installed a subset of VDT version 2.0.0p11:

Software                                                 Status              
--------                                                 ------              
Xrootd 20090721-0636                                     OK                  


Status legend:
OK: Software is up to date with the latest release in VDT version 2.0.0
- : Not enough information to determine if updates are available.

# configure-osg -v
Using /usr/local/osg1.2-xrootd/osg/etc/config.ini for configuration information
Configuration verified successfully
]# configure-osg -c
Using /usr/local/osg1.2-xrootd/osg/etc/config.ini for configuration information
running 'vdt-register-service --name xrootd --enable'... ok
Configure-osg completed successfully

#vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
xrootd                  | init   | enable
</pre>
%ENDTWISTY%

%BR%
%BR%

---++ *Comments*
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################ 
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = TanyaLevishina

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       =  Tier3

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %NO%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MarcoMambelli
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################ 
-->
