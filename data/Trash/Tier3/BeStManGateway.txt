%META:TOPICINFO{author="KyleGross" date="1480625637" format="1.1" version="1.31"}%
---+!! *<nop>%SPACEOUT{Bestman-Gateway Installation Guide}%*

%RED%
WARNING! This page is for an older version of !BeStMan.
For newer versions, please visit [[Documentation/Release3.InstallOSGBestmanSE][Bestman Install]]
%ENDCOLOR%


%DOC_STATUS_TABLE%
%TOC%

---++Introduction
!BeStMan-Gateway, developed by the Scientific Data Management Group of Lawrence Berkeley National Laboratory, is a generic SRM v2.2 load balancing frontend for transfer servers. It works on top of existing disk-based POSIX-compliant file systems, and has been reported so far to work on file systems such as NFS, GPFS, PVFS2, GFS, Ibrix, HFS+, Hadoop, !XrootdFS and Lustre. It also works with any existing file transfer service, such as gsiftp, http, https, bbftp and ftp. This document is written for system administrators who are planning to use storage that is installed on top of a POSIX-compliant file system. The goal of this document is to give enough information for system administrators to do initial simple configuration of the storage as well as provide references to the documents that may help to accomplish more sophisticated configuration.

---++++++!!Applicable Versions
The applicable software versions for this document are 
%RED%
%OSG_VERSION% 
%ENDCOLOR%
(or higher) and 
%RED%
*vdt-version  2.0*
%ENDCOLOR%
(or higher).

---++++++!!Engineering Considerations
One server node is sufficient to set up a !BeStMan-Gateway storage element. The installation consists of the following components: 
   * !BeStMan-Gateway - an implementation of SRM v2.2 for essential interfaces to disk based storage systems - [[https://sdm.lbl.gov/bestman/][BeStMan Home Page]] 
   * !GridFTP server  providing a high-performance, secure, reliable data transfer ( [[http://www.globus.org/toolkit/docs/4.2/4.2.1/data/gridftp/][GridFTP documentation]]). I  Multiple !GridFTP instances on different servers are recommended if:
      * You are serving  VOs that use storage heavily (CMS, ATLAS, CDF, and D0) and your cluster has more than 250 cores
      * Your site will be managing more than 50 TB of disk space
      * Your site has more than 1Gbps bandwidth; In this case you should plan on at least one !GridFTP server per 4Gbps of available bandwidth (assuming you have 10Gbps interfaces on the server)  to maximize throughput. 
   * POSIX-compliant file system
   * optional package
      * Gratia gridftp transfer probe - cron job that reports all the file transfers to [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaSiteCollector Gratia collector]]. If  you are planning to enable Gratia gridftp transfer probe, please, consult [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaTransferProbe][this installation guide]]
      *  [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS][GUMS server]] - authentication and authorization service

---++Checklist
   1. [[ReleaseDocumentation/PacmanInstall][pacman]] version >= %PACMAN_VERSION% is required
   1. The server must have a fully qualified domain name and a valid [[ReleaseDocumentation/GetGridCertificates][grid host certificate]] installed in =/etc/grid-security/=
   1. !BeStMan server needs to have a valid host or service certificate installed in =/etc/grid-security/bestmancert= (bestmancert.pem and bestmankey.pem). The certificate should be own by a user that is running !BeStMan server. The right permission (600) should be set on those files. %ICON{warning}%  !BeStMan should be configured with host certificate in order to be able to handle requests from !LCG-Utils tools. This is mandatory for at least all !BeStMan servers that support ATLAS experiment. Normally the OSG !BeStMan implementation uses a service certificate, not a host certificate. This causes lcg-cp to fail because the certificate name (which looks like http/hostname instead of just hostname) doesn't match the hostname.
   1. A disk area that you want to export with !BeStMan. =/data= in this document. This directory should have adequate permissions so users have read/write/execute access. In some systems it is world writable with the "sticky" (t) bit enabled, in others it has one subdirectory for each group of grid users, so that all the users can have one path where they are allowed to write.
   1. The firewall must allow incoming connections to the !GridFTP port (default 2811). Outgoing connections must be allowed from high ports ( typically in range 32769-65535 ). We recommend to consult the [[ReleaseDocumentation/ComputeElementFirewalls][Firewall Guide]] if you install the !GridFTP server for the first time.
   1. A working GUMS server or a gridmap-file are needed for authorization using grid certificates.

---++Installation Procedure
Login as root, setup pacman and check if pacman version >=%PACMAN_VERSION% is installed:
<pre class="rootscreen">
su root
cd /opt/pacman_%PACMAN_VERSION% 
. setup.sh
pacman -version
</pre>
Next create and change to an installation directory. This directory will later be used to get the !BeStMan package  from the %CACHE% cache.
<pre class="rootscreen">
mkdir -p /opt/bestman/
cd /opt/bestman/
</pre>
If you are using GUMS authorization method you will need to setup VDT_GUMS_HOST environment variable, if you are using gridmap-file ,please, proceed to the next step.

<pre class="rootscreen">
<verbatim> 
export VDT_GUMS_HOST=<GUMS hostname>  
</verbatim> 
</pre>

Finally execute pacman to get the !BeStMan package from the %CACHE% cache. Pacman will ask whether you want to trust the cache (=yall=) and whether you want to accept the license (=y=).
<pre class="rootscreen">
pacman -get %CACHE%:Bestman
</pre>

The install procedure will print out a warning:
<verbatim>
========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.
</verbatim>

The information provided in the README is out of date. Please setup the CA certificates in the following way instead:
<pre class="rootscreen">
source setup.sh
$VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
</pre>
This command will download certificates distributed by the OSG to =$VDT_LOCATION/globus/share/certificates= and create a symlink from =$VDT_LOCATION/globus/TRUSTED_CA= to that location. [[ReleaseDocumentation.VdtCaManage][Other certificate options]] are also available.

To reflect the changes update the environment and run the post installation script:
<pre class="rootscreen">
source setup.sh
vdt-post-install
</pre>

You can verify that the version installed is the version you expected by executing =vdt-version=. To see all services available use =vdt-control -list=
<pre class="rootscreen">
vdt-version
vdt-control --list
</pre>

This completes the installation of the !BeStMan server. Move to the next step to configure the !BeStMan and !GridFTP servers. You may also chose to configure Gratia transfer probe at this time.

---++ Service Configuration
You will need to configure !BeStMan-Gateway first in order to enable it as a service. The configuration command is shown below:
<pre class="rootscreen">
<verbatim>
cd /opt/bestman 
source setup.sh 
$VDT_LOCATION/vdt/setup/configure_bestman --server y \
--cert /etc/grid-security/bestmancert/bestmancert.pem  \
--key  /etc/grid-security/bestmancert/bestmankey.pem  \
--gums-host  <GUMS hostname>  \
--enable-gateway  \
--with-allowed-paths /data
</verbatim>
</pre>  

This command will install !BeStMan that will be 
   * running  by user _"daemon"_,
   * using certificate  /etc/grid-security/bestmancert/bestmancert.pem and certificate key /etc/grid-security/bestmancert/bestmankey.pem, The certificate file and key should exist for configuration to work (see #Checklist) 
   * listening on secure port 10443 and public port 10080
   * utilizing  gridftp server running on the same host on 2811 port
   * using GUMS server that is running on  <GUMS hostname>  host and using 8443 port for authorization, if you want to use gridmap file skip this option.
   *  /data will be used to store users' data. See the checklist above.
If you would like to see all available options or get more detailed explanation, please, see [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/BestmanGateway][this guide]].

Now, you should make modification in =/etc/sudoers= file namely add the following lines to this file: 
<pre class="rootscreen">
<verbatim>
# Comment out this line, if it is in your /etc/sudoers file (RHEL5+)
#Defaults    requiretty

Cmnd_Alias SRM_CMD = /bin/rm, /bin/mkdir, /bin/rmdir, /bin/mv, /bin/ls, /bin/cp 
Runas_Alias SRM_USR = ALL, !root 
daemon ALL=(SRM_USR) NOPASSWD: SRM_CMD 
</verbatim>
</pre>
Please keep in mind that this is just an example, you can choose more  be more restrictive policy for your site.
!BeStMan server will not be able to run if this step is missed.


To configure the port range used by the server to transfer files, add following lines to =$VDT_LOCATION/vdt/etc/vdt-local-setup.sh=:

<pre class="rootscreen">
  export GLOBUS_TCP_PORT_RANGE=32000,64000
  export GLOBUS_TCP_SOURCE_RANGE=32000,64000
</pre>

and also to =$VDT_LOCATION/vdt/etc/vdt-local-setup.csh=:

<pre class="rootscreen">
  setenv GLOBUS_TCP_PORT_RANGE 32000,64000
  setenv GLOBUS_TCP_SOURCE_RANGE 32000,64000
</pre>

 If you want to use the grid-map-file for user authentication and authorization ignore the rest of this section. Copy two files from $VDT_LOCATION/post-install to in /etc/grid-security:
<pre class="rootscreen">
cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 
</pre>

If you want to configure Gratia gridftp transfer probe, please, follow [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaTransferProbe#Configuring_Gratia_GridFTP_trans][this]] instructions.

---++ Enabling the Services
You can use the _vdt-control -list_ command to see all services that are installed as part of the install, and whether or not they are enabled or disabled. 
You will need to enable the following services:
   * fetch-crl   
   * vdt-rotate-logs  
   * vdt-update-certs       
   * gsiftp           
   * gums-host-cron   %ICON{warning}% In case you want to run Gratia !GridFTP transfer probe and are using !GUMS for authorization
   * edg-mkgridmap     %ICON{warning}% In case you want to use gridmap-file for authorization 

You can execute _vdt-control -enable_ command and list all services you want to enable:
<pre class="rootscreen">
cd /opt/bestman
source setup.sh
vdt-control -enable fetch-crl vdt-rotate-logs vdt-update-certs gsiftp  
</pre> 

If you are using !GUMS or have gridmap-file and don't want to use automatically generated one, please, skip this section:
<pre class="rootscreen">
cd /opt/bestman;
source setup.sh
vdt-control -enable edg-mkgridmap
edg/sbin/edg-mkgridmap
</pre> 

If you want to enable Gratia gridftp transfer probe, please, follow [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaTransferProbe#Enable_Gratia_GridFTP_Transfer_p][this]] instructions.


---++ Service Startup/Shutdown
To start type:
<pre class="rootscreen">
vdt-control --on
</pre>
and to stop:
<pre class="rootscreen">
vdt-control --off
</pre>

---++ Validation of Service Operation

To check if !BeStMan is installed and operational you need to [[https://twiki.grid.iu.edu/bin/view/Trash/Trash/Trash/Trash/SiteCoordination/GridClientTutorial][install client software]], obtain voms proxy certificate and then run the srm-ping to verify the !BeStMan server is up and running:
<pre class="screen">
<verbatim>
srm-ping  srm://<your bestman host fqn>:10443/srm/v2/server
</verbatim>
</pre>

To verify that you can transfer files do srm-copy:

<pre class="screen">
<verbatim>
 srm-copy file:////tmp/test srm://<your bestman host fqn>:10443/srm/v2/server\?SFN=/data/test
</verbatim>
</pre>

If you install Gratia gridftp probe then you should verify that the [[ReleaseDocumentation/GratiaTransferProbe#Sanity_Check][Gratia gridftp transfer probe]] is working.



---++Debugging Information
---++++++!!Basic Tests:

In order to verify that the system is functional you will need to have access to srm client commands, be able to create a proxy certificate (grid-proxy-init or voms_proxy_init command) and have access to your certificate and private key.  There are multiple ways of getting the proxy, please, check [[these instructions][https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/BestmanGateway#Validation_of_Service_Operation]] for details.

Execute srm-ping command:
<pre class="screen">
$ srm-ping  srm://fg0x5:10443/srm/v2/server
srm-ping   2.2.1.3.2   Thu Oct 15 13:55:22 PDT 2009
.......
Extra information (Key=Value)
backend_type=BeStMan
backend_version=2.2.1.2.i7
backend_build_date=2009-07-10T20:54:10.000Z 
gsiftpTxfServers[0]=gsiftp://fg0x5.fnal.gov
clientDN=/DC=org/DC=doegrids/OU=People/CN=Tanya Levshina 508821
gumsIDMapped=fnalgrid
</pre>

Execute srm-copy command. In order to do so you should first create some file on the local node you want to copy to you !BeStMan storage:
Check here for the test. 

%TWISTY%
<pre class="screen">
$ echo "This is a test" > /tmp/test

$  srm-copy file:////tmp/test srm://fg0x5.fnal.gov:10443/srm/v2/server\?SFN=/data/test_1000
..... 
SRM-CLIENT: Tue Nov 17 16:43:49 CST 2009 Connecting to httpg://fg0x5.fnal.gov:10443/srm/v2/server

SRM-CLIENT: Tue Nov 17 16:43:50 CST 2009 Calling SrmPrepareToPutRequest now ...
request.token=fnalgrid:0_PUT_3074101460
Request.status=SRM_REQUEST_INPROGRESS
explanation=null
SRM-CLIENT: Next status call in 10 seconds.
SRM-CLIENT: Tue Nov 17 16:44:01 CST 2009 Calling Status at Tue Nov 17 16:44:01 CST 2009
SRM-CLIENT: Result Status from SRM (srmStatusOfPutRequest)=SRM_SUCCESS

SRM-CLIENT: RemainingPinTime=289
SRM-CLIENT: received TURL=gsiftp://fg0x5.fnal.gov//data/test_1000

SRM-CLIENT: Tue Nov 17 16:44:02 CST 2009 start file transfer
SRM-CLIENT:Source=file:////tmp/test
SRM-CLIENT:Target=gsiftp://fg0x5.fnal.gov//data/test_1000

SRM-CLIENT: Tue Nov 17 16:44:05 CST 2009 end file transfer for file:////tmp/test

SRM-CLIENT: Tue Nov 17 16:44:05 CST 2009 Calling putDone for srm://fg0x5.fnal.gov:10443/srm/v2/server?SFN=/cache/test_1000
Result.status=SRM_SUCCESS
Result.Explanation=null

SRM-CLIENT: Request completed with success

SRM-CLIENT: Printing text report now ...

SRM-CLIENT*REQUESTTYPE=put
SRM-CLIENT*TOTALFILES=1
SRM-CLIENT*TOTAL_SUCCESS=1
SRM-CLIENT*TOTAL_FAILED=0
SRM-CLIENT*REQUEST_TOKEN=fnalgrid:0_PUT_3074101460
SRM-CLIENT*REQUEST_STATUS=SRM_SUCCESS
SRM-CLIENT*SOURCEURL[0]=file:////tmp/test
SRM-CLIENT*TARGETURL[0]=srm://fg0x5.fnal.gov:10443/srm/v2/server?SFN=/data/test_1000
SRM-CLIENT*TRANSFERURL[0]=gsiftp://fg0x5.fnal.gov//data/test_1000
SRM-CLIENT*ACTUALSIZE[0]=0
SRM-CLIENT*FILE_STATUS[0]=SRM_SUCCESS
SRM-CLIENT*EXPLANATION[0]=SRM-CLIENT: PutDone is called successfully
</pre>

%ENDTWISTY%

---++++++!!File Locations
!BeStMan
   * Configuration file:
      * $VDT_LOCATIONbestman/conf/bestman.rc
   * Log Files
      * $VDT_LOCATION/vdt-app-data/bestman/logs/event.srm.log
      * $VDT_LOCATION/vdt-app-data/bestman/logs/bestman.log
!GridFTP
   * Configuration file:
      * $VDT_LOCATION/vdt/services/vdt-run-gsiftp.sh.env  
   * Log Files
      * $VDT_LOCATION/globus/var/log/gridftp.log
      * $VDT_LOCATION/globus/var/log/gridftp-auth.log 
!Gratia Transfer Probe
   * Configuration file:
      * $VDT_LOCATION/gratia/probe/gridftp-transfer/ProbeConfig	 
   * Log Files
      * $VDT_LOCATION/gratia/var/logs 

---++++++!!Debugging Procedure
   * Look at the [[#Checklist][Checklist]] and make sure you really checked those items.

<!--
---++++++!!Caveates/Known Issues
-->
---++++++!!Screendump of Install
Example of a full installation.

Click for %TWISTY%
<pre class="rootscreen">
# . /opt/pacman_3.28/setup.sh
# mkdir -p /opt/bestman/
# cd /opt/bestman
# export VDT_GUMS_HOST=gums.fnal.gov
# pacman -get http://software.grid.iu.edu/osg-1.2:Bestman
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check...       

All prerequisite checks are satisfied.
                                                                          


========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.

# . setup.sh

# vdt-post-install
Starting...
Configuring PRIMA... Done.
Configuring EDG-Make-Gridmap... Done.
Completed all configuration.

# . setup.sh
# $VDT_LOCATION/vdt/setup/configure_bestman --server y --cert /etc/grid-security/bestmancert/bestmancert.pem  --key  /etc/grid-security/bestmancert/bestmankey.pem   --gums-host gums.fnal.gov  --enable-gateway  --with-allowed-paths /data

# cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
# cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 

# vi /etc/sudoers
.....
Cmnd_Alias SRM_CMD = /bin/rm, /bin/mkdir, /bin/rmdir, /bin/mv, /bin/ls, /bin/cp 
Runas_Alias SRM_USR = ALL, !root 
daemon ALL=(SRM_USR) NOPASSWD: SRM_CMD 

# mkdir /data
# chown daemon.daemon /data
# chmod 777 /data
# vdt-version
You have installed a subset of VDT version 2.0.0p15:

Software                                                 Status              
--------                                                 ------              
Berkeley Storage Manager (BeStMan) 2.2.1.3.8             OK                  
vdt-ca-manage 1.1                                        OK                  
vdt-update-certs 2.5                                     OK                  
EDG Make Gridmap 3.0.0                                   OK                  
Fetch CRL 2.6.6                                          OK                  
GPT 3.2-4.0.8p1                                          OK                  
Gratia GridFTP Probe 1.06.15h-1                          OK                  
Grid User Management System (GUMS) Client 1.3.17         OK                  
Java 5 SDK 1.5.0_22                                      OK                  
Java 6 SDK 1.6.0_17                                      OK                  
Logrotate 3.7                                            OK                  
PRIMA Authorization Module 0.8.4                         OK                  
pyOpenSSL module 0.9                                     OK                  
VOMS Client 1.8.8-2p1                                    OK                  
Wget 1.12                                                OK                  


Status legend:
OK: Software is up to date with the latest release in VDT version 2.0.0
- : Not enough information to determine if updates are available.
See man page for more information.

#vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | do not enable
vdt-rotate-logs         | cron   | do not enable
vdt-update-certs        | cron   | do not enable
gsiftp                  | inetd  | do not enable
gratia-gridftp-transfer | cron   | do not enable
gums-host-cron          | cron   | do not enable
edg-mkgridmap           | cron   | do not enable
bestman                 | init   | enable

#vdt-control -enable fetch-crl vdt-rotate-logs vdt-update-certs gsiftp  
#vdt-control -on
</pre>

%ENDTWISTY%
%STOPINCLUDE%
%BR%

---++Comments
| PM2RPM_TASK = SE&#60;br /&#62; | Main.RobertEngel | 28 Aug 2011 - 06:30 |
%COMMENT{type="tableappend"}%


<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################ 
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = DouglasStrain

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|SecurityTeam|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       =  Tier3

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = 
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = MarcoMambelli
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################ 
-->
