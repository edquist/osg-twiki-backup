%META:TOPICINFO{author="MarcoMambelli" date="1273605330" format="1.1" version="1.15"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! <nop>%SPACEOUT{%TOPIC%}%
%TOC%
<!-- %RED%Please see [[XrootdInstall][this]] document instead.%ENDCOLOR% 
Brief instructions for new installation
-->
   * These are temporary pre-release instructions for a non-root based Xrootd installation.
   * Production release instructions are located [[XrootdInstall][here]].


---++ Introduction
<del>Most of this installation can be performed as non privileged user. Some steps in the Getting started section need to be performed as root.
</del><ins>Most of this installation can be performed as non privileges user. Some steps in the Getting started section need to be performed as root
</ins>
This installation will be:
   * as non root (as much as possible)
   * without CNS
   * with security enabled

---++ Getting Started
To prepare the installation you must
   * Identify hosts and roles
   * Check firewall rules (as root)
   * Create the xrootd user account (as root)
   * Install Pacman
   * Choose the storage directories
   * Prepare the storage directories on the data server (as root)

For the actual instructions see [[XrootdInstall#Getting_Started][the Xrootd install document]] for the first 4 steps.

---+++ Choose the storage directories
To be coherent and clear choose the same paths for the whole cluster.
   * /storage/cache (only on data server)
      * data servers: stores tha actual files
   * /storage/path 
      * redirector: is a directory containing internal Xrootd references to files in the system. Xrootd clients access files using storage_path.
      * data servers: s a directory containing internal Xrootd references to files in the system. Xrootd clients access files using storage_path.

---+++ Prepare the storage directories on the data server
Prepare the directories:
<pre class="screen">
mkdir -p /storage/path
mkdir -p /storage/cache
chown xrootd:xrootd /storage/cache
chown xrootd:xrootd /storage/path
</pre>


---++ Installing and configuring the redirector
Create and change to an installation directory. The xrootd user has to have write permission in the parent directory or the installation directory has to be created by root<pre class="screen">mkdir -p ~xrootd/redirector
cd ~xrootd/redirector
</pre>

Install the !Xrootd package from the VTB cache.  Pacman will ask whether you want to trust the cache (answer =yall=) and if you agree with the licenses (answer =y=).
<pre class="screen">
pacman -get http://vdt.cs.wisc.edu/vdt_2089_cache:Xrootd  
</pre>

Update the environment and run the post installation script:
<pre class="screen">
source setup.sh
vdt-post-install
</pre>

You can verify that the version installed is the version you expected by invoking =vdt-version= : <pre class="screen">
vdt-version
</pre>

This completes the installation part of the Xrootd redirector. The next step is to configure the Xrootd redirector.
   * $VDT_LOCATION is the installation directory of the Xrootd redirector (=/opt/xrootd=)
   * =/storage/cache= and =/storage/path= are the directories discussed above
   * =--enable-security= is a configuration option necessary to enable security (user ownership on directories)
<pre class="screen">
cd ~xrootd/redirector
source setup.sh
$VDT_LOCATION/vdt/setup/configure_xrootd --server y --this-is-xrdr  --storage-path /storage/redirector/path --storage-cache /storage/redirector/cache  --enable-security 
</pre>

The configuration file is =$VDT_LOCATION/xrootd/etc/xrootd.cfg=

---++ Installing and configuring the data server
Create and change to an installation directory. The xrootd user has to have write permission in the parent directory or the installation directory has to be created by root<pre class="screen">mkdir -p ~xrootd/server
cd ~xrootd/server
</pre>

Install the !Xrootd package from the VTB cache.  Pacman will ask whether you want to trust the cache (answer =yall=) and if you agree with the licenses (answer =y=).
<pre class="screen">
pacman -get http://vdt.cs.wisc.edu/vdt_2089_cache:Xrootd  
</pre>

Update the environment and run the post installation script:
<pre class="screen">
source setup.sh
vdt-post-install
</pre>

You can verify that the version installed is the version you expected by invoking =vdt-version= : <pre class="screen">
vdt-version
</pre>

This completes the installation part of the Xrootd data server. The next step is to configure the Xrootd data server.
   * $VDT_LOCATION is the installation directory of the Xrootd redirector (=/opt/xrootd=)
   * =/storage/cache= and =/storage/path= are the directories discussed above
   * FQDN of the redirector host, e.g.  =redirector.yourdomain.org= 
   * =--enable-security= is a configuration option necessary to enable security (user ownership on directories)

<pre class="screen">
cd ~xrootd/server
source setup.sh
$VDT_LOCATION/vdt/setup/configure_xrootd --server y --xrdr-host redirector.yourdomain.org --storage-path  /storage/path --storage-cache /storage/cache --enable-security 
</pre>


---++ Start/Stop !Xrootd
On each node where  !Xrootd is installed (redirector or data server) to start/stop Xrtood use the following. 

To start: <pre class="screen">
cd /opt/xrootd
source setup.sh
vdt-control --non-root --on
</pre>

To stop: <pre class="screen">
cd /opt/xrootd
source setup.sh
vdt-control --non-root --off
</pre>

---++ Feature evaluation
Here a list of feature request and comments:
   * non root installation - OK
   * security - part
      * allows to restrict hosts (currently *.yourdomain.org) - OK
      * allows user directories and admin user (xrootd) - part
         * by hand editing and directory creation, in the future a script to add/remove users will be provided
   * startup script for reboot and for watchdog - discussion
   * optional CNS - OK

---+++ Startup script 
Discussion:<pre>Date: Tue, 11 May 2010 12:40:04 -0500
From: Alain Roy <roy@cs.wisc.edu>
To: Doug Benjamin <benjamin@phy.duke.edu>
Cc: Tanya Levshina <tlevshin@fnal.gov>, 'Scot Kronenfeld' <kronenfe@cs.wisc.edu>, 'Andrew Hanushevsky' <abh@stanford.edu>,
    "'Yang, Wei'" <yangw@slac.stanford.edu>, 'Rob Gardner' <rwg@hep.uchicago.edu>, "'Kroeger, Wilko'" <wilko@slac.stanford.edu>,
    'Fabrizio Furano' <furano@cern.ch>, 'Dan Fraser' <fraser@anl.gov>, 'Rik Yoshida' <rik.yoshida@anl.gov>,
    'Marco Mambelli' <marco@hep.uchicago.edu>, 'Sarah Williams' <saewill@iupui.edu>
Subject: Re: xrootd in VDT


On May 10, 2010, at 10:47 PM, Doug Benjamin wrote:
> Hello,
>
>  How is the system started after a reboot or crash when run in not root mode.  Is there a watch dog process?

Right now, there isn't. Understanding the right thing to do makes me realize that I don't understand the full scope of your goals.

In the case where we've installed as root, I think we're fine--xrootd will restart upon reboot.

In the non-root case, we don't have an easy handle on what to do upon restart, because we can't hook into the boot process. So there
are at least two solutions.

1) Are we not allowed to install *anything* as root? If we can install something as root, we can install an init script. But I don't
understand the constraints on our non-root installation.

2) We could install a cron job as the user, and it could restart xrootd. Once the cron job is triggered, it would restart xrootd.

Unless #2 already exists, it's a bit of development. It's not hard, but there are things I don't know how to do. I don't know how to
reliably tell if xrootd is running. We also need to be careful of common pitfalls in running cron jobs. (What if the script hangs a
bit, and cron invokes it again?) These aren't hard problems, but it takes a bit of time to get the details correct.

In my ideal world, if we want to do #2, the script that does it would be provided by the Xrootd folks because they understand Xrootd
more deeply: how to start it up, how to verify it's running, how to track the processes, etc. However, if they can't provide it, we can
take on that task.

Thoughts?
-alain
</pre>

%BR%
-- Main.RobGardner - 05 Apr 2010