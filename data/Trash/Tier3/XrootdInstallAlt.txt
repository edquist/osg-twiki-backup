%META:TOPICINFO{author="SuchandraThapa" date="1271090841" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! <nop>%TOPIC%
%TOC%

---++ Introduction
Xrootd is a high performance network storage system widely used in high energy physics experiments such as ATLAS and ALICE. The underlying Xroot data transfer protocol provides highly efficient access to ROOT based data files.  This page provides instructions for a simple, relatively small-scale xrootd storage system consisting of:
   * One redirector node
   * One or more data server node(s)
More advanced deployment options including larger scale systems (larger than a few TB per data server) are covered below.


---++ Getting Started

---+++ Identify hosts and roles
   * Identify the redirector node. 
   * Identify the data server(s)

---+++ Check firewall rules
It's important to make sure your firewall(s) aren't blocking the ports that xrootd uses for communication.  Otherwise, hard to diagnose errors and failures may occur.  Xrootd uses the following ports:

|*Module Name*|*Port Number*| *Protocol*|
|!Xrootd redirector|1094|tcp|
||2094|tcp|
||1213|tcp|
|!Xrootd data server| opens random port selected by OS;|tcp|


---+++ Create xrootd user account

---+++ Install Pacman


---++ Installing and configuring the redirector

---++ Installing and configuring the data server(s)

---++ Testing your system

---++ Advanced installation options
---+++ Optimizing disk partitions for performance
To maximize the performance of your xrootd installation, you should place the storage cache and storage path on separate partitions.  The partition used for the storage cache should be optimized for the type of files used by scientific applications that will utilize the xrootd installation.  In general, you can use the defaults for =mke2fs= since that will tend to optimize for large files.

The partition used for the storage path should be optimized to hold a large number of inodes and files.  Since the storage path is used to hold symlinks to the actual data files, the file system should have a large number of inodes since each symlink will require an inode to hold an entry for the symlink.  In addition, the size of the data blocks used by the filesystem on the partition should be made as small as possible.  Since symlinks will typically consume an entire block regardless of the size of data block, a small data block size results in less space being wasted.  For an ext3 file system, passing =-b 1024= to =mke2fs= will set the block size to 1kb per block which is the smallest allowed block size.
  

---+++ Adding a data server


---++ References



%BR%



-- Main.RobGardner - 05 Apr 2010
