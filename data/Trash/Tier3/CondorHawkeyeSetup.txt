%META:TOPICINFO{author="MarcoMambelli" date="1274462873" format="1.1" reprev="1.5" version="1.5"}%
%META:TOPICPARENT{name="WebHome"}%
---++ How to setup Condor's Hawkeye monitoring
%DOC_STATUS_TABLE%
%TOC{depth="3"}%

---++ Introduction
This section describes how to setup a feature called Condor Startd Cron (sometime also called Hawkeye).
The Condor Startd Cron allows to insert !ClassAds as result of the execution of a custom script.
This can be used to monitor a host and cause conditional scheduling.
You may find this useful if you are sharing the cluster with other users and want that to affect your scheduling.

The following is is an example that you may modify for your need.

For clarity we choose Proof as name of an heavy application. We want to avoid job scheduling when Proof is running.

---++ Description
This control is done completely on the worker node that decides whether to make the job slot available or not and whether a running job should be suspended or be allowed to complete.


Condor / PROOF interaction information: 

this goes into the local config file for the execute machine:
<pre  class="file">
================================================================
# For more information check for STARTD_CRON in Condor manual 3.3.10 
# invoke a module every 30 seconds
STARTD_CRON_JOBLIST = PSPROOF
STARTD_CRON_PSPROOF_EXECUTABLE = /export/share/condor-etc/modules/psproof
STARTD_CRON_PSPROOF_PERIOD = 30s
STARTD_CRON_PSPROOF_MODE = Periodic
# In periodic mode the whole output is collected and processed at once, the last definition of each variable is the one added as machine attribute
#   In wait for exit mode the monitoring of the output is live

# use the output of that module to control policy
# you could also use PREEMPT instead of SUSPEND if desired
# PROOF_IS_RUNNING is the named attribute returned by the program below
SUSPEND = (PROOF_IS_RUNNING =?= True)
CONTINUE = (PROOF_IS_RUNNING =!= True)
================================================================
</pre>

Everything coming out from stdout will be directly added as machine attribute.

Here's a sample code for =/export/share/condor-etc/modules/psproof=.  
You can have the script do whatever you want so long as it outputs the
attribute=value pair to standard out:
<pre class="file">
#!/bin/sh

ps auxwwww | grep %RED%zkmproof%ENDCOLOR% | grep -v grep > /dev/null
foundproof=$?

if [ $foundproof -eq 0 ]
then
  echo "PROOF_IS_RUNNING = True"
else
  echo "PROOF_IS_RUNNING = False"
fi
</pre>

The cron information above causes Condor to periodically (every 30 seconds) invoke the module =/export/share/condor-etc/modules/psproof=.  
This module must output to stdout an attribute=value pair that gets inserted into the machine ad.
I used the attribute name "PROOF_IS_RUNNING" that is added when the script finds a process called <tt>zkmproof</tt> running on the machine where it is invoked.  
Then, in the local config file, I set the SUSPEND/CONTINUE policy to use this attribute.


---++ *Comments*
%COMMENT{type="tableappend"}%

%BR%
-- Main.MarcoMambelli - 17 Nov 2009

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################ 
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = MarcoMambelli

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       =  Tier3

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %NO%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   reviewed dring DOC workshop
   * Local RELEASE_READY  = %YES%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = 
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################ 
-->
