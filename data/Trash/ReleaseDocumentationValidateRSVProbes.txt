%META:TOPICINFO{author="RobGardner" date="1247158350" format="1.1" reprev="1.20" version="1.20"}%
%META:TOPICPARENT{name="SiteValidationTable"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

%STARTINCLUDE%
%BR%
---+ _%INCLUDEHEADING%  %SPACEOUT{ "%TOPIC%" }%_
%EDITTHIS%
%BR%

%STARTOSG12%
---++ Instructions for validating !RSV probes
   * This is a major release with several new probes, and updates to existing probes.
   * If these tests succeed, make %Y% entry in the validation table for your site.
   * If these tests are not clear, please contact [[http://rsv.grid.iu.edu/documentation/rsv-contact-info.html][the RSV developers]] and cc osg-int@opensciencegrid.org.

---+++ Validation Steps:
   * <p> If you've installed the complete !OSG CE or !RSV package as outlined in [[https://twiki.grid.iu.edu/twiki/bin/view/ReleaseDocumentation/ValidateRSV-Infrastructure][Validating RSV Infrastructure]], then *you can skip the <a href='#download_probes'>download step</a> in the instructions below*, and use the probes installed in =$VDT_LOCATION/osg-rsv/bin/probes= to test them.
   * <p><strong>Pre-requisite(s):</strong>
      <ol>
	<li><p> OSG CE/client environment should be setup properly (i.e you can run <tt>$VDT_LOCATION/setup.[c]sh</tt>.</li>
        <li>Subversion client is required </li>
	<li><p> A valid proxy in the usual location (by default: <tt>/tmp/x509up_u&#60;uid&#62;</tt>;
	    Can be changed by setting variable -- see <a href='#customize_test'>customize section below</a></li>
      </ol>
   * <p><a name='download_probes'></a> </font>Export the <a href="https://osg-svn.rtinfo.indiana.edu/rsv/releases/latest-itb/">latest RSV probe-set 3.0-rcX </a> on your OSG CE node or a Unix machine, and edit =test-rsv-probes-by-hand.sh=.
      <pre> . /path/to/CE_or_OSG_Client/setup.sh
 mkdir /tmp/foo/ ;
 cd /tmp/foo
 svn export http://osg-svn.rtinfo.indiana.edu/rsv/releases/latest-itb/osg-rsv
 cd osg-rsv/bin/probes/
 cp ../misc/test-rsv-probes-by-hand.sh .
 ## vi test-rsv-probes-by-hand.sh </pre>
   * <p> <a name='customize_test'></a> *Customize test for your CE/SE* : Set the <tt>TESTHOST</tt> and <tt>TESTSE</tt> variables respectively, to  point to and OSG CE and SE you would like to test. Also set <tt>PROXYFILE='-x /tmp/proxy_file'</tt> if using a custom proxy location; Edit any other global variables you may want to change (with the help of comments in the script)
   * <p> *Execute* : Then execute the script! 
      <pre>   $ <strong>./test-rsv-probes-by-hand.sh </strong>

   Checking if environment is setup right ... 
    Executing  cacert-expiry-local-probe as:
   perl /home/foo/resource_service_availability/ . . .</pre>
      * <strong>Note</strong>: The above shell script only tests the <tt>fork</tt> and <tt>default</tt> job-managers; you can add additional job managers to the script by editing that section of the script (and copying n pasting the few lines while replacing "<tt>-m org.osg.batch.jobmanager-condor-status</tt>" with "<tt>org.osg.batch.jobmanager-pbs-status</tt>", for instance; type <tt>perl jobmanagers-status-probe -m all -l</tt> to see a list of metricNames you can use with the <tt>-m</tt> switch.)
   * *Output*: You'll find output and error files in =/tmp/rsv-test= by default (configurable using the OUTDIR line); the files are named "<tt>probe-name.{out/err}</tt>".
      <p>
      For example:
	    <pre> metricName: org.osg.general.ping-host
 metricType: status
 timestamp: 2008-04-24T19:32:11Z
 metricStatus: OK
 serviceType: OSG-CE-General
 serviceURI: cobra.uits.indiana.edu
 gatheredAt: dickinson.ucs.indiana.edu
 summaryData: OK
 detailsData: Host cobra.uits.indiana.edu is alive and responding to pings!
 EOT</pre>
   * Misc notes:
      * If you specified the <tt>--ggs</tt> option (done by default in the above
  script), then the probe will also generate a Gratia record uploader script
  (in Python); The default location of the script is <tt>/tmp/rsv-test</tt>, but that
  can be modified, yet again, using a command line option <tt>--gsl</tt>.
  The scripts should look
      <a href="http://rsv.grid.iu.edu/documentation/example-gratia-script.html">similar to this</a>.</li>
      * <strong>Additional options in the above script to the probes</strong>: You can add additional options to the probes using the <tt>EXTENDEDOPTIONS</tt> variable. (Arvind's note: Do note that certain options only apply to certain probes, and so adding them may raise error upon execution of  the above test script. I hacked up this <tt>test-rsv-probes-by-hand.sh</tt> script in a rather short period of time, so it is not very sophisticated :-)
      * <strong>Probe documentation</strong>: In general, all the probes have a pretty standard documentation style. Try doing <tt>./some-probe -h</tt> on the command line.</a>.
      * <strong>Yet another note about above script</strong>: The above test script consists of two parts:
         * Testing single metric probes: Done within a for loop,  this section only tests probes that validate one metric.
         * Testing multi-metric probes: This section is laid out for  each individual probe (that validates multiple metrics); each perl script execution will run a particular metric test.
   * <p> Additional Hints:
      * If you find any errors in the probes, or other issues, then please execute the corresponding probe script with an additional switch =--verbose=. For example, =perl gram-authentication-probe -u somehost.foo.edu --verbose=
      * If you're testing individual probes, then try to make sense out of the probe name as most of them are self explanatory; 
      * If in doubt, type perl =./some-name-probe -h= on the command line, and you'll get a complete description of the probe along with its command line options
      * Check if the tests actually work; are you seeing meaningful success/failure results being displayed in the =detailsData= line of the probe output?


%ENDOSG12% 


---++ Instructions for validating !RSV probes [*RSVv2*]
   * This is a bug fix release: several reported bugs (like non-standard SRM port not being considered, CRL warning horus reduced to 48 hours, etc.) have been fixed in this release. There are no major semantic changes to the probes; and there no additional probes either.
   * If these tests succeed, make %Y% entry in the validation table for your site.
   * If these tests are not clear, please contact [[http://rsv.grid.iu.edu/documentation/rsv-contact-info.html][the RSV developers]] and cc osg-int@opensciencegrid.org.

---+++ Validation Steps:
   * <p> If you've installed the complete !OSG CE or !RSV package as outlined in [[https://twiki.grid.iu.edu/twiki/bin/view/Integration/ITB092/ValidateRSV-Infrastructure][Validating RSV Infrastructure]], then *you can skip the <a href='#download_probes'>download step</a> in the instructions below*, and use the probes installed in =$VDT_LOCATION/osg-rsv/bin/probes= to test them.
   * <p><strong>Pre-requisite(s):</strong>
      <ol>
	<li><p> OSG CE/client environment should be setup properly (i.e you can run <tt>$VDT_LOCATION/setup.[c]sh</tt>.</li>
	<li><p> A valid proxy in the usual location (by default: <tt>/tmp/x509up_u&#60;uid&#62;</tt>;
	    Can be changed by setting variable -- see <a href='#customize_test'>customize section below</a></li>
      </ol>
   * <p><a name='download_probes'></a> </font>Download the <a href="http://osg-svn.rtinfo.indiana.edu/rsv/releases/tarballs/OSG_RSV_Probes-2.4.1.tar.gz">RSV probe-set 2.4.1 tarball</a> on your OSG CE node or a Unix machine, untar, and edit <tt>test-rsv-probes-by-hand.sh</tt>:
      <pre> . /path/to/CE_or_OSG_Client/setup.sh
 mkdir /tmp/foo/ ;
 cd /tmp/foo
 wget http://rsv.grid.iu.edu/downloads/OSG_RSV_Probes.tar.gz
 tar -zxvf OSG_RSV_Probes.tar.gz
 cd osg-rsv/bin/probes/
 ## vi test-rsv-probes-by-hand.sh </pre>
   * <p> <a name='customize_test'></a> *Customize test for your CE/SE* : Set the <tt>TESTHOST</tt> and <tt>TESTSE</tt> variables respectively, to  point to and OSG CE and SE you would like to test. Also set <tt>PROXYFILE='-x /tmp/proxy_file'</tt> if using a custom proxy location; Edit any other global variables you may want to change (with the help of comments in there)
   * <p> *Execute* : Then execute the script! 
      <pre>   $ <strong>./test-rsv-probes-by-hand.sh </strong>

   Checking if environment is setup right ... 
    Executing  cacert-expiry-local-probe as:
   perl /home/foo/resource_service_availability/ . . .</pre>
      * <strong>Note</strong>: The above shell script only tests the <tt>fork</tt> and <tt>default</tt> job-managers; you can add additional job managers to the script by editing that section of the script (and copying n pasting the few lines while replacing "<tt>-m org.osg.batch.jobmanager-condor-status</tt>" with "<tt>org.osg.batch.jobmanager-pbs-status</tt>", for instance; type <tt>perl jobmanagers-status-probe -m all -l</tt> to see a list of metricNames you can use with the <tt>-m</tt> switch.)
   * *Output*: You'll find output and error files in =/tmp/rsv-test= by default (configurable using the OUTDIR line); the files are named "<tt>probe-name.{out/err}</tt>".
      <p>
      For example:
	    <pre> metricName: org.osg.general.ping-host
 metricType: status
 timestamp: 2008-04-24T19:32:11Z
 metricStatus: OK
 serviceType: OSG-CE-General
 serviceURI: cobra.uits.indiana.edu
 gatheredAt: dickinson.ucs.indiana.edu
 summaryData: OK
 detailsData: Host cobra.uits.indiana.edu is alive and responding to pings!
 EOT</pre>
   * Misc notes:
      * If you specified the <tt>--ggs</tt> option (done by default in the above
  script), then the probe will also generate a Gratia record uploader script
  (in Python); The default location of the script is <tt>/tmp/rsv-test</tt>, but that
  can be modified, yet again, using a command line option <tt>--gsl</tt>.
  The scripts should look
      <a href="http://rsv.grid.iu.edu/documentation/example-gratia-script.html">similar to this</a>.</li>
      * <strong>Additional options in the above script to the probes</strong>: You can add additional options to the probes using the <tt>EXTENDEDOPTIONS</tt> variable. (Arvind's note: Do note that certain options only apply to certain probes, and so adding them may raise error upon execution of  the above test script. I hacked up this <tt>test-rsv-probes-by-hand.sh</tt> script in a rather short period of time, so it is not very sophisticated :-)
      * <strong>Probe documentation</strong>: In general, all the probes have a pretty standard documentation style. Try doing <tt>./some-probe -h</tt> on the command line or refer to the <a href="http://rsv.grid.iu.edu/documentation/help/">online help pages located here</a>.
      * <strong>Yet another note about above script</strong>: The above test script consists of two parts:
         * Testing single metric probes: Done within a for loop,  this section only tests probes that validate one metric.
         * Testing multi-metric probes: This section is laid out for  each individual probe (that validates multiple metrics); each perl script execution will run a particular metric test.
   * <p> Additional Hints:
      * If you find any errors in the probes, or other issues, then please execute the corresponding probe script with an additional switch =--verbose=. For example, =perl gram-authentication-probe -u somehost.foo.edu --verbose=
      * If you're testing individual probes, then try to make sense out of the probe name as most of them are self explanatory; 
      * If in doubt, type perl =./some-name-probe -h= on the command line, and you'll get a complete description of the probe along with its command line options
      * Check if the tests actually work; are you seeing meaningful success/failure results being displayed in the =detailsData= line of the probe output?





%STOPINCLUDE%
%BR%
%COMPLETE2% %BR%
%RESPONSIBLE% Main.ArvindGopu - 22 Jun 2009 %BR%
%REVIEW%


---++ *Comments*
| Need a reviewer/editor.  | Main.RobGardner | 09 Jul 2009 - 16:50 |
| Split into two pages? | Main.RobGardner | 09 Jul 2009 - 16:51 |
%COMMENT{type="tableappend"}%

%META:TOPICMOVED{by="RobGardner" date="1193156902" from="Integration/ITB_0_7.ValidateRsvProbes" to="Integration/ITB_0_7.ValidateRSV-Probes"}%
