%META:TOPICINFO{author="ForrestChristian" date="1180966947" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="CreateNewReport"}%
---+!! 2007Q1 PI Quarterly Report 
%STARTINCLUDE%

---++ <nop>USC-ISI

%EDITTHIS%
<!-- EDIT BELOW THIS LINE ONLY! -->

<!-- Complete the template. You can either use TWiki style, copy in plain text, or put in HTML. -->
<!-- IF COPYING IN HTML: Please only include the sections between your BODY tags. -->


During the first quarter of 2007, ISI worked closely with LIGO/Caltech to achieve the milestones of:

   * running LIGO inspiral workflows at UCSD using at least 25 slots at any one time for a period of 1 week 
   * running LIGO inspiral workflows on OSG (more than one site) using at least 100 slots at any one time for a period of 1 week. 
 
Both of these milestones were achieved through modifications to the Pegasus system which is used to map workflows onto the Open Science Grid. 

The following are the changes that were made to Pegasus:

   * Integration VORS support in VDS release 1.4.7. This provided Pegasus with the ability to find the available OSG resources so that could be used for the execution of the workflow. 
   * Providing enhanced partitioning capabilities. These capabilities allow the workflow to be easily divided into smaller pieces and thus enable the execution of very large LIGO workflows which consists of hundreds of thousands of tasks. 
   * Providing a way to stage-in executables to remote sites and thus setting up a friendly environment for LIGO workflows. 

ISI has also been working and continues to work on the integration of SRM/dcache into Pegasus. 

A major effort of minimizing the workflow data footprint is still underway. This involved extending Pegasus to add nodes to the executable workflow so that data would be cleaned up over the course of the workflow execution. This capability is needed to minimize the amount of disk storage that the LIGO workflows need in order to successfully run on OSG.  Our initial results were encouraging and were described in a paper that was accepted for the CCGrid 07 conference.  During the first quarter of 2007 we also developed successively more efficient algorithms to perform this dynamic cleanup. 

So far the solutions we have designed are applicable only within the context of a single workflow partition. In the future we plan to design new algorithms that will be able to efficiently work across partitions.  





%STOPINCLUDE%
