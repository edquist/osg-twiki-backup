%META:TOPICINFO{author="GregorySharp" date="1205170902" format="1.1" reprev="1.24" version="1.24"}%
%META:TOPICPARENT{name="OSGIndividualEffortReports"}%
---+ Effort reports from Greg Sharp
---++ March 2008
   *  March 6: The Globus Metrics package now has support for logging the DN of the user accessing the server. It also adds support for logging other potentially useful information. I reported several bugs to them, but it works in principle. It requires Globus 4.1.3 to function correctly. The VDT is probably not ready to upgrade to this version of Globus.
---++ February 2008
   *  1 Feb: The Globus Metrics folks fixed the mismatch between their code and their database schema. Now we just need to add the DN of the user accessing the GridFTP server to the metrics system.
   *  2-12 Feb: Vacation
   *  "Improved" error messages in dCache gridftp door code. Changed the say/esay calls to log4j calls.
   *  Worked on Gratia probe to extract Globus GridFTP accounting information.
   *  Fixed some of the dCache storage probe issues. Two remain: 1) Somebody changed the SRM schema for the postgres db, so I have to figure out if we can just ignore the hsm type field that they took away.  2) The probe prints inappropriate error messages if dCache is not running. These will be addressed once the Globus GridFTP server probe is done.
---++ January 2008
   *  Made several tweaks to the dCache transfer probe, at Brian Bockelman's request.
   *  Made a few tweaks to the dCache storage probe.
   *  Updated the dynamic storage info script for Anand so that it handled dead pools.
   *  Tried very hard to get the Globus folks to tell me how to debug the gridftp - to - usage receiver link. Dan Fraser has been pushing his people to help me. Very little useful information has come from it. I am concerned that the metrics package is simply not ready for non-expert use.
   *  Began work on dCache gridftp server error messages.  Figuring out what would be a helpful message is quite challenging, in some cases.
---++ December 2007
   *  Sent Anand a python script that extracts the dynamic dCache information: pool capacity and usage, plus space reservation capacity and usage. The pool information comes from the dCache admin server. The space reservation information is extracted from the Space reservation postgres database.
   *  Attended dCache site administrators' meeting Dec 12-14.
   *  Was unable to get the CE gridftp logging to send messages to the listener.  Follow up with Dan Fraser was not effective. dCache probe issues are more pressing and I'll defer this until mid January.
   *  Submitted the dCache storage probe for Gratia.
   *  The dCache transfer probe has some performance problems on very large databases. Brian Bockelman suggested a change to the SQL query. That improved performance for him to an acceptable level, but I still need to check the correctness of the change.
  
---++ November 2007
   *  Established contact with Dan Fraser (Globus) to make progress on CE gridftp logging issues. They have created a data collection daemon, which is sometimes called a "receiver", and sometimes called a "listener". (I asked them to pretty please just use one name.)  It accepts messages from servers (such as the gridftp server and writes the information to a postgres DB. (This will be in addition to the two versions of MySQL needed to run a CE. Really!!.) I upgraded to the latest OSG:CE package that comes with Globus 4.5. This contains a gridftp server that sends messages to the "listener". I am waiting to hear from Dan Fraser. He is working on a patch to the gridftp server that will let us add the DN and other desired information to the message that the gridftp server sends to the "listener".
   *  Finally got CVS access to the FNAL repository working. Checked in Jython tools to list the files in expired and released spaces. Also added a script to report the free/used space in each pool of  a dCache installation.

---++ October 2007
   *  Reported several deficiencies in the SRM v3 proposal to Timur and Alex Sim. Neither were particularly interested. They indicated that SRM v3 is not in active development. Sadly, these deficiencies also exist in SRM v2.2, but that has been irrevocably frozen.
   *  Submitted dCache space reservation server changes to Timur, who checked them into the dCache CVS repository. The changes are in diskCacheV111/services/space/Manager.java. I added an admin server command to list all the expired and/or released space reservations. I also added a command to list all the files in a space, since the SRM client interface offers no way to do this, and the SRM folks are not willing to add this (obviously necessary) feature.
   *  Wrote a Jython package that makes it trivial for site admins to write scripts that execute dCache Admin server commands.
   *  Used above package to write a script that lists all the Space Reservations that have expired or been released, and lists all the files in said spaces.
   *  Ted wanted me to get a FNAL login name so that I could submit all these tools to the FNAL CVS repository. I applied, but the helpdesk has been unable to get approval for my login. Ted is pursuing the matter.
   *  Sent listInvalidFiles package to Ted so it can get into the testing loop asap.
   *  Wrote a Gratia Probe that reports the storage capacity and usage of dCache. Once again, I can't check it in, so I sent it to Chris Green and Ted H. to get it integrated into the Gratia release system and then tested.
   *  I'm not able to get an answer about what happened to the "definitive" dCache transfer storage probe that I submitted to Chris Green in June for packaging and testing. My fear is that it has not yet been distributed for testing.

---++ September 2007
   *  Worked on understanding SRM and modifying the dCache Space Reservation manager to support features I will need for garbage collection. The current plan is to build python tools that connect to the dCache admin server and let selected administrators play with them to get some idea of what the garbage collection policies look like. Later we can try to automate those policies within the Space Reservation Manager.
   *  It took until 10 Sept. to get a host to test SRM.  Tried to install an initial dCache release from the vdt-dcache 1.1.9 release, but it didn't work. Tried the 1.2.0 version came out, and it didn't work. Spent 1.5 weeks debugging the installation scripts and throwing suggested fixes over the fence to Neha Sharma. The problem is that the changes to the install scripts caused Postgres to be installed with full security enabled, instead of all security disabled. It took 10 days to prove to myself that dCache can't run unless ALL Postgres database security is turned off. (I tried various levels of restriction, but something was always broken if there was any access restriction.) So right now, anyone who knows about dCache can connect to any host with a dCache Postgres database and, say, drop all the tables. A more creative person might have fun tweaking the PNFS directory permissions. :-)
   *  Note that even if security was turned on, dCache uses a well-known Postgres role and password for accessing its data, and it is difficult to change because the password appears in so many (world-readable) configuration files in dCache. So the total lack of security is consistent. :-(
   *  Ted H. reverted to releasing vdt-dcache 1.1.8, since that did install properly. Security issues are on the slate for future improvements.
   *  All this delay (getting a host, debugging the dCache install) has put me badly behind schedule. I'll have to hussle to catch up.
---++ August 2007
   *  Spent most of the August studying the dCache code, especially the SRM code. FKW wants me to add a garbage collector to the SRM v2.2 space reservation system. The comments in the SRM code are frequently wrong (copied from some other function.) Reported a few bad cut and paste errors to Timur. No obvious bugs, but too much entropy in the code due to cutting and pasting. Code is confusing, as a result. It is rarely clear which code is SRMv1 and which is SRMv2. The directory structure, file naming and comments offer few clues.
   *  2007/08/27-28  Visited Timur at FNAL. Timur helped resolve a lot of my confusion about the code. While there, I wrote two extra administration functions in the dCache space reservation manager that provided the core functionality required for the garbage collector. They seemed to work. The next step is to write some python utilities to exercise these functions so that users can gain experience with detecting and removing files whose reservation is no longer valid.
   *  2007/08/30 Tested a new version of Gratia.py for Phillipe. This introduces a handshake between the probe and the gratia server so that the server can tell the difference between "the probe has nothing to report" and "the probe isn't running". The new code seems to work, and resolves the reconnect problem in the previous release. If the handshake finds its connection is gone, it attempts to reconnect. So by the time the dCache probe wants to send data, the connection has already been reestablished.
---++ July 2007
   *  2007/07/09 Finally got the SE working with the CE (I think). dCache is painful to configure, even after using the VDT install script. There are security issues too. The postgres database account for dCache metadata has an obvious password which is stored in at least 5-6 config files. I fear it could be "challenging" to change it.
   *  2007/07/10 Installed the new local Gratia server at Cornell LEPP site.
   *  Modified the Gratia dCache probe to use the local Gratia server. This was very easy (10 minutes), thanks to the Gratia team's design. Found a few minor bugs in the Gratia Probe and the Gratia server post-install.sh script. Chris Green fixed them promptly. There is one "bug" that Chris will fix later. The dCache probe is a daemon, and so the first record sent in each batch of records gets a transient error while the probe reconnects to the server. It recovers from this, but it isn't elegant. It will be fixed in the next release.
   *  2007/07/13 The Gratia team will take ownership of the dCache probe. Sent Chris the first "release" of gratia-dcache-probe-2.0. The install script is inadequate, but I understand that the package will be turned into an RPM.
---++ June 2007
   *  2007/06/06 Reported [[dcacheinstallbug][a bug in the VDT dcache installation scripts]] to Ted Hesselroth. This bug was still present in the 1.1.9 release, so I reported it again on 2007/06/27.
   *  2007/06/12 The dCache probe that I submitted in March was finally packaged and put into a distribution. I successfully tested it at UCSD.
   *  Set up an dCache SE for te Cornell LEPP site. We hope to transfer this experience to the Cornell Theory Center.
   *  Here is a [[dCacheInstallWishList][list of other installation issues]] which it would be nice to fix. They aren't bugs, per se, but they made installation difficult.
---++ May 2007
   *  Reported a bug in VDT site_verify.pl script. If you use Sun Grid Engine (SGE), the site_verify.pl script tests to see if SGE is working by running 'qstat'. The PATH environment it sets is wrong. It uses $PATH:$OSG_SGE_LOCATION. It should use $ENV{'PATH'}:$OSG_SGE_LOCATION/bin.
   *  Installed GUMS at Cornell LEPP site.
---++ April 2007
   *  Tried to set up the OSG VDT on a test farm at Cornell using Sun Grid Engine as the globus job manager. This has been a painful experience. It still doesn't work. I can submit jobs, but the job manager never detects that they have finished.
---++ March 2007
   *  2007/03/19  Submitted new version of dCache probe to Michael Zalokar (via Ted Hesselroth).
   *  2007/03/16  With help from Phillipe Canal, the problem with the HTTP POST was explained: Gratia drops the connection if it is overloaded. However, it was not supposed to crash if one resent it, and Phillipe fixed that. The dCache probe no longer attempts to resend a record. If the send to Gratia gets a fatal error the dCache problem halts. We deleted all the UCSD records from Gratia and resent them using the new version. It successfully delivered all the records.
---++ February 2007
   *  The Gratia team will add a reconnect attempt once per time period. Requested that the time period be a ProbeConfig parameter.
   *  Chris Green produced a first version. There appears to be an intermittent bug whereby the HTTP POST operation to send a record to Gratia succeeds, but the subsequent call to get the reply throws an exception.
   *  dCache 1.7.29 fixed the bug I reported on 2007/01/19, whereby GridFTP GET operations do not log the identity of the initiator. UCSD is waiting for another dCache fix before deploying a new release of dCache. We will test it once UCSD has deployed a new release.

---++ January 2007
   *  2007/01/31    dCacheAggregator at UCSD failed to reconnect to the central Gratia server. Restarted it. It turns out that the Gratia probe code does not attempt to reconnect after 5 minutes of being disconnected. The Gratia group will fix this
Successfully tested a prototype dCache probe for Gratia at UCSD. Some fixes are needed in the dCache billing system to enable correct logging.
   *  2007/01/22 - [[dCacheDBIndex][Requested enhancement to dCache]]: An index on the =billinginfo= and =doorinfo= tables would enhance the performance of the dCache probe for Gratia when a site has very large database tables.
   *  2007/01/19 - [[FtpGetBug][Reported bug in dCache]]: =modules/dCache/diskCacheV111/doors/AbstractFTPDoorV1.java=. FTP 'get' operations do not log the identity of the initiator in the billing history.
   *  2007/01/19 - [[dCacheUnkown][Requested enhancement to dCache]]: The string 'unkown' appears in several places in the dCache source code. If it does not break the code, it would make various searches simpler if it were uniformly changed to 'unknown'.

---++ December 2006

In early Decemeber, the dCache billing information and gratia projects began coordination, and
I am now working on a probe for submitting dCache data to gratia. I have installed gratia locally, and have begun design and implementation of a probe in python, with the work informed
by the initial web services prototype.  As of the end of December, the basic elements of the probe are present. The probe will require dCache 1.7, since previous versions did not provide the "initiator" field in the dCache billing transfer records.

   * 2006/12/21 - [[dCacheSQLBug][Reported bug in dCache]]: =modules/dCache/diskCacheV111/cells/BillingCell.java=. If an attempt to send a billing record to the Postgres billing database fails, the code attempts to reconnect to the billing db, but doesn't resend the billing record.

---++ September-November 2006

Studied dCache billing system. Devised a simple web service to capture the billing data from all the CMS dCache servers at a central site. Implemented a rough prototype.

   * 2006/10/27 - [[dCacheDiskAllocBug][Reported bug in dCache]]: =modules/dCache/diskCacheV111/pools/CostCalculationV5.java=. The cost function will report that there is sufficient room for a new file that is larger than the available free space if the disk has more free space than the "gap" (the low-water mark). The code makes the invalid assumption that no file will ever be larger than the "gap". 
   * 2006/10/24 - Reported bug in dCache: cost accounting is disabled in the pre-release of dCache 1.7.

-- Main.GregorySharp - 10 Mar 2008
