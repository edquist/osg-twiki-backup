%META:TOPICINFO{author="UmeshkumarKeswani" date="1177464801" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="PandaForCharmm"}%
-- Main.UmeshkumarKeswani - 25 Apr 2007


%STARTINCLUDE%
---++ !!Subversion Client Setup
%TOC%


---+++ What is Subversion?

Subversion (svn) is a version control system. Version control is management of multiple revisions of the same unit of information (source code, documentation etc). It is primarily used to track and provide control over changes to software code.

Subversion works with a Client/Server architecture. A svn server is the machine that actually holds the information which everyone can access . It tracks changes and maintains versions. A subversion client interacts with this server to get the information (check out) from the sever or to put the modified information (commit) back in the server so that the changes made to that information is reflected to everyone accessing it, etc. For details on these and other svn client operations, click [[http://svnbook.red-bean.com/nightly/en/svn.ref.html][here]].


---------------
---------------

---+++ Who should use this document?
This document describes how to install a Subversion client including all it dependencies.
A svn client should be installed by those, who want to modify the information stored in the subversion server and commit it back.
If you just want to read the contents in the svn server, you don't have to install a svn client. You can read the contents of the server using a web browser.
 
To access the contents of BNL !AutoPilot svn server, click [[https://svn.usatlas.bnl.gov/svn/panda/autopilot/trunk/][here]]

---------------
----------------

---+++ Before Installation

This document describes steps to set up a svn client in a user account on a Linux/Unix machine. To be able to execute these setup commands it is necessary that, you have an account on a Linux/Unix server, you are logged-in to that account and currently are in your home directory (On the command prompt type '$HOME', hit enter.  The directory mentioned is your home directory). If there are multiple users on the server that need to use this svn client, you should ask your system administrator to log-in as 'root', follow the steps in this document and set up a svn client.

Before we download and install Subversion, we will have to install its dependencies.
Subversion has three dependencies. Neon, Apache Portable Runtime (APR) and APR-util libraries.

Neon is a library required by the client to initiate, authenticate and  maintain network connection with the server.

APR and APR-util are libraries that provide a predictable and consistent interface to the underlying platform-specific implementations. Subversion uses these libraries so that it does not have to be aware of all the different types of platform-specific details.


You might have these dependencies already installed.

1) To check if Neon is already installed,
look for the "libneon.la" lib in '/User/lib/' directory, if any.
If this library is present, you can skip installing Neon.

2) To check if APR is already installed,
look for the 'libapr-0.la' or the 'libapr-1.la' lib in  '/User/lib/' or in '/User/apache/lib' directory, if any.
If one of these libraries is present,  you can skip installing APR.

3) To check if APR-util is already installed,
look for the 'libaprutil-0.la' or the 'libaprutil-1.la' in 'User/lib/'  or in '/User/apache/lib' directory, if any.
If one of these libraries is present, you can skip installing APR-util.

Note: There might be a combination of commands that can help you search for these libs. I am looking into it. Till then, please bare with me.
-----------------------------------------------
------------------
-----------------------------------------------


We will create a directory that will hold all the files required for a successful svn client setup.
What we shall do here is create a directory that will hold all the files that need to be compiled (into libraries etc) in order for the Subversion client to work. You can skip creating this directory and directly download these files into your home directory, but, I strongly recommend that you follow this step. What this would do is, keep things much more organized and will hold everything at one place. So, the next time you or someone else needs to install the Subversion client, you know exactly where to find everything that is required.   

<pre>
This command creates a directory named 'svnsrc'. You can name it anything. Make sure its unique and relevant.
   mkdir svnsrc
I named the directory 'svnsrc'. You can name it anything. Make sure its unique and relevant.



<pre>
Now we go into the directory, so that we can the download required setup files into it.
   cd svnsrc
Now that we inside the directory, lets start installing software(s).


a85 1
-----------------------------------------------


d91 1
---+++ Installing Neon

Make sure you are in the 'svnsrc' directory.
Make sure you are in the directory you just created.

   *Downloading Neon*
    wget http://www.webdav.org/neon/neon-0.24.7.tar.gz
</pre>
</pre>
Getting the compressed code.


*Extracting and Configuring Neon*

    tar -xzvf neon-0.24.7.tar.gz
De-compresses code.
    tar -xzvf neon-0.25.5.tar.gz
Decompressing the code.


    cd neon-0.24.7
    cd neon-0.25.5
</pre>

<pre>
</pre>
--prefix=$HOME will configure neon under your $HOME directory. 
--with-ssl will configure neon to support SSL.
</pre>
output would be something like,
output for the above command would be something like,
 Install prefix:  /home/umesh
  Install prefix:  /home/umesh
  XML Parser:      libxml 2.5.10
  SSL library:     OpenSSL (0.9.7 or later)
  zlib support:    found in -lz
  zlib support:    zlib support enabled, using -lz
  Build libraries: Shared=no, Static=yes
</pre>


*Making Neon*

<pre>
Compiles neon source code.
    make
Compiles the neon source code.


<pre>
Installs neon library.
    make install
Installs neon libraries.

To verify successful install, go to $HOME/lib/ . Check for libs 'libneon.a' & 'libneon.la' and a directory 'pkgconfig'.
To verify successful install, go to the _$HOME/lib/_ directory. Check for *libneon.a* & *libneon.la* libraries and *pkgconfig* directory.

-----------------------------------------------
----------------


---+++ Installing APR

Make sure you are in the directory you created earlier.

*Downloading APR*

    wget http://www.apache.org/dist/apr/apr-0.9.12.tar.gz
    wget http://cseweb.uta.edu/~thilagar/files/umesh/apr-0.9.x.tar.gz 
</pre>

*Extracting and Configuring APR*

    tar -xzvf apr-0.9.12.tar.gz
    tar -xzvf apr-0.9.x.tar.gz
</pre>

    cd apr-0.9.12
    cd apr-0.9.x
</pre>

<pre>
Configures a lot of files, be patient.
    ./configure --prefix=$HOME
Checks the current system configuration to make sure everything thats required is present. Execution of this command takes some time.

*Making APR*

<pre>
Compiles a lot files.
    make
Compiles a lot files. 

<pre>
    make install
</pre>
To verify successful install, go to $HOME/lib/ . Check for five 'libapr-0' libs with extensions .a, .la, .so, .so.0, .so.0.9.12 and apr.exp as well .
Check for *libapr-0* libraries with extensions *.a* , *.la* , *.so* , *.so.0* & *.so.0.9.14* along with a *apr.exp* file.

-----------------------------------------------
----------------



---+++ Installing APR-util

Make sure you are in the directory you created earlier.

*Downloading APR-util*

    wget http://www.apache.org/dist/apr/apr-util-0.9.12.tar.gz
    wget http://cseweb.uta.edu/~thilagar/files/umesh/aprutil-0.9.x.tar.gz 
</pre>

*Extracting and Configuring APR-util*

    tar -xzvf apr-util-0.9.12.tar.gz
    tar -xzvf aprutil-0.9.x.tar.gz
</pre>

    cd apr-util-0.9.12
    cd aprutil-0.9.x
</pre>

    ./configure --prefix=$HOME --with-apr=$HOME/svnsrc/apr-0.9.12
--with-apr, APR-util configure requires the path to APR code.
    ./buildconf --with-apr=$HOME/svnsrc/apr-0.9.x
--with-apr, APR-util 'buildconf' requires path to the *apr-config* file. Which is in *apr-0.9.x* directory.
*Note:* I have 'svnsrc' in my path to the APR code location. If you named the directory that you just created (as part of 'Setting-up Environment') something other than 'svnsrc' then please write that name in the above path instead of my 'svnsrc'.

*Making APR-util*

<pre>
    make
</pre>

<pre>
    make install
</pre>

To verify successful install, go to $HOME/lib/ . Check for five 'libaprutil-0' libs with extensions .a, .la, .so, .so.0, .so.0.9.12  and aprutil.exp.
Check for *libaprutil-0* libraries with extensions *.a* , *.la* , *.so* , *.so.0*  & *.so.0.9.14* along with a *aprutil.exp* file.

-----------------------------------------------
----------------


---+++ Installing Subversion

Make sure you are in the directory you  created earlier.

*Downloading Subversion*
 
    wget http://subversion.tigris.org/downloads/subversion-1.4.2.tar.gz
    wget http://cseweb.uta.edu/~thilagar/files/umesh/subversion-1.4.2.tar.gz 
</pre>

*Extracting and Configuring Subversion*

<pre>
    tar -xzvf subversion-1.4.2.tar.gz
This is a big file, will take some time to decompress.

<pre>
    cd subversion-1.4.2
</pre>

    ./configure --prefix=$HOME --with-ssl --with-zlib --without-berkeley-db
    ./configure --prefix=$HOME --with-ssl --with-zlib --without-berkeley-db --with-apr=$HOME/svnsrc/apr-0.9.x --with-apr-util=$HOME/svnsrc/aprutil-0.9.x
--with-apr, path to the *apr-config* file. I named my directory 'svnsrc'. You might have named something else. Make sure you write that in the path instead of 'svnsrc'.

*Making Subversion*
If you had any of the dependencies already installed and didn't follow this document to install them, make sure you mention the path of the already installed libraries correctly in the Subversion 'Makefile'.
Continuing in the same breath...
<pre>
If Neon already installed,
   Mention the path to libneon.la lib in 'NEON_LIBS' variable of 'Makefile'.
   then Mention the path to *libneon.la* library in *NEON_LIBS* variable of 'Makefile' (present in the _subversion-1.4.2_ directory).
If APR  already installed,
   Mention the path to libapr-0.la or libapr-1.la lib in 'SVN_APR_LIBS' variable of 'Makefile'.
   then Mention the path to *libapr-0.la* or *libapr-1.la* library in *SVN_APR_LIBS* variable of 'Makefile'.
If APR-util already installed, 
   Mention the path to libaprutil-0.la or libaprutil-1.la lib  in 'SVN_APRUTIL_LIBS' variable of 'Makefile'.
   then Mention the path to *libaprutil-0.la* or *libaprutil-1.la* library  in *SVN_APRUTIL_LIBS* variable of 'Makefile'.

then issue the command
<pre>
Execution of this command takes the longest...
and finally,

<pre>
d297 1
    make install
</pre>

Successful install would make lots of libs starting with 'libsvn' in $HOME/lib/ directory.
Successful install would make lots of libs starting with *libsvn_* in the _$HOME/lib/_ directory.

-----------------------------------------------
-----------------------------------------------

To test whether the Subversion client installation was successful or not, issue the following command.

<pre>
    svn --version
Output for the above command would be something like,
Output should be something like,

 Output for the above command would be something like,

<pre>
svn, version 1.4.2 (r22196)
   compiled Apr 18 2007, 14:50:43

Copyright (C) 2000-2006 CollabNet.
Subversion is open source software, see http://subversion.tigris.org/
This product includes software developed by CollabNet (http://www.Collab.Net/).

The following repository access (RA) modules are available:

* ra_dav : Module for accessing a repository via WebDAV (DeltaV) protocol.
  - handles 'http' scheme
  - handles 'https' scheme
* ra_svn : Module for accessing a repository using the svn network protocol.
  - handles 'svn' scheme
* ra_local : Module for accessing a repository on local disk.

</pre>


You are now set. You can use your Subversion client as and when you like. To know more about the different Subversion client operations you can perform, click [[http://svnbook.red-bean.com/nightly/en/svn.ref.htm][here]].
