%META:TOPICINFO{author="TorreWenaus" date="1162240836" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="ATLAS"}%
---++ Quick links
   * [[http://gridui02.usatlas.bnl.gov:25880/server/pandamon/query?job=*&site=CHARMM][Panda CHARMM job queue monitor]]
   * [[http://gridui02.usatlas.bnl.gov:25880/server/pandamon/query?tp=main][Scheduler/pilot monitor]]
      * [[http://gridui02.usatlas.bnl.gov:25880/server/pandamon/query?tp=queues&tag=charmm][CHARMM-tagged queues]] (an arbitrary assortment at the moment)
   * The code:
      * [[http://svn.tjweb.org/TestPilot/][TestPilot scheduler/pilot system]]
      * [[http://svn.tjweb.org/CHARMM/][CHARMM area in the subversion repository]] (I can provide you commit access, or you can use some other 'web home' of your choosing; subversion (or webdav) is very convenient, I recommend it)
      * Panda [[http://atlas-sw.cern.ch/cgi-bin/viewcvs-atlas.cgi/offline/Production/panda/][cvs]], [[http://atldbdev01.cern.ch:20081/lxr/source/atlas/Production/panda/][lxr]]

---++ Submitting CHARMM jobs to Panda

__Setup procedure:__
<pre>
wget http://svn.tjweb.org/TestPilot/charmmSetup.sh
chmod +x charmmSetup.sh
./charmmSetup.sh
</pre>

__Submitting a job:__
The charmmJob.sh script sets up environment and input parameters for a CHARMM job and submits the job to Panda. An automation layer from you to define and submit jobs would replace charmmJob.sh with an automated submitter script that sets up the job inputs as shown in that example. The actual script that is run is 
<pre>
## Set up job parameters in charmmJob.sh
./charmmJob.sh
</pre>

---++ Monitoring jobs

   * The Panda CHARMM job queue can be monitored at http://gridui02.usatlas.bnl.gov:25880/server/pandamon/query?job=*&site=CHARMM
      * Click on a PandaID number to see the Panda job information page
      * From the Panda job information page click on the pilotID to see the TestPilot page for that job (if it's a real job; fake jobs for debugging will have a pilotID of tpid1 or similar).
   * From the TestPilot page for the job you can see pilot submission information and you can click on pilot.out which contains the stdout output of the job.

---++ Scheduling pilots

Pilot scheduling can be done centrally (by Torre) and/or by you. Packaging of the scheduling software for easy pickup and use isn't done yet.
Software is in the TestPilot subversion repository mentioned above. A scheduler launch for CHARMM pilots looks like this
<pre>
To submit continuous pilots to the bnl-condor-short queue:
./pilotScheduler.py --pandasite=CHARMM --queue=bnl-condor-short &

To submit continuous pilots to all CHARMM queues (designated by the charmm tag):
./pilotScheduler.py --pandasite=CHARMM --tag=charmm &
</pre>
Scheduler instances and pilots can be monitored via the TestPilot interface
http://gridui02.usatlas.bnl.gov:25880/server/pandamon/query?tp=main

-- Main.TorreWenaus - 30 Oct 2006
