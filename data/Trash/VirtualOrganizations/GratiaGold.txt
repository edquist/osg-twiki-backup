%META:TOPICINFO{author="YalingZheng" date="1341603810" format="1.1" version="1.6"}%
%META:TOPICPARENT{name="OSGasXsedeSp"}%
---+ *Describe the use case, the queries used, and the query pattern of gratia-gold script*

%TOC{depth="2"}% 

---++ *About the Use Case*

This is to support the OSG-XSEDE integration. Jobs running under the OSG service provider will have to be accounted for in both Gratia and the XSEDE central database, and this will be accomplished by first recording the usage in Grata, and the run queries to summarize the Gratia usage and send summary accounting data back to the XSEDE central database. The interaction with the XSEDE central database is handled by the Gold system on the osg-xsede submit host.

The core of the system is a script which is meant to synchronize and summarize jobs from the OSG Gratia system (osg-gratia-prod.opensciencegrid.org) for GOLD on the osg-xsede submit host, so that GOLD can charge these jobs for the time, processors, nodes, and machines they requested. The script charges the jobs which submitted to a specific portal, such as "condor:osg-xsede.grid.iu.edu". 

The script intends to run periodically, such as hourly or daily so that those submitted jobs can be charged in time. If the number of daily jobs are too big, more than 100000, we may want to run hourly so that we can handle them in one page cache.

Currently, this script querys jobs from rcf-gratia.unl.edu at Nebraska and charges the jobs because the production database osg-gratia-gold.opensciencegrid.org and rcf-gratia.unl.edu have the same database scheme for storing job information however rcf-gratia.unl.edu only holds jobs information from HCC which is a branch of OSG while we need to handle all jobs at OSG so we will need to query the production database osg-gratia-gold.opensciencegrid.org to get all job information at OSG.

---++ *About the Query Used*

The script querys the tables <pre>JobUsageRecord</pre> and <pre>JobUsageRecord_Meta</pre> in database gratia to get information of these jobs that submitted to specific portal (such as "condor:osg-xsede.grid.iu.edu") and charge these jobs. Because of the large quantities of the jobs, we group jobs when querying them in the following form

<pre class="screen">
SELECT
  max(JUR.dbid) as dbid,
  ResourceType,
  ReportableVOName,
  LocalUserId,
  sum(Charge) as Charge,
  sum(WallDuration) as WallDuration,
  sum(CpuUserDuration) as CpuUserDuration,
  sum(CpuSystemDuration) as CpuSystemDuration,
  NodeCount,
  count(Njobs) as Njobs,
  Processors,
  DATE(EndTime),
  MachineName,
  ProjectName
FROM
  JobUsageRecord JUR
JOIN
  JobUsageRecord_Meta JURM ON JUR.dbid = JURM.dbid
WHERE
  JUR.dbid >= %%(last_successful_id)s AND
  JUR.dbid < %%(last_successful_id)s + 100000 AND   
  ProbeName REGEXP %%(probename)s
GROUP BY
  ResourceType,
  ReportableVOName,
  LocalUserId,
  NodeCount,
  Processors,
  DATE(EndTime),
  MachineName,
  ProjectName
ORDER BY JUR.dbid ASC
LIMIT 100000
</pre>

---++ *About the Query Pattern*


---++ Comments
%COMMENT{type="tableappend"}%