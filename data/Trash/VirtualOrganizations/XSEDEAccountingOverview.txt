%META:TOPICINFO{author="MatsRynge" date="1365785140" format="1.1" version="1.3"}%
%META:TOPICPARENT{name="OSGasXsedeSp"}%
---+ OSG-XSEDE Accounting Overview

     <img src="%ATTACHURLPATH%/OSG-XSEDE-Accounting.jpg" alt="OSG-XSEDE-Accounting.jpg" width='900' height='450b' />    

The central component in the system is Gold which is an open source HPC accounting system (http://docs.adaptivecomputing.com/gold/index.php). Gold provides a database and a set of command line tools for managing projects, users and job accounting data.

The OSG Gold instance is synchronized with the XSEDE central database via AMIE (Account Management Information Exchange - http://scv.bu.edu/AMIE/) and AMIEGold (http://www.isgtw.org/feature/isgtw-feature-amiegold-teragrid-lsu). AMIE packages are exchanged over ssh. Arriving packages are translated by AMIEGold to Gold command line invocations. Job usage is pulled from the Gold database, translated to AMIE packages by AMIEGold, and sent to XSEDE via AMIE.

Information pulled from Gold and used on the OSG-XSEDE system include:

   * *User accounts* synchronized with /etc/passwd and mail aliases
   * *Active allocations/users list* used to validate that a job has specified a valid project ID at submit time
   * *XSEDE high/low priority allocation lists* used to put the jobs in the right HTCondor accounting group depending on if the allocations has a positive or negative balance
   * *Login account statements* which are shown as part of MOTD when a user logs in. Included in the statement is a list of current projects the user can charge to and what the balances of those projects are.

---++ condor_submit wrapper

condor_submit has been replaced with a submit wrapper which uses the information pulled from Gold.

---++ Job Accounting Groups

Based on what type the project is (XSEDE, other, or flocking), and account balances, the jobs are tagged with a Condor AccountingGroup which determines the priority that job can run with. The accounting groups are implemented as hierarchical fractions of the pool: 

<verbatim>
group_xsede = .70
group_xsede.high = .80
group_xsede.low = .20
group_other = .25
</verbatim>

The remaining 5% is used for flocking jobs. In the case above, xsede.high will have (.70)*(.80) =  0.56 of the pool.

The groups are allowed to spill over to other groups if those groups are underused and it is also common that the workloads running under the different groups have different requirements, which means that you might not see the workloads fit perfectly within the allocations of these groups.

-- Mats Rynge - 10 Apr 2013

%META:FILEATTACHMENT{name="OSG-XSEDE-Accounting.jpg" attachment="OSG-XSEDE-Accounting.jpg" attr="h" comment="" date="1365554168" path="OSG-XSEDE-Accounting.jpg" size="63640" stream="OSG-XSEDE-Accounting.jpg" tmpFilename="/usr/tmp/CGItemp52885" user="MatsRynge" version="2"}%
