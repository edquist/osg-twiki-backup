%META:TOPICINFO{author="ChrisGreen" date="1186784412" format="1.1" reprev="1.3" version="1.3"}%
%META:TOPICPARENT{name="WebHome"}%
---+ An extensible VO-centric Site Test package.

  span.paren03 { font-weight: bold; color: #d03010 }
  span.paren04 { font-weight: bold; color: #30d010 }
  span.paren05 { font-weight: bold; color: #d03020 }
  span.paren06 { font-weight: bold; color: #30d020 }
  span.paren07 { font-weight: bold; color: #d03030 }
  span.paren08 { font-weight: bold; color: #30d030 }
  span.paren09 { font-weight: bold; color: #d03040 }
  span.paren10 { font-weight: bold; color: #30d040 }
   * Command line, eg: <pre>ping my-ce.my-domain</pre>
  span.hash-value { font-weight: bold: color: #007722 }
   * Fork job, eg: <pre>globus-job-run my-ce.my-domain /usr/bin/printenv</pre>
  span.arg { font-family: courier; font-style: italic }
</style>

%TOC%

<hr>

---++ Overview

This package is an attempt to allow <em>application owners</em> (by which I mean people responsible for running an application on OSG) to characterize OSG sites from the point of view of being able to run your application. Questions can be asked of each site in multiple ways, for instance:

   * Command line, eg: <pre class="command">ping <span class="arg">my-ce.my-domain</span></pre>

   * Fork job, eg: <pre class="command">globus-job-run <span class="arg">my-ce.my-domain</span> /usr/bin/printenv</pre>

   * Batch job via !CondorG.

   * !ReSS, the <strong>Re</strong>source <strong>S</strong>election <strong>S</strong>ystem.

   * VORS, the <strong>VO</strong> <strong>R</strong>esource <strong>S</strong>elector.

The results are presented primarily in the form of an HTML table with results columns (possibly multiple columns per test), with a link to more detailed information for the test.

In addition, the summary results are available in =.CSV= format for machine readability; a true XML format may be forthcoming if there is enough demand.

   * Add <tt>osg-vo-tests-<em>&lt;version&gt;</em>/bin</tt> to your =PATH=, or link <tt>osg-vo-tests-<em>&lt;version&gt;</em>/bin/gridSiteTest</tt> to somewhere that is in =PATH=.

---++ Requirements

---++ Documentation and examples

---+++ Getting Started

The source is available as a tar-file: <span class="filename">[[%VOTestWWW/osg-vo-tests-%VOTestVersion.tar.bz2][osg-vo-tests-%VOTestVersion.tar.bz2]]</span>. You will probably wish to customize modules yourself; please inherit where possible rather than cut-and-paste, since there could be several updates to the package, certainly in the early stages. You may wish to take advantage of the package's ability to be configured to find modules and scripts in other directories to separate your code from the package's code for ease of updating.
The source is available as a tar-file. You will probably wish to customize modules yourself; please inherit where possible rather than cut-and-paste, since there could be several updates to the package, certainly in the early stages. You may wish to take advantage of the package's ability to be configured to find modules and scripts in other directories to separate your code from the package's code for ease of updating.
---++++ Running the basic test set
---++ Installation
<dl><dt><tt>gridSiteTest -V myvo:/myvo</tt></dt>
   * Expand the tar file.
   * Add <span class="snippet">osg-vo-tests-<em>&lt;version&gt;</em>/bin</span> to your =PATH=, or link <tt>osg-vo-tests-<em>&lt;version&gt;</em>/bin/gridSiteTest</tt> to somewhere that is in =PATH=.
  <li>Screen output (where VO = <tt>fermilab:/fermilab</tt>)</li>

   * If you intend to run the tests with a common subset of options, you may wish to set up a shell alias or function. A future version may support an options file if there is demand.

---++ Getting Started

---++++ Tweaking the output

----+++ More details
</dd>
---+++ Exploring and tweaking the output

   * Edit the copy to make the specification for the !ReSS test read: <pre class="code">{ command => "gridSiteTest::ReSS",
                      "match-regex" => 'm&uid=\d+\(([^\)]+)&',
                      "match-value" => '$1'
                    },
                    { "column-title" => "Group",
                      "detail-key" => 'Condor output file',
                      "match-operator" => '=~',
                      "match-regex" => 'm&gid=\d+\(([^\)]+)&',
                      "match-value" => '$1'
                    }
                  ]
    }
  },
) # Hash close
<span class="paren01">)</span> <span class="comment"># Hash close</span>
</pre>
----+++ Packaged test modules
---+++ Options common to all modules.

   * Invoke it to check a gatekeeper is alive. First it sends an ICMP ping; if this fails, it tries a <span class="command">globusrun -r -a</span>. Of course, the latter will fail even if the gatekeeper is up if the tester's VO is not supported.

---++++ VORS

---++++ !ReSS
---++++ Command

---++++ Command

---++++ !ForkCommand

---+++++!! Environment

---+++++!! !CEGridFtpCheck

---+++++!! !CEGUMSDetector

---++++ !CondorGTest


-- Main.ChrisGreen - 10 Aug 2007

%META:FILEATTACHMENT{name="2007_07_26_Discovering_site_env.ppt" attachment="2007_07_26_Discovering_site_env.ppt" attr="" comment="Presentation of the OSG VO site test kit given at the OSG Users' Meeting, FNAL 2007/07/26-27." date="1186775886" path="2007_07_26_Discovering_site_env.ppt" size="127488" stream="2007_07_26_Discovering_site_env.ppt" user="Main.ChrisGreen" version="1"}%
