%META:TOPICINFO{author="KyleGross" date="1480625623" format="1.1" version="1.11"}%
%SHOW_DOC_STATUS_TABLE%

---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

---++ About this Document
 This document is now obsolete.  Scientific Linux 4 and 5 are now officially supported
by the VDT and there are no tweaks that are necessary to make them work with Pacman or the VDT.;
It can be purged.

%TWISTY{%TWISTY_OPTS_REVIEW%}%
Steven, please describe with a few words what this document is about and whom it should concern.
%ENDTWISTY%


---++Introduction

In OSG 0.4.1/ VDT 1.3.10 and earlier, Scientific Linux 4 was not a supported OS for VDT.  Red Hat Enterprise Linux 4 was a supported OS.  In VDT 1.3.11 this was also the case. 
In VDT 1.6 and greater, Scientific Linux 4 is a supported platform.
Both x86 (i686) and x86_64 architectures are supported, however 
those who are installing an x86_64 architecture should look at 
[[%VDT_DOCS_URL%/contents.html][What is in VDT %VDT_VERSION%]] because a few 
of the packages are not built on the x86_64 architecture.  In VDT 1.8, all CE packages are available
for SL4 and x86_64.

  It was, however, quite possible, to install the VDT 1.3.x releases on Scientific Linux 4, and 
VDT 1.6 releases and greater can be done as well.  Many of the gotchas are the same.

The whole purpose of Scientific Linux project is to keep binary compatibility with the enterprise linux vendor from whose
open source rpms it is recompiled.  Therefore if there are found to be differences between Scientific Linux 4 and Red Hat 
Enterprise Linux 4, they need to be forwarded to the developers at scientific-linux-devel@scientificlinux.org.  There is 
also more information at http://www.scientificlinux.org.  

It is likely that some of these gotchas will apply to Red Hat Enterprise Linux 4 as well.

Scientific Linux has the concept of "sites".  There is vanilla Scientific Linux, and then Scientific Linux as 
modified by Fermilab (Scientific Linux Fermi) and CERN (Scientific Linux CERN).  Most of the Fermi extensions are 
added extensions for Kerberos security.  There should be no OSG-visible differences between the three.

%TWISTY{%TWISTY_OPTS_REVIEW%}%
   * 1st and 2nd <p>
      * what about a table that illustrates the supported OS's in dependence of VDT version?
   * 3rd and 4th<p>
      * what SL is, should go at the top of the introduction
   * rearrange order: 3,4,1,2
 
%ENDTWISTY%

---++Gotchas we've found

   * The pacman install of the CE requires the command "which"  This is not in the base rpm's.  It can be provided under Sci. Linux Fermi with "yum install which"
   * gcc and g++ compilers are not needed to install the base CE in VDT 1.6, but they are needed to install the Client package, both for PyGlobus and for Globus-Base-SDK.  They were also needed to build MIS-CI in VDT 1.4 and older.
   *  PRIMA requires a libcom RPM, compat-libcom_err rpm needs to be installed.
   *  Many packages require compat-libstdc++-33 rpm
   *  Pacman, even latest version, doesn't always recognize a platform correctly.  This can be done with
 =pacman -pretend_platform RHEL-4=  If you use this syntax then the various sub-versions of SL such as LTS41, LTS42, LTS44 will be transparent to Pacman.
   *  As far as we know there are no differences in the sub-versions of RHEL-4/SL4 as far as pacman and VDT are concerned.
   *  Have to disable SELinux
   * By default SL4 comes with firewall enabled--have to disable the default configuration and put in a different one (as documented in the twiki) to make OSG stuff work.
   * Watch out for !PyGlobus installs--In the install of the OSG Client (or if you try to install the whole VDT) there are problems detecting the python libraries. This can be worked around by installing the python-devel rpm on the system.
   * Those who install the GLExec package from gLite will find it requires a dependency on compat-openldap rpm.
   * The CE install now requires libstdc++, both x86_64 and i386 versions if you are on an x86_64 machine

%TWISTY{%TWISTY_OPTS_REVIEW%}%
   * The section could be called "Requirements Installing VDT x.y on SL z"
%ENDTWISTY%

---++Scientific Linux 5

Scientific Linux 5 is not officially a supported platform for VDT 1.8.1 but Red Hat Enterprise Linux 5
is, and early tests (by early SL5 adopters) have shown that there are no significant issues with running VDT 1.8.1 applications on SL5.  One gotcha is that the "xinetd" package, which is needed to run the globus-gatekeeper and gridftp servers, is not installed by default. More to come here later. 




<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = StevenTimm

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|SecurityTeam|User|Monitoring|General|Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = ComputeElement

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = RobertEngel
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %NO%


############################################################################################################
-->
