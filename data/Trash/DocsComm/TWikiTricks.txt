%META:TOPICINFO{author="KyleGross" date="1476285016" format="1.1" version="1.21"}%
%META:TOPICPARENT{name="Documentation.Tools"}%
---+!! TWiki Tricks
%TOC%

%EDITTHIS%

---++ Listing all children of a topic
The following METASEARCH will list all of the children for the current topic. Just paste into a topic, preferably below the STOPINCLUDE variable.

<verbatim>
 %METASEARCH{type="parent" web="%WEB%" topic="%TOPIC%" title="Children: "}%
</verbatim>


---++ New Technique for Migrating Documentation for a New Release

---+++ Initial Migration
One of the problems that we have is that there are several existing releases "in the wild" of the OSG software package. This means that we have to maintain more than one set of release documentation on the web. 

   1. Add <span style="font-family: Letter Gothic, Andale Mono, Courier, Courier New, Fixed; color: rgb(122, 71, 7);">&nbsp; &nbsp;* Set RELNO = &#60;the release number></span> to the Documentation.WebPreferences topic. 
   1. Change all references to the release number to =<nop>%RELNO%=.
   1. Create sub-webs using the TWiki.ManagingWebs interface. Subwebs should be named =WebName.Release00dot0x=
      * %RED% =Weigand= -So for the current Trash/Integration documentation TWIKI_HOME/Trash/Integration would now be TWIKI_HOME/Trash/Trash/Integration/Release00dot05x  ??%ENDCOLOR%
      * %BLUE% =EFC= Yes. But TWIKI_HOME/Trash/Trash/Integration/CurrentRelease would always point to whatever the current release number is, hiding the "Release00dot05x" from users. %ENDCOLOR%
   1. Again using the TWiki interface, _move_ the topics associated with a particular release into the appropriate subweb. 
      * *EX:* Move all topics named =*050= to the =Release00dot5n= subweb.
      * %RED% =Weigand= Are we proposing moving then 'as is'... meaning !CEInstallGuide050 would keep the same name ... or would now become !CEInstallGuide.  The later is what I would favor. %ENDCOLOR%
      * %BLUE% =EFC= You're right. I didn't make that clear. We would move it from !CEInstallGuide050 to !Trash/Integration.Release00dot5x.CEInstallGuide. %ENDCOLOR%
   1. _Publish_ all material that is older than one release back. The [[http://twiki.org/cgi-bin/view/Plugins/PublishContrib][PublishAddOn]] creates straight HTML pages out of TWiki pages (no longer editable by users).
   1. Create the Documentation.WebHome topics for each new subweb. 
      * %RED% =Weigand=  I do not understand exactly what this means.  Why would you create new topics?  Would they not be the same as the previous release initially?   %ENDCOLOR%
      * %BLUE% =EFC= You don't _have_ to create new Documentation.WebHome topics but you probably want to. You will still use Trash/Integration.WebHome as an entry point. !Trash/Integration.CurrentRelease.WebHome should probably just say that this is the current release subweb, or even INCLUDE !CEInstallGuide. %ENDCOLOR% 
   1. Build Documentation.WebPreferences, Documentation.WebLeftBar, etc. for each new subweb.
      * %RED% =Weigand=  Same comment as above.  What would change?   %ENDCOLOR%
      * %BLUE% =EFC= Since we're not copying the webs here (to make sure that all links that point to the topics will point to them in the new space), we'll need to copy over the old information. Again, only for the initial change over.%ENDCOLOR%
   1. Create a symbolic link pointing =twiki/data/WebName/CurrentRelease= to the data directory for the current release number.
   1. Create a symbolic link pointing =twiki/pub/WebName/CurrentRelease= to the attachments directory for the current release number.
---+++ Add a comment


Well, this wasn't quite this hard to do. I've done it (except for _Publishing_ the old releases and having a CurrentRelease symlinked subweb) and it looks good: see the new ArchivedDocumentation.ITB.ITB050.WebHome!

-- Main.ForrestChristian - 15 Dec 2006
---+++ Provisioning release documentation from Trash/Integration to <nop>ReleaseDocumentation
%INCLUDE{ "Documentation.ProvisioningNewReleaseDocs" }%


---+++ Migrating Existing Release Subwebs for New Release
   1. Copy the latest release web (in both =twiki/data= and =twiki/pub= to a new directory named for the latest release.
      1. For moving to a new ITB release from old one:
         * cd to your twiki directory %BR% =$ cp ./pub/Trash/Trash/Integration/OldRelease ./pub/Trash/Trash/Integration/NewRelease   %BR% $ cp ./data/Trash/Trash/Integration/OldRelease ./data/Trash/Trash/Integration/NewRelease    %BR%  [CHECK PERMISSIONS]=
      1. For moving to a new ReleaseDocumentation release from the current ITB release:  %BR%  =$ cp ./pub/Trash/Trash/Integration/OldRelease ./pub/ReleaseDocumentation/NewRelease   %BR%   $ cp ./data/Trash/Trash/Integration/OldRelease ./data/ReleaseDocumentation/NewRelease   %BR%  [CHECK PERMISSIONS]=
      * %RED% =Weigand=  So if going from 05n to 06n, we would copy  the 'data' and 'pub' subdirectories of  TWIKI_HOME/Trash/Trash/Integration/Release00dot05x  to TWIKI_HOME/Trash/Trash/Integration/Release00dot06x   %ENDCOLOR%
   1. Change =Documentation.WebPreferences= variables for this release.
      * %RED% =Weigand= Basically just changing the =<nop>%RELNO%= variable  %ENDCOLOR%
      * %BLUE% =EFC= Should be. Just keeping it open in case we have to add another. %ENDCOLOR%
      * %BLUE% =EFC= It turns out that subwebs _inherit_ parent web's Documentation.WebPreferences. Which is very pleasant.%ENDCOLOR%
   1. Create Documentation.WebLeftBar and other Web* topics that might be necessary in order for the subweb to perform properly.
   1. Add new links to the "Links to Other Releases" menu or any other place where you need to announce the new release documentation is out.
   1. _%GREEN%[only if you have a CurrentRelease symlink subweb]%ENDCOLOR%_ Change the symbolic links =twiki/pub/WebName/CurrentRelease= and twiki/data/WebName/CurrentRelease= to point to the new subwebs.
---+++ Add a comment
%COMMENT{ type="threadmode" }%


---++ Creating Conditional INCLUDEs Using IF
<verbatim>
   %IF{ "%MYVAR% = Something" then="%INCLUDE{ SomeOtherTopic }%" else="Not equal" }%
</verbatim>

Here, I have previously set ==MYVAR==, either in the page or in Documentation.WebPreferences. If MYVAR = "Something" then the SomeOtherTopic will be included at this point.

You can also set MYVAR conditionally using the [[TWiki.SpreadSheetPlugin][SpreadSheetPlugin]]'s IF statement but you then have to get it back using the plugin's ==$<nop>GET== function:
<verbatim>
   %CALC{"$IF(%GMTIME{"$epoch"}% > 1161273403, $SET( MYVAR, Something), $SET( MYVAR, Something else))"}%
   %IF{ "%CALC{'$GET( MYVAR )'}% = Something" then=" %INCLUDE{ SomeOtherTopic }%" else="Not equal" }%
</verbatim>
   
   * Set MYVAR = nothing
   * %CALC{"$IF(%GMTIME{"$epoch"}% > 1161273403, $SET( MYVAR, Something), $SET( MYVAR, Something else))"}% 
   * - - -
   * %IF{ "%CALC{'$GET( MYVAR )'}% = Something" then=" %MAKETEXT{"Here is where a topic would be included" }%" else="Not equal" }%

---+++ Add a comment
%COMMENT{ type="threadmode" }%



---++ Using INCLUDE variable
%STARTSECTION{"UsingIncludes"}%
The [[/twiki/bin/view/TWiki/TWikiVariables#VarINCLUDE][INCLUDE variable]] allows you to write a section once and use it in many places. Very handy when you have to repeat material in several places but you only want to update it in one.

---+++ Setting Heading Levels Dynamically When using INCLUDEs
Simply do this in the topic:
<verbatim>
   * Set BASEHEADLEVEL = ---+

%STARTINCLUDE%

%BASEHEADLEVEL% [Same as passed heading level in the target topic]
%BASEHEADLEVEL%+ [Second level at the top level]

%STOPINCLUDE%
</verbatim>

Then in the target file, write the INCLUDE thusly:
<verbatim>
%INCLUDE{ "SourceFile" BASEHEADLEVEL="---++" }%
</verbatim>

See Sandbox.ForrestChristianSandbox and Sandbox.ForrestChristianSandboxTesting . I named the variable BHL because it was shorter. But this works fine.

%ENDSECTION{"UsingIncludes"}%



%STARTSECTION{ "CopyTWikiTopicKeepingAttachments" }%
---++ Copying a TWiki Topic and Keeping the Attachments
These solutions require access to the server filesystem with the ability to copy files within the twiki directory tree. If you can't get to the filesystem and run these commands, you can't do this procedure.

To copy an existing topic and maintain attachments, simply copy that topic's files or directories in =./twiki/data/WEBNAME= and =./twiki/pub/WEBNAME=.  =pub= contains all of the attachments, separated into subdirectories named after the topic.

   $ %H% *%GREEN%NOTE%ENDCOLOR%*: This has been tested on *nix and WinXP servers running Apache. Please test first on your system. It's pretty easy to back out.


---+++ Example:
This example copies the =<nop>Trash/Integration.TestingThis= topic to create a =<nop>Release.TestingThis= topic.
<verbatim>
   cd twiki
   cp ./data/Integration/TestingThis.txt ./data/Release/TestingThis.txt
   cp ./data/Integration/TestingThis.txt,v ./data/Release/TestingThis.txt,v 
</verbatim>
Problems created: if I have a link in !Trash/Integration.TestingThis that points to another topic within Trash/Integration without using the WEBNAME.TOPICNAME format (like, say, *<nop>ThisIsMyLink* instead of *<nop>Trash/Integration.ThisIsMyLink*), the link won't work in <nop>Release.Testing. Just a risk. It will point to <nop>Release.ThisIsMyLink.

Then copy that topic's directory in =./twiki/pub/WEBNAME=. 
<verbatim>
   cp ./pub/Integration/TestingThis ./pub/Release/TestingThis
</verbatim>
This will copy the attachments. However, you will now have the attachments in two different places. In order to update them, you will have to update the attachments in both topics.
---+++ Add a comment
%COMMENT{ type="threadmode" }%


---+++ Using symlinks to avoid forking the attachments
%X% *%RED%WARNING!%ENDCOLOR%* This is speculative! I have done absolutely no testing of this whatsoever. I do not have access to a *nix server running TWiki. But I think this will work based on things that I did at a Dutch bank in 2006.

Use symbolic links to create the new subdirectory in =./twiki/pub/WEBNAME=.
<verbatim>
   ln -s ./pub/Integration/TestingThis ./pub/Release/TestingThis
</verbatim>
There might be permission issues with this, though, so test it before you try this at home!

You can also simply put in links to the attachments:
<verbatim>
%SCRIPTURL%/%WEB%/OldFileName/AttachmentName
</verbatim>

If not on the same web, simply hardcode the web name.

Of course, if you really wanted to do this right, you would keep your attachments in a different topic (say, "AttachmentsAndFiles") with a table of all the attachments. Then you could simply use an INCLUDE statement.

Or you could create a [[TWiki.TWikiVariables#VarMETASEARCH][METASEARCH]] statement to simply search and provide that [[TWiki.TWikiVariables#META_displays_meta_data][META data]]. But I don't have that yet. Keeping the attachments in a separate topic does make a lot more sense considering our subweb architecture.

%ENDSECTION{ "CopyTWikiTopicKeepingAttachments" }%

%STARTSECTION{ "ShowingMore" }%
#ShowingMore
---++ Showing and Hiding Text 
Here's a way to add text that only shows when a user clicks a word, such as "more". 
<verbatim>
   * *Brace and parenthesize in K&R style* 
     %STARTMore% 
     When setting out a code block, use the K&R style of bracketing.  
     That is, place the opening brace at the end of the construct that controls the block. ... 
     %ENDMORE%
   * *Separate your control keywords from the following opening bracket* 
     %STARTMore% 
     Control structures regulate the dynamic behaviour of a program, so the keywords 
     of control structures are the most critical components of a program. ... 
     %ENDMore%
</verbatim>

Which gives us:
   * *Brace and parenthesize in K&R style* 
     %STARTMore% 
     When setting out a code block, use the K&R style of bracketing.  
     That is, place the opening brace at the end of the construct that controls the block. ... 
     %ENDMORE%
   * *Separate your control keywords from the following opening bracket* 
     %STARTMore% 
     Control structures regulate the dynamic behaviour of a program, so the keywords 
     of control structures are the most critical components of a program. ... 
     %ENDMore%

This has to be set in the Documentation.WebPreferences for your web or at !Main.WebPreferences, which i don't currently have rights to change. See Documentation.WebPreferences for how to set it in your web.

From Harald Joerg's [[http://twiki.org/cgi-bin/view/TWiki/TwistyMadeEasy][TwistyMadeEasy]].
%ENDSECTION{ "ShowingMore" }%

---+++ Add a comment
%COMMENT{ type="threadmode" }%


---++ Using an "Edit This Section" button with included text
John Weigand has been using INCLUDEs for sections of text so that he can version control individual pieces. It's a great idea for when you have to create a longer page for PDF creation. 

The problem is that the link shows up on _every_ place in the PDF. It's distracting and annoying. Unfortunately, there's no way to tell the TWiki.GenPDFAddOn to not show this link text unless you add the STARTPDF and STOPPDF tags. 

I discovered that form buttons don't show up. So I "set" the EDITTHIS variable in Documentation.WebPreferences:

It shows up like this on a page, but doesn't come over in the generated PDF:

Looks more elegant, too.

The "noautolink" element is necessary to prevent TWiki from autolinking the various words that can show up in a style description.
---+++ Add a comment
%COMMENT{ type="threadmode" }%

---++ Creating New VO Documentation
Much of the OSG documentation is specific to a particular Virtual Organization (VO). This process helps them create their own documentation using OSG-created building blocks. It assumes but does not require that the VO use the TWiki for their documentation storage. 

VO webs can be created using a web template that provides good initial support for them to build with.

   * Create new =<nop>_VoWebTemplate= web. The underscore tells TWiki that it is a template. All of its contents will be put into any new web created using it as a template.
   * Create pages for it in the _Documentation web_. This isn't as nuts as it sounds. From the Documentation web, you can INCLUDE the sections very easily, making the building blocks standard. 

---+++ Add a comment
%COMMENT{ type="threadmode" }%

------------------
%BOTTOMMATTER%
-- Main.ForrestChristian %BR%
%META:TOPICMOVED{by="AnneHeavey" date="1193435683" from="Documentation.TWikiTricks" to="DocsComm.TWikiTricks"}%
