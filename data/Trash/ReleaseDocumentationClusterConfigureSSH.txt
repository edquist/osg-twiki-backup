%META:TOPICINFO{author="MarcoMambelli" date="1256410721" format="1.1" reprev="1.5" version="1.5"}%
%META:TOPICPARENT{name="GridColombiaWorkshop2009"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

---++ Introduction
   * To make our cluster secure we'll use a host-based SSH key infrastructure.

---++ Host authentication for root
These steps will ensure:
   * Password-less SSH for the root user on the management node to access each of the other nodes on the grid
   * SSH for the root user works without complaining between all head nodes on the grid
   * SSH for the root user works without complaining between the head nodes and compute nodes on the grid                                                                          

1.  All hosts must have the following lines in their /etc/sshd_config
<pre>
Protocol 2

# No passwords
PermitRootLogin without-password
PasswordAuthentication no
PermitEmptyPasswords no
UsePAM no

# Hostbased and pubkey yes
PubkeyAuthentication yes
ChallengeResponseAuthentication no
X11Forwarding no

# Hostbased
HostbasedAuthentication yes
IgnoreRhosts no

#OPTIONALLY DON'T CHECK gethostbyaddr(), TRUST CLIENT
#HostbasedUsesNameFromPacketOnly yes
</pre>

2. All hosts must have a valid host key for all the other hosts in the grid.
>
The easiest way to accomplish this is to assemble a list of all hosts in the grid.  Include all aliases for each host as a separate line. 

Make sure you are root.  Delete =/root/.ssh/known_hosts=. =cat= this host list file into the  =make_known_hosts.sh= script to connect to each and pull the SSH key. 
<pre>
#!/bin/sh
# make_known_hosts.sh
for host in $*; do
        expect - &lt;&lt;EOF
spawn ssh $host hostname
expect yes/no
send -- "yes\r"
expect yes
expect $host
exit
EOF
done
</pre>

This will append all the keys to =/root/.ssh/known_hosts=. Copy this file into =/etc/ssh/ssh_known_hosts= on each host in the cluster using scp from the management node.

3.  Create a list of head nodes for which you want to enable host-based access.  Copy it into /etc/ssh/shosts.equiv on each host in the cluster.  Also copy it into =/root/.shosts= on each host in the cluster.  This enables root login explicitly from these hosts.

Now all root logins should work across the cluster from the head nodes listed in step 3.

---++ Password-less authentication for users
The following is an easy way to add password-less authentication for a (non root) user on all nodes that share the same home directory exported by =tg1-nfs=.

After logging in as the user, in its home directory, do:
<pre>
cd ~/.ssh/
ssh-keygen
# respond enter to all questions (defaults and no passphrase)
# this will generate id_rsa and id_rsa.pub files 
cat id_rsa.pub >> authorized_keys
chmod go-rwx authorized_keys             # in case it is not already
</pre>

---++ Management node
If you have a management node outside the cluster not included in the previous list (e.g. because the user accounts are different, or a remote management node or the host of a virtual cluster), the following steps will allow password-less login and file copy (scp).

If you have no key (ckeck for =.ssh/id_rsa= file), in the root account  of the management node (or whichever account you'd like to use to access root on the cluster) generate a key-less key pair 
<pre>
cd ~/.ssh/
ssh-keygen
# respond enter to all questions (defaults and no passphrase)
</pre>

Copy =.ssh/id_rsa.pub= to =mgm_id_rsa.pub= on the destination node (e.g. =tg1-ce=). Then on the destination node do:
<pre>
mkdir ~/.ssh
cat mgm_id_rsa.pub >> ~/.ssh/authorized_keys
chmod go-rwx ~/.ssh/authorized_keys            # in case it is not already
</pre>


%BR%
%COMPLETE1% %BR%
%RESPONSIBLE% Main.RobGardner - 23 Oct 2009 %BR%
%REVIEW%

---++ Comments
%COMMENT{type="tableappend"}%


<!--
   * Set USERSTYLEURL = https://twiki.grid.iu.edu/twiki/pub/ReleaseDocumentation/GridColombiaWorkshop2009/centerpageborder.css
-->
