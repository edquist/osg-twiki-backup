%META:TOPICINFO{author="MarcoMambelli" date="1274732585" format="1.1" reprev="1.11" version="1.11"}%
%META:TOPICPARENT{name="WebHome"}%
%DOC_STATUS_TABLE%
https://twiki.grid.iu.edu/twiki/pub/Storage/WebHome/images.jpg

---+!! *<nop>%SPACEOUT{ "Gridftp-Xrootd Installation" }%*
%TOC%

---++ Introduction
The !GridFTP-Xrootd package (a Globus !GridFTP server with a [[http://www.globus.org/toolkit/docs/4.2/4.2.0/data/gridftp/developer/gridftp-developer-dsi.html][Data Storage Interface (DSI)]] module using Xrootd pre-load libraries to access Xrootd and POSIX file systems) contains all components necessary to set up an additional !GridFTP server for !BeStMan-gateway/Xrootd installation (to improve performance and/or reliability) or just on top of !Xrootd service (to provide a standard WAN access).

---++++++!!Applicable Versions
The applicable software versions for this document are 
%RED%
%OSG_VERSION% 
%ENDCOLOR%
(or higher) and 
%RED%
*vdt-version  2.0*
%ENDCOLOR%
(or higher).

---++++++!!Engineering Considerations
The !GridFTP-Xrootd server  provides high-performance, secure and reliable data transfer (see references below). Multiple !GridFTP-Xrootd instances on different servers are recommended if:
   * You have a !BeStMan-gateway/Xrootd SE (Storage Element) serving data to more than 250 cores for a VOs that use storage heavily (e.g. CMS, ATLAS, CDF, and D0)
   * Your storage will be managing more than 50 TB of disk space
   * You have a !BeStMan-gateway/Xrootd SE with more than 1Gbps bandwidth: plan on at least one !GridFTP-Xrootd server for each 4Gbps of available bandwidth (assuming you have 10Gbps interfaces on the server) if you want to maximize throughput. 

<!--
Gratia !GridFTP transfer probe is an optional package that is implemented as a cron job that reports all the file transfers to [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaSiteCollector Gratia collector]]

[[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS][GUMS server]] - authorization service
-->

---++Checklist
   1. [[PacmanInstall][pacman]] version >=%PACMAN_VERSION% is required
   1. The server must have a fully qualified domain name and a valid [[GetGridCertificates][grid host certificate]] installed in =/etc/grid-security/=
   1. The firewall must allow incoming connections to the gsiftp port (default 2811). Outgoing connections must be allowed from high ports ( typically in range 32769-65535 ). We recommend to consult the [[ComputeElementFirewalls][Firewall Guide]] if you install the !GridFTP server for the first time.
   1. A gridmap-file or a working GUMS server are needed to authorize users with grid certificates.

---++ Getting started
---+++ Install Pacman 
Pacman is a package management program used to install OSG software.   ReleaseDocumentation.PacmanInstall describes how to install Pacman which can be installed by either the cluster administrator or the (non-privileged) Xrootd administration account.  For example the cluster administrator might install this in  =/opt/pacman= such as in the following
%TWISTY{
mode="div"
showlink="Pacman installation example."
hidelink="Hide"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="screen">
cd /opt
wget http://atlas.bu.edu/~youssef/pacman/sample_cache/tarballs/pacman-3.29.tar.gz
tar --no-same-owner -xzvf pacman-3.29.tar.gz
cd pacman-3.29
source setup.sh
cd ..
ln -s pacman-3.29 pacman
</pre>
%ENDTWISTY% Once installed setup its environment with for example =source /opt/pacman/setup.sh=.  

---++Installation Procedure
Installation should be performed as root.
Create an installation directory, e.g. =/opt/gridftp-xrootd=, and install the !GridFTP-Xrootd package  from the %CACHE% cache. Pacman will ask whether you want to trust the cache (answer =yall=) and whether you want to accept the license (answer =y=). 
<pre class="screen">
mkdir -p /opt/gridftp-xrootd/
cd /opt/gridftp-xrootd/
pacman -get %CACHE%:Xrootd-GridFTP
</pre>

<!-- 
The install procedure will print out a warning but the information provided in the README is out of date.  :
<verbatim>
========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.
</verbatim>
-->

Setup the CA certificates in the following way (ignore the waring saying to see the notes in the post-install/README file):
<pre class="screen">
source setup.sh
$VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
</pre>
This command will download certificates distributed by the OSG to =$VDT_LOCATION/globus/share/certificates= and create a symlink from =$VDT_LOCATION/globus/TRUSTED_CA= to that location. [[VDTCAManage][Other options]] are also available.

Update the environment and run the post installation script:
<pre class="screen">
source setup.sh
vdt-post-install
</pre>

You can verify that the version installed is the version you expected by executing =vdt-version=. To see all services available use =vdt-control -list=
<pre class="screen">
vdt-version
vdt-control --list
</pre>

---++ Service Configuration
Configure  !GridFTP to work with !Xrootd and enable !GridFTP:
<pre class="screen">
<verbatim>
$VDT_LOCATION/vdt/setup/configure_gridftp --use-xrootd \
 --xrootd-host <hostname>\
 --xrootd-mount-point <storage_path> \
 --xrootd-storage-path <storage_path> 

vdt-control --enable gsiftp
</verbatim>
</pre>
Where
_hostname_ is a FQDN of the Xrootd redirector host,  <br/>
_storage_path_ is a !GridFTP virtual mount point and storage area on redirector node 

<!--
---+++!! config.ini to remove for now
The  !GridFTP-Xrootd server and Gratia transfer probe are configured by the =configure-osg= script located in =$VDT_LOCATION/osg/bin/configure-osg= based on the =$VDT_LOCATION/osg/etc/config.ini= configuration file.

The =$VDT_LOCATION/osg/etc/= directory contains two template files =config.ini=. You will have to  edit the =$VDT_LOCATION/osg/etc/config.ini= file following instructions that precede each entry.  Here is the list of entries that need to be changed:

<pre class="screen">

[Gridftp]
enabled = %(enable)s
mode = xrootd
redirector = &lt;xrootd_redirector_fqn&gt;
mount_point = &lt;virtual mount point&gt;
redirector_storage_path = &lt;storage area on redirector node&gt; 


[Gratia]
enabled = %(enable)s
sitename = &lt;your registered site name&gt;
probes = %(itb-gridftp-gratia)s
</pre>

The =Misc Services= section defines what method of authorization should be used. If your site uses a %RED%gridmap-file%ENDCOLOR% for authorization, please make following changes:
<pre class="screen">
[Misc Services]
use_cert_updater = %(enable)s
authorization_method = gridmap
</pre>

In case your site supports %RED%GUMS%ENDCOLOR%, the fully qualified domain name of the GUMS server must be specified:

<pre class="screen">
[Misc Services]
use_cert_updater = %(enable)s
gums_host = &lt;your gums server fqn&gt;
authorization_method = prima
</pre>

You can verify that your configuration is valid by executing =configure-osg -v=. Finally execute =configure-osg -c= to configure the !BeStMan installation.
<pre class="screen">
configure-osg -v
configure-osg -c
</pre>
-->

Now =vdt-control -list= shows the list of available services (Gratia and GUMS will be on the list only if you are using them):
<pre class="screen">
#vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | enable
vdt-rotate-logs         | cron   | enable
vdt-update-certs        | cron   | enable
gsiftp                  | inetd  | enable
gratia-gridftp-transfer | cron   | enable
gums-host-cron          | cron   | enable
edg-mkgridmap           | cron   | do not enable
</pre>


If you are using GUMS for authorization copy the following files:
<pre class="screen">
cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 
</pre> 

If you have a firewall, set properly the !GridFTP port range by modifying =$VDT_LOCATION/vdt/etc/vdt-local-setup.sh=.
<pre class="file">
#edit $VDT_LOCATION/vdt/etc/vdt-local-setup.sh 
GLOBUS_TCP_SOURCE_RANGE=&lt;low_port,high_port&gt;
GLOBUS_TCP_PORT_RANGE=&lt;low_port,high_port&gt;
export GLOBUS_TCP_SOURCE_RANGE
export GLOBUS_TCP_PORT_RANGE
</pre>
Where _low_port,high_port_ - controls all outbound globus connections for !GridFTP (e.g GLOBUS_TCP_SOURCE_RANGE=40000,49150)
 
---+++ Gratia !GridFTP Transfer Probe
Gratia is an optional accounting tool that can keep track of the data you transfer. 
If you like To enable and configure the Gratia !GrdFTP transfer probe for this GridFTP server follow the instructions in [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]]



---++ Start/Stop !GridFtp-Xrootd
You need to login to the host where !GridFtp-Xrootd is installed  to start/stop it.

To start:<pre class="screen">source /opt/gridftp-xrootd/setup.sh
vdt-control --on
</pre>

To stop:<pre class="screen">source /opt/gridftp-xrootd/setup.sh
vdt-control --off
</pre>

---++ Validation of Service Operation
To test this !GridFTP server you need a node with the [[ClientInstallationGuide][OSG client software]] (e.g. install it in =/opt/client=) and your voms-proxy certificate:
<pre class="screen">
source /opt/client/setup.sh 
voms-proxy-init –voms &lt;voname>:/&lt;voname> 
echo “This is a test” >/tmp/test 
globus-url-copy -dbg file:///tmp/test gsiftp://se.yourdomain.edu/local/xrootd/data/test
</pre>
Where &lt;voname> is the VO you want to enable in the certificate, =se.yourdomain.edu= is the host with the !GridFTP server, =/local/xrootd/data/test= must be a path on Xrootd where the user that your certificate is mapped to has write permission.

If the test is failing you can test the components separately to isolate the problem:
   * run [[http://www.globus.org/toolkit/docs/latest-stable/data/gridftp/admin/#gridftp-admin-testing][GridFTP tests]].
   * [[Tier3.XrootdInstallAlt#Testing_and_Using_the_System][test Xrootd]] if possible using =xrdcp= to copy a file to =/local/xrootd/data/test= as the user that your certificate would be mapped to
If any of the two is failing, follow the recommended troubleshooting/help procedure.
If both are successful, double check that you ran correctly _configure_gridftp_ .

If you have Gratia installed, verify that the [[ReleaseDocumentation/GratiaTransferProbe#Sanity_Check][gratia probe is working]].

---++++++!!File Locations
 If any of the tests described above have failed or you are just curious to see what’s going on,  you can find log and configuration files in the following locations. Gratia files will be there only if you installed Gratia:

|*Host*|*Configuration files*| *Log files*| 
| !GridFTP | $VDT_LOCATION/vdt/services/vdt-run-gsiftp.sh.env | $VDT_LOCATION/globus/var/log/gridftp.log <br/> $VDT_LOCATION/globus/var/log/gridftp-auth.log |
| Gratia Transfer Probe | $VDT_LOCATION/gratia/probe/gridftp-transfer/ProbeConfig | $VDT_LOCATION/gratia/var/logs |

---++++++!!Debugging Procedure
   * Look at the [[#Checklist][Checklist]] and make sure you really checked those items.

<!--
- --++++++!!Caveates/Known Issues
-->

---++++++!!Screendump of Install
%TWISTY{
mode="div"
showlink="Click here for a full installation example."
hidelink="Hide the example"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="screen">
# source /nfs/osg/app/pacman/setup.sh
# mkdir /opt/xrootdgridftp
# cd /opt/xrootdgridftp
# pacman -get http://software.grid.iu.edu/osg-1.2:Xrootd-GridFTP
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check... 

All prerequisite checks are satisfied.
                                                                          


========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.


# source setup.sh                        
# $VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
Setting CA Certificates for VDT installation at '/opt/xrootdgridftp'

Setup completed successfully.
# vdt-post-install
Starting...
Done.
# $VDT_LOCATION/vdt/setup/configure_gridftp --use-xrootd --xrootd-host gc1-se.uchicago.edu --xrootd-mount-point /storage/path --xrootd-storage-path /storage/path
# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | do not enable
vdt-rotate-logs         | cron   | do not enable
vdt-update-certs        | cron   | do not enable
gsiftp                  | inetd  | do not enable
# vdt-control --enable gsiftp
running 'vdt-register-service --name gsiftp --enable'... ok
# vdt-control --on
skipping cron service 'fetch-crl' -- marked as disabled
skipping cron service 'vdt-rotate-logs' -- marked as disabled
skipping cron service 'vdt-update-certs' -- marked as disabled
enabling inetd service gsiftp... ok
</pre>

<!-- <pre>
#cd /usr/local/pacman-3.28
#. setup.sh
#cd /usr/local
#mkdir osg-gridftp-xrootd
#cd osg-gridftp-xrootd
# pacman -get http://software.grid.iu.edu/osg-1.2:Xrootd-GridFTP
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check... 

All prerequisite checks are satisfied.
                                                                          


========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.

# . setup.sh                         
#  pacman -get http://software.grid.iu.edu/osg-1.2:Gratia-GridFTP
#  . setup.sh
#  $VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
Setting CA Certificates for VDT installation at '/usr/local/osg-gridftp-xrootd'

Setup completed successfully.

# . setup.sh
# vdt-post-install 
Starting...
Configuring PRIMA... Done.
Configuring EDG-Make-Gridmap... Done.
Completed all configuration.

#  cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
#  cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 
 
# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | do not enable
vdt-rotate-logs         | cron   | do not enable
vdt-update-certs        | cron   | do not enable
gsiftp                  | inetd  | enable
gratia-gridftp-transfer | cron   | do not enable
gums-host-cron          | cron   | do not enable
edg-mkgridmap           | cron   | do not enable

# vi osg/etc/config.ini 

# configure-osg -v
# configure-osg -c
Using /usr/local/osg-gridftp-xrootd/osg/etc/config.ini for configuration information
running 'vdt-register-service --name gsiftp --enable'... ok
running 'vdt-register-service --name vdt-rotate-logs --enable'... ok
running 'vdt-register-service --name fetch-crl --enable'... ok
Running /usr/local/osg-gridftp-xrootd/fetch-crl/share/doc/fetch-crl-2.6.6/fetch-crl.cron, this process make take some time to fetch all the crl updates
running 'vdt-register-service --name vdt-update-certs --enable'... ok
running 'vdt-register-service --name gums-host-cron --enable'... ok
running 'vdt-register-service --name edg-mkgridmap --disable'... ok
Running /usr/local/osg-gridftp-xrootd/gums/scripts/gums-host-cron, this process make take some time to query vo and gums servers
Configure-osg completed successfully

# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | enable
vdt-rotate-logs         | cron   | enable
vdt-update-certs        | cron   | enable
gsiftp                  | inetd  | enable
gratia-gridftp-transfer | cron   | enable
gums-host-cron          | cron   | enable
edg-mkgridmap           | cron   | do not enable

# vdt-control -on
</pre>
-->
%ENDTWISTY% 

---+++ Help
If you need further help, check InstallHelpProcedure.

---++ References
   1.  [[http://www.globus.org/toolkit/data/gridftp/][GridFTP documentation]].

---++ Comments
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = TanyaLevshina

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Storage

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MarcoMambelli
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = MarcoMambelli
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################
-->
