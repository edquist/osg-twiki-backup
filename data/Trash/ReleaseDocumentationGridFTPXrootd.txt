%META:TOPICINFO{author="KyleGross" date="1481047986" format="1.1" version="1.33"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! *<nop>Gridftp-Xrootd Installation*
%DOC_STATUS_TABLE%
%TOC%

---+ About this Document

%ICON{hand}% This document is for Storage System Administrators. It contains the installation procedure for a !GridFTP server that works with  %LINK_XROOTD%. 
This document applies to the latest release OSG-%VERSION%.

---+ Conventions Used in this Document
%INCLUDE{"Documentation/DocumentationTeam.DocConventions" section="Header"}%
%INCLUDE{"Documentation/DocumentationTeam.DocConventions" section="CommandLine"}%

---++ Introduction
The !Xrootd-GridFTP package consists of two parts:
   * [[http://www.globus.org/toolkit/docs/4.2/4.2.1/data/gridftp/][Globus !GridFTP server]]
   * [[http://www.globus.org/toolkit/docs/4.2/4.2.0/data/gridftp/developer/gridftp-developer-dsi.html][Data Storage Interface (DSI)]] module with Xrootd pre-load libraries. This module is used  to access Xrootd and POSIX file systems.
This package contains all components necessary to set up an additional  [[ReleaseDocumentation.BestmanGatewayXrootd][BeStMan on top of Xrootd]] installation (to improve performance and/or reliability) or just on top of !Xrootd (to provide a standard WAN access). 

---++++++!!Engineering Considerations
The !GridFTP server  provides high-performance, secure and reliable data transfer (see references below). Multiple !GridFTP instances on different servers are recommended if:
   * You have a !BeStMan-gateway/Xrootd SE (Storage Element) serving data to more than 250 cores for a VOs that use storage heavily (e.g. CMS, ATLAS, CDF, and D0)
   * Your storage will be managing more than 50 TB of disk space
   * You have a !BeStMan-gateway/Xrootd SE with more than 1Gbps bandwidth: plan on at least one !GridFTP server for each 4Gbps of available bandwidth (assuming you have 10Gbps interfaces on the server) if you want to maximize throughput. 

<!--
Gratia !GridFTP transfer probe is an optional package that is implemented as a cron job that reports all the file transfers to [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaSiteCollector Gratia collector]]

[[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS][GUMS server]] - authorization service
-->
 
---+ How to get Help?

If a problem occurs during installation or verification of the service, see [[#DebugInfo][this page]].

If you cannot resolve the problem, the best way to get help is by following  [[HelpProcedure][this page]]. 

If you cannot find answers, please send all your questions to: osg-storage@opensciencegrid.org

---++ Requirements 
   1. [[PacmanInstall][pacman]] version >=%PACMAN_VERSION% is required
   1. The server must have a fully qualified domain name and a valid [[GetHostServiceCertificates#Request_a_Host_Certificate][grid host certificate]] installed in =/etc/grid-security/=
   1. The firewall must allow incoming connections to the gsiftp port (default 2811). Outgoing connections must be allowed from high ports ( typically in range 32769-65535 ). We recommend to consult the [[ComputeElementFirewalls][Firewall Guide]] if you install the !GridFTP server for the first time.
   1. A gridmap-file is needed to authorize users with grid certificates.
 

<!-- conventions used in this document
   * Local UCL_HOST = xrootd-gridftp
   * Local UCL_CWD = /opt/osg-%VERSION%-%UCL_HOST%
-->

---+ Installation Procedure
The installation procedure consists of the following steps:
   * create an installation directory
   * use pacman to install !Xrootd-GridFTP package 
   * install the CA Certificates and the Certificate Revocation List

---++ Create the  Installation Directory

Create the installation directory and change to this directory.  This directory will be used for installation of all the packages described in this section.

<pre class="rootscreen">
<code>[root@%UCL_HOST% ~]$ mkdir -p %UCL_CWD%
[root@%UCL_HOST% ~]$cd %UCL_CWD%</code>
</pre>

---++ Download !Xrootd-GridFTP package

To download  the  !Xrootd-GridFTP package from the %CACHE% cache execute  %LINK_PACMAN% command. %LINK_PACMAN% will ask whether you want to "trust the caches and accept the license", answer =yall= and =y= to install the !Xrootd-GridFTP package. 
<pre class="rootscreen">
<code>%UCL_PROMPT_ROOT% pacman -get %CACHE%:Xrootd-GridFTP</code>
%TWISTY{%TWISTY_OPTS_OUTPUT%}%
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check... 

All prerequisite checks are satisfied.

========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.
%ENDTWISTY%
</pre>

To reflect the changes update the environment:
<pre class="rootscreen">
<code>%UCL_PROMPT_ROOT% source setup.sh</code>
</pre>

You will have to install CA Certificate and other related packages next. 

---++ Install a Certificate Authority Package 

Before you proceed to install a Certificate Authority Package you should decide which of the available packages to install. Please consult [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/CaCertificatesInstall#Install_a_Certificate_Authority][this document]] before you proceed. 

It is possible to install the [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/CaCertificatesInstall#Local_Installation][Certificate Authority Package]] without sharing it with other VDT installations on the same host. 
<pre class="rootscreen">
<code>%UCL_PROMPT_ROOT% vdt-ca-manage setupca --location local --url osg
Setting CA Certificates for VDT installation at ...
Setup completed successfully.
</code>
</pre>
After a successful installation the certificates will be installed in ==%UCL_CWD%/globus/share/certificates==.
---++ Post-Install Script
Now run the post installation script:
<pre class="rootscreen">
<code>%UCL_PROMPT_ROOT% vdt-post-install
Starting...
Done.</code>
</pre>

This completes the installation of the !Xrootd-GridFTP packages. Move to the next section to configure the  !Xrootd-GridFTP service.

---+ !Xrootd-GridFTP Configuration

You will need to configure  !GridFTP to work with !Xrootd. To do so run the command:
<pre class="rootscreen">
<code>%UCL_PROMPT_ROOT% vdt/setup/configure_gridftp --use-xrootd  \</br>
 --xrootd-host %RED%hostname%ENDCOLOR% \</br>
 --xrootd-mount-point %RED%storage_path%ENDCOLOR% \</br>
 --xrootd-storage-path %RED%storage_path%ENDCOLOR% </br></code>
</pre>

Where:

==hostname== is a FQDN of the Xrootd redirector host,  <br/>
==storage_path== is a !GridFTP virtual mount point and storage area on xrootd redirector node 

If you have a firewall, the open port range for the gridftp should be properly set. In order to do so you will have to modify ==vdt-local-setup.sh== and ==vdt-local-setup.csh== files
<pre class="file">
<code>
#edit $VDT_LOCATION/vdt/etc/vdt-local-setup.sh 
GLOBUS_TCP_SOURCE_RANGE=%RED%low_port,high_port%ENDCOLOR%
GLOBUS_TCP_PORT_RANGE=%RED%low_port,high_port%ENDCOLOR%
export GLOBUS_TCP_SOURCE_RANGE
export GLOBUS_TCP_PORT_RANGE </code>
</pre>

Where ==low_port, high_port==  controls all outbound globus connections for gridftp (e.g 40000,49150). 

---++ Enabling the services on 
You can use the ==vdt-control -list== command to see all services that are installed as part of the install, and whether or not they are enabled or disabled (see [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/StartingServices#Enable_a_Service][this page]] for more details).
You will need to enable the following services:
   * fetch-crl   
   * vdt-rotate-logs  
   * vdt-update-certs              
   * gsiftp

First, login to !Xrootd-GridFTP node as root. You can execute ==vdt-control -enable== command and list all services you want to enable:
<pre class="rootscreen">
<code>%UCL_PROMPT_ROOT% source setup.sh
%UCL_PROMPT_ROOT% vdt-control --enable fetch-crl vdt-rotate-logs vdt-update-certs gsiftp</code>
</pre> 

Now =vdt-control -list= shows the list of available services (Gratia and GUMS will be on the list only if you are using them):
<pre class="rootscreen">
<code>%UCL_PROMPT_ROOT%vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | enable
vdt-rotate-logs         | cron   | enable
vdt-update-certs        | cron   | enable
gsiftp                  | inetd  | enable
...</code>
</pre>

---+ Services Startup/Shutdown 
The detailed documentation on how to activate/deactivate VDT registered software is provided in [[StartingServices#Service_Activation][this document]].
   1. To start !Xrootd-GridFTP login on the node, then:<pre class="rootscreen"><code>%UCL_PROMPT_ROOT%source setup.sh
%UCL_PROMPT_ROOT%vdt-control --on</code>
</pre>
   1. To stop  !Xrootd-GridFTP login on the node, then: <pre class="rootscreen"><code>%UCL_PROMPT_ROOT% source setup.sh 
%UCL_PROMPT_ROOT%vdt-control --off</code>  
</pre> 

#DebugInfo
---+ Validation of Service Operation
To test this !GridFTP server you need a node with the [[ReleaseDocumentation.ClientInstallationGuide][OSG client software]] (e.g. install it in =/opt/client=) and your voms-proxy certificate:

<pre class="screen">
<code>source /opt/client/setup.sh 
voms-proxy-init –voms %RED%voname%ENDCOLOR% 
echo “This is a test” >/tmp/test 
globus-url-copy -dbg file:///tmp/test gsiftp://%RED%se.yourdomain.edu%ENDCOLOR%/local/xrootd/data/test
</pre>

Where ==voname== is the VO you want to enable in the certificate, =se.yourdomain.edu= is the host with the !GridFTP server, =/local/xrootd/data/test= must be a path on Xrootd where the user that your certificate is mapped to has write permission.

If the test is failing you can test the components separately to isolate the problem:
   * run [[http://www.globus.org/toolkit/docs/latest-stable/data/gridftp/admin/#gridftp-admin-testing][GridFTP tests]].
   * [[Trash/Tier3.XrootdInstall#Testing_and_Using_the_System][test Xrootd]] if possible using =xrdcp= to copy a file to =/local/xrootd/data/test= as the user that your certificate would be mapped to
If any of the two is failing, follow the recommended troubleshooting/help procedure.
If both are successful, double check that you ran the ==configure_gridftp== script correctly and you don't see any errors in ==$VDT_LOCATION/vdt-install-log== .

---+++ File Locations
 If any of the tests described above have failed or you are just curious to see what’s going on,  you can find log and configuration files in the following locations. Gratia files will be there only if you installed Gratia:

|*Host*|*Configuration files*| *Log files*| 
| !GridFTP | $VDT_LOCATION/vdt/services/vdt-run-gsiftp.sh.env | $VDT_LOCATION/globus/var/log/gridftp.log <br/> $VDT_LOCATION/globus/var/log/gridftp-auth.log |


---+++!!Debugging Procedure
   * Look at the [[#Requirements][Requirements]] and make sure you really checked those items.


---++ Screendump of Install
%TWISTY{
mode="div"
showlink="Click here for a full installation example."
hidelink="Hide the example"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="screen">
# source /nfs/osg/app/pacman/setup.sh
# mkdir /opt/xrootdgridftp
# cd /opt/xrootdgridftp
# pacman -get http://software.grid.iu.edu/osg-1.2:Xrootd-GridFTP
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check... 

All prerequisite checks are satisfied.
                                                                          


========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.


# source setup.sh                        
# $VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
Setting CA Certificates for VDT installation at '/opt/xrootdgridftp'

Setup completed successfully.
# vdt-post-install
Starting...
Done.
# $VDT_LOCATION/vdt/setup/configure_gridftp --use-xrootd --xrootd-host gc1-se.uchicago.edu --xrootd-mount-point /storage/path --xrootd-storage-path /storage/path
# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | do not enable
vdt-rotate-logs         | cron   | do not enable
vdt-update-certs        | cron   | do not enable
gsiftp                  | inetd  | do not enable
# vdt-control --enable gsiftp
running 'vdt-register-service --name gsiftp --enable'... ok
# vdt-control --on
skipping cron service 'fetch-crl' -- marked as disabled
skipping cron service 'vdt-rotate-logs' -- marked as disabled
skipping cron service 'vdt-update-certs' -- marked as disabled
enabling inetd service gsiftp... ok
</pre>

<!-- <pre>
#cd /usr/local/pacman-3.28
#. setup.sh
#cd /usr/local
#mkdir osg-gridftp-xrootd
#cd osg-gridftp-xrootd
# pacman -get http://software.grid.iu.edu/osg-1.2:Xrootd-GridFTP
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check... 

All prerequisite checks are satisfied.
                                                                          


========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.

# . setup.sh                         
#  pacman -get http://software.grid.iu.edu/osg-1.2:Gratia-GridFTP
#  . setup.sh
#  $VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
Setting CA Certificates for VDT installation at '/usr/local/osg-gridftp-xrootd'

Setup completed successfully.

# . setup.sh
# vdt-post-install 
Starting...
Configuring PRIMA... Done.
Configuring EDG-Make-Gridmap... Done.
Completed all configuration.

#  cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
#  cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 
 
# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | do not enable
vdt-rotate-logs         | cron   | do not enable
vdt-update-certs        | cron   | do not enable
gsiftp                  | inetd  | enable
gratia-gridftp-transfer | cron   | do not enable
gums-host-cron          | cron   | do not enable
edg-mkgridmap           | cron   | do not enable

# vi osg/etc/config.ini 

# configure-osg -v
# configure-osg -c
Using /usr/local/osg-gridftp-xrootd/osg/etc/config.ini for configuration information
running 'vdt-register-service --name gsiftp --enable'... ok
running 'vdt-register-service --name vdt-rotate-logs --enable'... ok
running 'vdt-register-service --name fetch-crl --enable'... ok
Running /usr/local/osg-gridftp-xrootd/fetch-crl/share/doc/fetch-crl-2.6.6/fetch-crl.cron, this process make take some time to fetch all the crl updates
running 'vdt-register-service --name vdt-update-certs --enable'... ok
running 'vdt-register-service --name gums-host-cron --enable'... ok
running 'vdt-register-service --name edg-mkgridmap --disable'... ok
Running /usr/local/osg-gridftp-xrootd/gums/scripts/gums-host-cron, this process make take some time to query vo and gums servers
Configure-osg completed successfully

# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | enable
vdt-rotate-logs         | cron   | enable
vdt-update-certs        | cron   | enable
gsiftp                  | inetd  | enable
gratia-gridftp-transfer | cron   | enable
gums-host-cron          | cron   | enable
edg-mkgridmap           | cron   | do not enable

# vdt-control -on
</pre>
-->
%ENDTWISTY% 

---+ References
   1. [[http://www.globus.org/toolkit/data/gridftp/][GridFTP documentation]].
   1. [[ReleaseDocumentation/BestmanGatewayXrootd][BeStMan on top of Xrootd Instalaltion]]
   1. [[https://twiki.grid.iu.edu/bin/view/Trash/Trash/Tier3/XrootdInstall][Xrootd Installation for Tier 3 sites]]

---+ Comments
| PM2RPM_TASK = SE&#60;br /&#62; | Main.RobertEngel | 28 Aug 2011 - 06:28 |
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = DouglasStrain

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = Storage

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = NehaSharma
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = MarcoMambelli
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################
-->