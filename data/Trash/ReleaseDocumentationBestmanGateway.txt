%META:TOPICINFO{author="TanyaLevshina" date="1287428649" format="1.1" version="1.80"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! *<nop>BeStMan Gateway*
%DOC_STATUS_TABLE%
%TOC{depth="3"}%
%STARTINCLUDE%


---+ About this Document

%ICON{hand}% This document is for Storage System Administrators. It contains the installation procedure for a %LINK_BESTMAN% in gateway-mode on top of a POSIX-compliant file system.  This document applies to the latest release OSG-%VERSION%.


%INCLUDE{"Documentation/DocumentationTeam/DocConventions" section="Header"}%
%INCLUDE{"Documentation/DocumentationTeam/DocConventions" section="CommandLine"}%
---+ Introduction
%BESTMAN%, developed by the [https://sdm.lbl.gov/][Scientific Data Management Group]] of [[http://www.lbl.gov][Lawrence Berkeley National Laboratory]], is a generic [[https://sdm.lbl.gov/srm-wg/doc/SRM.v2.2.html][SRM v2.2]] load balancing front-end for transfer servers and disk-based storage systems. It works on top of  of existing disk-based POSIX-compliant file systems and has been reported so far to work on file systems such as NFS, GPFS, PVFS2, GFS, Ibrix, HFS+, Hadoop, !XrootdFS and Lustre. It also works with any existing file transfer service, such as gsiftp, http, https, bbftp and ftp. 
!BeStMan-Gateway supports subset of  SRM v2.2 on any existing file system without internal queuing or space management. This is a main difference between !BeStMan-Gateway and [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/Bestman][BeStMan -fullmode]].

For general information on storage software architecture, implementations and use, please read [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/StorageInfrastructureSoftware][StorageInfrastractureSoftware]]. For information on planning, installing and validating storage software, please follow this link to [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/StorageSiteAdministrator][StorageSiteAdministrator]].

All procedures presented in this document in general require _root_ privileges.

---+ Engineering Considerations
!BeStMan-Gateway storage could be installed on one node and the installation cache consists of the following components: 
   * !BeStMan-Gateway is an implementation of SRM v2.2 for essential interfaces to disk based storage systems - [[http://sdm.lbl.gov/bestman][BeStMan Home Page]] 
   * !GridFTP server  provides a high-performance, secure, reliable data transfer [[http://www.globus.org/toolkit/docs/4.2/4.2.1/data/gridftp/][GridFTP documentation]]. 
   * optional package
      * Gratia gridftp transfer probe - cron job that reports all the file transfers to [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaSiteCollector Gratia collector]]
   * If you want that !BeStMan to use GUMS for authorization, you should be able to access GUMS server that is installed on your site or install it yourself on a different node following [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS][GUMS Server Installation Guide ]] 
<img src="%ATTACHURLPATH%/bestman_gateway_arch.jpeg" alt="bestman_gateway_arch.jpeg" width='384' height='288' />
 
The following questions should be answered before you can proceed with installation and 
configuration of !BeStMan-Gateway storage solution: 
 
   $ Q. _What authorization mechanism do you prefer?_ : You need to decide if you want to use grid-mapfile or !GUMS server for users’ authentication and authorization. More details about !GUMS could be found at [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS GUMS Installation Guide]]. %BR% %BR% We currently recommend using GUMS as it provides superior flexibility and allows a site to manage all of its mappings in one central location; most large sites use GUMS.
 
   $ Q. _Do you need to support space tokens?_ : !BeStMan-Gateway supports pre-defined, static space tokens that could be included in configuration. It doesn't keep track of the contents in the space with the static space tokens, nor enforce allocations.  If you want to partition your storage space and have a “designated” space for some VOs or users, you can choose to use space tokens. You will have to provide the names and descriptions of the tokens as well as the size of the area.  

   $ Q. _How many !GridFTP servers you will need?_: You can choose to run multiple !GridFTP servers to achieve load balance and better performance. 

   $ Q. _Do you want to enable Gratia gridftp-transfer probes?_ : Yes!  The Gratia gridftp-transfer probes provide OSG-wide storage statistics for accounting, much like the Gratia job accounting.  More details can be found at [[https://twiki.grid.iu.edu/bin/view/Accounting/WebHome  Gratia Home Page]]. The reported information will include the source and destination of transfer, certificate subject of transfer initiator, size and status of the transferred file. %BR% %BR% This probe captures transfer statistics only, hence it needs to be installed on your !GridFTP server.  If you do not run your !GridFTP server and !BeStMan server out of the same VDT installation, you will want to install this probe additionally on your other !GridFTP server nodes.

---+ How to get Help?

If a problem occurs during installation or verification of the service, see [[#DebugInfo][Debugging Information]].

If you cannot resolve the problem, the best way to get help is by following  [[HelpProcedure][this page]]. 

If you cannot find answers, please send all your questions to:
   * osg-storage@opensciencegrid.org
   * srm@lbl.gov

---+ Requirements

   1. [[ReleaseDocumentation/PacmanInstall][pacman]] version >= %PACMAN_VERSION% is required
   1. The server must have a fully qualified domain name and a valid [[ReleaseDocumentation/GetGridCertificates][grid host certificate]] installed in =/etc/grid-security/=
   1. %BESTMAN% server needs to have a valid service certificate. The certificate should be own by a user that is running %BESTMAN%  server.
   1. A working GUMS server or a grid-mapfile are needed for authorization using grid certificates.
   1. The firewall must allow incoming connections to the %BESTMAN%-gateway ports (default:10080,10443)
   1. The firewall must allow incoming connections to the !GridFTP port (default 2811). Outgoing connections must be allowed from high ports ( typically in range 32769-65535 ). We recommend to consult the [[ReleaseDocumentation/ComputeElementFirewalls][Firewall Guide]] if you install the !GridFTP server for the first time.

---+ !BeStMan Installation Procedure
<!-- conventions used in this document
   * Local INST_DIR = /opt/osg-%VERSION%
   * Local BESTMAN_HOST = bestman
   * Local BESTMAN_PROMPT_ROOT=[root@%BESTMAN_HOST% %INST_DIR%-bestman ]
-->
%STARTSECTION{"Installation"}%
The installation procedure consists of the following steps:
   * select the node where  %BESTMAN% will be installed
   * verify existence and permission of a service certificate for %BESTMAN% server
   *  create an installation directory
   * use Pacman to install %BESTMAN%
   * install the CA Certificates and the Certificate Revocation List
   * execute the post installation script 

---++ Verify Service Certificate for %BESTMAN%
By default %BESTMAN% is using a service certificate =/etc/grid-security/http/httpcert.pem= and certificate key =/etc/grid-security/http/httpkey.pem=.  

%ICON{warning}% For the time being  %BESTMAN% should be configured with host certificate in order to be able to handle requests from !LCG-Utils tools. This is mandatory for at least all %BESTMAN% servers that support ATLAS experiment. A lot of users/scripts are using [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/LCGUtils][lcg-utils]] commands to access SE. If %BESTMAN% is configured to use a default (service) certificate then ==lcg-cp== command  fails because the certificate service name (which looks like http/hostname instead of just hostname or host/hostname) doesn't match the hostname.  That is why we do not recommend to configure %BESTMAN% with a service certificate. 

There are two ways to solve this problem:
   * If you don't have a service certificate in the =/etc/grid-security/http== directory then  copy ==hostcert.pem==, ==hostkey.pem== into ==/etc/grid-security/http== and rename these two files to ==httpcert.pem==, ==httpkey.pem== respectively. Change ownership of these files and directory to ==600==.
<pre class="rootscreen">
<code>%UCL_PROMPT_ROOT%cd /etc/grid-security
%UCL_PROMPT_ROOT%mkdir  http
%UCL_PROMPT_ROOT%cp hostcert.pem http/httpcert.pem
%UCL_PROMPT_ROOT%cp hostkey.pem http/httpkey.pem
%UCL_PROMPT_ROOT%chown -R http
%UCL_PROMPT_ROOT%chmod 600 http/httpcert.pem http/httpkey.pem</code>
</pre>
OR  
   * if you are already using a service certificate for some other purpose then create a directory  ==/etc/grid-security/bestmancert== and copy ==hostcert.pem==, ==hostkey.pem== into this directory under these names ==bestmancert.pem==, ==bestmankey.pem== respectively. Change the ownership of these files and directory. You will need to use relevant options to specify the certificate and the certificate key while configuring %BESTMAN%.
<pre class="rootscreen">
<code>%UCL_PROMPT_ROOT%
%UCL_PROMPT_ROOT%cd /etc/grid-security
%UCL_PROMPT_ROOT%mkdir  bestmancert
%UCL_PROMPT_ROOT%cp hostcert.pem bestmancert/bestmancert.pem
%UCL_PROMPT_ROOT%cp hostkey.pem bestmancert/bestmankey.pem
%UCL_PROMPT_ROOT%chown -R bestmancert
%UCL_PROMPT_ROOT%chmod 600 bestmancert/bestmancert.pem  bestmancert/bestmankey.pem</code>
</pre>

---++ Create the  Installation Directory

Next,  create the installation directory and change to this directory.  This directory will be used for installation of all the packages described in this section.
<pre class="rootscreen">
<code>%UCL_PROMPT_ROOT%mkdir -p %INST_DIR%-bestman
%UCL_PROMPT_ROOT%cd %INST_DIR%-bestman/</code>
</pre>

---++ Download %BESTMAN% package
Next, you will need to install %BESTMAN%  in the same directory. If you are using [[InstallConfigureAndManageGUMS][Grid User Management System (GUMS)] as a Grid Identity Mapping Service, you will need to setup _VDT_GUMS_HOST_ environment variable first. If you are using  grid-mapfile, please proceed to [[#SkipThisStep1][the next step]].
<pre class="rootscreen"> 
<code>%BESTMAN_PROMPT_ROOT%export VDT_GUMS_HOST=&lt;GUMS hostname&gt;</code>
</pre>

#SkipThisStep1
Next, execute %LINK_PACMAN% to get the %BESTMAN%  package from the %CACHE% cache. %LINK_PACMAN% will ask whether you want to "trust the caches and accept the license", answer =yall= and =y= to install the %BESTMAN% package. 
<pre class="rootscreen">
<code>%BESTMAN_PROMPT_ROOT%pacman -get %CACHE%:Bestman</code>
</pre>
%TWISTY{%TWISTY_OPTS_OUTPUT%}%
<pre class="rootscreen">
<code>%BESTMAN_PROMPT_ROOT%pacman -get %CACHE%:Bestman</code>

========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.

</pre>
%ENDTWISTY%

To reflect the changes update the environment:
<pre class="rootscreen">
<code>%BESTMAN_PROMPT_ROOT%. setup.sh</code>
</pre>
%ENDSECTION{"Installation"}%
You will have to install CA Certificate and other related packages next. 
%INCLUDE{"ReleaseDocumentation/CaCertificatesInstall" section="InstallACertificateAuthorityPackage"}%
---+++ Post-Install Script
Now run the post installation script:
<pre class="rootscreen">
<code>%BESTMAN_PROMPT_ROOT%vdt-post-install
Starting...
Configuring PRIMA... Done.
Configuring EDG-Make-Gridmap... Done.
Done.</code>
</pre>

This completes the installation of the !BeStMan server. Move to the next section to configure the !BeStMan and !GridFTP servers. You may also choose to configure Gratia transfer probe at this time (see [[#Engineering_Considerations][this section]] for detailed explanation)
If you want to install additional !GridFTP servers on the different nodes, please follow [[GsiFtpStandAlone][this document for !GridFTP server installation]].(see [[#Engineering_Considerations][this section]] for detailed explanation)


---+ !BeStMan-Gateway Configuration

You will need to configure !BeStMan-Gateway first in order to enable it as a service. !BeStMan is recommended to run under non-root account.

The simplest configuration example is shown below. It utilizes all the default values including the default user (in this configuration !BeStMan runs as user ==daemon==) and the default path to certificate and key ( ==/etc/grid-security/http/httpcert.pem==, ==/etc/grid-security/http/httpkey.pem==) that should have the right set of permission and belong to user ==daemon==. See [[#Requirements][Requirements]] for details.

<pre class="rootscreen">
cd &lt;VDT_LOCATION&gt; 
source setup.sh 
$VDT_LOCATION/vdt/setup/configure_bestman --server y --enable-gateway
</pre>

This command will install !BeStMan that will be 
   * running  by user ==daemon==,
   * using certificate  ==/etc/grid-security/http/httpcert.pem== and certificate key ==/etc/grid-security/http/httpkey.pem==
   * listening on secure port 10443 and public port 10080
   * utilizing  gridftp server running on the same host on 2811 port
   * using grid-mapfile for authorization
%ICON{warning}% This configuration command doesn't specify any storage area for !BeStMan , so the user will be able to write files only in the directories where she can access to (e.g ==/tmp==). 

If you don't want to try more complex configuration, you may skip the remaining of this and proceed to the [[#Sudoers_File_Modification][next sub-section]]  about the sudoers file.

The more complex installation example is shown below:
%STARTSECTION{"ComplexConfiguration"}%  
The example below shows how to configure !BeStMan in gateway-mode, enable !GUMS
and space token usage. If you would like to use pre-defined, static space tokens you need to provide a list of  space token names, description and size of space allocated for each token. Keep in mind that in gateway-mode, !BeStMan is not _managing_ the space. 

<pre class="rootscreen">
cd &lt;VDT_LOCATION&gt; 
source setup.sh 
$VDT_LOCATION/vdt/setup/configure_bestman --server y \ 
--user &lt;user&gt; \ 
--cert &lt;service_cert&gt;  \ 
--key  &lt;service_key&gt;  \ 
--http-port  &lt;public_port&gt;  \ 
--https-port  &lt;secured_port&gt;  \ 
--gums-host  &lt;GUMS hostname&gt;  \ 
--gums-port  &lt;GUMS port number&gt;  \ 
--enable-gateway  \ 
--with-allowed-paths "&lt;allowed_dir_list&gt;"  \ 
--with-blocked-paths "&lt;blocked_dir_list&gt;"  \ 
--with-tokens-list  "&lt;TOKEN_1_NAME&gt;[desc:&lt;TOKEN_1_DESC&gt;][&lt;TOKEN_1_SIZE_GB&gt;];&lt;TOKEN_2_NAME&gt;[desc:&lt;TOKEN_2_DESC&gt;][&lt;TOKEN_2_SIZE&gt;]"   \ 
--with-transfer-servers  &lt;GridFTP server list&gt;  
</pre> 
 
Where  _user_ name of the non-privileged user that runs !BeStMan process <br>
_service_cert_  path to service certificate <br>
_service_key_  path to service certificate private key<br> 

%ICON{"warning"}% *The certificate file and key  should belong to the user* - Please, see [[#Requirements][Requirements]]. 

%ICON{warning}%  !BeStMan should be configured with host certificate in order to be able to handle requests from !LCG-Utils tools. This is mandatory for at least all !BeStMan servers that support ATLAS experiment. Normally the OSG !BeStMan implementation uses a service certificate, not a host certificate. This causes lcg-cp to fail because the certificate name (which looks like http/hostname instead of just hostname or host/hostname) doesn't match the hostname. 

<br/>
_public_port_http_ public port (==configure_bestman== default port : 10080) <br/> 
_secured_port_http_ private port (==configure_bestman== default portdefault: 10443) <br/> 
_allowed_dir_list_ list of directories, separated by semicolon, accessible to users. If not specified $VDT_LOCATION/vdt-app-data/bestman/cache directory will be used to store data.<br/>
_blocked_dir_list_ list of directories separated by semicolon, non-accessible to users (default are "/;/etc;/var") . One of the  --with-allowed-paths / --with-blocked-paths options should be used for storage access polity.<br/>
_GUMS hostname_ the name of  !GUMS server, <br/> 
_GUMS port number_ the port of !GUMS  server, <br/>   
token list format: _token_name[KEY:VALUE][token_size_in_GB]_ where:
   * KEY = desc, owner, retention, latency, path, usedBytesCommand. All KEY:VALUE pairs are optional
   * desc = in ATLAS experiment, _desc_ value needs to be the same as the space token name as exampled below.
   * retention available values = CUSTODIAL, OUTPUT, REPLICA. Normally, REPLICA and CUSTODIAL are used.
   * latency  available values = ONLINE, NEARLINE
   * usedBytesCommand = e.g. some custom script or "du -s -b". Its output shall have the available bytes as the first value
   * multiple token names are separated by semi-colon
For example:

"USATLASDATA1[desc:USATLASDATA1][owner:atlas][retention:REPLICA][latency:ONLINE][path:/project/usatlas/data][usedBytesCommand:/usr/bin/du -s -b][120]"



 _GridFTP server list_  is a list !FQDN of your !GridFTP servers, separated by ; . e.g. 
“gsiftp://host1.domain.tld;gsiftp://host2.domain.tld” 
If not specified the local hostname will be used as a name of !GridFTP server.
<br/> 

If you want to use grid-mapfile for user authentication and authorization do not specify  the following options:
 
 --gums-host   %BR%
 --gums-port 
 
If you do not want to use pre-defined, static space tokens, do not specify the following 
options: 

--with-tokens-list 

If you are running your !BeStMan-Gateway on the node that doesn’t have an access to 
your file system, you will have to modify the following attributes in _$VDT_LOCATION/bestman/conf/bestman.rc_
configuration file: 
<pre class="rootscreen"> 
checkSizeWithFS=false 
checkSizeWithGsiftp=true 
</pre>
These options will allow file system access through !GridFTP. However, this requires full GSI delegation from the clients.

%STARTSECTION{"SudoersFile"}%
---++ Sudoers File Modification

%ICON{"warning"}%Please, make the appropriate modification to ==/etc/sudoers== described in the !BeStMan documentation, namely add the following lines to this file: 
<pre class="file">
# Comment out this line, if it is in your ==/etc/sudoers== file (RHEL5+)
#Defaults    requiretty

Cmnd_Alias SRM_CMD = /bin/rm, /bin/mkdir, /bin/rmdir, /bin/mv, /bin/ls 
Runas_Alias SRM_USR = ALL, !root 
&lt;user_name&gt; ALL=(SRM_USR) NOPASSWD: SRM_CMD 
 </pre>

_user_name_ is the account running !BeStMan server process. %BR%
Please keep in mind that this is just an example, you can choose more  be more restrictive policy for your site.
!BeStMan server will not be able to handle user requests, if this step is missed.
%ENDSECTION{"SudoersFile"}%
%ENDSECTION{"ComplexConfiguration"}%


#GridFTP  
---++ !GridFTP  Configuration

!GridFTP server comes with !BeStMan installation. 

If you are using GUMS authorization method, please, copy the following two files from ==$VDT_LOCATION/post-install== to  ==/etc/grid-security==. Otherwise skip this step: 
 <pre class="rootscreen">
cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 
</pre>

If you have a firewall, the open port range for the gridftp should be properly set. In order to do so you will have to modify ==vdt-local-setup.sh== and ==vdt-local-setup.csh==
<pre class="file">
#edit $VDT_LOCATION/vdt/etc/vdt-local-setup.sh 
GLOBUS_TCP_SOURCE_RANGE=&lt;low_port,high_port&gt;
GLOBUS_TCP_PORT_RANGE=&lt;low_port,high_port&gt;
export GLOBUS_TCP_SOURCE_RANGE
export GLOBUS_TCP_PORT_RANGE
</pre>

Where _low_port, high_port_  controls all outbound globus connections for gridftp (e.g 40000,49150)

You can have multiple installation of  !GridFTP servers located on  the nodes you have 
specified in !BeStMan-Gateway configuration (see  [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GsiFtpStandAlone][separate !GridFTP installation]] if you want to install it as a stand-alone server).

You will need to make sure that users have write permissions in to the storage area.  

---+++ Gratia !GridFTP Transfer Probe Configuration

To enable and configure the Gratia !GrdFTP transfer probe for the !GridFTP server that comes with !BeStMan follow the instructions in
 [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]]

---+ Enabling the Services

You can use the _vdt-control -list_ command to see all services that are installed as part of the install, and whether or not they are enabled or disabled. 
You will need to enable the following services:
   * fetch-crl   
   * vdt-rotate-logs  
   * vdt-update-certs       
   * gsiftp           
   * gratia-gridftp-transfer  %ICON{warning}% In case you want to run Gratia !GridFTP transfer probe
   * gums-host-cron   %ICON{warning}% In case you want to run Gratia !GridFTP transfer probe and are using !GUMS for authorization
   * edg-mkgridmap     %ICON{warning}% In case you want to use grid-mapfile for authorization 

You can execute _vdt-control -enable_ command and list all services you want to enable:
<pre class="rootscreen">
cd &lt;VDT_LOCATION&gt;
source setup.sh
vdt-control --enable fetch-crl vdt-rotate-logs vdt-update-certs gsiftp  
</pre> 

If you are using !GUMS or have grid-mapfile and don't want to use automatically generated one, please, skip this section:
<pre class="rootscreen">
cd &lt;VDT_LOCATION>;
source setup.sh
vdt-control -enable edg-mkgridmap
edg/sbin/edg-mkgridmap
</pre> 

---+ Services Startup/Shutdown 

The detailed description of all the options available to start/stop services could be found [[ReleaseDocumentation/StartingServices][here]].
   1. Start !BeStMan  (!GridFTP and Gratia transfer probe). Login on !BeStMan node, then:<pre class="rootscreen">cd  &lt;VDT_LOCATION&gt; 
. setup.sh 
vdt-control --on 
</pre>
   1. Stop !BeStMan (!GridFTP and Gratia transfer probe). Login on !BeStMan node, then: <pre class="rootscreen">cd  &lt;VDT_LOCATION&gt; 
. setup.sh 
vdt-control --off  
</pre> 


---+ Validation of Service Operation 

In order to verify that the system is functional, you will need to have access to srm client commands, be able to create a proxy certificate (_grid-proxy-init_ or _voms_proxy_init_ command) and have access to your certificate and private key.

There are multiple ways of doing this.

---++ Preparing to run srm-client command on the !BeStMan node

Running commands on the node you have just installed !BeStMan. 
   * Login on this node as "yourself'
   * Setup location of !BeStMan installation
<pre class="rootscreen">
cd &lt;VDT_LOCATION&gt;
. setup.sh
</pre>
   * Make sure that you have access to your certificate and private key on that node. You will need it to create a proxy certificate. Execute grid-proxy-init:
<pre class="rootscreen">
grid-proxy-init
Your identity: .....
Enter GRID pass phrase for this identity:
</pre>
   * You will need to add the path to all the srm client commands to your _PATH_ environment variable. You will need to have your proxy certificate created before running SRM client commands.
<pre class="rootscreen">
cd &lt;VDT_LOCATION&gt;
. setup.sh
export PATH=$PATH:$VDT_LOCATION/bestman/bin
</pre>

---++ Preparing to run srm-client command from the different node

Install OSG Client on the node where you have your certificate and key. Instruction are in the  [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/ClientInstallationGuide][OSG Client Installation Guide]]. Then generate a proxy certificate by issuing _grid_proxy_init or _voms_proxy_init_:
<pre class="screen">
. &lt;VDT_LOCATION&gt;/setup.sh
grid-proxy-init
Your identity: .....
Enter GRID pass phrase for this identity:
</pre>

or

<pre class="screen">
. &lt;VDT_LOCATION&gt;/setup.sh
voms-proxy-init -voms  &lt;voms_name&gt;
Enter GRID pass phrase for this identity:
</pre>
Where  _VDT_LOCATION_ is the directory where you installed the client.

---++ Executing SRM-client commands 

After you manage to get your personal proxy certificate created and access to srm client commands, you can verify !BeStMan server installation:

Execute srm-ping: 
<pre class="screen">
 srm-ping srm://&lt;BeStMan_host&gt;:&lt;secured_port_http&gt;/srm/v2/server 
 </pre>

Expected results: 
<pre class="screen">
########################################### 
SRM_HOME is /usr/local/osg-client/srm-client-lbnl 
JAVA_HOME is /usr/local/osg-client/jdk1.5 X509_CERT_DIR = 
/usr/local/osg-client/globus/TRUSTED_CA 
GSI_DAEMON_TRUSTED_CA_DIR = /usr/local/osg-client/globus/TRUSTED_CA 
########################################### 
 
SRM-CLIENT: got remote srm object 
 
SRM-PING: Thu Sep 18 11:55:50 CDT 2008 Calling SrmPing Request... 
Ping versionInfo=v2.2 
 
Extra information 
        Key=backend_type 
        Value=BeStMan 
        Key=backend_version 
        Value=2.2.1.1 
        Key=GatewayMode 
        Value=Enabled 
        Key=gsiftpTxfServers 
        Value=gsiftp://osg-ress-2.fnal.gov 
        Key=clientDN 
        Value=/DC=org/DC=doegrids/OU=People/CN=Tanya Levshina 508821 
        Key=localIDMapped 
        Value=fnalgrid 
        Key=staticToken(0) 
        Value=DISK1 desc=DATA1 size=1073741824 
        Key=staticToken(1) 
        Value=DISK2 desc=DATA2 size=2147483648 
</pre>

If srm-ping is succesful, you can test srm copy. First, create a file 
_“test1”_ in _/tmp_ directory and execute: 
 
<pre class="screen">
srm-copy   file:////tmp/test1 
srm://&lt;BeStMan_host&gt;:&lt;secured_port_http &gt;/srm/v2/server\?SFN=&lt;FS_ROOT_DIR&gt;/test1 -spacetoken &lt;TOKEN_1_NAME>&gt; 
</pre>
 
You should get back something like that: 
<pre class="screen">
########################################### 
SRM_HOME is /usr/local/vdt_client/srm-client-lbnl 
JAVA_HOME is /usr/local/vdt_client/jdk1.5 
X509_CERT_DIR = /etc/grid-security/certificates 
GSI_DAEMON_TRUSTED_CA_DIR = /etc/grid-security/certificates 
########################################### 
SRM-CLIENT: Mon Nov 03 11:32:03 CST 2008 Connecting to 
httpg://fapl118.fnal.gov:8443/srm/v2/server 
SRM-CLIENT: Mon Nov 03 11:32:04 CST 2008 Calling SrmPrepareToPutRequest 
now ... 
request.token=put:5 
status=SRM_SUCCESS 
explanation=null 
 
SRM-CLIENT: RequestFileStatus for SURL=file:////tmp/test1_1 is Ready. 
SRM-CLIENT: received 
TURL=gsiftp://fg0x5.fnal.gov//home/tlevshin/cache/test_4 
>>>Total Memory=17932288 
>>>Free Memory=6875256 
>>>Memory in use=11057032 
 
SRM-CLIENT: Mon Nov 03 11:32:08 CST 2008 start file transfer. 
SRM-CLIENT:Source=file:////tmp/test1_1 
SRM-CLIENT:Target=gsiftp://fg0x5.fnal.gov//home/tlevshin/cache/test_4 
 
SRM-CLIENT: Mon Nov 03 11:32:10 CST 2008 end file transfer. 
 
SRM-CLIENT: Mon Nov 03 11:32:10 CST 2008 Calling putDone for 
srm://fapl118.fnal.gov:8443/srm/v2/server?SFN=/home/tlevshin/cache/test_4 

SRM-CLIENT: Mon Nov 03 11:32:18 CST 2008 end file transfer. 
 
SRM-CLIENT: Mon Nov 03 11:32:18 CST 2008 end file transfer. 
 
SRM-CLIENT: Request completed with success 
 
SRM-CLIENT: Printing text report now ... 
 
SRM-CLIENT*REQUESTTYPE=put 
SRM-CLIENT*TOTALFILES=1 
SRM-CLIENT*TOTAL_SUCCESS=1 
SRM-CLIENT*TOTAL_FAILED=0 
SRM-CLIENT*REQUEST_TOKEN=put:5 
SRM-CLIENT*REQUEST_STATUS=SRM_SUCCESS 
SRM-CLIENT*SOURCEURL[0]=file:////tmp/test1_1 
SRM- CLIENT*TARGETURL[0]=srm://fapl118.fnal.gov:8443/srm/v2/server?SFN=/home/tlevshin/cache/test_4 
SRM-CLIENT*TRANSFERURL[0]=gsiftp://fg0x5.fnal.gov//home/tlevshin/cache/test_4 
SRM-CLIENT*ACTUALSIZE[0]=16 
SRM-CLIENT*FILE_STATUS[0]=SRM_SUCCESS 
SRM-CLIENT*EXPLANATION[0]=SRM-CLIENT: PutDone is called successfully 
ExitCode=0 
</pre>

If you turned on Gratia !GridFTP transfer probes, you should be able to see the accounting information by accessing your Gratia collector. See details in  [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]].

---+ Troubleshooting
---++ File Locations

You could find log and configuration files for each of the module in the following location: 

| *Module Name* |  *Configuration files* | *Log files* | 
|!BeStMan | $VDT_LOCATION/bestman/conf/bestman.rc | $VDT_LOCATION/vdt-app-data/bestman/logs/event.srm.log<br/>$VDT_LOCATION/vdt-app-data/bestman/logs/bestman.log | 
|!GridFTP |$VDT_LOCATION/vdt/services/vdt-run-gsiftp.sh.env| $VDT_LOCATION/globus/var/log/gridftp.log<br/> $VDT_LOCATION/globus/var/log/gridftp-auth.log |

---++ Open Ports

The following ports are opened for the installed services
|*Module Name*|*Port Number*| *Protocol*|
|!BeStMan| 8080 (default 10080)| tcp|
||8443 (default 10443)|tcp|
|!GridFTP|2811|tcp|
||lowPort,maxPort if needed to control outbound globus connections|tcp|  
#DebugInfo
---++ Debugging Procedure

If  system validation got failed, you would probably need to check the each component in order 
to verify your installation. In order to do so, you should check all of them in the following order: 
   * !GUMS (if in use) 
   * !GridFTP 
   * !BeStMan 

---+++ Verifying !GUMS 

Make sure that the service certificate you specified for !BeStMan  configuration with  
--cert &lt;service_cert&gt; , --key  &lt;service_key&gt;  options and !GridFTP service certificate are 
accepted by !GUMS  (see [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS][GUMS Installation Documentation]])   
 
Get mapping _uid_ for your certificate and verify that this _uid_ exists on !BeStMan and !GridFTP node. 
 
---+++ Verifying !GridFTP 

Login on the node where you have installed have your certificate installed and  access to %CACHE%:wn_client or  %CACHE%:client.

You will need to get your _voms-proxy_ or _grid_proxy_ certificate. See [[Validation of Service Operation][this section]] : 

Then test !GridFTP: 
<pre class="screen">
cd $VDT_LOCATION 
. setup.sh 
echo “This is a test” > /tmp/test 
globus-url-copy -dbg file:////tmp/test gsiftp://&lt;GridFtp_host&gt;//tmp/test 
</pre>

Check the !GridFTP logs if you have encountered any errors.

---+++ Verifying !BeStMan-Gateway

Make sure that !BeStMan is running and there is no error in the log file (_$VDT_LOCATION/vdt-app-data/bestman/logs/event.srm.log_)

<pre class="screen">
# ps auxww|grep $VDT_LOCATION/bestman|grep -v grep
daemon   27648  0.0  0.0  4944 1168 pts/2    S    07:46   0:00 /bin/sh /usr/local/osg-bestman/bestman/sbin/bestman.server
daemon   27676  3.3  7.4 715240 155208 pts/2 Sl   07:46   1:59 /usr/local/osg-bestman/jdk1.6/bin/java -server -Xmx512m -Dorg.globus.tcp.port.range=20000,25000 -DX509_CERT_DIR=/usr/local/osg-bestman/globus/TRUSTED_CA -Daxis.ServerConfigFile=/usr/local/osg-bestman/bestman/conf/server-config.wsdd gov.lbl.srm.server.Server /usr/local/osg-bestman/bestman/conf/bestman.rc
</pre>

If !BeStMan is not running check information in that log file _$VDT_LOCATION/vdt-app-data/bestman/logs/bestman.log_.
---+++!!Caveats/Known Issues


---+References

References to additional information.  This document should be as concise as possible, but the reader can use these links if he/she wants more background or information.
   * [[ReleaseDocumentation.Bestman][OSG BeStMan Full Mode page]]
   * [[ReleaseDocumentation.BestmanGatewayXrootd][OSG BeStMan Gateway and Xrootd page]]
   * [[ReleaseDocumentation.BestmanOnCE][OSG BeStMan Gateway on CE page]]
   * [[https://twiki.grid.iu.edu/bin/view/Storage/SEToolsTipsFAQs][Tips and FAQ]]
   * [[ReleaseDocumentation.GratiaTransferProbe][OSG Gratia Transfer Probe page]]
   * [[http://sdm.lbl.gov/bestman][BeStMan Home Page at LBNL]] - [[http://sdm.lbl.gov/bestman/docs/bestman-guide.html][BeStMan User guides]], [[http://sdm.lbl.gov/bestman/docs/bestman-faq.html][BeStMan FAQ]] and latest downloadable tar files available here. Latest downloadables should be the same version as in VDT.
   * [[ReleaseDocumentation.LBNLSrmClient][SRM v2.2 LBNL client command line examples]]
   * [[Storage.SRMTester][SRM-Tester]]
   * [[http://t2.unl.edu/documentation/hadoop/bestman-hdfs][UNL !BeStMan Instruction]]
   * [[http://wt2.slac.stanford.edu/xrootdfs/bestman-gateway.html][SLAC !BeStMan Gateway mode Instruction]] - SLAC guide on !BeStMan gateway mode
   * [[http://www.usatlas.bnl.gov/twiki/bin/view/Admins/BestMan][US ATLAS !BeStMan instruction page]]
   * [[http://hep-t3.physics.umd.edu/HowToForAdmins.html#osginstall][UMD !BeStMan Admin Instruction]] - UMD experience on how to admin !BeStMan
   * [[http://datagrid.lbl.gov/osg][OSG SRM Daily Testing Results]] - OSG provides SRM v2.2 daily testing. Site registration is needed [[http://datagrid.lbl.gov/sitereg][HERE]]
   * [[http://sdm.lbl.gov/srm-wg][SRM specifications and collaboration]] - from SRM collaboration working group
   * [[http://www.globus.org/toolkit/docs/3.2/gridftp][GridFTP Documentation]]
   * [[http://vdt.cs.wisc.edu/index.html][VDT Home Page]] - The information related to current VDT cache, installation and configuration
   * [[https://twiki.grid.iu.edu/twiki/bin/view/Documentation/WebHome OSG documentation Home]] - Numerous documents about storage solutions supported by OSG as well as other useful links


---+Screen Dump of the Complete Install Process 
---++ Basic Installation and Configuration

Below is a screen dump of basic installation and configuration of !BeStMan-Gateway:
   * using grid-mapfile
   * running on default ports
   * using default certificate and key files
   * not configuring storage area 
   * not enabling gratia probe services
%TWISTY%
<pre class="rootscreen">
# cd /usr/local
# cd pacman-3.29
# source setup.sh
# cd ..
# mkdir osg_1.2_bestman
# cd osg_1.2_bestman
# pacman -get http://software.grid.iu.edu/osg-1.2:Bestman
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check...       

All prerequisite checks are satisfied.
                                                                          


========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.

# source setup.sh

# $VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
Setting CA Certificates for VDT installation at '/usr/local/osg_1.2.6_bestman_gridmap'

Setup completed successfully.

# vdt-post-install
Starting...
Configuring PRIMA... Done.
Configuring EDG-Make-Gridmap... Done.
Completed all configuration.

# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | do not enable
vdt-rotate-logs         | cron   | do not enable
vdt-update-certs        | cron   | do not enable
gsiftp                  | inetd  | do not enable
gratia-gridftp-transfer | cron   | do not enable
gums-host-cron          | cron   | do not enable
edg-mkgridmap           | cron   | do not enable


# vdt-version

You have installed a subset of VDT version 2.0.0p13:

Software                                                 Status              
--------                                                 ------              
Berkeley Storage Manager (BeStMan) 2.2.1.3.8             OK                  
vdt-ca-manage 1.1                                        OK                  
vdt-update-certs 2.5                                     OK                  
CA Certificates 1.12 (includes IGTF 1.33 CAs)            -                   
EDG Make Gridmap 3.0.0                                   OK                  
Fetch CRL 2.6.6                                          OK                  
GPT 3.2-4.0.8p1                                          OK                  
Gratia GridFTP Probe 1.06.13b-1                          OK                  
Grid User Management System (GUMS) Client 1.3.17         OK                  
Java 5 SDK 1.5.0_21                                      OK                  
Java 6 SDK 1.6.0_16                                      OK                  
Logrotate 3.7                                            OK                  
PRIMA Authorization Module 0.8.4                         OK                  
pyOpenSSL module 0.9                                     OK                  
VOMS Client 1.8.8-2p1                                    OK                  
Wget 1.11.4                                              OK                  


Status legend:
OK: Software is up to date with the latest release in VDT version 2.0.0
- : Not enough information to determine if updates are available.
See man page for more information.

# osg-version
OSG 1.2.6

# $VDT_LOCATION/vdt/setup/configure_bestman --server y --enable-gateway
# vi /etc/sudoers 
.......
Cmnd_Alias SRM_CMD = /bin/rm, /bin/mkdir, /bin/rmdir, /bin/mv, /bin/ls
Runas_Alias SRM_USR = ALL, !root
daemon ALL=(SRM_USR) NOPASSWD: SRM_CMD


# vdt-control -enable fetch-crl vdt-rotate-logs vdt-update-certs edg-mkgridmap
# edg/sbin/edg-mkgridmap 
# vdt-control -on
</pre>

Login as user:
<pre class="screen">
$ source /usr/local/osg_1.2.6_bestman/setup.sh
$ export PATH=/usr/local/osg_1.2.6_bestman/bestman/bin:$PATH
$ grid-proxy-init 
Your identity: /DC=org/DC=doegrids/OU=People/CN=Tanya Levshina 508821
Enter GRID pass phrase for this identity:
Creating proxy ...................................... Done
Your proxy is valid until: Fri Feb 19 03:27:02 2010
$ srm-ping srm://fg0x5.fnal.gov:10443
srm-ping   2.2.1.3.8   Wed Dec  2 22:54:35 PST 2009
SRM-Clients and BeStMan Copyright(c) 2007-2009,
Lawrence Berkeley National Laboratory. All rights reserved.
Support at SRM@LBL.GOV and documents at http://datagrid.lbl.gov/bestman
 

SRM-CLIENT: SURL does not contains ?SFN 
SRM-CLIENT: serviceHandle /srm/v2/server is taken from the srmclient.conf 
SRM-CLIENT: SFN is assumed as 
SRM-CLIENT: Connecting to serviceurl httpg://fg0x5.fnal.gov:10443/srm/v2/server

SRM-PING: Thu Feb 18 15:27:51 CST 2010  Calling SrmPing Request...
versionInfo=v2.2

Extra information (Key=Value)
backend_type=BeStMan
backend_version=2.2.1.3.8
backend_build_date=2009-12-03T05:09:16.000Z 
gsiftpTxfServers[0]=gsiftp://fg0x5.fnal.gov
GatewayMode=Enabled
clientDN=/DC=org/DC=doegrids/OU=People/CN=Tanya Levshina 508821
localIDMapped=tlevshin

$ echo "This is a test " > /tmp/test

$ srm-copy file:///tmp/test  srm://fg0x5.fnal.gov:10443/srm/v2/server\?SFN=/tmp/test_tanya
srm-copy   2.2.1.3.8   Wed Dec  2 22:54:35 PST 2009
SRM-Clients and BeStMan Copyright(c) 2007-2009,
Lawrence Berkeley National Laboratory. All rights reserved.
Support at SRM@LBL.GOV and documents at http://datagrid.lbl.gov/bestman
 
SRM-CLIENT: Thu Feb 18 15:30:42 CST 2010 Connecting to httpg://fg0x5.fnal.gov:10443/srm/v2/server

SRM-CLIENT: Thu Feb 18 15:30:43 CST 2010 Calling SrmPrepareToPutRequest now ...
request.token=put:0
Request.status=SRM_SUCCESS
explanation=null
SRM-CLIENT: received TURL=gsiftp://fg0x5.fnal.gov//tmp/test_tanya

SRM-CLIENT: Thu Feb 18 15:30:45 CST 2010 start file transfer
SRM-CLIENT:Source=file:////tmp/test
SRM-CLIENT:Target=gsiftp://fg0x5.fnal.gov//tmp/test_tanya

SRM-CLIENT: Thu Feb 18 15:30:47 CST 2010 end file transfer for file:///tmp/test

SRM-CLIENT: Thu Feb 18 15:30:47 CST 2010 Calling putDone for srm://fg0x5.fnal.gov:10443/srm/v2/server?SFN=/tmp/test_tanya
Result.status=SRM_SUCCESS
Result.Explanation=null

SRM-CLIENT: Request completed with success

SRM-CLIENT: Printing text report now ...

SRM-CLIENT*REQUESTTYPE=put
SRM-CLIENT*TOTALFILES=1
SRM-CLIENT*TOTAL_SUCCESS=1
SRM-CLIENT*TOTAL_FAILED=0
SRM-CLIENT*REQUEST_TOKEN=put:0
SRM-CLIENT*REQUEST_STATUS=SRM_SUCCESS
SRM-CLIENT*SOURCEURL[0]=file:///tmp/test
SRM-CLIENT*TARGETURL[0]=srm://fg0x5.fnal.gov:10443/srm/v2/server?SFN=/tmp/test_tanya
SRM-CLIENT*TRANSFERURL[0]=gsiftp://fg0x5.fnal.gov//tmp/test_tanya
SRM-CLIENT*ACTUALSIZE[0]=15
SRM-CLIENT*FILE_STATUS[0]=SRM_SUCCESS
SRM-CLIENT*EXPLANATION[0]=SRM-CLIENT: PutDone is called successfully
</pre>
%ENDTWISTY%

---++Advanced Installation and Configuration

The is a screen dump of basic installation and configuration of !BeStMan:
   * using GUMS for authorization
   * running on specified ports
   * using different certificate and key files
   * specifying a particular  storage area
   * using space tokens 
   * enabling gratia probe services
%TWISTY%
<pre class="rootscreen">
# cd /usr/local
# mkdir osg_1.2.6_bestman
# cd osg_1.2.6_bestman
# export VDT_GUMS_HOST=gums.fnal.gov
# source ../pacman-3.29/setup.sh
# pacman -get http://software.grid.iu.edu/osg-1.2:Bestman
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check...       

All prerequisite checks are satisfied.
                                                                          


========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.



# source setup.sh

#  $VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
Setting CA Certificates for VDT installation at '/usr/local/osg_1.2.6_bestman'

Setup completed successfully.
# vdt-post-install
Starting...
Configuring PRIMA... Done.
Configuring EDG-Make-Gridmap... Done.
Completed all configuration.
# $VDT_LOCATION/vdt/setup/configure_bestman --server y --cert /etc/grid-security/bestman_cert/bestmancert.pem --key /etc/grid-security/bestman_cert/bestmankey.pem --gums-host gums.fnal.gov --gums-port 8443 --with-transfer-servers gsiftp://fg0x5.fnal.gov --with-tokens-list "FermiDATADISK[desc:FERMIDATADISK][9] [retention:CUSTODIAL][latency:ONLINE][usedBytesCommand:/usr/bin/du -s -b /cache]" --http-port 10080 --https-port 10443 --user daemon --with-allowed-paths /cache --enable-gateway


#vi /etc/sudoers 
.......
Cmnd_Alias SRM_CMD = /bin/rm, /bin/mkdir, /bin/rmdir, /bin/mv, /bin/ls
Runas_Alias SRM_USR = ALL, !root
daemon ALL=(SRM_USR) NOPASSWD: SRM_CMD


# cp post-install/prima-authz.conf /etc/grid-security/
# cp post-install/gsi-authz.conf  /etc/grid-security/

# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | do not enable
vdt-rotate-logs         | cron   | do not enable
vdt-update-certs        | cron   | do not enable
gsiftp                  | inetd  | do not enable
gratia-gridftp-transfer | cron   | do not enable
gums-host-cron          | cron   | do not enable
edg-mkgridmap           | cron   | do not enable
bestman                 | init   | enable

# $VDT_LOCATION/vdt/setup/configure_gratia --probe-cron --force-probe-config --site-name FERMI_TEST_1 --report-to gratia-osg-itb.opensciencegrid.org:8881 --probe gridftp-transfer

# vdt-control --enable fetch-crl  vdt-rotate-logs vdt-update-certs  gums-host-cron vdt-update-certs gsiftp gratia-gridftp-transfer
running 'vdt-register-service --name fetch-crl --enable'... ok
running 'vdt-register-service --name vdt-update-certs --enable'... ok
running 'vdt-register-service --name gums-host-cron --enable'... ok
running 'vdt-register-service --name vdt-update-certs --enable'... ok
running 'vdt-register-service --name gsiftp --enable'... ok
running 'vdt-register-service --name gratia-gridftp-transfer --enable'... ok

# vdt-control -on
enabling cron service fetch-crl... ok
skipping cron service 'vdt-rotate-logs' -- marked as disabled
enabling cron service vdt-update-certs... ok
enabling inetd service gsiftp... ok
enabling cron service gratia-gridftp-transfer... ok
enabling cron service gums-host-cron... ok
skipping cron service 'edg-mkgridmap' -- marked as disabled
enabling init service bestman... ok


#mkdir /cache
#chmod 777 /cache
</pre>
Login as user:
<pre class="screen">
$ source /usr/local/osg_1.2.6_bestman/setup.sh
$ export PATH=/usr/local/osg_1.2.6_bestman/bestman/bin:$PATH
$ grid-proxy-init 
Your identity: /DC=org/DC=doegrids/OU=People/CN=Tanya Levshina 508821
Enter GRID pass phrase for this identity:
Creating proxy ...................................... Done
Your proxy is valid until: Fri Feb 19 03:27:02 2010


$  export PATH=/usr/local/osg_1.2.6_bestman/bestman/bin:$PATH
-bash-3.00$  srm-ping srm://fg0x5.fnal.gov:10443
srm-ping   2.2.1.3.8   Wed Dec  2 22:54:35 PST 2009
SRM-Clients and BeStMan Copyright(c) 2007-2009,
Lawrence Berkeley National Laboratory. All rights reserved.
Support at SRM@LBL.GOV and documents at http://datagrid.lbl.gov/bestman
 

SRM-CLIENT: SURL does not contains ?SFN 
SRM-CLIENT: serviceHandle /srm/v2/server is taken from the srmclient.conf 
SRM-CLIENT: SFN is assumed as 
SRM-CLIENT: Connecting to serviceurl httpg://fg0x5.fnal.gov:10443/srm/v2/server

SRM-PING: Thu Feb 18 16:03:46 CST 2010  Calling SrmPing Request...
versionInfo=v2.2

Extra information (Key=Value)
backend_type=BeStMan
backend_version=2.2.1.3.8
backend_build_date=2009-12-03T05:09:16.000Z 
gsiftpTxfServers[0]=gsiftp://fg0x5.fnal.gov
GatewayMode=Enabled
clientDN=/DC=org/DC=doegrids/OU=People/CN=Tanya Levshina 508821
gumsIDMapped=fnalgrid
staticToken(0)=FermiDATADISK desc=FERMIDATADISK size=9663676416

$ srm-copy file:///tmp/test  srm://fg0x5.fnal.gov:10443/srm/v2/server\?SFN=/cache/fnalgrid/test_tanya  -mkdir
srm-copy   2.2.1.3.8   Wed Dec  2 22:54:35 PST 2009
SRM-Clients and BeStMan Copyright(c) 2007-2009,
Lawrence Berkeley National Laboratory. All rights reserved.
Support at SRM@LBL.GOV and documents at http://datagrid.lbl.gov/bestman
 
SRM-CLIENT: Thu Feb 18 16:23:08 CST 2010 Connecting to httpg://fg0x5.fnal.gov:10443/srm/v2/server

SRM-CLIENT: Thu Feb 18 16:23:08 CST 2010 Calling SrmPrepareToPutRequest now ...
request.token=put:2
Request.status=SRM_SUCCESS
explanation=null
SRM-CLIENT: received TURL=gsiftp://fg0x5.fnal.gov//cache/fnalgrid/test_tanya

SRM-CLIENT: Thu Feb 18 16:23:10 CST 2010 start file transfer
SRM-CLIENT:Source=file:////tmp/test
SRM-CLIENT:Target=gsiftp://fg0x5.fnal.gov//cache/fnalgrid/test_tanya

SRM-CLIENT: Thu Feb 18 16:23:13 CST 2010 end file transfer for file:///tmp/test

SRM-CLIENT: Thu Feb 18 16:23:13 CST 2010 Calling putDone for srm://fg0x5.fnal.gov:10443/srm/v2/server?SFN=/cache/fnalgrid/test_tanya
Result.status=SRM_SUCCESS
Result.Explanation=null

SRM-CLIENT: Request completed with success

SRM-CLIENT: Printing text report now ...

SRM-CLIENT*REQUESTTYPE=put
SRM-CLIENT*TOTALFILES=1
SRM-CLIENT*TOTAL_SUCCESS=1
SRM-CLIENT*TOTAL_FAILED=0
SRM-CLIENT*REQUEST_TOKEN=put:2
SRM-CLIENT*REQUEST_STATUS=SRM_SUCCESS
SRM-CLIENT*SOURCEURL[0]=file:///tmp/test
SRM-CLIENT*TARGETURL[0]=srm://fg0x5.fnal.gov:10443/srm/v2/server?SFN=/cache/fnalgrid/test_tanya
SRM-CLIENT*TRANSFERURL[0]=gsiftp://fg0x5.fnal.gov//cache/fnalgrid/test_tanya
SRM-CLIENT*ACTUALSIZE[0]=15
SRM-CLIENT*FILE_STATUS[0]=SRM_SUCCESS
SRM-CLIENT*EXPLANATION[0]=SRM-CLIENT: PutDone is called successfully
</pre>

%ENDTWISTY%

%STOPINCLUDE%


---+ *Comments*

|Under 'Create an installation directory', I see what was probably an errant search/replace. <verbatim>Create a directory, e.g. /opt/http://software.grid.iu.edu/osg-1.2-bestman.</verbatim>| Main.SarahWilliams | 31 Jul 2009 - 20:18|Fixed - Main.TanyaLevshina|
|Under 'Download BeStMan-Gateway', the 'Pacman' link goes to the ITB092 rather than ReleaseDocumentation version of PacmanBestPractices| Main.SarahWilliams |31 Jul 2009 - 20:18|Fixed - Main.TanyaLevshina|
|Under 'Support', the FAQ link is broken. | Main.SarahWilliams |31 Jul 2009 - 20:18|Fixed - Main.TanyaLevshina|
| Style nit-picks: under 'Configuring BeStMan-gateway ', the allow/block paths options use =, the rest use a space. Also, there are extra spaces at the end of each of the configure command lines, so copy/paste does not work. | Main.SarahWilliams |31 Jul 2009 - 21:01|Fixed - Main.TanyaLevshina|
| Under 'Downloading BeStMan-Gateway', the list of services I see at that step is different that what is in the doc. Especially, Bestman is missing. It doesn't appear until configure is run | Main.SarahWilliams | 31 Jul 2009 - 21:09 |Fixed - Main.TanyaLevshina|
| Under 'System Validation', in the srm-copy command there is a stray .gov . | Main.SarahWilliams |31 Jul 2009 - 20:18|Fixed - Main.TanyaLevshina|
| Under &#39;System Validation&#39;, the &#39;configure CA package updates. &#39; needs to be grouped with the &#39;Otherwise&#39; option above. | Main.RobSnihur | 12 Feb 2010 - 20:51 |Fixed - Main.TanyaLevshina|
| Just before the heading &#34;BeStMan-Gateway Configuration&#34;, there is a broken link.  I&#39;m not sure if it was supposed to point to the next section or to the similar section in the Bestman document.  If it just points to the following section, I would remove it.  Otherwise, the #anchor will need to be added to the Bestman document. (The ! is not needed for anchors.) | Main.JamesWeichel | 03 Mar 2010 - 20:00 |Fixed - Main.TanyaLevshina|
%COMMENT{type="tableappend"}%
 

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = TanyaLevshina

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Storage

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = AlexSim
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = MarcoMambelli
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################
-->

%META:FILEATTACHMENT{name="bestman_gateway_arch.jpeg" attachment="bestman_gateway_arch.jpeg" attr="" comment="BeStMan-gateway architecture" date="1234996663" path="bestman_gateway_arch.jpeg" size="9978" stream="bestman_gateway_arch.jpeg" tmpFilename="/usr/tmp/CGItemp8720" user="TanyaLevshina" version="1"}%
%META:FILEATTACHMENT{name="bestman-gateway-howitworks.jpg" attachment="bestman-gateway-howitworks.jpg" attr="" comment="BeStMan-Gateway - How it works" date="1237491448" path="bestman-gateway-howitworks.jpg" size="50852" stream="bestman-gateway-howitworks.jpg" tmpFilename="/usr/tmp/CGItemp6374" user="AlexSim" version="1"}%
