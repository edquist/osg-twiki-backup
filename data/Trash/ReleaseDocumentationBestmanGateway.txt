%META:TOPICINFO{author="AlexSim" date="1237493834" format="1.1" reprev="1.12" version="1.12"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

%STARTINCLUDE%
%BR%
---++ Introduction
 !BeStMan-gateway, developed by the Scientific Data Management Group of Lawrence Berkeley National Laboratory, is a generic SRM v2.2 load balancing frontend for transfer servers. It works on top of existing disk-based POSIX-compliant file systems, and has been reported so far to work on file systems such as NFS, GPFS, PVFS2, GFS, Ibrix, HFS+, Hadoop, XrootdFS and Lustre. It also works with any existing file transfer service, such as gsiftp, http, https, bbftp and ftp.
This document is written for system administrators who are planning to use storage that is installed on top of a POSIX-compliant file system.  The goal of this document is to give enough information for system administrators to do initial simple configuration of the storage as well as provide references to the documents that may help to accomplish more sophisticated configuration. 

See also [[Bestman][BeStMan Full mode]] for more information about !BeStMan full mode installation and  [[BestmanGatewayXrootd][BeStManGateway-Xrootd]] for more information about !BeStManGateway-Xrootd.

%BR%

---++ Recommended Architecture 
!BeStMan-Gateway storage consists of the following components: 
   * !BeStMan-Gateway is an implementation of SRM v2.2, developed by LBNL, for essential interfaces to disk based storage systems - [[http://datagrid.lbl.gov/bestman][BeStMan Home Page]] 
   * !GridFTP server  provides a high-performance, secure, reliable data transfer [[http://www.globus.org/toolkit/docs/3.2/gridftp][GridFTP documentation]]
   * POSIX-compliant file system
   * optional package
      * Gratia gridftp transfer probe - cron job that reports all the file transfers to [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaSiteCollector Gratia collector]]
      * GUMS server - authentication and authorization service

     <img src="%ATTACHURLPATH%/bestman_gateway_arch.jpeg" alt="bestman_gateway_arch.jpeg" width='384' height='288' />

   * How it works
%BR%
     <img src="%ATTACHURLPATH%/bestman-gateway-howitworks.jpg" alt="bestman_gateway_how_it_works.jpeg"  />    

---++ Configuration decisions 
 
The following questions should be answered before you can proceed with installation and 
configuration of !BeStMan-Gateway storage solution: 
 
Q. _How many nodes could be used for storage?_ 
    
  The absolute minimum number of nodes is 1: 
Usually one would prefer to separate !GridFTP from !BeStMan for better 
performance.   Also, you may want to  have multiple !GridFTP server. The decision 
should be based on your load and storage requirements.  
 
Q. _What authorization mechanism do you prefer?_ 
 
You have to decide if you want to use grid-map-file or !GUMS server for users’ 
authentication and authorization. 
More details about !GUMS could be found at 
[[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS GUMS Installation Guide]]  
 
Q. _Do you need to support space tokens?_  

!BeStMan-gateway supports predefined, static space tokens that should be 
included in configuration. It doesn't keep trace or enforce static space tokens.  If 
you want partition your storage space and have a “designated” space for some 
VOs or users you can choose to use space tokens. You will have to decide the 
names and descriptions of the tokens as well as the size of the area.  

Q. _Do you want to enable Gratia gridftp-transfer probes?_

If you want to report all the transfers in and out of your storage you would need to install or enable Gratia gridftp-transfer probes. More details should be found at [[https://twiki.grid.iu.edu/bin/view/Accounting/WebHome  Gratia Home Page]]. The reported information will include the source and destination of transfer, certificate subject of transfer initiator, size and status of the transferred file.  

---++ !BeStMan-gateway Installation
 
!BeStMan-gateway implements a subset of !SRM v2.2 specifications that includes: 
   *  !srmPing() 
   *  !srmGetTransferProtocols() 
   *  !srmLs()  
   *  !srmRm()  
   *  !srmMkdir()  
   *  !srmRmdir() 
   *  !srmPrepareToPut()  
   *  !srmPrepareToGet()  
   *  !srmPutDone()  
   *  !srmReleaseFiles()  
   *  !srmGetSpaceTokens() 
   *  !srmGetSpaceMetaData()  

Some of the above mentioned specs are just partially implemented. 
For more information see [[http://wt2.slac.stanford.edu/xrootdfs/bestman-gateway.html BeStMan gateway Home Page]] 

---+++ Create an installation directory
Create a directory, e.g.  /opt/%CACHE%-bestman. Make sure there are no non-standard versions of perl, python, tcsh, or bash in your $PATH variable. 
We will refer to this directory as _&lt;VDT_LOCATION&gt;_. 

---+++ Downloading !BeStMan-gateway 
The installation described here is done as root even though services does not  run as root:


%ICON{"warning"}% A few questions regarding trust of the caches from which the software is downloaded will be displayed.
      Please answer y (yes) so that the software can be retrieved. If you do not want to use grid-map file to set up the mappings from global identities (user certificate names) to local accounts please answer n (no) to the following question:
<pre>
Do you want edg-mkgridmap daemon to be run via cron? [y/n] n
</pre>


See the [[https://twiki.grid.iu.edu/bin/view/Integration/ITB092/PacmanBestPractices][Pacman]] guide if you encounter an 'unsupported' platform message. 

<pre class="screen"> 
cd &lt;VDT_LOCATION&gt;
export VDT_GUMS_HOST=&lt;GUMS hostname&gt;      # if you want to use GUMS for GridFtp and Gratia GridFTP probe authorization
pacman -get %CACHE%:Bestman 
</pre>


To check what services have been installed on your node you can do:

<pre class="screen"> 
cd &lt;VDT_LOCATION&gt;
. setup.sh
 vdt-control --list

Service            | Type   | Desired State
-------------------+--------+--------------
fetch-crl          | cron   | enable
vdt-rotate-logs    | cron   | enable
vdt-update-certs   | cron   | enable
gsiftp             | inetd  | enable
gratia-gridftp-tran| cron   | do not enable
bestman            | init   | enable
edg-mkgridmap      | cron   | do not enable
gums-host-cron     | cron   | do not enable
</pre>


 %ICON{"warning"}% Follow the instructions provided in _$VDT_LOCATION/post-install/README_ to configure CA package updates.

---+++ Configuring !BeStMan-gateway 
You will need to configure !BeStMan to enable gateway-mode. You have to decide if you 
would like to use static space token reservation, and in this case to come up with a list of 
token names, description and size of space allocated for each token. Keep in mind that in 
gateway-mode !BeStMan is not managing your space. 

  
The example below shows how to configure !BeStMan in gateway-mode, enable !GUMS
and space token usage: 
<pre class="screen">
cd &lt;VDT_LOCATION&gt; 
. setup.sh 
$VDT_LOCATION/vdt/setup/configure_bestman --server y \ 
 --user &lt;user&gt; \ 
 --cert &lt;service_cert&gt;  \ 
 --key  &lt;service_key&gt;  \ 
 --http-port  &lt;public_port&gt;  \  
 --https-port  &lt;secured_port&gt;  \ 
 --gums-host  &lt;GUMS hostname&gt;  \ 
 --gums-port  &lt;GUMS port number&gt;  \ 
 --gums-dn  &lt;Client DN for GUMS interface&gt;  \ 
 --enable-gateway  \ 
 --with-allowed-paths="&lt;allowed_dir_list&gt;"  \ 
 --with-blocked-paths="&lt;blocked_dir_list&gt;"  \ 
 --with-tokens-list  "&lt;TOKEN_1_NAME&gt;[desc:&lt;TOKEN_1_DESC&gt;][&lt;TOKEN_1_SIZE_GB&gt;];&lt;TOKEN_2_NAME&gt;[desc:&lt;TOKEN_2_DESC&gt;][&lt;TOKEN_2_SIZE&gt;]"   \ 
 --with-transfer-servers  &lt;GridFTP server list&gt;  
</pre> 
 
Where  _user_ name of the non-privileged user that runs !BeStMan, <br/>
_service_cert_  path to service certificate (the certificate file should belong to the _user_)<br/>
_service_key_  path to service certificate private key (the certificate key file should belong to the _user_). Currently some clients (lcg-utils tool) require that service certificate is a host certificate <br/>
_public_port_ http public port (default : 10080;commonly used port is 8080 unless there is a conflict) <br/> 
_secured_port_ http private port (default: 10443;commonly used port is 8443 unless there is a conflict) <br/> 
_allowed_dir_list_ list of directories, separated by semicolon, accessible to users <br/>
_blocked_dir_list_ list of directories separated by semicolon, non-accessible to users (default are "/;/etc;/var") . One of the  --with-allowed-paths / --with-bloacked-paths options should be used.<br/>
_GUMS hostname_ the name of  !GUMS server, <br/> 
_GUMS port number_ the port of !GUMS  server, <br/>   
_Client DN for GUMS_ interface is a service certificate subject. To get _Client DN for GUMS_ execute<br/> 
<pre>
openssl x509 -subject -noout -in &lt;_service_cert_&gt; 
</pre>
token list example: <br/>
"ATLASDATADISK[desc:ATLASDATADISK][40000];ATLASPRODDISK[desc:ATLASPRODDISK][30000];ATLASGROUPDISK[desc:ATLASGROUPDISK][30000]"

 _GridFTP server list_  is a list !FQDN of your !GridFTP servers, separated by ; . e.g. 
“gsiftp://host1.domain.tld;gsiftp://host2.domain.tld” <br/> 

If you want to use grid-map-file for user authentication and authorization do not specify 
the following options:
 
 --gums-host   

 --gums-port 

 --gums-dn   
 
If you do not want to use statically reserved space tokens do not specify the following 
options: 

--with-tokens-list 

Please, make the appropriate modification to _/etc/sudoers_ described in !BeStMan 
documentation, namely add the following lines to this file: 
<pre class="screen">
Cmnd_Alias SRM_CMD = /bin/rm, /bin/mkdir, /bin/rmdir, /bin/mv, /bin/ls 
Runas_Alias SRM_USR = ALL, !root 
&lt;user_name&gt; ALL=(SRM_USR) NOPASSWD: SRM_CMD 
 </pre>
Please keep in mind that this is just an example, you can choose more  be more restrictive policy for your site.

If you are running your !BeStMan-gateway on the node that doesn’t have an access to 
your FS you will have to modify the following attributes in _$VDT_LOCATION/bestman/conf/bestman.rc_
configuration file: 
<pre class="screen"> 
checkSizeWithFS=false 
checkSizeWithGsiftp=true 
</pre>


---+++ Configuring !GridFTP 
!GridFTP server comes with !BeStMan installation. 
If you want to use the grid-map-file for user authentication and authorization ignore the 
rest of this section. 
Copy two files from _$VDT_LOCATION/post-install_ to in _/etc/grid-security_: 
 
<pre class="screen">
cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 
</pre>
 
You can have multiple installation of  !GridFTP servers located on  the nodes you have 
specified in !BeStMan-gateway configuration (see section about standalone !GridFTP installation if you want to install it as a standalone server).

You will need to make sure that users have write permission in to the storage area.  

---+++ Gratia !Gridftp Transfer Probe
If you are using !GridFTP server that is installed during the !BeStMan installation you will need  to enable,configure Gratia !GrdFTP transfer probe and perform the actions described in
 [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]]


---++ Installation of standalone !GridFTP 
 
If you want to use several !GridFTP servers (e.g for load balancing) you will need to install !GridFTP on each dedicated node. In order to that 
Create a directory, e.g.  /opt/%CACHE%-gridftp. Make sure there are no non-standard versions of perl, python, tcsh, or bash in your $PATH variable. 
We will refer to this directory as _&lt;VDT_LOCATION&gt;_. 
 
The installation described here is done as root:

    * A few questions regarding trust of the caches from which the software is downloaded will be displayed.
      Please answer y (yes) so that the software can be retrieved. If you do not want to use grid-map file to set up the mappings from global identities (user certificate names) to local accounts please answer n (no) to the following question:
<pre>
Do you want edg-mkgridmap daemon to be run via cron? [y/n] n
</pre>


<pre class="screen">
cd &lt;VDT_LOCATION&gt;
. setup.sh
export VDT_GUMS_HOST=&lt;GUMS hostname&gt;   # if you want to use GUMS for GridFTP authorization
pacman -get %CACHE%:Gratia-GridFTP
</pre>
 
Where _GUMS hostname_ is a !GUMS server and   
_&lt;VDT_LOCATION&gt;_  is a root directory of %CACHE% installation. 
 
Then copy two files from _$VDT_LOCATION/post-install_ to in _/etc/grid-security_: 
 
<pre class="screen">
cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 
</pre>

Follow the instructions provided in _$VDT_LOCATION/post-install/README_ to configure CA package updates. 

You will need to make sure that users have write permission in to the storage area.  

---+++ Gratia !GridFTP Transfer Probe
If you are using standalone !GridFTP server you will need  to enable, configure Gratia !GridFTP transfer probe and perform the actions described in
 [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]]



 
---++ Start the system 
You have to be root to start each service. You have to start all the components in the 
following order (this is order is optional but seems logical): 
   1. Start !BeStMan  (!GridFtp and Gratia transfer probe). Login on !BeStMan node, then:<pre class="screen">cd  &lt;VDT_LOCATION&gt; 
. setup.sh 
vdt-control –on 
</pre>
   1. Start standalone !GridFTP and Gratia transfer probe.  Login on each !GridFTP node, then:<pre class="screen">cd  &lt;VDT_LOCATION&gt; 
. setup.sh 
vdt-control –on 
</pre> 
 

---++ Stop the system 
You have to be root to stop each service. You have to stop all the components in the 
following order (this is order is optional but seems logical):  
   1. Stop !BeStMan (!GridFtp and Gratia transfer probe). Login on !BeStMan node, then: <pre class="screen">cd  &lt;VDT_LOCATION&gt; 
. setup.sh 
vdt-control –off  
</pre> 
   1. Stop standalone !GridFtp and Gratia transfer probe. Login on each !GridFTP node, then: <pre class="screen">cd  &lt;VDT_LOCATION&gt; 
. setup.sh 
vdt-control –off  
</pre>
---++ System sanity check 
In order to verify that the system is functional you may use LBNL srm client that is installed with !BeStMan or if you want to install srm-client on different node you will need to download it from %CACHE%:

<pre class="screen">
mkdir /opt/%CACHE%_wn_client 
cd  /opt/%CACHE%_wn_client 
pacman pacman -get %CACHE%:wn_client 
. setup.sh 
</pre>


Follow the instructions provided in _$VDT_LOCATION/post-install/README_ to configure CA package updates.

You will need to get your voms-proxy certificate: 
<pre class="screen">
voms-proxy-init –voms &lt;voname&gt;:/&lt;voname&gt; 
</pre>

Execute srm-ping: 
<pre class="screen">
 srm-ping srm://&lt;BeStMan_host&gt;:8443/srm/v2/server 
 </pre>

Expected results: 
<pre class="screen">
########################################### 
SRM_HOME is /usr/local/osg-client/srm-client-lbnl 
JAVA_HOME is /usr/local/osg-client/jdk1.5 X509_CERT_DIR = 
/usr/local/osg-client/globus/TRUSTED_CA 
GSI_DAEMON_TRUSTED_CA_DIR = /usr/local/osg-client/globus/TRUSTED_CA 
########################################### 
 
SRM-CLIENT: got remote srm object 
 
SRM-PING: Thu Sep 18 11:55:50 CDT 2008 Calling SrmPing Request... 
Ping versionInfo=v2.2 
 
Extra information 
        Key=backend_type 
        Value=BeStMan 
        Key=backend_version 
        Value=2.2.1.1 
        Key=GatewayMode 
        Value=Enabled 
        Key=gsiftpTxfServers 
        Value=gsiftp://osg-ress-2.fnal.gov 
        Key=clientDN 
        Value=/DC=org/DC=doegrids/OU=People/CN=Tanya Levshina 508821 
        Key=localIDMapped 
        Value=fnalgrid 
        Key=staticToken(0) 
        Value=DISK1 desc=DATA1 size=1073741824 
        Key=staticToken(1) 
        Value=DISK2 desc=DATA2 size=2147483648 
 </pre>

If you have reasonable result you may try to srm copy. In order to do so create a file 
_“test1”_ in _/tmp_ directory and execute: 
 
<pre class="screen">
srm-copy   file:////tmp/test1 
srm://&lt;BeStMan_host&gt;.gov:8443/srm/v2/server\?SFN=&lt;FS_ROOT_DIR&gt;/test1 -spacetoken &lt;TOKEN_1_NAME>&gt; 
</pre>
 
You should get back something like that: 
<pre class="screen"> 
srm-copy   file:////tmp/test1_1 srm://fapl118.fnal.gov:8443/srm/v2/server\?SFN=/home/tlevshin/cache/test_4 -spacetoken DISK1 
########################################### 
SRM_HOME is /usr/local/vdt_client/srm-client-lbnl 
JAVA_HOME is /usr/local/vdt_client/jdk1.5 
X509_CERT_DIR = /etc/grid-security/certificates 
GSI_DAEMON_TRUSTED_CA_DIR = /etc/grid-security/certificates 
########################################### 
SRM-CLIENT: Mon Nov 03 11:32:03 CST 2008 Connecting to 
httpg://fapl118.fnal.gov:8443/srm/v2/server 
SRM-CLIENT: Mon Nov 03 11:32:04 CST 2008 Calling SrmPrepareToPutRequest 
now ... 
request.token=put:5 
status=SRM_SUCCESS 
explanation=null 
 
SRM-CLIENT: RequestFileStatus for SURL=file:////tmp/test1_1 is Ready. 
SRM-CLIENT: received 
TURL=gsiftp://fg0x5.fnal.gov//home/tlevshin/cache/test_4 
>>>Total Memory=17932288 
>>>Free Memory=6875256 
>>>Memory in use=11057032 
 
SRM-CLIENT: Mon Nov 03 11:32:08 CST 2008 start file transfer. 
SRM-CLIENT:Source=file:////tmp/test1_1 
SRM-CLIENT:Target=gsiftp://fg0x5.fnal.gov//home/tlevshin/cache/test_4 
 
SRM-CLIENT: Mon Nov 03 11:32:10 CST 2008 end file transfer. 
 
SRM-CLIENT: Mon Nov 03 11:32:10 CST 2008 Calling putDone for 
srm://fapl118.fnal.gov:8443/srm/v2/server?SFN=/home/tlevshin/cache/test_4 

SRM-CLIENT: Mon Nov 03 11:32:18 CST 2008 end file transfer. 
 
SRM-CLIENT: Mon Nov 03 11:32:18 CST 2008 end file transfer. 
 
SRM-CLIENT: Request completed with success 
 
SRM-CLIENT: Printing text report now ... 
 
SRM-CLIENT*REQUESTTYPE=put 
SRM-CLIENT*TOTALFILES=1 
SRM-CLIENT*TOTAL_SUCCESS=1 
SRM-CLIENT*TOTAL_FAILED=0 
SRM-CLIENT*REQUEST_TOKEN=put:5 
SRM-CLIENT*REQUEST_STATUS=SRM_SUCCESS 
SRM-CLIENT*SOURCEURL[0]=file:////tmp/test1_1 
SRM- CLIENT*TARGETURL[0]=srm://fapl118.fnal.gov:8443/srm/v2/server?SFN=/home/tlevshin/cache/test_4 
SRM-CLIENT*TRANSFERURL[0]=gsiftp://fg0x5.fnal.gov//home/tlevshin/cache/test_4 
SRM-CLIENT*ACTUALSIZE[0]=16 
SRM-CLIENT*FILE_STATUS[0]=SRM_SUCCESS 
SRM-CLIENT*EXPLANATION[0]=SRM-CLIENT: PutDone is called successfully 
ExitCode=0 
</pre> 

If you turn on Gratia !GridFTP transfer probes you should be able to see the accounting information by accessing your Gratia collector. See details in  [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]].

---++ Troubleshooting 
 
If   sanity checks failed you would probably need to check the each component in order 
to verify what went wrong with your installation. In order to do so you should ,probably, 
check all them in the following order: 
   * !GUMS (if in use) 
   * !GridFTP 
   * !BeStMan 

---+++ Verifying !GUMS 
Make sure that the service certificate you are specified for !BeStMan  configuration with  
--cert &lt;service_cert&gt; , --key  &lt;service_key&gt;  options and !GridFTP service certificate are 
accepted by !GUMS  (see [[http://vdt.cs.wisc.edu/releases/1.10.1/notes/GUMS.html GUMS Installation Documentation]])   
 
Get mapping _uid_ for your certificate and verify that this _uid_ exists on !BeStMan and !GridFTP node. 
 
---+++ Verifying !GridFTP 
Login on the node where you have installed !BeStMan 
<pre class="screen">
cd $VDT_LOCATION 
. setup.sh 
echo “This is a test” >/tmp/test 
globus-url-copy –vb file:///tmp/test gsiftp://&lt;GridFtp_host&gt;/tmp/test 
</pre>

---+++ Verifying !BeStMan
Make sure that !BeStMan is running and there is no error in the log file (_$VDT_LOCATION/vdt-app-data/bestman/logs/event.srm.log_)

<pre class="screen">
[root@cmswn085 itb_bestman]# ps auxww|grep $VDT_LOCATION/bestman|grep -v grep
daemon   27648  0.0  0.0  4944 1168 pts/2    S    07:46   0:00 /bin/sh /usr/local/itb_bestman/bestman/sbin/bestman.server
daemon   27676  3.3  7.4 715240 155208 pts/2 Sl   07:46   1:59 /usr/local/itb_bestman/jdk1.6/bin/java -server -Xmx512m -Dorg.globus.tcp.port.range=20000,25000 -DX509_CERT_DIR=/usr/local/itb_bestman/globus/TRUSTED_CA -Daxis.ServerConfigFile=/usr/local/itb_bestman/bestman/conf/server-config.wsdd gov.lbl.srm.server.Server /usr/local/itb_bestman/bestman/conf/bestman.rc
</pre>


---++ List of utilized ports
|*Module Name*|*Port Number*| *Protocol*|
|!BeStMan| 8080 (default 10080)| tcp|
||8443 (default 10443)|tcp|
|!GridFTP|2811|tcp|
||lowPort,maxPort if needed to control outbound globus connections|tcp|  

---++ Log file and configuration locations 
If any of the tests described above have failed or you are just curious to see what’s going 
on you could find log and configuration files for each of the module in the following 
location on a relevant node: 

| *Module Name* |  *Configuration files* | *Log files* | 
|!BeStMan | $VDT_LOCATION/bestman/conf/bestman.rc | $VDT_LOCATION/vdt-app-data/betsman/logs/event.srm.log| 
|!GridFTP |$VDT_LOCATION/vdt/services/vdt-run-gsiftp.sh.env| $VDT_LOCATION/globus/var/log/gridftp.log<br/> $VDT_LOCATION/globus/var/log/gridftp-auth.log |
 
  
---++ Reference
   * [[Integration.ITB092.Bestman][OSG BeStMan Full Mode page]]
   * [[Integration.ITB092.BestmanGatewayXrootd][OSG BeStMan Gateway and Xrootd page]]
   * [[Integration.ITB092.BestmanOnCE][OSG BeStMan Gateway on CE page]]
   * [[Integration.ITB092.GratiaTransferProbe][OSG Gratia Transfer Probe page]]
   * [[http://datagrid.lbl.gov/bestman][BeStMan Home Page at LBNL]] - [[http://datagrid.lbl.gov/bestman/docs/bestman-guide.html][BeStMan User guides]], [[http://datagrid.lbl.gov/bestman/docs/bestman-faq.html][BeStMan FAQ]] and latest downloadable tar files available here. Latest downloadables should be the same version as in VDT.
   * [[Storage.SRMv2Client][SRM v2.2 LBNL client command line examples]]
   * [[Storage.SRMTester][SRM-Tester]]
   * [[http://t2.unl.edu/documentation/hadoop/bestman-hdfs][UNL !BeStMan Instruction]]
   * [[http://wt2.slac.stanford.edu/xrootdfs/bestman-gateway.html][SLAC !BeStMan Gateway mode Instruction]] - SLAC guide on !BeStMan gateway mode
   * [[http://www.usatlas.bnl.gov/twiki/bin/view/Admins/BestMan][US ATLAS !BeStMan instruction page]]
   * [[http://hep-t3.physics.umd.edu/HowToForAdmins.html#osginstall][UMD !BeStMan Admin Instruction]] - UMD experience on how to admin !BeStMan
   * [[http://datagrid.lbl.gov/osg][OSG SRM Daily Testing Results]] - OSG provides SRM v2.2 daily testing. Site registration is needed [[http://datagrid.lbl.gov/sitereg][HERE]]
   * [[http://sdm.lbl.gov/srm-wg][SRM specifications and collaboration]] - from SRM collaboration working group
   * [[http://www.globus.org/toolkit/docs/3.2/gridftp][GridFTP Documentation]]
   * [[http://vdt.cs.wisc.edu/index.html][VDT Home Page]] - The information related to current VDT cache, installation and configuration
   * [[https://twiki.grid.iu.edu/twiki/bin/view/Documentation/WebHome OSG documentation Home]] - Numerous documents about storage solutions supported by OSG as well as other useful links
 
---++ Support
   * [[https://twiki.grid.iu.edu/bin/view/Documentation/SETools%2cTips%2cFAQs the FAQ section][Frequently Asked Questions answered here]] 
   * If you cannot find answers, please send all your questions to osg-storage@opensciencegrid.org  
 
%STOPINCLUDE%
%BR%
%COMPLETE1% %BR%
%RESPONSIBLE% Main.TanyaLevshina - 18 Feb 2009 %BR%
%REVIEW% Main.AlexSim - 19 March 2009 

%META:FILEATTACHMENT{name="bestman_gateway_arch.jpeg" attachment="bestman_gateway_arch.jpeg" attr="" comment="BeStMan-gateway architecture" date="1234996663" path="bestman_gateway_arch.jpeg" size="9978" stream="bestman_gateway_arch.jpeg" tmpFilename="/usr/tmp/CGItemp8720" user="TanyaLevshina" version="1"}%
%META:FILEATTACHMENT{name="bestman-gateway-howitworks.jpg" attachment="bestman-gateway-howitworks.jpg" attr="" comment="BeStMan-Gateway - How it works" date="1237491448" path="bestman-gateway-howitworks.jpg" size="50852" stream="bestman-gateway-howitworks.jpg" tmpFilename="/usr/tmp/CGItemp6374" user="AlexSim" version="1"}%
