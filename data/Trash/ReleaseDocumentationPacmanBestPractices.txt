%META:TOPICINFO{author="RobertEngel" date="1287092782" format="1.1" reprev="1.49" version="1.49"}%
%DOC_STATUS_TABLE%

---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

---++ About this Document

%ICON{hand}% This document is for System Administrators. It contains usage instructions for %LINK_GLOSSARY_PACMAN% which is required to install any software provided by the %LINK_OSG%.

%INCLUDE{"ReleaseDocumentation/PacmanInstall" section="AboutPacman" TOC_SHIFT="" }%

The installation instructions for Pacman can be found [[PacmanInstall][here]].


---++ Instructions for Using Pacman

If you are familiar with RPM, Pacman may seem a bit strange to you. RPM generally assumes that software is installed once, and in a pre-determined location. Pacman allows you to install software in multiple locations that you select. In order to install software in, say, /opt/osg-%OSG_VERSION%, you switch to that directory and run the Pacman commands there. That is, Pacman installs software in the current directory. For example:

<pre class="screen">
%UCL_PROMPT_SHORT% mkdir /opt/osg-%OSG_VERSION%  # Feel free to use another location, this is just an example
%UCL_PROMPT_SHORT% cd /opt/osg-%OSG_VERSION%
%UCL_PROMPT_SHORT% pacman -get <em>%CACHE%:PACKAGE_NAME</em> # PACKAGE_NAME might be something like <em>ce</em>
</pre>

*Please note:* You don't want to be in a directory like /opt or /usr because the Pacman installation will create a lot of sub-directories in that directory.

---++ Helpful Pacman options

---+++ Using a web proxy 
If you need to use a web proxy to access web sites, you need to tell Pacman how to use the proxy. This is done with an extra invocation of the =pacman= command before you install software. For example, if your web proxy is proxy.example.com running on port 3128, you can do this:

<pre class="screen">
%UCL_PROMPT_SHORT% pacman -http-proxy http://proxy.example.com:3128
</pre>

---+++ Trusting software caches
When you install software for the first time, Pacman asks you if you trust the [[VdtRelease][software caches]] that are used. Because the OSG software stack uses two different software caches, you will be asked twice if you trust the software caches: once for the OSG cache, and once for the VDT cache. 

You can avoid these questions by adding an option =-trust-all-caches=. For example:

<pre class="screen">
%UCL_PROMPT_SHORT% pacman -trust-all-caches -get <em>%CACHE%:PACKAGE_NAME</em>
</pre>

---+++ Installing on an unsupported platform

If you are installing on a platform that isn&rsquo;t officially supported ([[%VDT_DOCS_URL%/requirements.html][list of VDT supported platforms]]) you might be able to install anyway. 

The VDT documentation explains [[%VDT_DOCS_URL%/installation_advanced#unsup_plat][how to do this]].

---+++ Installing a 32-bit version on a 64-bit computer

Sometimes you might wish to install the 32-bit version of the VDT but you are installing on a 64-bit operating system. Unless you indicate that you want the 32-bit version, you will get the 64-bit version. 

The VDT documentation explains [[%VDT_DOCS_URL%/installation_advanced#pretend_32][how to do this]].

---++ Removing packages with Pacman
If you installed a package that you may later have deemed unnecessary, you can remove it by issuing the Pacman command with the remove option. You do not need to specify the cache. 

<pre class="screen">
> pacman -remove <em>package_name</em>
</pre>

%RED% *WARNING:* %ENDCOLOR% Removing a Pacman package can have unintended consequences. Be careful. Make a backup of your VDT location first. 

If you wish to remove a complete installation, you are better just deleting the entire from disk (after turning off your services).

<pre class="screen">
%UCL_PROMPT_SHORT% rm -rf $VDT_LOCATION
</pre>

For details on these commands, see the [[http://physics.bu.edu/pacman][Pacman home page]].

---++ Updating your installation

After you install the OSG software, there may be updates to the software. These updates are for a single OSG or VDT version. For example, VDT version %VDT_VERSION% may be updated to %VDT_VERSION% %VDT_VERSION%p1. These updates provide bug fixes and new versions of software. 

The process for updating is always well described by the GOC and the VDT team as part of the release notes, and you should follow that process. In general, you will need to first backup your installation and then run the =vdt-updater= program to update your installation.

---++ Don&rsquo;t mix versions
Under no circumstances should you mix software from different versions of the VDT. (Updates within a single version are fine). For example, if have installed an OSG 1.0, which is based on VDT 1.10.1, and you wish to install an extra package from VDT %VDT_VERSION%, do not do it. It will *not* work correctly.

---++ Use versioned directories
A good practice is to install into  a versioned directory. For example install into /usr/local/osg-1.2 and then symlink /usr/local/osg to the correct location.

---++ Troubleshooting Pacman installations

---+++ Finding the source of the failure.

When you do an installation, it might fail. We try hard (really!) to prevent errors, but they still happen. Our sincere apologies if this happens to you. 

Unfortunately, Pacman errors are often cryptic and misleading. Probably more than half of all Pacman error messages that users see do not help you understand the error. Fortunately, there is additional information you can look at.

While the OSG software is installed, a log file is created that records nearly everything that happens. This log file is long and may not be easy to understand, but it can be very useful. The log file is called =vdt-install.log=, and it is in the directory where you are doing the installation.

If your installation fails, look in =vdt-install.log= to see if there are any obvious errors. In most cases, the interesting error messages will come at the end of the log file. 

Even if you do not understand the error, the error might help you make a better [[TroubleTickets][request for help]]. 

If your installation has proceeded far enough to install =$VDT_LOCATION/vdt/bin/vdt-system-profiler=, you can collect more information that will be useful in reporting your problem. Please set =$VDT_LOCATION= in your environment and run the =vdt-system-profiler=. It will create a file called =vdt-profile.txt= which contains detailed information useful for debugging. Please email this file when you submit your trouble ticket. 

---+++ Setup file issues
In some cases when you do multiple installations with Pacman (that is, you do multiple =pacman -get= commands in a single directory) or when you do a =pacman -update=, the setup files (setup.sh and setup.csh) might be damaged if there is an error. 

You can attempt to recreate the files with the following command:
<pre class="screen">
%UCL_PROMPT_SHORT% pacman -setup
</pre>

---++ Fixing a damaged Pacman installation
Steve Timm once resurrected a damaged Pacman installation, and he [[DamagedPacman][documented how he did it]].

---++ Learning more about Pacman

The [[http://physics.bu.edu/pacman/][Pacman web site]] has [[http://physics.bu.edu/pacman/htmls/][a decent manual]] where you can learn more details about Pacman. 

%BR%

---++ *Comments*
| This doesn't work: <blockquote>A good practice is to install into a versioned directory. For example install into /usr/local/osg-1.0.4 and then symlink /usr/local/osg to the correct location. </blockquote>  Pacman resolves symlinks, so you'll actually be configured for /usr/local/osg-1.0.4 instead.  Use bind mount instead, and put it in your fstab: <pre>mount --bind /usr/local/osg-1.0.4 /usr/local/osg</pre> | Main.SarahWilliams | 09 Jul 2009 - 19:15 |
| Sarah, I think it does work, it just doesn&#39;t provide what you expect. You have a single directory location for finding the &#34;setup.sh&#34; file and this is useful. You&#39;re right, pathnames in the setup.sh will have the version in the pathname. | Main.AlainRoy | 09 Sep 2010 - 19:15 |
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = AlainRoy

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = ComputeElement

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       =  RobertEngel
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


############################################################################################################
-->



%META:TOPICMOVED{by="RobGardner" date="1192749711" from="Integration/ITB_0_7.PacmanInfo" to="Integration/ITB_0_7.PacmanBestPractices"}%
