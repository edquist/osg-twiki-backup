%META:TOPICINFO{author="StevenTimm" date="1249416719" format="1.1" reprev="1.75" version="1.75"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*

%TOC%

---++ Introduction

[[https://www.racf.bnl.gov/Facility/GUMS/][Grid User Management System (GUMS)]] is a Grid Identity Mapping Service. Identity mapping is necessary when a site's resources do not use grid credentials natively, but instead use a different mechanism to identify users, such as UNIX accounts or Kerberos principals. In these cases, the grid credential for each incoming job must be associated with an appropriate site credential. The GUMS server performs this mapping and communicates it to the gatekeepers. The gatekeepers are charged with enforcing the site mapping established by GUMS. The GUMS client (gatekeeper) portion consists of an admin tool for querying and/or changing the state of the server. Typically, the term "GUMS" refers to the server portion.

GUMS is particularly well suited to a heterogeneous environment with multiple gatekeepers; it allows the implemenation of a single site-wide usage policy, thereby providing better control and security for access to the site's grid resources. Using GUMS, individual resource administrators are able to assign different mapping policies to different groups of users and define groups of hosts on which the mappings will be used. GUMS was designed to integrate with the site's local information services (such as HR databases or LDAP).

GUMS is intended to be used with %CACHE%, but it (the server portion) does not get installed as part of compute element software; you must install it separately. For the OSG ITB you will need to use one of three scenarios, "Local", "Full Privilege" or the "Compatibility" site configurations, which is described in the [[AboutAuthorizationForCE][AboutAuthorizationForCE]] page.

More Information can be obtained from the following resources:

   * The full GUMS service description and a detailed manual is available at the GUMS site: https://www.racf.bnl.gov/Facility/GUMS/
   * The Privilege project <a href="http://computing.fnal.gov/docs/products/voprivilege/">homepage</a> contains links to everything.  
   * vo-admins@opensciencegrid.org - you can add yourself to this mail list by sending mail to listserv@opensciencegrid.org with the body of the mail being: add vo-admins 

---++ Pre-requisites for a GUMS Installation

See SitePlanning.  In particular, install Pacman, get host and http certificates, and open up port 8443 on your firewall. If you have an OSG GUMS running and you're about to reinstall or if any of the following daemons are installed and running on your machine: 
   * Apache
   * Tomcat V5 or V5.5
   * !MySql

#SecurityNotes
---++ Security Notes

GUMS is a service responsible for authorizing and mapping users at your site. As such, it's a critical part of your security infrastructure. We *strongly recommend* that you _do not run GUMS on the same computer_ as your Compute Element (CE) because users are capable of running jobs on your CE (via the fork job manager). Should there ever be a local exploit in GUMS or any of the components it depends on, it's possible for your users to exploit it. While your authorized users should be trustworthy, most OSG sites authorize a great number of users and we recommend not exposing your security infrastructure any more than necessary. Even if you are not worried about the security implications of running GUMS on your CE, you should be aware that CEs can and often do become overloaded and this can negatively affect GUMS. You are best off putting GUMS on a separate computer.

Note that if you have a small site and simply cannot put GUMS on a separate computer, it will work to install it alongside your CE. 

In almost all cases, GUMS is only used within a single site, so you can restrict network connectivity to the GUMS computer (if it's not the CE) so that it is only accessible within your site.

You should also note that GUMS uses !MySQL, and the default VDT installation of !MySQL does not set a root password. The !MySQL configuration does restrict connections so you have to be on the same computer in order to connection, so this limits your vulnerability. However, if you have decided to run GUMS on the same host as your CE, you really want to set the !MySQL root password in order to prevent users from accessing the !MySQL database with full privileges. The instructions below describe how to do this.

---++ Install GUMS Server

Here we describe the pacman GUMS installation. You can choose to install GUMS manually, or [[https://www.racf.bnl.gov/Facility/GUMS/][learn more about the installation]]. 

If you have a $VDT_LOCATION, go to it. If you don't, then create one and cd to it.  From there, run the pacman install command:
%STARTOSG12% <pre class="screen">
&gt; pacman -get %CACHE%:gums
&gt; source setup.sh
&gt; vdt-post-install
</pre>
%ENDOSG12%

<pre class="screen">
&gt; pacman -get %CACHE%:gums
</pre>

This installs both the GUMS server and the GUMS client. 

%STARTOSG12% In this release, the only questions that may appear are related to 'trusted caches' and 'unrecognized platforms' depending on your host. 

The _pacman_ variables that were used to pre-answer questions are now ignored. 
%ENDOSG12%

If you installed GUMS from OSG 1.0 , you will be asked several questions about trusting the VDT caches and accepting the package licenses.  We recommend choosing yes for automatically updating your CA certificates, choosing a root install of the CA files, yes for daily rotation of VDT log files, yes for updating the CA certification revocation lists, and yes for enabling the GUMS server to run automatically.

Under $VDT_LOCATION, these changes occur:
   * If !MySQL, Tomcat 5.5 and/or Apache aren't already installed, they will be installed
   * =apache/conf/httpd.conf= gets updated to include tomcat-55 installation of GUMS. 
   * There's a gums directory which contains the GUMS client and host scripts
   * A mysql GUMS database is created, (currently) named GUMS_1_3

After you install, you may wish to set the !MySQL root database password. (See the [[#SecurityNotes][security notes]] above.) To do this:
<pre class="screen">
# cd $VDT_LOCATION
# source setup.sh
# vdt/setup/configure_mysql --version 5 -root PASSWORD
</pre>


If you have installed GUMS as root then you can start the services used by GUMS and configure them to start at boot time with the =vdt-control= script:
%STARTOSG12%
With this release all services are initially disabled so you will have to enable them manually as follows:
<pre class="screen">
# cd $VDT_LOCATION
# source setup.sh
# vdt-control --enable fetch-crl
# vdt-control --enable vdt-rotate-logs
# vdt-control --enable mysql5
# vdt-control --enable apache
# vdt-control --enable tomcat-55
</pre>
%ENDOSG12%
<pre class="screen">
&gt; source &lt;YOUR_VDT_LOCATION&gt;/setup.sh
&gt; vdt-control --on
</pre>

Use "off" instead of "on" to stop the services.  Note that apache will not start correctly until the CaCertificatesUpdates installation is completed below.

If you have installed GUMS as a non-root user then you will need to start the services used by GUMS manually, even after a reboot. These are similar in OSG 1.0 and 1.2, but OSG 1.2 uses !MySQL 5 instead of !MySQL 4.

<table>
<tr>
<td>
<b>For OSG 1.0:</b>
<pre class="screen">
&gt; source &lt;YOUR_VDT_LOCATION&gt;/setup.sh
&gt; $VDT_LOCATION/post-install/mysql start
&gt; $VDT_LOCATION/post-install/apache start
&gt; $VDT_LOCATION/post-install/tomcat-55 start
</pre>
</td>
<td>
<b>For OSG 1.2:</b>
<pre class="screen">
&gt; source &lt;YOUR_VDT_LOCATION&gt;/setup.sh
&gt; $VDT_LOCATION/post-install/mysql5 start
&gt; $VDT_LOCATION/post-install/apache start
&gt; $VDT_LOCATION/post-install/tomcat-55 start
</pre>
</td>
</tr>
</table>

To stop each service, use "stop" instead of "start".  Make sure that the user who starts gums has read access to the http certificate and key.

Verify that you have access to your GUMS services. Go to your GUMS web interface (in a certificate-enabled browser) at =<nop>https://your-gums-server:8443/gums=. You should get a screen up. You won't be able to do anything else until you configure a GUMS administrator.

%INCLUDE{"CaCertificatesUpdates"}%

---++ Upgrade GUMS Server

If you've installed GUMS previously, from a different major OSG release, you can do a fresh installation of GUMS,and preserve your configuration. [[ReusingConfigurationInformation][Instructions on preserving configuration from a different installation]].

---++ Configure GUMS server

---+++ Create a GUMS administrator
Make sure you log into your GUMS host as root.  If you have a root mysql password, you'll need it for this step.  If you don't have one, it won't be required. 

Add yourself to the list of GUMS admins by running the following commands.
<pre class="screen">
&gt; ssh -l root your.host  <em>#login as root however you like</em>
&gt; source $VDT_LOCATION/setup.sh
&gt; cd $VDT_LOCATION/tomcat/v55/webapps/gums/WEB-INF/scripts
&gt; ./gums-add-mysql-admin "<replaceable>your DN</replaceable>"   <em>#quotes needed due to spaces in DN string</em>
</pre>

This will give you administrative access through your GUMS web interface.  This adds you (or the DN you provide) to the <b>admins</b> subGroup in the GUMS database.

Output of the <nop>gums-add-mysql-admin command:

<pre class="screen">
WARNING: You must have created the database before running this script!

Adding the following DN to the local database:
Certificate DN for administrator: "/DC=org/DC=doegrids/OU=People/CN=Anne Heavey 830711"

Is this correct? (Enter 'yes' to proceed)
yes

Adding the admin:
Enter the root mysql password
</pre>

If there's no password set, it will finish by itself.  Ignore the warning; the database got created during the installation.

Verify you have  administrative capabilities in GUMS by going to the web interface and clicking "Persistence Factories" as a test.  You should see a persistence factory entry.

If you get the following, you have not added yourself correctly to the <b>admins</b> group or you are using the wrong certificate in your browser:
<pre class="screen">
  Error generating grid-mapfile: You are not authorized to perform this function. Contact your gums administrator if access is needed.
</pre>   

---+++ Replace default configuration with OSG configuration
A default barebones gums.config file is installed in =<nop>$VDT_LOCATION/vdt-app-date/gums/config/gums.config= with the necessary configuration for accessing the !MySql GUMS database.  

You can use the =gums-create-config= script to replace this default =gums.config= with the OSG gums.config template. This script will download the OSG =gums.template= from http://software.grid.iu.edu/pacman/tarballs/vo-version/gums.template.  It will merge it with the default template preserving the database access attributes.   This script can be found in the  =<nop>$VDT_LOCATION/tomcat/v55/webapps/gums/WEB-INF/scripts= directory.

Within this directory, run it by typing:
  <pre class="screen">
  ./gums-create-config --osg-template
  </pre>

---+++ Test the configuration
On your GUMS web interface at =<nop>https://your-gums-server:8443/gums=, 
    <ul><li>Click "Update VO Members" in the left pane.
             <li>Click the "Update VO Members Database" button.
   </ul>
This retrieves the members of the VOs and inserts them into the !MySql GUMS database.

Still on your GUMS web interface, 
      <ul><li>Click on "Generate Grid Mapfile".
       <li>Enter the DN of the hostname that you want to generate the grid mapfile for (e.g. <i>/DC=org/DC=doegrids/OU=Services/CN=gateway.bnl.gov</i>).</li>
    <li>Click "generate grid-mapfile."  <br>
        You should get the text of a grid-mapfile formatted output (as of this writing):
<pre class="programlisting">
#---- members of vo: osg ----#
"/DC=org/DC=doegrids/OU=People/CN=Alexis Rodriguez 233072" osg
"/DC=org/DC=doegrids/OU=People/CN=Andrew Zahn 730598" osg
"/DC=org/DC=doegrids/OU=People/CN=Craig Phillip Prescott 50911" osg
</pre></li> 
</ul>

If you get errors and need to look in log files, they're kept under <tt>$VDT_LOCATION/tomcat/v55/logs</tt>.  The first one to check is the <tt>gums-service-admin.log</tt>, and second the <tt>gums-service-developer.log</tt>.

---+++ Maintenance
You may want to add other elements to your configuration custom to your site.  For example, account mappings and user memberships may be taken from LDAP.  Or you may want to add account mappings and user memberships for individual DNs for special circumstances.  See https://www.racf.bnl.gov/Facility/GUMS/1.3/use_configuration.html for more information on configuration possibilities.

A few notes about maintenance:
   * The gums.config needs to be maintained such that it includes updated information for the VOs in the OSG you are supporting. 
   * Changes to the VOs are announced via email to the VO support centers and to the osg-sites list.
   * The most up-to-date list is available within the OSG gums configuration template at http://software.grid.iu.edu/pacman/tarballs/vo-version/gums.template.  However, note that you cannot simply cut and paste from this into a 1.3 gums configuration since it is in a 1.1 format.

---+++Other configuration options
|Logging and email notification|https://www.racf.bnl.gov/Facility/GUMS/1.3/use_logging.html|
|VOMS update frequency|https://www.racf.bnl.gov/Facility/GUMS/1.3/installation_manual.html#Frequency|

---++ Configure CE

---+++Set up CE authorization to use GUMS
Now that you have GUMS configured to perform the account authorizations, you need to effect it on the CE/gatekeeper node(s). There are 2 important aspects of this:
   * Using GUMS for authorization mappings to UNIX UID
   * Using GUMS to generate the OSG-vo-user-map map file.

Each of these is described in the [[AboutAuthorizationForCE][AboutAuthorizationForCE]] page.

---+++OSG CE authorizations
There are 3 authorization configurations involving GUMS described on the [[AboutAuthorizationForCE][AboutAuthorizationForCE]] page:
   * [[Grid3ModeAuthorization][Local]] - for the local grid-mapfile mode.
   * [[CompatibilityModeAuthorization][Compatibility]] - also uses a grid-mapfile, but aided by a GUMS server.
   * [[FullPrivilegeAuthorization][Full Privilege]] - the (role-based) extended-proxy certificate authorization mode.

---+++<nop>osg-user-vo-map file
Under both configurations, now that you are using GUMS to establish your account assigments,  you will need to use the GUMS client's "generateOsgUserVoMap" to generate the =$VDT_LOCATION/monitoring/osg-user-vo-map.txt= file which is critical to OSG accounting of the jobs on the CE/gatekeeper host.

---+++ Publishing your authorization service status (optional)
This is optional capability that allows each of the CE nodes that use your GUMS authorization service to publish, via classads, the availability/status of your authorization service.  It is only available if your CEs are operating in Full Privilege authorization mode.  This is a =GIP/CEmon= service detailed in the [[ComputeElementInstall#gumsprobe][CE Installation Guide]] section on CEMon

In addition to the configuration on each of the CE nodes, the elements named "gums-test" within =$VDT_LOCATION/tomcat/v55/webapps/gums/WEB-INF/gums.config.template= need to be included in your gums.config, if not there already.  You also need to add a userGroup with DN="/GIP-GUMS-Probe-Identity" to the gums-test userGroup (click "Manual User Group Members" on the web interface and then click the "add" button).

---+++Making GUMS compatible with PRIMA 

PRIMA 0.2 can not interface to a GUMS server that runs with a service (rather than host) certificate.  If you will be using PRIMA you need to switch the certificate used by gums:

<pre class="screen">
> <b>cd /etc/grid-security/http</b>
> <b>mv httpkey.pem httpkey.pem.sav</b>
> <b>mv httpcert.pem httpcert.pem.sav</b>
> <b>cd ..</b>
> <b>cp hostkey.pem http/httpkey.pem</b>
> <b>cp hostcert.pem http/httpcert.pem</b>
> <b>chown -R daemon:daemon http </b>
</pre>

---++ GUMS Client

See GumsClientInstall.

---++Appendix A: %CACHE% GUMS Stress Test
See  [[GumsStressTest][GUMS stress test results]]

%BR%
%COMPLETE2% %BR%
%RESPONSIBLE% Main.JayPackard - 17 Oct 2007 %BR%
%REVIEW% Main.RobertEngel - 21 Jul 2009 %BR%
%REVFLAG% %S% %BR%


---++ *Comments*
| We need a section here that explains how to get to the MySQL root password that is generated. Also a section how to re-use an existing gums.conf and that the MySQL password is stored in gums.conf.  | Main.RobertEngel | 21 Jul 2009 - 20:48 |
| In section the Pre-requisites for a GUMS Installation, the documentation states:<br />... If you have an OSG GUMS running ... but there is no then "what'? <br /><br />It doesn't explain what to do if you have an old installation. The only documentation I can find about going from GUMS 1.2 to GUMS 1.3 is on the BNL page for a manual installation. I would be happy to write this section if I knew the procedure. | Main.DouglasJohnson | 23 Jul 2009 - 19:37 |
| It says that you can't just cut and paste the gums 1.1 template from the GOC into gums 1.3 but I think you can, it is a 
leftover statement from gums 1.2 which did have an incompatible config file.  |  StevenTimm 04 August 2009 15:01|
| I believe the statement about PRIMA 0.2 not being able to interface to a gums server that is running on a service certificate is 
incorrect.  First of all there has not been any PRIMA 0.2 active in the VDT since OSG 0.2.1 or so.  Second of all FermiGrid has 
been running with a http/ style service cert on our GUMS server for all of that time. | StevenTimm 04 August 2009 15:11|
%COMMENT{type="tableappend"}%


%META:TOPICMOVED{by="AnneHeavey" date="1192808022" from="Integration/ITB_0_7.GumsAdmins" to="Integration/ITB_0_7.InstallConfigureAndManageGUMS"}%
