%META:TOPICINFO{author="BrianBockelman" date="1486500432" format="1.1" reprev="1.109" version="1.109"}%
%DOC_STATUS_TABLE%
---+!! Install, Configure & Manage GUMS

%TOC%

<!--
   * Set INSTALL_DIR=$INSTALL_DIR
-->

---++ About This Document
In this document we describe the how to install VDT GUMS via Pacman.  If you choose to install GUMS manually or learn more about the installation, please refer to the  [[https://www.racf.bnl.gov/Facility/GUMS/][GUMS manual]] provided by its developers. 

---++ Introduction

[[https://www.racf.bnl.gov/Facility/GUMS/][Grid User Management System (GUMS)]] is a Grid Identity Mapping Service. Identity mapping is necessary when a site's resources do not use grid credentials natively, but instead use a different mechanism to identify users, such as UNIX accounts or Kerberos principals. In these cases, the grid credential for each incoming job must be associated with an appropriate site credential. The GUMS server performs this mapping and communicates it to the gatekeepers. The gatekeepers are charged with enforcing the site mapping established by GUMS. The GUMS client (gatekeeper) portion consists of an admin tool for querying and/or changing the state of the server. Typically, the term "GUMS" refers to the server portion.

GUMS is particularly well suited to a heterogeneous environment with multiple gatekeepers; it allows the implementation of a single site-wide usage policy, thereby providing better control and security for access to the site's grid resources. Using GUMS, individual resource administrators are able to assign different mapping policies to different groups of users and define groups of hosts on which the mappings will be used. GUMS was designed to integrate with the site's local information services (such as HR databases or LDAP).

GUMS is intended to be used with %CACHE%, but it (the server portion) does not get installed as part of compute element software; you must install it separately. 

%NOTE% If you are running an ITB site (only testing sites): For the OSG ITB you will need to use one of three scenarios, "Local", "Full Privilege" or the "Compatibility" site configurations, which is described in the [[Trash.ReleaseDocumentationAboutAuthorizationForCE][Trash.ReleaseDocumentationAboutAuthorizationForCE]] page.

More Information can be obtained from the following resources:

   * The full GUMS service description and a detailed manual is available at the GUMS site: https://www.racf.bnl.gov/Facility/GUMS/
   * The Privilege project [[http://computing.fnal.gov/docs/products/voprivilege/][homepage]] contains links to everything.  
   * vo-admins@opensciencegrid.org - you can add yourself to this mail list by sending mail to listserv@opensciencegrid.org with the body of the mail being: add vo-admins 



---++ Pre-requisites for a GUMS Installation

See ReleaseDocumentation.SitePlanning.  In particular:
   1 [[https://twiki.grid.iu.edu/bin/view/Trash/ReleaseDocumentationPacmanInstall][Install Pacman]]
   1 Get host and http certificates. Unless you plan to manually change the GUMS configuration (not recommended), =$VDT_LOCATION/vdt-app-data/gums/config/gums.config=, http certificate and key must be located in =/etc/grid-security/http/httpcert.pem= and =/etc/grid-security/http/httpkey.pem= respectively.
   1 Installing GUMS as root OR The user under which GUMS is running must be the owner of the installation (the user doing the installation) and is also the owner of the http certificates. 
   1 Plan for a root installation of the CA certificates or to link =/etc/grid-security/certificates= to your certificates directory (=$VDT_LOCATION/globus/share/TRUSTED_CA=).  This can be changed in  the GUMS configuration, =$VDT_LOCATION/vdt-app-data/gums/config/gums.config=
   1 Open port 8443 on your firewall 

If you are updating a previous installation of GUMS on the same host, you must first turn off GUMS (=vdt-control --off=) or the Pacman installation will fail. After running (=vdt-control --off=) you can check for the existence of the following daemons to ensure GUMS is turned off

   * Apache
   * Tomcat V5 or V5.5
   * !MySql

#SecurityNotes
---++ Security Notes

GUMS is a service responsible for authorizing and mapping users at your site. As such, it's a critical part of your security infrastructure. We *strongly recommend* that you _do not run GUMS on the same computer_ as your Compute Element (CE) because users are capable of running jobs on your CE (via the fork job manager). Should there ever be a local exploit in GUMS or any of the components it depends on, it's possible for your users to exploit it. While your authorized users should be trustworthy, most OSG sites authorize a great number of users and we recommend not exposing your security infrastructure any more than necessary. Even if you are not worried about the security implications of running GUMS on your CE, you should be aware that CEs can and often do become overloaded and this can negatively affect GUMS. You are best off putting GUMS on a separate computer.

Note that if you have a small site and simply cannot put GUMS on a separate computer, it will work to install it alongside your CE. 

In almost all cases, GUMS is only used within a single site, so you can restrict network connectivity to the GUMS computer (if it's not the CE) so that it is only accessible within your site.

You should also note that GUMS uses !MySQL, and the default VDT installation of !MySQL does not set a root password. The !MySQL configuration does restrict connections so you have to be on the same computer in order to connect, so this limits your vulnerability. However, if you have decided to run GUMS on the same host as your CE, you really want to set the !MySQL root password in order to prevent users from accessing the !MySQL database with full privileges. The instructions [[#SetMysqlRootPassword][below]] describe how to do this.

---++ Install GUMS Server
Create an installation directory, e.g. =/opt/gums=, assign it to INSTALL_DIR and cd to it.  Install GUMS with Pacman (answer =yall= to the question about trusting caches) and run the post-install script:
<pre class="screen">
%UCL_PROMPT_ROOT% export INSTALL_DIR=/opt/gums
%UCL_PROMPT_ROOT% mkdir -p $INSTALL_DIR
%UCL_PROMPT_ROOT% cd $INSTALL_DIR
%UCL_PROMPT_ROOT% pacman -get %CACHE%:gums
%UCL_PROMPT_ROOT% source setup.sh
%UCL_PROMPT_ROOT% vdt-post-install
</pre>

This installs both the GUMS server and the GUMS client. 

Under $VDT_LOCATION, these changes occur:
   * If !MySQL, Tomcat 5.5 and/or Apache aren't already installed, they will be installed
   * =apache/conf/httpd.conf= gets updated to include tomcat-55 installation of GUMS. 
   * There's a gums directory which contains the GUMS client and host scripts
   * A mysql GUMS database is created, (currently) named GUMS_1_3

#SetMysqlRootPassword
After you install, you may wish to set the !MySQL root database password. (See the [[#SecurityNotes][security notes]] above.) To do this:
<pre class="screen">
%UCL_PROMPT_ROOT% cd $INSTALL_DIR
%UCL_PROMPT_ROOT% source setup.sh
%UCL_PROMPT_ROOT% vdt/setup/configure_mysql --version 5 -root PASSWORD
</pre>

<!--
   * Set DOC_TitleSubLevel=+
-->

%INCLUDE{"Trash.ReleaseDocumentationCaCertificatesInstall" section="InstallACertificateAuthorityPackage" TOC_SHIFT="+"}%

---+++ Starting the GUMS Server

If you have installed GUMS as root then you can start the services used by GUMS and configure them to start at boot time with the =vdt-control= script:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% source $INSTALL_DIR/setup.sh
%UCL_PROMPT_ROOT% vdt-control --enable fetch-crl
%UCL_PROMPT_ROOT% vdt-control --enable vdt-rotate-logs
%UCL_PROMPT_ROOT% vdt-control --enable mysql5
%UCL_PROMPT_ROOT% vdt-control --enable apache
%UCL_PROMPT_ROOT% vdt-control --enable tomcat-55
</pre>

To start the services use:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% source $INSTALL_DIR/setup.sh
%UCL_PROMPT_ROOT% vdt-control --on
</pre>

To turn the services off, use "off" instead of "on".  Note that apache will not start correctly until the CA package installation described above is completed.

If you have installed GUMS as a non-root user then you will need to start the services used by GUMS manually, even after a reboot: 
<pre class="screen">
%UCL_PROMPT_ROOT% source $INSTALL_DIR/setup.sh
%UCL_PROMPT_ROOT% $VDT_LOCATION/post-install/mysql5 start
%UCL_PROMPT_ROOT% $VDT_LOCATION/post-install/apache start
%UCL_PROMPT_ROOT% $VDT_LOCATION/post-install/tomcat-55 start
</pre>

To stop each service, use "stop" instead of "start".  Make sure that the user who starts gums has read access to the http certificate and key.

Verify that you have access to your GUMS services. Go to your GUMS web interface (in a certificate-enabled browser) at =https://your-gums-server:8443/gums=. You should get a screen up. You won't be able to do anything else until you configure a GUMS administrator.


---++ Upgrade GUMS Server

If you've installed GUMS previously, from a different major OSG release, you can do a fresh installation of GUMS, and preserve your configuration. [[Trash.ReleaseDocumentationReusingConfigurationInformation][Instructions on preserving configuration from a different installation]]. Remember to turn off the previous GUMS installation before starting the new Pacman installation.


---++ Configure GUMS server

---+++ Create a GUMS administrator
Make sure you log into your GUMS host as the owner of the installation (root if you installed as root).  If you previously set a root !MySQL password, you'll need it for this step.  If you did not set one, it won't be required. 

Add yourself to the list of GUMS admins by running the following commands.
<pre class="screen">
%UCL_PROMPT_ROOT% source $VDT_LOCATION/setup.sh
%UCL_PROMPT_ROOT% cd $VDT_LOCATION/tomcat/v55/webapps/gums/WEB-INF/scripts
%UCL_PROMPT_ROOT% ./gums-add-mysql-admin "%RED%your DN%ENDCOLOR%"   
</pre>
Be sure to include quotes around your DN due to spaces in the DN.

This will give you administrative access through your GUMS web interface.  This adds you (or the DN you provide) to the *admins* subGroup in the GUMS database.

Output of the gums-add-mysql-admin command:
<pre class="screen">
WARNING: You must have created the database before running this script!

Adding the following DN to the local database:
Certificate DN for administrator: "/DC=org/DC=doegrids/OU=People/CN=Anne Heavey 830711"

Is this correct? (Enter 'yes' to proceed)
%RED%yes%ENDCOLOR%

Adding the admin:
Enter the root mysql password
</pre>

If there's no password set, it will finish by itself.  Ignore the warning; the database got created during the installation.

Verify you have  administrative capabilities in GUMS by going to the web interface and clicking "Persistence Factories" as a test.  You should see a persistence factory entry.

If you get the following, you have not added yourself correctly to the *admins* group or you are using the wrong certificate in your browser:
<pre class="screen">
  Error generating grid-mapfile: You are not authorized to perform this function. Contact your gums administrator if access is needed.
</pre>   

---+++ Replace the default configuration with the OSG configuration
A default barebone =gums.config= file is installed in =<nop>$VDT_LOCATION/vdt-app-data/gums/config/gums.config= with the necessary configuration for accessing the !MySql GUMS database.  

You can use the =gums-create-config= script to replace this default =gums.config= with the OSG gums.config template. This script will download the OSG =gums.template= from =http://software.grid.iu.edu/pacman/tarballs/vo-version/gums.template=.  It will merge it with the default template preserving the database access attributes.   This script can be found in the  =$VDT_LOCATION/tomcat/v55/webapps/gums/WEB-INF/scripts= directory.

Within this directory, run it by typing:
<pre class="screen">
%UCL_PROMPT_ROOT% cd $VDT_LOCATION/tomcat/v55/webapps/gums/WEB-INF/scripts
%UCL_PROMPT_ROOT% ./gums-create-config --osg-template
</pre>

---+++ Test the configuration
On your GUMS web interface at =https://your-gums-server:8443/gums=, 
   * Click "Update VO Members" in the left pane.
   * Then Click the "Update VO Members Database" button.
This retrieves the members of the VOs and inserts them into the !MySql GUMS database.

Still on your GUMS web interface, 
   * Click on "Generate Grid Mapfile".
   * Enter the DN of the hostname that you want to generate the grid mapfile for (e.g. _/DC=org/DC=doegrids/OU=Services/CN=gateway.bnl.gov_).
   * Click "generate grid-mapfile."  <br>You should get the text of a grid-mapfile formatted output (as of this writing):
   <pre class="programlisting">
#---- members of vo: osg ----#
"/DC=org/DC=doegrids/OU=People/CN=Alexis Rodriguez 233072" osg
"/DC=org/DC=doegrids/OU=People/CN=Andrew Zahn 730598" osg
"/DC=org/DC=doegrids/OU=People/CN=Craig Phillip Prescott 50911" osg
   </pre>

If you get errors and need to look in log files, they're kept under =$VDT_LOCATION/tomcat/v55/logs=.  The first one to check is the =gums-service-admin.log=, and second the =gums-service-developer.log=.

---++ Maintenance
You may want to add other elements to your configuration custom to your site.  For example, account mappings and user memberships may be taken from LDAP.  Or you may want to add account mappings and user memberships for individual DNs for special circumstances.  See https://www.racf.bnl.gov/Facility/GUMS/1.3/use_configuration.html for more information on configuration possibilities.

A few notes about maintenance:
   * The gums.config needs to be maintained such that it includes updated information for the VOs in the OSG you are supporting. 
   * Changes to the VOs are announced via email to the VO support centers and to the osg-sites list.
   * The most up-to-date list is available within the OSG gums configuration template at http://software.grid.iu.edu/pacman/tarballs/vo-version/gums.template.  However, note that you cannot simply cut and paste from this into a 1.3 gums configuration since it is in a 1.1 format.

Restarting the GUMS server after updating =gums.config= is not necessary. A better technique to insure GUMS  is reading the new =gums.config= is to go to the summary page on the UI (Web interface).  This forces a read of the =gums.config=.  This will also tell you if there is an error in your gums.config. The advantage of this is that GUMS will continue to use the old =gums.config= if there is an error with the new one and GUMS will still perform (as the cached version is still in effect) the authorization service.  If you restart tomcat and your =gums.config= has errors, GUMS is dead and no user can access your site.

---+++Other configuration options
   * [[https://www.racf.bnl.gov/Facility/GUMS/1.3/use_logging.html][Logging and email notification]]
   * [[https://www.racf.bnl.gov/Facility/GUMS/1.3/installation_manual.html#Frequency][VOMS update frequency]]

---++ Retrieving the Mysql Password for GUMS

The Mysql password for GUMS is found in the gums.config file in =$VDT_LOCATION/gums/vdt-app-data/gums/config/gums.config=. Look for =hibernate.connection.password=. 

---++ Configure CE

---+++Set up CE authorization to use GUMS
GUMS performs account authorizations for other OSG services, mainly the CE/gatekeeper node(s). The server configuration steps are described in the server installation instructions, like Trash.ReleaseDocumentationComputeElementInstall. Here is a brief summary of GUMS use in the CE:
   * authorization mappings to UNIX UID
   * generate the OSG-vo-user-map map file.
   * publishing your authorization service status (optional)
Each of these is described in the [[Trash.ReleaseDocumentationAboutAuthorizationForCE][Trash.ReleaseDocumentationAboutAuthorizationForCE]] page.

---+++OSG CE authorizations
There are 2 authorization configurations involving GUMS described on the [[Trash.ReleaseDocumentationAboutAuthorizationForCE][Trash.ReleaseDocumentationAboutAuthorizationForCE]] page:
   * [[Trash.ReleaseDocumentationLocalAuthPreConfig][Local]] - for the local grid-mapfile mode.
   * [[Trash.ReleaseDocumentationFullPrivPreConfig][Full Privilege]] - the (role-based) extended-proxy certificate authorization mode.

---+++ osg-user-vo-map file
Under both configurations, now that you are using GUMS to establish your account assignments,  you will need to use the GUMS client's "generateOsgUserVoMap" to generate the =$VDT_LOCATION/monitoring/osg-user-vo-map.txt= file which is critical to OSG accounting of the jobs on the CE/gatekeeper host.

---+++ Publishing your authorization service status (optional)
This optional capability allows all the CE nodes that use your GUMS authorization service to publish, via classads, the availability/status of your authorization service.  It is only available if your CEs are operating in Full Privilege authorization mode (default for most).  This is a =GIP/CEmon= service detailed in the [[Trash.ReleaseDocumentationComputeElementInstall#gumsprobe][CE Installation Guide]] section on CEMon.

In addition to the configuration on each of the CE nodes, the elements named "gums-test" within =$VDT_LOCATION/tomcat/v55/webapps/gums/WEB-INF/gums.config.template= need to be included in your gums.config, if not there already.  You also need to add a userGroup with DN="/GIP-GUMS-Probe-Identity" to the gums-test userGroup (click "Manual User Group Members" on the web interface and then click the "add" button).


---++ GUMS Client

See Trash.ReleaseDocumentationGumsClientInstall.

%BR%

---++ File Locations
| GUMS configuration | =$VDT_LOCATION/vdt-app-data/gums/config/gums.config= | 
| GUMS log files | =$VDT_LOCATION/tomcat/v55/logs= |
| Scripts to automate configuration of GUMS | =$VDT_LOCATION/tomcat/v55/webapps/gums/WEB-INF/scripts/= |



---++ *Comments*
| We need a section here that explains how to get to the MySQL root password that is generated. Also a section how to re-use an existing gums.conf and that the MySQL password is stored in gums.conf.  | Main.RobertEngel | 21 Jul 2009 - 20:48 |
| In section the Pre-requisites for a GUMS Installation, the documentation states:<br />... If you have an OSG GUMS running ... but there is no then "what'? <br /><br />It doesn't explain what to do if you have an old installation. The only documentation I can find about going from GUMS 1.2 to GUMS 1.3 is on the BNL page for a manual installation. I would be happy to write this section if I knew the procedure. | Main.DouglasJohnson | 23 Jul 2009 - 19:37 |


| PM2RPM_TASK = 2012 | Main.RobertEngel | 28 Aug 2011 - 05:20 |
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = TerrenceMartin

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = VO

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%
   * Local TEST_READY   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%


 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = DerekWeitzel
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%

   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = MarcoMambelli
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################ 
-->

%META:TOPICMOVED{by="BrianBockelman" date="1486492698" from="ReleaseDocumentation.InstallConfigureAndManageGUMS" to="Trash.ReleaseDocumentationInstallConfigureAndManageGUMS"}%
