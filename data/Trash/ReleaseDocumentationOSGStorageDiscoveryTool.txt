%META:TOPICINFO{author="TedHesselroth" date="1254426972" format="1.1" reprev="1.3" version="1.3"}%
%META:TOPICPARENT{name="OpportunisticStorage"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%


---++++ Introduction

The Open Science Grid provides a BDII service which aggregates LDAP information provided by sites. The information describes the resources being made available by the sites. For example, some site configuration parameters may be published from which it can be determined whether an application submitted by a VO may successfully run. In some applications, knowledge of site configuration values is needed in order to correctly use a resource. As an example, in the use of storage, a site may offer a Storage Element for which particular VOs are authorized. Each authorized VO would be able to access the Storage Element though a protocol published in the BDII, directing data to and from a storage area assigned to them.

The OSG Discovery Tool allows users to discover the BDII information they need in order to use grid resources. The version of the tool described here is focussed on storage applications.  

More detailed information on the requirements and design of the tool can be found at

[[InformationServices/OSGStorageDiscoveryRequirements][OSG Storage Discovery Requirements Document]]

[[InformationServices/OSGStorageDiscoveryDesign][OSG Storage Discovery Design Document]]

---++++ Installation

The version of the search tool that is described in these pages can be downloaded from the [[http://gratiax15.fnal.gov:8888/maven/opensciencegrid/osg-discovery/0.6][Search Tool Build Repository]]. The package will be found there as a tarred, gzipped file with checksum information. To install the tool, simply untar the package in a directory of your choice.

---++++ Running the Scripts

There is no requirement to set any environment variables or classpaths, or to run from with a particular directory. Commands will run slightly faster if the JAVA_HOME variable is set. For convenience, you may wish to add the "bin" directory of the installation to your PATH variable, however, the scripts will also work when called using full or relative paths.

---++++++ Loading the Cache

It is important to load the cache before doing any queries. To load the cache, type

<verbatim>
update_bdii_cache --vo <VO Name>
</verbatim>

for your VO. This gathers all needed information from the BDII and queries will thereafter read from the cache. The command creates the cache if necessary or adds information to an existing cache. The "load_bdii_cache" command may be used to completely replace the cache.

---++++++ Java Version

Java version 1.5 or higher is required. The scripts will search for a java binary in the expected locations, starting with JAVA_HOME, until one of sufficient version is found. Therefore, if you wish to specify the java binary to be used, set the JAVA_HOME environment variable.

---++++++ General Command Line Format

Each script is called with a set of parameters specified on the command line, some of which may be optional. The command line format is as follows

<verbatim>
script_name --parameter_name1 value1 --parameter_name2 value2 ...
</verbatim>

All scripts use this form of name/value pair command line arguments. The help argument is the form of  "-h", "-help", or "--help", is supported by all scripts and must be the first argument when used. When the help argument is specified, a script will print it's purpose and the list of parameters that it takes, with descriptions and indications of which are optional.

---++++ The Search Scripts with Examples

The current tool release covers making space reservations in Storage Elements, and running a test copy job. Each script searches the cached information loaded from the BDII and composes a command for each site that supports the VO specified. The command for a particular site can then be run by the user to make a space reservation or to do a test transfer. The use of each script supplied in the bundle is described in the following topic, with examples provided.

<li>[[OpportunisticStorageSearchScripts][Opportunistic Storage Search Scripts]]</li>

For further information on the specific space reservation and srm copy commands supported, see the [[https://twiki.grid.iu.edu/bin/view/Storage][OSG Storage Documentation]].


---++++ How the Scripts Work

The scripts work by evaluating xqueries on the BDII data which has been transformed to XML. The evaluation is done using two components. The caching component extracts the paths from all xquery scripts and converts them to LDAP searches. The search is done on the OSG BDII endpoint, and the results are converted into XML. The XML output is saved in the "cache" directory as a file. All is done using the Glue Schema, version 1.3, employed by the BDII service. In the second step, the xquery script is evaluated on the resulting XML file using the Saxon processor.

---++++++ The XQuery Scripts

Information on the xquery scripts used by the tool may be found at

<li>[[OpportunisticStorageXQueryScripts][XQuery scripts for composition of commands]]</li>


---++++ Advanced Usage

---++++++ Searching the BDII using XPath Expressions

You may search the BDII using XPath expressions written using Glue Schema 1.3. Please see the following topic for a description.

StorageDiscoveryXPathSearch


---++++++ Running XQuery Scripts

If you have written your own xquery script, you may run it against the OSG BDII using the included "xquerybase" utility like so

<verbatim>
xquerybase my_xquery_script.xq parameter_name1=value1 parameter_name2=value2 ...
</verbatim>

The parameters are external variables defined in your script.

-- Main.TedHesselroth - 30 Jul 2009
