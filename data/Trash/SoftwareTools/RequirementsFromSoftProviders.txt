%META:TOPICINFO{author="AlainRoy" date="1256760999" format="1.1" reprev="1.7" version="1.7"}%
%META:TOPICPARENT{name="SoftwareToolsMeetings"}%
---++ Requirements from OSG Software Providers

%RED% Alain is actively editing the document so it is in flux. %ENDCOLOR%

[[https://twiki.grid.iu.edu/bin/view/SoftwareTools/RequirementsFromSoftProviders?rev=1][The original version of this document]]

---+++ Introduction

When we adopt software into the OSG Software Stack, we have certain requirements for what we are willing to accept. Depending on the source of the software, our requirements differ. There are three classifications for the source of the software:

   1. *OSG Owned*: This is software that is owned and maintained/developed by OSG. We have the strongest set of requirements for software that we own. For example, RSV.
   1. *Close Collaborator*: This is software that is owned by someone who is a close collaborator. We have a weaker set of requirements for this set of software. An example is VOMS. 
   1. *No relationship*: This is software that is owned by someone with whom we do not have a close relationship. For example Apache and MySQL fit this category.

For each of the following software aspects, we rate them as "required" or "desired" based on the category they are in. This is an admission of reality--we simply cannot have as strong a set of requirements on software providers with whom we have no leverage.

---+++ Aspect: Understanding the software

Before we accept software into the OSG Software Stack, we must have a basic understanding of the software. In particular, we must understand:

   1. What is the software named?
   1. Who is responsible for the software? How do we contact them?
   1. How can we obtain support for the software?
   1. What does the software do?
   1. Where can we find documentation for the software?
   1. How stable and mature is the software?
   1. What are minimal hardware requirements for this software?
   1. What platforms are supported?
   1. What dependencies does the software have on other software or hardware?
   1. How do we configure the software?

| *Aspect* | *OSG Owned* | *Close Collaborator* | *No relationship* |
| _Understanding the software_ | Required | Required | Required |

---+++ Aspect: Source code and licensing

   1. We will only distribute open source software in the OSG software stack, except in very rare circumstances. 
   1. Software must have a license
   1. We will only distribute software which we are legally allowed to distribute. 
   1. We want to build software from the original source code whenever possible. 
   1. We may need your help building the software. (Note: We use the Metronome software at the [[http://nmi.cs.wisc.edu][NMI Build and Test Lab]] (at the University of Wisconsin-Madison) to build our software.)

| *Aspect* | *OSG Owned* | *Close Collaborator* | *No relationship* |
| _Open Source_ | Required | Required | Required |
| _Has License_ | Required | Required | Required |
| _Legally allowed to distribute_ | Required | Required | Required |
| _Build from source_ | Required | Strongly Desired | Strongly Desired |
| _Help building from source_ | Required | Strongly Desired | Desired | 

---+++ Aspect: Software Release Process

We want to understand your software release process. This helps us in two ways: it helps us evaluate the quality of the software, and it helps us understand when we can take a particular release of the software.

   1. What is your release cycle?
   1. How do you version your software?
   1. How do you test before your release?
   1. How do you notify your customer (particularly us) about new releases?

| *Aspect* | *OSG Owned* | *Close Collaborator* | *No relationship* |
| _Understand release cycle_ | Required | Desired | Desired |
| _Understand versioning_ | Required | Required | Required | 
| _Understand testing_ | Required | Required | Desired |
| _Notification Process_ | Required | Required | Desired |

---+++ Aspect: Software Testing

We want to be able to test the software before we distribute, but we don't always have the ability to develop software tests on our own because we do not understand the software as well as the software provider. Therefore, we need help in testing the software.

   1. We need to know about existing tests for the software. How complete are they? How can we run the tests?
   1. If tests don't exist, we want the software provider to create tests.
   1. If the software provider can't give us tests, we want help in making a test suite.

| *Aspect* | *OSG Owned* | *Close Collaborator* | *No relationship* |
| _Existing Tests_ | Required | Required | Required |
| _Need tests from provider_ | Required | Strongly Desired | Desired |
| _Help with test suite_ | Required | Strongly Desired | Desired |

---+++ Aspect: Security

We are worried about software security. Our software is used by many users in an open, distributed environment. We must take security seriously. 

   1. What is the best way to contact you if there is a security emergency? Is is the same way that we contact you as described above?
   1. Do you watch for security notices from third-party software you depend on? Do you need help in doing this?
   1. Has the software been tested against known security vulnerability? (XSS attacks, buffer overflows, SQL injections, etc?)
   1. Does the software listen on network ports? Which ones?
   1. What is the software security policy? For example:
      1. Does the software provider deliver security fixes without requiring us to take new features?
      1. Can we learn about security flaws before you release the fix, so we can prepare our deployment of the fix?
      1. When do you release the details of a security flaw, if ever?
      1. How can we learn about security flaws and fixes?

| *Aspect* | *OSG Owned* | *Close Collaborator* | *No relationship* |
| _Security Contact_ | Required | Required | Desired |
| _Watching security notices?_ | Desired | Desired | Desired |
| _Security tested?_ | Desired | Desired | Desired |
| _Description of network ports_ | Required | Desired | Desired |
| _Description of security policy_ | Required | Strongly Desired | Strongly Desired |
| _Just security fixes?_ | Required | Strongly Desired | Strongly Desired |
| _Advance notice of security flaw?_ | Required | Strongly Desired | Strongly Desired |
| _Method for getting security notices_ | Required | Strongly Desired | Strongly Desired |

---+++ Aspect: Support

There is a lot of software in the OSG Software Stack and it is a challenge for us to support all of it. We need help.

   1. We need a method for getting help for the software when we can't answer questions. Things to think about:
      1. How should we request support?
      1. Can you give us tutorials when we start out, or some other extra help?
      1. How much support can you offer? (How often can you answer questions? Can you provide debugging "in the field"?)\
      1. Do you have a bug tracking system? If so, how can we submit a ticket?
   1. For software we rely on heavily, we may want to set up a strong connection, perhaps a regular (monthly?) phone call to keep OSG coordinated with you, so we understand your plans and you understand ours.
   1. We need to understand how quickly you can fix a bug if we encounter one. Your response might depend on how serious the bug is and how complicated it is. In general, how quickly can you help us?
   1. Can we ask you for new features?

| *Aspect* | *OSG Owned* | *Close Collaborator* | *No relationship* |
| _Ability to get support_ | Required | Strongly Desired | Strongly Desired |
| _Stronger connection_ | Required | Strongly Desired | Desired |
| _Understand speed to fix bugs_ | Required | Strongly Desired | Desired |
| _Understand feasibility of new requests_ | Required | Strongly Desired | Desired |

If there is a bug or problem or vulnerability in your software, how soon you can help us? Can you fill in the table below. The columns show how difficult to release a fix by the software provider. The rows show how badly OSG needs the fix.

---+++ Aspect: End of Life
OSG strongly desires not to develop any software. We want to leverage other people's ability to make high-quality software in their area of expertise. However, there is a chance that a software provider will no longer be able to maintain some software. This is one reason we wish to be able to build the software from source (see above). 

Because our stakeholders may need to continue using the software for some time, we may need to take on support of software that can no longer be maintained by an external software developer. Therefore, we need to learn about end-of-life plans in advance. 

| *Aspect* | *OSG Owned* | *Close Collaborator* | *No relationship* |
| _Inform OSG three months before software reaches end of life_ | Required | Required | Strongly Desired |
| _Work with OSG to take on maintenance of orphaned software_ | Required | Strongly Desired | Strongly Desired |
