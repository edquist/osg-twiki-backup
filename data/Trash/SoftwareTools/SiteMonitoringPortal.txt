%META:TOPICINFO{author="KyleGross" date="1476285063" format="1.1" version="1.3"}%
%META:TOPICPARENT{name="PlansTimelines"}%
---+ Site Monitoring Portal Plan

In CMS's requirements, they state:

<div style="margin-left: 0em; margin-right: 0em; background-color: #ffff66; border: 1px solid black; padding: 0.5em;">
Integrate all the existing monitoring functionalities for CE and SE into a single sitewide “monitoring portal”. The objective here is that all the monitoring of a site is easily accessible to a site admin or user at the site itself, and via a single web page. This includes RSV, Gratia CPU and data transfer accounting, SRM watch, dcache statistics module, GIP validity checking, and anything else OSG is monitoring.
</div>

While this sounds like a grandiose idea, the initial implementation can be quite simple. 

---++ Initial Goal

The goal is to have a single web page, hosted at a CE, which has a set of links. Those links would be other pages already present at the site, and pages hosted at central OSG servers. There will be *no new data* provided by this portal. 

This page will look fairly simple. It will be divided into sections that will contain the following data:

   * RSV Data
      * Site RSV link 1
      * Site RSV link 2
      * ... 
      * Link to MyOSG
   * Gratia Data
      * Site's Gratia data (if available)
      * OSG Gratia link
      * Maybe some custom links to make common queries of OSG Gratia data easy.
   * Storage Data
      * Links to dCache information at site
   * Help
      * Link to OSG web site
      * Link to Twiki
      * Other links?

The page doesn't need to look fancy, but some minimal styling and a graphic or two to make it look one step up from plain text would be appropriate. Graphics can be the OSG logo. 

---++ Initial Implementation

The web page will be hosted by the already existing Apache installation provided by the OSG CE. 

The url for accessing his page is: https://your_host_name:8443/site

The VDT_LOCATION/osg/etc/config.ini has a option in the Misc Services section that allows you to enable/disable this feature:
<pre class="screen">
; This setting indicates whether the osg index page generation will be run,
; by default this is not run
enable_webpage_creation = %(disable)s
</pre>

<b>NOTE:</b> This feature requires python 2.3+ so it will not even be downloaded on platforms (e.g. SL3) which cannot support this version of python.

There will be no automatic discovery of anything that isn't contained within the VDT location that hosts this web page.

There will be two scripts:

---+++ configure_osg_portal
This will create a configuration file that can be edited by the site administrator, and used as input to the make_osg_portal script. I don't have a strong opinion on the format of the configuration file. It will list all of the links that are above. For example, it will list the RSV data for the CE it is part of (we know that), and some commented-out example links to RSV web pages. The same thing will be true for Gratia data, except that most sites do not have a local Gratia instance, so it will be commented out. 

Site administrators will edit this configuration file to add or modify any links they like.

---+++ make_osg_portal

There will be a simple script that reads the configuration file created by configure_osg_portal and outputs a web page into the appropriate Apache directory in the VDT installation. It will be a relatively straightforward transformation of the configuration file into simplistic HTML. At this point, the web page will be readable by anyone that points their web browser at the CE's web server. 

Site administrator's will be able to edit the HTML directly if they like, but if they rerun make_osg_portal they will lose their changes. 

---+++ Trash/Integration into the VDT
We'll check this directly into the VTD's source code repository, once it is complete, and the VDT team will have the long-term responsibility for maintaining it. Marco does not need to be responsible for this step.

---++ Comments
This description is a bit bare bones. Alain is tired and ready to go home. We'll flesh it out as we go along. 

The goal is for this to be relatively simple, because we don't know what the final version should really look like. This will be a first stab, and we (OSG) will gradually improve it based on feedback from users.