%META:TOPICINFO{author="TanyaLevshina" date="1267217553" format="1.1" reprev="1.3" version="1.3"}%
%META:TOPICPARENT{name="NEESFileTransfer"}%
---+!! *<nop>%SPACEOUT{ "NEES Storage Tools Installation for Integration test" }%*
%TOC%

%STARTINCLUDE%
%BR%


---++ Introduction
This is first draft of the installation document for NEES Storage Tools. The tools are planning to be used for NEES data archiving to Fermi dCache public Storage. The tools are not packaged yet. The procedure is pretty cumbersome and will need to be straighten out but the purpose of this document is to allow to start integration testing. 

---++ Dependencies
In order for storage tools to work the following is need to be installed on the node:
   * gnutar 1.17 or higher [[http://ftp.gnu.org/gnu/tar/tar-1.17.tar.gz][downlad]]
   * python 2.4.6 or higher [[http://www.python.org/ftp/python/2.4.6/Python-2.4.6.tgz][download]]
   * java 1.5 or higher (will be installed with OSG client)
   * netlogger python-api 4.1.2 or higher [[http://acs.lbl.gov/NetLogger-releases/src/4.1.2/netlogger-python-4.1.2.tar.gz][download]]
   * svn client
   * [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/ClientInstallationGuide][OSG client]] 

---++ Check List for job submitter
The  following assumptions should be true for a person whose credential will be used to for submitting the archival job:
    * valid Fermilab principal
    * membership in Fermilab vo and /fermilab/nees group      
    * DN added to dCache authorization files
    * be able to generate voms-proxy certificate on the submission node 

---++ Installation
After you installed all the required packages you can proceed with installing storage tools. In order to do you will need to download it from svn:
Login on submission node, then
<pre class="screen">
mkdir nees
cd nees
svn checkout  https://vdt.cs.wisc.edu/svn/nees-ft/trunk/storage_tools
</pre>
Now, you will have to modify setup.script:
<pre class="screen">
#!/bin/sh

#export storage tool home
export STORAGE_TOOLS_HOME=/home/tlevshin/nees

#export up Netlogger home
export NETLOGGER_HOME=/home/tlevshin/netlogger-4.1.2


#setup  OSG client
. /opt/osg/setup.sh

#define python command
export PYTHON_CMD=python2.4

#put Netlogger libraries and storage tools python modules are in PYTHONPATH
# if node is 64bit use
#export PYTHONPATH=$NETLOGGER_HOME/lib64/python:$STORAGE_TOOLS_HOME/src/python
#if you have 32bit node use this:
export PYTHONPATH=$NETLOGGER_HOME/lib/python:$STORAGE_TOOLS_HOME/src/python

#add gnutar 1.17, python 2.4, netlogger tools, storage tools in your PATH
export PATH=/home/tlevshin/Python-2.4.6:/home/tlevshin/tar-1.17/src/tar:$NETLOGGER_HOME/bin:$STORAGE_TOOLS_HOME/bin:$PATH

</pre>

After you modified configuration you have to source the _setup.sh_ file
<pre class="screen">
. setup.sh
</pre>

Now you are ready to create your archive!
---++ Creating a File Archive
---+++ Creating multivolume tar file
Create a directory for the multivolume tar file and select the directory you would like to tar and archive. For example, let's assume that you want to archive directory _nees_data_ and create temporary multivolume tar file in the directory _$HOME/tmp/tarfiles_for archive_:
<pre class="screen" >
<verbatim>
cd
mkdir -p tmp/tarfiles_for archive
cd tmp/tarfiles_for_archive
multivol-tar.sh -c -L 1000000 -f nees_data_`date '+%Y%m%d%H%S'`-v00001.tar ../nees_data
Using tar command /home/tlevshin/tar-1.17/src/gnutar
Finished writing nees_data_201002251729-v00001.tar; next volume is 2.
Finished writing nees_data_201002251729-v00002.tar; next volume is 3.
Finished writing nees_data_201002251729-v00003.tar; next volume is 4.
Finished writing nees_data_201002251729-v00004.tar; next volume is 5.
Finished writing nees_data_201002251729-v00005.tar; next volume is 6.
Finished writing nees_data_201002251729-v00006.tar; next volume is 7.
Finished writing nees_data_201002251729-v00007.tar; next volume is 8.
</verbatim>
</pre>  

The script will create multiple files of the specified size (provided with -L option in Kb) that are ready to be archived.

---+++ Generating file_list
Now you will need to generate a file list that will have all the files scheduled for archiving. In order to create the list in _$HOME/nees_data_archive_list_:
<pre class="screen">
cd 
cd tmp/tarfiles_for_archive
ls -1|while read name; do echo `pwd`/$name >> ~/nees_data_archive_list; done
</pre>

---+++ Configuring archive task
The last step before runnig archiving tools is to create configuration file. The template of the configuration file is located in _$STORAGE_TOOLS_HOME/etc_ directory under the name of _archive.config.template. You will need to copy and edit new version of this file:
<pre class="screen">
cd $STORAGE_TOOLS_HOME/etc
cp archive.config.template nees_data_archive_1.config
edit nees_data_archive_1.config
#CONFIGURATION FILE FOR NEES ARCHIVE
#FQN of the file that lists all the files that should be archived/checked
FILELIST_NAME = /home/tlevshin/nees_data_archive_list

#SURL - storage url
#storage for volatile dcache are - should be used for testing 
SURL = srm://fndca1.fnal.gov:8443/srm/managerv2\?SFN=/pnfs/fnal.gov/usr/fermigrid/volatile/fermilab/nees/test_archiver
#storage allocate to NEES - backed up with tapes 
#SURL = srm://fndca1.fnal.gov:8443/srm/managerv2\?SFN=/pnfs/fnal.gov/usr/nees

#LOG file directory
LOG_DIR = /home/tlevshin/nees/storage_tools/var/log

#LOG level
LOG_LEVEL = INFO
</pre>

---+++ Running archive task
Now you will need to generate your proxy certificate andstart your archiving task:
<pre class="screen">
cd $STORAGE_TOOLS_HOME
. setup.sh
voms-proxy-init  voms-proxy-init -voms fermilab:/fermilab/nees
archive.sh etc/nees_data_archive_1.config
echo $?
</pre>

You have upload all your files listed _nees_data_archive_list_  to dCache storage at Fermilab If this script ended successfully (exit code 0). You can check the log file located in _$STORAGE_TOOLS_HOME/var/log/FileArchive.nees_data_archive_list-<date>.log and also run a report (see next section). The script verifies that the file that ended up in dCache has the same adler32 checksum as local file. Otherwise , it will report the failure.

---+++ Generating report
If you want to see the list of files that have been transfer successfully to dCache at Fermilab you may execute the following command:
<pre class="screen">
[tlevshin@hpc14 storage_tools]$ report.sh -r 3 var/log/FileArchive.nees_data_archive_list-20100226144922.log
 2010-02-26 14:49:44  /home/tlevshin/tmp/tarfiles_for_archive/nees_data_201002251736-v00001.tar 28000001
 2010-02-26 14:50:05  /home/tlevshin/tmp/tarfiles_for_archive/nees_data_201002251747-v00001.tar 9e54c663
 2010-02-26 14:50:25  /home/tlevshin/tmp/tarfiles_for_archive/nees_data_201002251747-v00002.tar 2bca6685
 2010-02-26 14:50:48  /home/tlevshin/tmp/tarfiles_for_archive/nees_data_201002251747-v00003.tar c4fe88ba
 2010-02-26 14:51:07  /home/tlevshin/tmp/tarfiles_for_archive/nees_data_201002251747-v00004.tar b72c2894
 2010-02-26 14:51:28  /home/tlevshin/tmp/tarfiles_for_archive/nees_data_201002251747-v00005.tar 13a46a64
 2010-02-26 14:51:50  /home/tlevshin/tmp/tarfiles_for_archive/nees_data_201002251747-v00006.tar b684532e
 2010-02-26 14:52:11  /home/tlevshin/tmp/tarfiles_for_archive/nees_data_201002251747-v00007.tar ae38d94
 2010-02-26 14:52:30  /home/tlevshin/tmp/tarfiles_for_archive/nees_data_201002251747-v00008.tar 4e7dfee4
</pre>
It lists all the files that have been transferred by just executed archive acript to dChache and also print remote file checksum.  
If you want see all the file that failed to be arcvhived you need to generate the following report:
<pre class="screen">
 report.sh -r 2 var/log/FileArchive.nees_data_archive_list-20100226144922.log
</pre>

You can get the list of available reports and options by executing report with help option:
<pre class="screen">
 report.sh --help
 report.sh --help
usage: Usage:Report.py [options] log_name

options:
  -h, --help            show this help message and exit
  -r REPORT_NUMBER, --report_number=REPORT_NUMBER
                        report_number (1-8):where 
                        #1 - list of files that have been attempted to archive;
                        #2 - list of failed attempts to archive files;
                        #3 - list of files that are successfully archived;
                        #4 - list of files currently on tapes;
                        #5 - list of files that are in dCache but not on tape;
                        #6 - list of corrupted files on tape;
                        #7 - list time interval needed for file archiving
  -s START_TIME, --start_time=START_TIME
                        start time of report: year-month-day-hour-min-sec
  -e END_TIME, --end_time=END_TIME
                        end time of report: year-month-day-hour-min-sec
  -f FORMAT, --format=FORMAT
                        output format: [raw|html]

</pre>

---+++ Verifying that files are on tape

To check if the files are already been moved from disk to tapes you will need to execute verify.sh with a same configuration file you have use for archive:
<pre class="screen">
cd $STORAGE_TOOLS_HOME
. setup.sh
archive.sh etc/nees_data_archive_1.config
echo $?
</pre>

-- Main.TanyaLevshina - 25 Feb 2010
