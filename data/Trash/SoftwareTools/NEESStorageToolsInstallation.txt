%META:TOPICINFO{author="TanyaLevshina" date="1267205828" format="1.1" version="1.2"}%
%META:TOPICPARENT{name="NEESFileTransfer"}%
---+!! *<nop>%SPACEOUT{ "NEES Storage Tools Installation for Integration test" }%*
%TOC%

%STARTINCLUDE%
%BR%


---++ Introduction
This is first draft of the installation document for NEES Storage Tools. The tools are planning to be used for NEES data archiving to Fermi dCache public Storage. The tools are not packaged yet. The procedure is pretty cumbersome and will need to be straighten out but the purpose of this document is to allow to start integration testing. 

---++ Dependencies
In order for storage tools to work the following is need to be installed on the node:
   * gnutar 1.17 or higher
   * python 2.4.6 or higher
   * java 1.5 or higher
   * netlogger python-api 4.1.2 or higher
   * svn client
   * OSG client 

---++ Check List for job submitter
The  following assumptions should be true for a person whose credential will be used to for submitting the archival job:
    * valid Fermilab principal
    * membership in Fermilab vo and /fermilab/nees group      
    * DN added to dCache authorization files
    * be able to generate voms-proxy certificate on the submission node 

---++ Installation
After you installed all the required packages you can proceed with installing storage tools. In order to do you will need to download it from svn:
Login on submission node, then
<pre class="screen">
mkdir nees
cd nees
svn checkout  https://vdt.cs.wisc.edu/svn/nees-ft/trunk/storage_tools
</pre>
Now, you will have to modify setup.script:
<pre class="screen">
#!/bin/sh

#export storage tool home
export STORAGE_TOOLS_HOME=/home/tlevshin/nees
#setup location of OSG client
. /opt/osg/setup.sh

#if python installed under local account
#make sure that python2.4.6 is in the PATH
export PATH=/home/tlevshin/Python-2.4.6:$PATH
#set up Netlogger home
export NETLOGGER_HOME=/home/tlevshin/netlogger-4.1.2
#put Netlogger libraries int PYTHONPATH
# if node is 64bit use
#export PYTHONPATH=$NETLOGGER_HOME/lib64/python
export PYTHONPATH=$NETLOGGER_HOME/lib/python
#if gnutar is not in your path add it:
export PATH=/home/tlevshin/tar-1.17/src/tar:$PATH
#add netlogger tools and storage tools in your PATH
export PATH=$PATH:$NETLOGGER_HOME/bin:$STORAGE_TOOLS_HOME/bin
</pre>

After you modified configuration you have to source the _setup.sh_ file
<pre class="screen">
. setup.sh
</pre>

Now you are ready to create your archive!
---++ Creating a File Archive
---+++ Creating multivolume tar file
Create a directory for the multivolume tar file and select the directory you would like to tar and archive. For example, let's assume that you want to archive directory _nees_data_ and create temporary multivolume tar file in the directory _$HOME/tmp/tarfiles_for archive_:
<pre class="screen" >
<verbatim>
cd
mkdir -p tmp/tarfiles_for archive
cd tmp/tarfiles_for_archive
multivol-tar.sh -c -L 1000000 -f nees_data_`date '+%Y%m%d%H%S'`-v00001.tar ../nees_data
Using tar command /home/tlevshin/tar-1.17/src/gnutar
Finished writing nees_data_201002251729-v00001.tar; next volume is 2.
Finished writing nees_data_201002251729-v00002.tar; next volume is 3.
Finished writing nees_data_201002251729-v00003.tar; next volume is 4.
Finished writing nees_data_201002251729-v00004.tar; next volume is 5.
Finished writing nees_data_201002251729-v00005.tar; next volume is 6.
Finished writing nees_data_201002251729-v00006.tar; next volume is 7.
Finished writing nees_data_201002251729-v00007.tar; next volume is 8.
</verbatim>
</pre>  

The script will create multiple files of the specified size (provided with -L option in Kb) that are ready to be archived.

---+++ Generating file_list
Now you will need to generate a file list that will have all the files scheduled for archiving. In order to create the list in _$HOME/nees_data_archive_list_:
<pre class="screen">
cd 
cd tmp/tarfiles_for_archive
ls -1|while read name; do echo `pwd`/$name >> ~/nees_data_archive_list; done
</pre>

---+++ Configuring archive task
The last step before runnig archiving tools is to create configuration file. The template of the configuration file is located in _$STORAGE_TOOLS_HOME/etc_ directory under the name of _archive.config.template. You will need to copy and edit new version of this file:
<pre class="screen">
cd $STORAGE_TOOLS_HOME/etc
cp archive.config.template nees_data_archive_1.config
edit nees_data_archive_1.config
#CONFIGURATION FILE FOR NEES ARCHIVE
#FQN of the file that lists all the files that should be archived/checked
FILELIST_NAME = /home/tlevshin/nees_data_archive_list

#SURL - storage url
#storage for volatile dcache are - should be used for testing 
SURL = srm://fndca1.fnal.gov:8443/srm/managerv2\?SFN=/pnfs/fnal.gov/usr/fermigrid/volatile/fermilab/nees/test_archiver
#storage allocate to NEES - backed up with tapes 
#SURL = srm://fndca1.fnal.gov:8443/srm/managerv2\?SFN=/pnfs/fnal.gov/usr/nees

#LOG file directory
LOG_DIR = /home/tlevshin/nees/storage_tools/var/log

#LOG level
LOG_LEVEL = INFO
</pre>

---+++ Running archive task
Now you can start your archiving task:
<pre class="screen">
cd $STORAGE_TOOLS_HOME/src/python

---+++ Generating report
---+++ Verifying that files are on tape

-- Main.TanyaLevshina - 25 Feb 2010