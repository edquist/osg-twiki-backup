%META:TOPICINFO{author="MaximPotekhin" date="1279901286" format="1.1" reprev="1.13" version="1.13"}%
%META:TOPICPARENT{name="PlansTimelines"}%
%RED% Draft Page%ENDCOLOR%

---++ Next Meeting
   * Friday July 9, 10:30 Central
   * 605-475-4800 883253#

---++ Requirements

I believe we have a consistent set of requirements:

   * Status with Pass/Fail
   * A list of key/value pairs
   * Optional debugging output

%TWISTY{
showlink="Show extracts from mail about requirements..."
hidelink="Hide extracts..."
}%

June 28th, Igor wrote:
<pre style="margin-left:2em" class="screen">
So the data you want is similar to what I (glideinWMS) am interested in:
a) Pass/Fail,
b) list of (key,value) pairs

PS: Just don't call it CONDOR_AD:*... should be framework neutral.
</pre>

June 28th, Mats Ryne wrote:
<pre style="margin-left:2em" class="screen">
We *need* debugging output. Yes, the tests are going to be used
*mostly* in automated fashion, but once they fail we need information.
If the tests do not have enough debugging output, we will probably
write our own tests again just to get that information.
</pre>

June 28th, Doug Strain wrote:
We'd like:
<pre style="margin-left:2em" class="screen">
- Test status:  Preferably not only PASS/FAIL, but a general string, such as Warning, 
  Not run, Not available, or other status 
  (though I think it would be sufficient to push this to a different field if necessary)
- Human-readable Description or an error code, for further information
- A long description, with details, like stdout/stderr of the commands run, logfile, etc.
- Hostname of target, as well as the hostname of the source (where the test is run), as well as a srm url.
- Optional extensible fields (could be key/value pairs) to return other information.  Ie, for a "srmping" test, return the backendtype (dcache, bestman, etc) if it is given.

As RSV comes very close to solving our issues and we already use it for other probes, this format suits us well.
I think we are also amenable to other formats if it is accepted as standard.
</pre>

%ENDTWISTY%

---++ Desires 

   * [Igor] It would be nice to be easy to process with command-line tools. (We refer to this colloquially as "greppable" output)
   * [Maxim, Robert] It would be nice to have have a standard format (XML, JSON) for which there exist good parsers.
   * [Alain] It would be nice to be able to easily re-use these tests within RSV if we wish.
   * [Alain] It would be nice if the output format was easily convertible to other formats to assist with these. (For instance, if we have XML format, it would be nice to convert it to RSV. Or vice-versa for the benefit of people that want XML.

---++ References 
[[https://twiki.cern.ch/twiki/bin/view/LCG/GridMonitoringProbeSpecification][WLCG Grid Monitoring Probe Specification]] a.k.a. RSV probe format.

[[http://en.wikipedia.org/wiki/JSON][JSON background from Wikipedia]]

[[http://www.json.org/][JSON homepage]]

---++ Examples
Sample test output from one of Derek Weitzel's experiments:

<pre>
metricName: org.osg.wn.osgdata-available
timestamp: 2010-07-02T15:05:29.0CDT
metricType: status
metricStatus: PASSED
detailsData: 
EOT
</pre>

The equivalent in JSON, by Maxim:

<pre>
{
  "name": "org.osg.wn.osgdata-available",
  "time": "2010-07-02T15:05:29.0CDT ",
  "type": "status",
  "result": "PASSED",
  "detailsData": ""
}
</pre>

A possible equivalent in XML (by Igor):

<pre>
&lt;OSGTestResult&gt;
  &lt;description&gt;
   &lt;property name="id" value="org.osg.wn.osgdata.probe"/&gt;
   &lt;property name="started" value="2010-07-02T15:05:29-05:00"/&gt;
  &lt;/description&gt;
  &lt;result&gt;
   &lt;status value="OK"/&gt;
   &lt;metric name="org.osg.wn.osgdata-available" collected="2010-07-02T15:05:29-05:00" uri="local" value="PASSED"/&gt;
   &lt;detail&gt;&lt;/detail&gt;
  &lt;/result&gt;
&lt;/OSGTestResult&gt;
</pre>

---++ Current proposal

Use XML.  One _test_ result can contain multiple _metrics_, which with a different result. 

Each element should be on a separate line for ease of cmdline parsing. (See example below) _But note_: This is not a hard requirement because tools like =xmlline --format= can be used when necessary. However, it is recommended for purposes of readability. 

There are some mandatory fields and optional fields are possible.

Mandatory fields:
   * test unique name
   * timestamp: ISO8601
   * test result

Optional fields:
   * metrics results

Other constraints:
   *  None yet

Igor's proposal (example):
<pre>
&lt;OSGTestResult&gt;
  &lt;description&gt;
   &lt;property name="id" value="org.osg.wn.glexec.probe"/&gt;
   &lt;property name="version" value="1.2"/&gt;
   &lt;property name="command" value="/usr/bin/perl /raid2/osg-data/osg/ttk/filesystem/permissions.pl /osg/data"/&gt;
   &lt;property name="started" value="2010-07-02T15:05:00-05:00"/&gt;
   &lt;property name="ended" value="2010-07-02T15:08:22-05:00"/&gt;
  &lt;/description&gt;
  &lt;result&gt;
   &lt;status value="OK"/&gt;
   &lt;metric name="org.osg.wn.glexec.location" collected="2010-07-02T15:05:29-05:00" uri="local" value="/usr/bin/glexec"/&gt;
   &lt;metric name="org.osg.wn.glexec.version" collected="2010-07-02T15:05:29-05:00" uri="local" value="1.2.3.foo"/&gt;
   &lt;metric name="org.osg.wn.glexec.GUMS.version" collected="2010-07-02T15:05:33-05:00" uri="https://gums.fnal.gov/gums" value="1.3.1"/&gt;
   &lt;detail&gt;Discovered glexec binary in /usr/bin.
   Version appears to be 1.2.3.foo
   glexec mapping for pilot proxy PASSED.
   &lt;/detail&gt;
  &lt;/result&gt;
&lt;/OSGTestResult&gt;
</pre>

Maxim's proposal:

Maxim: I based the examples below upon what I read about best practices in XML design, -- however, it's true that this is a "grey area"  and there is no definitive "best". I believe that this format has better readability that the above example, and is still
reasonably easy to parse with Unix filters if needed -- I compromised in the "result" section to make it so. I took "detail" out of result and put it in the same level as other sections because imho it's cleaner -- the "result" is just a collection of metrics and
this is simpler. Detail characterizes the outcome of the whole test.

*Version 1*
<pre>
&lt;OSGTestResult id="org.osg.wn.glexec.probe" version="1.2"&gt;
  &lt;test&gt;
     &lt;cmd&gt;/usr/bin/perl /raid2/osg-data/osg/ttk/filesystem/permissions.pl /osg/data&lt;/cmd&gt;
     &lt;tStart&gt;2010-07-02T15:05:29-05:00&lt;/tStart&gt;
     &lt;tEnd&gt;2010-07-02T15:05:29-05:01&lt;/tEnd&gt;
  &lt;/test&gt;
  &lt;result&gt;
     &lt;metric name="location" ts="2010-07-02T15:05:33-05:00" uri="local"&gt;/usr/bin/glexec&lt;/metric&gt;
     &lt;metric name="version"  ts="2010-07-02T15:05:33-05:00" uri="local"&gt;1.2.3foo&lt;/metric&gt;
     &lt;metric name="GumsVer"  ts="2010-07-02T15:05:33-05:00" uri="https://gums.fnal.gov/gums"&gt;1.3.1&lt;/metric&gt;
  &lt;/result&gt;
  &lt;detail&gt;Discovered glexec binary in /usr/bin. Version appears to be 1.2.3.foo. glexec mapping for pilot proxy PASSED&lt;/detail&gt;
&lt;/OSGTestResult&gt;
</pre>

*Version 2*
<pre>
&lt;OSGTestResult&gt;
  &lt;id version="1.2"&gt;org.osg.wn.glexec.probe&lt;/id&gt;
  &lt;test tStart="2010-07-02T15:05:29-05:00" tEnd="2010-07-02T15:05:29-05:01"&gt;/usr/bin/perl /raid2/osg-data/osg/ttk/filesystem/permissions.pl /osg/data&lt;/test&gt;
  &lt;result&gt;
     &lt;metric name="location" ts="2010-07-02T15:05:33-05:00" uri="local"&gt;/usr/bin/glexec&lt;/metric&gt;
     &lt;metric name="version"  ts="2010-07-02T15:05:33-05:00" uri="local"&gt;1.2.3foo&lt;/metric&gt;
     &lt;metric name="GumsVer"  ts="2010-07-02T15:05:33-05:00" uri="https://gums.fnal.gov/gums"&gt;1.3.1&lt;/metric&gt;
  &lt;/result&gt;
  &lt;detail&gt;Discovered glexec binary in /usr/bin. Version appears to be 1.2.3.foo. glexec mapping for pilot proxy PASSED&lt;/detail&gt;
&lt;/OSGTestResult&gt;
</pre>


---++ Open Questions

   * Should we have a standard for naming our metrics, similar to the WLCG probe output? (Such as Igor's example of "org.osg.wn.glexec"?)
      <br>Igor: Maybe for the OSG standard tests, but VO provided ones should have no restrictions.
   * Should we declare standard command-line parameters for our tests, similar to the WLCG probe output?
      <br>Igor: Yes... but that should be a different thread.
