%META:TOPICINFO{author="SuchandraThapa" date="1274470518" format="1.1" version="1.35"}%
%META:TOPICPARENT{name="ComputeElementInstall"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%DOC_STATUS_TABLE%
%TOC{depth="2"}%

%STARTINCLUDE%
%BR%
---+ _%INCLUDEHEADING%  %SPACEOUT{ "%TOPIC%" }%_
%EDITTHIS%
%BR%

---++ Introduction to Managed Fork

Managed Fork is an optional service which  replaces the default fork jobmanager with Condor to manage incoming fork requests.  Commands such as =condor_q= and =condor_history= can be used to see the actual command lines of the fork jobs during and after execution, providing an important logging capacity.  More importantly, the number of fork jobs can be controlled with a configurable policy to help ensure that the CE is not overwhelmed by fork jobs.  This is a very important consideration: the standard fork manager allows a user to accidentally or maliciously "fork bomb" a CE.  As such, Managed Fork is highly recommended.

%IMPORTANT% The Managed Fork job manager does not schedule fork jobs onto compute nodes in the execution pool. Using a Condor local universe, the jobs are still scheduled to the CE headnode, but since the local universe is used they should run quickly and without delay unless a scheduling limit for the CE has been reached. 

---++ Install using Condor from the VDT
If you want to use Condor from the VDT, installation is simple:
<pre class="screen">
# cd $VDT_LOCATION
# source $VDT_LOCATION/setup.sh
# pacman -get  %CACHE%:ManagedFork
</pre>
During the update you may be asked if you would like to run Condor.  You will need to answer =y= to this because ManagedFork uses Condor to handle fork jobs on the CE.  Note that installing %CACHE%:ManagedFork will install a local Condor that is only used for ManagedFork jobs.

---++ Install using an existing Condor
Many site administrators have a pre-existing Condor (for the cluster's batch system, eg.) and wish to use it, rather than another copy of Condor, for Managed Fork jobmanger. The installation process is similar, but make sure you have =VDTSETUP_CONDOR_LOCATION= and =VDTSETUP_CONDOR_CONFIG= defined as discussed in PreparingComputeElement in order to specify your Condor installation.  The installation is done in same directory as the OSG CE software. Further reading on this is available  [[%VDT_DOCS_URL%/existing-condor.html][here]].   Setup these variables, then do:
<pre class="screen">
# cd $VDT_LOCATION
# source $VDT_LOCATION/setup.sh
# pacman -get  %CACHE%:ManagedFork
</pre>

---++ Enabling Managed Fork 
To configure the default jobmanager to be the Managed Fork jobmanager, execute the following command.
<pre class="screen">
# source $VDT_LOCATION/setup.sh
# $VDT_LOCATION/vdt/setup/configure_globus_gatekeeper --managed-fork y --server y
</pre>

By default, the Managed Fork jobmanager will behave just like the fork jobmanager.  If you wish to restrict it, you need to modify your local Condor configuration.  If you're using Condor from the VDT this can be done by editing =$VDT_LOCATION/condor/local.&lt;hostname&gt;/condor_config.local=.   

Here are some configuration suggestions:
   * Only allow 20 local universe jobs to execute concurrently: 
<pre class="programlisting">
   START_LOCAL_UNIVERSE = TotalLocalJobsRunning < 20
</pre>
   * Set a hard limit on most jobs, but always let grid monitor jobs run (strongly recommended):
<pre class="programlisting">
   START_LOCAL_UNIVERSE = TotalLocalJobsRunning < 20 || GridMonitorJob =?= TRUE
</pre>

---++ Disabling Managed Fork
To put back in place the default fork jobmanager (i.e. to disable the Managed Fork), execute the following command:
<pre class="screen">
# source $VDT_LOCATION/setup.sh
# $VDT_LOCATION/vdt/setup/configure_globus_gatekeeper --managed-fork n --server y
</pre>

---++ Further Details on Managed Fork
For more details on setup and configuration, refer to the [[%VDT_DOCS_URL%/notes/Globus-ManagedFork-Setup.html][VDT Managed Fork Jobmanager Release Notes]].

%STOPINCLUDE%

---++ *Comments*
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = StevenTimm

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = ComputeElement

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%


 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = RobertEngel
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


############################################################################################################
-->

%META:TOPICMOVED{by="ForrestChristian" date="1166051931" from="Integration.ManagedFork050" to="Integration/ITB_0_5.ManagedFork"}%
