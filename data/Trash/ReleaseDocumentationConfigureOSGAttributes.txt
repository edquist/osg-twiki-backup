%META:TOPICINFO{author="SuchandraThapa" date="1208200955" format="1.1" reprev="1.31" version="1.31"}%
%META:TOPICPARENT{name="ComputeElementInstall"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

%STARTINCLUDE%
%BR%
---+ _%INCLUDEHEADING%  %SPACEOUT{ "%TOPIC%" }%_
%EDITTHIS%
%BR%

---++ OSG attributes
At this point, there are several OSG attributes (environmental variables) that need to be established for required and optional CE services to run effectively.   For those sites who plan to publish SRM information using their GIP, and use GUMS to do authentication, it is essential that =vdt-control --on= is run *before* the =configure-osg.py= script is invoked, and also that the =gums-host-cron= script (see GumsHostCron) is once invoked manually.  Otherwise the =configure-osg.py= script will error out.

---++ Setting attributes
The attributes are set by executing the =$VDT_LOCATION/monitoring/configure-osg.py= script. This script functions in batch mode and reads a specified ini configuration file and then configures your install provided the options in the ini file appear to be valid :
   * You can extract information from an existing installation using the -e option
   * There is a sample configuration file with detailed instructions and documentation on settings at =$VDT_LOCATION/monitoring/config.ini=
   * Reads all the information described in the [[PrepareForComputeElementConfigure][CE Site Administrator Overview]]. 
   * It configures the optional <nop>MonALISA service using the <i>$VDT_LOCATION/vdt/setup/configure_monalisa</i> script.  
   * If you asked for <nop>MonALISA to be activated, an <i>/etc/init.d/MLD</i> will be added to your systems rc.d services and started.  If you did not wish <nop>MonALISA to be activated, it will still run the <i>configure_monalisa</i> script but without the option to activate it.  
   * On the first execution only, it will copy the =./monitoring/locations/grid3-locations.txt= to =$OSG_APP/etc= with  666 permissions.
   *  If you are running Squid on the same node as the CE (not recommended) it will configure squid using the configure_squid script.
   *  It will configure whatever Gratia probes have been installed.
   * It will configure WSGram if this is enabled.
   * It will write any warnings/messages to the =$VDT_LOCATION/vdt-install.log= file

---++ Usage
The script is located in =$VDT_LOCATION/monitoring/configure-osg.py=.

<font color="red">This section needs more info. on how to invoke the python version after upgrading from a previous OSG installation via the OLD_VDT_LOCATION method.  (Alan Sill)</font>

| =./configure-osg.py  -c  -f CONFIG_FILE  -D $VDT_LOCATION/monitoring= | Executes the script in configure mode using the configuration file specified by =CONFIG_FILE=|
| =./configure-osg.py  -v  -f CONFIG_FILE  -D $VDT_LOCATION/monitoring= | Executes the script in verify mode using the configuration file specified by =CONFIG_FILE=|
| =./configure-osg.py  -e  -f CONFIG_FILE  -D EXISTING_LOCATION= |Extracts configuration from an existing install located at =EXISTING_LOCATION= and writes a configuration file for it at  =CONFIG_FILE=|
| =./configure-osg.py  -h= | Displays help information |
              
You can also use the -d option to have debug information written to the =vdt-install.log= file. 

With each successful execution of the =configure-osg.py= script:
   * the =osg-attributes.conf= file is updated   
   * the =osg-job-environment.conf= file is updated   
   * the =osg-local-job-environment.conf= file is updated   
   * the =gip-attributes.conf= file is updated

%NOTE% You can rerun the configure-osg.py script at a later time to reconfigure your settings or if the initial configuration did not complete successfully.

%STOPINCLUDE%
%BR%
%COMPLETE3% %BR%
%RESPONSIBLE% Main.StevenTimm - 25 Oct 2007 %BR%
%REVIEW% Main.HorstSeverini - 08 Nov 2007

%META:TOPICMOVED{by="ForrestChristian" date="1166046785" from="Integration.ConfigureOSGAttributes050" to="Integration/ITB_0_5.ConfigureOSGAttributes"}%
