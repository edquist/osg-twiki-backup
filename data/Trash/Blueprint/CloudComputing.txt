%META:TOPICINFO{author="JohnHover" date="1345581986" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="TechnologyInvestigations"}%
%TOC%

%STARTINCLUDE%

Several technology investigations have some connection to the general topic of cloud computing and virtualization. As cloud-style computing is different style of doing distributed computing from classic Grid computing, we think it deserves special focus. 

---++ Rationales/Use cases
   * Classic grid computing promised to provide a distributed, homogeneous computing platform that user's can <i>plug into </i> much like an electrical grid. While this promise has been largely met, there are still significant inconsistencies between sites, such that each VO must do work to ensure their jobs will run at a site. Virtualization allows VOs to completely customize their job environment so that every site and worker node is suitable for their work. 
   * Similarly, Grid sites currently have a standard worker node profile. Virtualization can allow sites to dynamically re-partition their site resources to carve out distinct, easily-managed separate clusters, each with specific worker-node profiles. 
   * Providing sites and VOs a deployable cloud platform, particularly one compatible with EC2, allows VOs to uniformly access all of the following. If their workload works on one, it should work cleanly with all. VOs can dynamically expand and contract their resource pool, depending on need and their ability to pay for commercial cycles.
      1 Their own resources,
      1 Other OSG site resources,
      1 Academic and other (free) private cloud resources, and 
      1 Commercial cloud resources. 
 

---++ Goals
   * OSG should be able to offer VOs proven resources and processes for running in virtualized environments.
   * Lower the cost of entry for current and new VOs, by making it easier for them to get their applications running anywhere, and making it easier for them to offer their resources for use by others. 
   * Provide general-purpose VM creation definitions for Boxgrinder. Package repositories (YUM) suitable for automated use in VMs. Repository of pre-built VMs with minimal run-time contextualization necessary for common cases within OSG. 
   
---++ Investigation Tasks
---+++ !OpenStack as a Cloud platform for OSG site usage

!OpenStack is an EC2-compatible implementation of a cloud API and platform which is intended to become the best enterprise-grade open source product. 
   *  http://www.openstack.org/
   * Example topology for !OpenStack: <br />
     <img src="%ATTACHURLPATH%/BNL_Openstack_Networking.png" alt="BNL_Openstack_Networking.png" width='960' height='720' />   

Contributors: John Hover, Xin Zhao

---+++ Virtual Machine Authoring and Customization with Boxgrinder

Boxgrinder is a utility for authoring VM images and programmatically uploading them to Cloud providers. It allows you to define a hierarchy of <i>applicances</i> which can be built for whatever target platform is desired (KVM, OpenStack, EC2, VMWare, !VirtualBox, etc.) It is an alternative to the tedious and error-prone process of manually creating customized virtual machine images. 

   * http://boxgrinder.org/
   * http://svn.usatlas.bnl.gov/svn/griddev/boxgrinder/

Contributors: John Hover

---+++ Virtual Condor batch clusters, and dynamic VM Instance Management with Condor-G/Euca-tools/AutoPyFactory 

This investigation involves the task of invoking, monitoring, and terminating cloud-based VM instances, along with the issue of coordinating their management with virtual clusters they are participating in. 

Contributors: John Hover, Jose Caballero

---+++ !DeltaCloud and Condor-VM as an alternate Cloud platform for OSG usage. 

Deltacloud is an Apache project which defines a generic, cross-provider API and access layer. It can be used in front of Condor-VM to create a fully functional cloud platform. Or it can be used behind Condor-G to let Condor-G use many providers through a single, consistent API. 

   * http://deltacloud.apache.org/

Contributor: Alexander Zaytsev, Xin Zhao






---

-- Main.JohnHover - 21 Aug 2012
 

%META:FILEATTACHMENT{name="BNL_Openstack_Networking.png" attachment="BNL_Openstack_Networking.png" attr="" comment="Example topology for OpenStack" date="1345579609" path="BNL Openstack Networking.png" size="72932" stream="BNL Openstack Networking.png" tmpFilename="/usr/tmp/CGItemp2354" user="JohnHover" version="1"}%
