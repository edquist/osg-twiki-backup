%META:TOPICINFO{author="MarcoMambelli" date="1359150474" format="1.1" reprev="1.3" version="1.3"}%
%META:TOPICPARENT{name="BoSCO"}%
<!-- conventions used in this document
   * Local UCL_HOST = %URLPARAM{"INPUT_HOST" encode="quote" default="bosco"}%
   * Local UCL_USER = %URLPARAM{"INPUT_USER" encode="quote" default="user"}%
   * Local UCL_DOMAIN = %URLPARAM{"INPUT_DOMAIN" encode="quote" default="opensciencegrid.org"}%
   * Set TWISTY_OPTS_DETAILED = mode="div" showlink="Show Detailed Output" hidelink="Hide" showimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleopen-small.gif" hideimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleclose-small.gif" remember="on" start="hide" 
   * Set TOC2 =<div style="float:right; margin-right:-1.015em; padding:0.5em; background-color:white;">%TOC%<p class="twikiClear" /></div>
-->

---+!! Bosco Quick Start Guide
%DOC_STATUS_TABLE%
%TOC{depth="3"}%

---# Introdiction
This is a quick introduction to your personal Bosco installation. Check the [[BoSCO][main document]] to find out more about what Bosco is and how it works. Check the [[BoscoInstall][Install document]] for detailed installation requirements and all the install options. 

%INCLUDE{"BoscoInstall" section="BoscoInstall"}%

---# How to use Bosco
%INCLUDE{"BoscoInstall" section="BoscoUseShort"}%

---# How to submit a job
Here is a simple example to submit your first Bosco job.
For more examples and options check the [[BoSCO][main Bosco document]].

In order to send a job with Bosco you must:
   1. Have an executable
   1. Prepare a submit file
   1. Submit the job
 
---## The Executable
This is a simple bash script, called =myjob.sh=: <pre class="file">
#!/bin/bash

# Prepare for the execution

# Run the actual applications
/bin/hostname 
/bin/date 
/usr/bin/id 
/usr/bin/whoami 
/bin/env | /bin/sort  > myout-file-$1-$2

# Final steps

</pre>

Make sure that the file is executable: <pre class="screen">%UCL_PROMPT%  chmod +x myjob.sh</pre>

You can run it locally to test it and see the output: <pre class="screen">%UCL_PROMPT%  ./myjob.sh</pre>


---## The Submission File
This submission file will submit your job directly to the remote cluster, using the HTCondor "Grid" universe.  Copy it to a file, =example.condor=
<pre class="file">
universe = grid
grid_resource = batch %RED%pbs%ENDCOLOR% marco@uc3-pbs.uchicago.edu
Executable     = myjob.sh
arguments = $(Cluster) $(Process)
output = directjob.out.$(Cluster)-$(Process)
error = directjob.err.$(Cluster)-$(Process)
log = directjob.log.$(Cluster)
transfer_output_files = myout-file-$(Cluster)-$(Process)
should_transfer_files = YES
when_to_transfer_output = ON_EXIT
queue 1
</pre>

The type of cluster that you are submitting to, pbs, lsf, sge, or condor, must be supplied on the grid_resource line.

---## Job Submission
Submit the job in the file =example.condor= with the =condor_submit= command: <pre class="screen">
%UCL_PROMPT% condor_submit example.condor
</pre>

---## Job Monitoring
Monitor the job with =condor_q=.  For example, the job when idle is: <pre class="screen">
%UCL_PROMPT% condor_q

-- Submitter: uc3-c001.mwt2.org : <10.1.3.101:45876> : uc3-c001.mwt2.org
 ID      OWNER            SUBMITTED     RUN_TIME ST PRI SIZE CMD               
  12.0   marco           7/6  13:45   0+00:00:00 I  0   0.0  short2.sh 10      

1 jobs; 0 completed, 0 removed, 1 idle, 0 running, 0 held, 0 suspended
</pre>


The job could be idle if it is currently idle at the remote cluster.  When the job is being executed on the remote cluster, the =ST= (State) will change to =R=, and the =RUN_TIME= will grow.

Another method of monitoring a job is to check the job's =log=, a human readable (for the most part) time line of actions relating to the job.  The =logfile= was specified in the submission script, for example =logfile= in the example above.  You can view the log file by using =cat=: <pre class="screen">
%UCL_PROMPT% cat *.log*
</pre>

---## Job output
Once the job completes BOSCO will transfer back standard output, standard error and the output files (if specified in the submit file), e.g. the job above will create stdout and stderr files (unique for each submission) and a file named starting with =myout-file= (e.g. =myout-file-12-0=) in the directory where the =condor_submit= command was executed.


---# What's next
You can submit your job by modifying the example above.

If you have more complex jobs, here are some pages that describe more in detail how to submit HTCondor jobs. Bosco jobs are the same as HTCondor jobs:
   * Tutorial: http://research.cs.wisc.edu/htcondor/tutorials/alliance98/submit/submit.html
   * Condor manual: http://research.cs.wisc.edu/htcondor/manual/v7.6/2_5Submitting_Job.html

To learn more about Bosco check the following pages:
   * [[http://bosco.opensciencegrid.org/][BoSCO Web site]]
   * [[BoSCO][Using Bosco (v1.1)]]
   * [[BoscoInstall][Installing BoSCO]]
   * [[BoscoMultiUser][Installing BoSCO Multi User]]
   * [[TestBoSCO][BOSCO tests for developers and testers]]


---# Get Help/Support
To get assistance you can send an email to bosco-discuss@opensciencegrid.org

---+ Comments
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
   * Local OWNER = MarcoMambelli

 DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA       = General
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%
   * Local INCLUDE_TEST   = %YES%
   * Local REVIEW_READY   = %YES%
   * Local TEST_READY     = %YES%
   * Local RELEASE_READY  = %YES%

status for this document: in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )

   * Local REVIEWER       = 
   * Local REVIEW_PASSED  = %YES%

   * Local TESTER         = 
   * Local TEST_PASSED    = %YES%
############################################################################################################
-->
