%META:TOPICINFO{author="DerekWeitzel" date="1371587468" format="1.1" reprev="1.3" version="1.3"}%
%META:TOPICPARENT{name="BoSCO"}%
---+!! Bosco-R Instructions

%WARNING% This is a alpha document.  It will be constantly changing and may not work at all.

Bosco-R is the transparent integration of the [[http://www.r-project.org/][R statistics]] computing environment with [[http://bosco.opensciencegrid.org/][Bosco]].

%TOC%

---++ Requirements

   1. Installation of R on your submit machine.  You can find binaries on the [[http://cran.rstudio.com/][R website]]

---++ Installation Instructions

Installation is a three step process:

   1. Install Bosco
   1. Connect 1 cluster to Bosco
   1. Install the Bosco+GridR package.

Both 1 and 2 (the installation of Bosco and connecting a cluster) are covered in the Bosco [[https://twiki.grid.iu.edu/bin/view/CampusGrids/BoscoQuickStart][quick start guide]], please use that guide to install and configure Bosco.  This document will only cover the installation of the Bosco+GridR package.

---+++ Install Modified !GridR
%NOTE% This section will be greatly simplified once the modifications to !GridR have been sent upstream.

Download [[https://www.dropbox.com/s/tfcnsm1gag9krgu/GridR_0.9.3.tar.gz][GridR]].  Install with the command line:
<pre class="file">
%UCL_PROMPT% R CMD INSTALL --build Downloads/GridR_0.9.3.tar.gz 
</pre>


---++ Using BoscoR

---+++ A simple example.

Be sure to have bosco running.  To ensure that Bosco is running, you can run, from the command line:
<pre class="screen">
%UCL_PROMPT% source ~/bosco/bosco_setenv;
%UCL_PROMPT% bosco_start
</pre>

Start R, or RStudio, or whatever R environment you prefer.  First, you need to load the !GridR library:
<pre class="screen">
> library("GridR")
</pre>

Then, you need to initialize !GridR to use Bosco:
<pre class="screen">
> grid.init(service="bosco.direct", localTmpDir="tmp")
</pre>

Now you are ready to create a function and send it to the connected cluster.  Below is a very simple function that will double the input value:
<pre class="screen">
> a <- function(s) { return (2*s) }
</pre>

Now, you can send it to the remote cluster.
<pre class="screen">
> grid.apply("x", a, 13)
starting bosco.direct mode
</pre>

You can check on the status of the job with the command grid.printJobs():
<pre class="screen">
> grid.printJobs()
</pre>
