%META:TOPICINFO{author="MichaelFenn" date="1270567351" format="1.1" version="1.5"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! %MAKETEXT{"Installing and Using the Kestrel Scheduler" }%

%TOC%

---+ Installing a Kestrel Worker Node

Kestrel is a new scheduler under development at Clemson University that uses XMPP as a message passing interface. A paper describing its architecture can be found [[http://sites.google.com/site/ciresearchgroup/publications/mtags2009.pdf?attredirects=0][here]].  Note that Kestrel is a prototype for the next generation of cloud computing batch schedulers and is not a production system.

To install Kestrel and connect to the Clemson University pool, you will need Python >= 2.6 but < 3.0.  If Python 2.6 isn't the default version of python for your system, you can download and install it.  After you run =make= pay attention to the list of modules that failed to build, as this depends on which libraries are available on the system.  Of particular interest is the ssl module, as this is necessary for Kestrel.  If any needed module fails to build, install the relevant OS package (generally suffixed with =-dev= or =-devel=) and run =make= again.
<pre class=screen>
wget http://www.python.org/ftp/python/2.6.5/Python-2.6.5.tar.bz2
tar xjf Python-2.6.5.tar.bz2
cd Python-2.6.5
./configure
make
make altinstall
</pre>

Next we will need to install the Python setuptools package.  This provides a Python package manager that is needed to install several of Kestrel's dependencies.  If Python >= 2.6 is the default Python on your system, you may be able to use a package provided by your distribution for this step.
<pre class=screen>
cd .. # if you were still in the Python-2.6.5 directory
wget http://pypi.python.org/packages/source/s/setuptools/setuptools-0.6c11.tar.gz
tar xzf setuptools-0.6c11.tar.gz
cd setuptools-0.6c11
python2.6 setup.py build
python2.6 setup.py install
</pre>

Now we'll install those additional packages
<pre class=screen>
cd .. # if you were still in the setuptools-0.6c11 directory
easy-install-2.6 virtualenv virtualenv-commands
</pre>

Now we'll actually get the Kestrel source and perform the setup.  The Mercurial source control system will need to be installed.  Most distributions provide prebuilt packages. *Important:*  If Python 2.6 is not your default version of Python, you will need to edit the =#!= lines at the top of =setup= and =update= to refer to Python 2.6 (e.g. =/usr/bin/env python2.6=).
<pre class=screen>
hg clone https://bitbucket.org/legastero/navitas-environment kestrel
./kestrel/setup
./kestrel/update
source kestrel/bin/activate
./kestrel/Research/VirtualMachines/start_worker &
</pre>

Congratulations! The machine is now a worker node connected to the Clemson Kestrel cloud.

---+ Using Kestrel

Before using Kestrel, it is advisable to install the Kestrel worker client and run it on a few machines.  Otherwise, you may not be able to guarantee the availability of resources. *Note:* The Kestrel worker node client is not required to be installed on the submission machine.  Only a compatible chat client such as Pidgin, Adium, GTalk, etc. is required.

---++ Preparing a Job
Write a shell script that will manage tasks.
   1. The script will be called with an integer index value from 0 to N-1 where N is the number of tasks for a job.  Mapping this index to the actual desired outputs is done by this script.
   1. It is the script's responsibility to download and upload any input and output files.

---++ Submitting a Job
Given a job shell script located at "~/runtask.sh" and a pool of running VMs to execute a job with 10,000 tasks, send the following message to manager.kestrel.cs.clemson.edu using Pidgin, Adium, GTalk, etc:

={'type':'job', 'command':"~/runtask.sh", 'queue':10000}=

The manager will respond with either ={'type':'job_started', 'job_id': 483}= or ={'type':'job_rejected'}= depending on if the manager accepted the job.

---++ Checking Job Status
   1. Send the following message to manager.kestrel.cs.clemson.edu using Pidgin, Adium, GTalk, etc: ={'type':'status'}= The manager will respond with a list of your submitted jobs and their progress.
   1. To get the status of a particular job, say 317, use this format: ={'type':'status', 'job_id': 317}=

---++ Canceling a Job
   1. To cancel all submitted jobs, send the following message to manager.kestrel.cs.clemson.edu: ={'type':'cancel'}=
   1. To cancel a particular job, say 428, use this format: ={'type':'cancel', 'job_id': 428}=  Use the status command to find the job's id number.

---++ Job Completion
Once all tasks have been completed (either successfully or with errors or from cancellation) for your job, say 78, the manager will send the following message to your XMPP client (Pidgin, Adium, GTalk, etc): ={'type':'job_finished', 'job_id': 78}=