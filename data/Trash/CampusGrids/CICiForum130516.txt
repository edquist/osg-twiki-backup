%META:TOPICINFO{author="MarcoMambelli" date="1368730807" format="1.1" version="1.4"}%
<!-- conventions used in this document
   * Local UCL_HOST = %URLPARAM{"INPUT_HOST" encode="quote" default="hostname"}%
   * Local UCL_USER = %URLPARAM{"INPUT_USER" encode="quote" default="user"}%
   * Local UCL_DOMAIN = %URLPARAM{"INPUT_DOMAIN" encode="quote" default="opensciencegrid.org"}%
   * Set TWISTY_OPTS_DETAILED = mode="div" showlink="Show Detailed Output" hidelink="Hide" showimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleopen-small.gif" hideimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleclose-small.gif" remember="on" start="hide" 
   * Set TOC2 =<div style="float:right; margin-right:-1.015em; padding:0.5em; background-color:white;">%TOC%<p class="twikiClear" /></div>
-->

---+!! Personal HTCondor installation in a Mac Laptop

This presentation is showing in action the [[http://macports.org][MacPorts]] port of HTCondor done by Leo Singer ([[http://www.ligo.caltech.edu][LIGO Laboratory, Caltech]]). Leo introduced this way to install and setup HTCondor in a [[http://research.cs.wisc.edu/htcondor/HTCondorWeek2013/presentations/SingerL_MacPorts.pdf][presentation during the Paradyn/HTCondor week]].

!MacPorts is a collection of open-source software ported to Mac OS. Other such collections include Fink and Homebrew, but !MacPorts is the most comprehensive, with over 17k packages. !MacPorts is very handy to have if you own a Mac and use open source software in your research.

This demo will be specially useful if:
   * you are a researcher using HTCondor to submit your jobs or are interested in HTC
   * you have a Mac laptop (similar setups exist for Linux)
   * you can run a scaled down version of your research software on your laptop (Leo runs LIGO's software stack, but many other workflows involving R, Matlab, Mathematica, Python scripts, can all run on a Mac)

It will show:
   * how to install and configure your ‚Äúpersonal HTCondor pool‚Äù
   * an example of testing your HTCondor work&#xFB02;ows in the comfort of your own laptop
      * everything is local to the laptop
      * without the need to be online (e.g. while travelling)
      * without waiting for available CPUs or shared file systems
Distributed resources are necessary to run at scale but it is often useful to run quick tests locally.

---+ Requisites
   * a Mac
   * Mac OS X Tiger (10.4) or later
---+ Installation
---++ Installing !MacPorts

To install !MacPorts refer to the [[http://www.macports.org/install.php][MacPorts installation instructions]].

!MacPorts requires you to first have Apple's developer tools (Xcode) installed. The procedure for installing Xcode has changed a bit with each release of Mac OS, but it is by far the simplest in Lion (10.7) and Mountain Lion (10.8), which is what I will demonstrate here.

Here is what you need to get your developer tools set up:
   1 Apple's Xcode Developer Tools
      * on Mac OS 10.7+, install from App Store
   1 Xcode 4 and later users need to first accept the Xcode EULA
      * which you will be prompted to do when you start Xcode
   1 Apple's Command Line Developer Tools
      * download from within Xcode preferences (Xcode&gt;Preferences&gt;Downloads)
Next, to install MacPorts:
   1 Download the appropriate !MacPorts installer from the [[http://www.macports.org/install.php][!MacPorts download page]].
   1 Run the installer.
   1 Finally, open a new terminal and update your ports database with:
<pre>%UCL_PROMPT% sudo port selfupdate 
---&gt;  Updating MacPorts base sources using rsync
MacPorts base version 2.1.3 installed,
MacPorts base version 2.1.3 downloaded.
---&gt;  Updating the ports tree
---&gt;  MacPorts base is already the latest version

The ports tree has been updated. To upgrade your installed ports, you should run
  port upgrade outdated
</pre>
---++ Installing HTCondor

Next, we'll learn a few basic !MacPorts commands as we install HTCondor. First, there's <span>port search</span>to locate a port based on a phrase in its name or description:
<pre>%UCL_PROMPT% port search condor
htcondor @7.8.8 (science, parallel, net)
    specialized workload management system for compute-intensive jobs
</pre>

Then, to learn about a port---its dependencies, for instance---there is =port info=:
<pre>%UCL_PROMPT% port info htcondor
htcondor @7.8.8 (science, parallel, net)
Variants:             debug, [+]personal, universal

Description:          HTCondor is a specialized workload management system for
                      compute-intensive jobs. Like other full-featured batch
                      systems, HTCondor provides a job queueing mechanism,
                      scheduling policy, priority scheme, resource monitoring, and
                      resource management. Users submit their serial or parallel
                      jobs to HTCondor, HTCondor places them into a queue, chooses
                      when and where to run the jobs based upon a policy, carefully
                      monitors their progress, and ultimately informs the user upon
                      completion.
Homepage:             http://research.cs.wisc.edu/htcondor

Build Dependencies:   cmake, latex2html
Library Dependencies: boost, expat, kerberos5, openssl, pcre
Platforms:            darwin
License:              apache
Maintainers:          aronnax@macports.org
</pre>

Now, the important one is =sudo port install=. For this one, you need to run it under <span>sudo</span>because it actually makes changes to your ports:
<pre>%UCL_PROMPT% sudo port install htcondor
dyld: DYLD_ environment variables being ignored because main executable (/usr/bin/sudo) is setuid or setgid
---&gt;  Computing dependencies for htcondor
---&gt;  Fetching archive for htcondor
---&gt;  Attempting to fetch htcondor-7.8.8_0+personal.darwin_12.x86_64.tbz2 from http://packages.macports.org/htcondor
---&gt;  Attempting to fetch htcondor-7.8.8_0+personal.darwin_12.x86_64.tbz2.rmd160 from http://packages.macports.org/htcondor
---&gt;  Installing htcondor @7.8.8_0+personal
---&gt;  Activating htcondor @7.8.8_0+personal
---&gt;  Cleaning htcondor
---&gt;  Updating database of binaries: 100.0%
---&gt;  Scanning binaries for linking errors: 100.0%
---&gt;  No broken files found.
</pre>

Likewise, =sudo port uninstall= removes a port.

A few other useful ones are:
   * =port gohome htcondor=, to go to the package's homepage (quick way to get to documentation)
   * =port contents htcondor=, to list the files provided by the port

And, most importantly, to start your local HTCondor pool (persists across reboots):
<pre>%UCL_PROMPT% sudo port load htcondor
</pre>

And to turn it off:
<pre>%UCL_PROMPT% sudo port unload htcondor
</pre>
