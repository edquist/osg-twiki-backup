%META:TOPICINFO{author="DerekWeitzel" date="1361572772" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="BoSCOv1p1"}%
---+!! Bosco Glidein Configuration

<style>
dt {
   font-weight:bold;
}
dd {
   margin-bottom:10px;
}
</style>


---++ Configuration File
The Bosco Glidein configuration file is located in =~/bosco/libexec/campus_factory/etc/campus_factory.conf=.  The file is formatted in [[https://en.wikipedia.org/wiki/INI_file][INI Style]].  Specifically, is is parsed using the python [[http://docs.python.org/2/library/configparser.html][Configuration Parser]].

---++ Configuration Precedence
The configuration will be ready in through 3 places:
   1. Environment variables that start with =_CAMPUSFACTORY_<attribute>=
   1. Cluster specific configuration values in the config file
   1. General configuration values in the config file.
   1. Configuration values in the underlying HTCondor

---++ Attributes
   $ logdirectory: Directory to put the Campus Factory logs.  The logs are automatically rotated.
   $ worker_tmp: Directory to store temporary files on the worker nodes.  The Campus Factory glideins will create a unique subdirectory inside =worker_tmp=.
   $ clusterlist: Comma separated list of clusters that the Campus Factory should submit jobs to.  If not defined, the Campus Factory will issue the command =bosco_cluster -l= to detect installed clusters.
   $ factory_user: What user the Campus Factory should drop privileges to.  If Undefined, it will not drop privileges.
   $ !MaxIdleGlideins: Max number of glidein startd's that can be idle per site before it stops submitting them
   $ maxqueuedjobs: Max glidein jobs that are queued and idle
   $ maxheldjobs: Maximum number of held jobs per site.  If this number is reached, the Campus Factory will not submit more glideins to the site.  Default: 5
   $ iterationtime: Time between iterations (really the sleep time between iterations)
   $ GLIDEIN_Site : This is the unique name of the site.  It defaults to the collector name from the condor configuration
   $ useoffline: (depreciated) Use offline ads for matching (a more effiecent method of matching)
   $ loglevel: Log Level - debug, info, warning, error, critical
   $ GLIDEIN_DIRECTORY: Directory that contains the glidein files in order to submit.  Must include job.submit.template, glideinExec.tar.gz with the glidein executable.  Very unusual to modify this.
   $ remote_factory: Location of the remote campus factory directory on the remote cluster.  The remote =campus_factory= directory will contain the glideinExec.tar.gz for the cluster, as well as the passwdfile for authentication.
   $ custom_condor_submit: Semi-colon separated list of attributes that should be added to the glidein job's description.  This is very useful if the remote glideins need to be submitted with a =+batch_queue= or =+remote_cerequirements= in order to customize the remote submission.  Any attributes listed in the =custom_condor_submit= will overwrite the values specified in the job.submit.template.
