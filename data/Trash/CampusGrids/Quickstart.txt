%META:TOPICINFO{author="SuchandraThapa" date="1364939843" format="1.1" reprev="1.4" version="1.4"}%
%META:TOPICPARENT{name="SkeletonKey"}%
<!-- conventions used in this document
   * Local UCL_HOST = %URLPARAM{"INPUT_HOST" encode="quote" default="hostname"}%
   * Local UCL_USER = %URLPARAM{"INPUT_USER" encode="quote" default="user"}%
   * Local UCL_DOMAIN = %URLPARAM{"INPUT_DOMAIN" encode="quote" default="opensciencegrid.org"}%
   * Set TWISTY_OPTS_DETAILED = mode="div" showlink="Show Detailed Output" hidelink="Hide" showimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleopen-small.gif" hideimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleclose-small.gif" remember="on" start="hide" 
   * Set TOC2 =<div style="float:right; margin-right:-1.015em; padding:0.5em; background-color:white;">%TOC%<p class="twikiClear" /></div>
-->

---+!! !SkeletonKey Quickstart
%DOC_STATUS_TABLE%
%TOC{depth="3"}%


---++ Introduction
This page introduces the user to SkeletonKey and guides the user through installing the SkeletonKey software and setting up SkeletonKey up for initial use.  After completing the guide, the user should be able to install !SkeletonKey, start and stop the chirp server, and create a simple job to be run using Parrot and Chirp.

---++ Installation
!SkeletonKey uses a python script to install and set things up for the user.  The installation procedure is as outlined below:

   1. First download the  SkeletonKey installer script <pre class="screen">
%UCL_PROMPT% wget uc3-data.uchicago.edu/sk/install-skeletonkey.py
</pre>
   1. Pick a directory to install the CCTools and SkeletonKey binaries in (e.g. =bin= in your home directory).  Ideally this directory should be in =$PATH=.  <pre class="screen">
%UCL_PROMPT% mkdir ~/bin
</pre>
   1. Pick a directory to export from Chirp (for now the tutorial will use /tmp)
   1. Run the installer, specifying the directory to install and the  directory to export from Chirp: <pre class="screen">
%UCL_PROMPT% python install-skeletonkey.py -b ~/bin -e /tmp
</pre>
   1. Add the directory specified in =-b= option (e.g. =~/bin=) to =$PATH=: <pre class="screen">
%UCL_PROMPT% PATH=$PATH:~/bin
</pre>
   1. Edit =~/.profile= and add <pre>export PATH=$PATH:~/bin</pre>

---++ Chirp Data Server
---+++ Starting and stopping Chirp
!SkeletonKey installs =chirp-control= to so that the user can control the Chirp data server that is installed.  In order to start Chirp, run =chirp_control start= .  The user can run =chirp_control stop= to stop Chirp.  

--+++ Configuration 
The user can modify the directory that Chirp exports by editing =~/.chirp/chirp_options= and change =EXPORT_DIR= to point to the directory that Chirp should export.  If Chirp will be used to export a HDFS filesystem, =EXPORT_DIR= should be replaced with =HDFS_URI= set to the URI that should be exported (e.g. =hdfs://hdfs-namenode:9000/user_directory=).

---++ Hello World example
The first example in this guide is will a simple hello world example. This example will just go through the mechanics of running skeleton key and generating a job wrapper to use.  

-- Main.SuchandraThapa - 02 Apr 2013
