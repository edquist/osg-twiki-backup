%META:TOPICINFO{author="DanFraser" date="1330018518" format="1.1" reprev="1.8" version="1.8"}%
---+!! BOSCO v0


%TOC{depth="2"}%


<!-- conventions used in this document
   * Local UCL_HOST = %URLPARAM{"INPUT_HOST" encode="quote" default="bosco"}%
   * Local UCL_USER = %URLPARAM{"INPUT_USER" encode="quote" default="user"}%
   * Local UCL_DOMAIN = %URLPARAM{"INPUT_DOMAIN" encode="quote" default="opensciencegrid.org"}%
   * Set TWISTY_OPTS_DETAILED = mode="div" showlink="Show Detailed Output" hidelink="Hide" showimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleopen-small.gif" hideimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleclose-small.gif" remember="on" start="hide" 
-->


---+ Introduction 

BOSCO is a job submission manager designed to help researchers manage large numbers (~1000s) of job submissions to 
the different resources that they can access on a campus (initially a PBS cluster running Linux).

It offers the following capabilities: 
   * Job are automatically resubmitted when they fail. The researcher does not need to baby sit their jobs                                                                                       
   * Job submissions can be throttled to meet batch scheduler settings (e.g. only 10 jobs running concurrently). The researcher does not need to make multiple submissions. BOSCO handles that for them.    
   * BOSCO is designed to be flexible and will in the next version (v1) allow jobs to be submitted to multiple clusters, perhaps with different job schedulers (e.g. PSS, LSF). 
The primary advantage for the researcher is that they only need to learn one job scheduler environment even if the clusters utilize different native environments.                                                                    


%TWISTY{%TWISTY_OPTS_DETAILED% showlink="Click to see the format conventions used in this document" }%   
%INCLUDE{"Documentation/DocumentationTeam/DocConventions" section="Header"}%
%INCLUDE{"Documentation/DocumentationTeam/DocConventions" section="CommandLine"}%
%ENDTWISTY%


---+ Requirements

   $ *Submit-node*: This is the system that the researcher uses to submit jobs. In general it can be the user's laptop, workstation, or it can be another system that the user logs into for submitting jobs to the cluster. A current limitation is that the submit-node uses the same Linux flavor that the PBS cluster is using.
   $ *Cluster head-node*: Any PBS and Condor supported Linux platform
   $ *Condor version*: 7.7.6+
   $ *PBS flavors*: Torque and PBSPro


---+ Installation Procedure

   1. Download BOSCO 
      * [[ftp://ftp.cs.wisc.edu/condor/temporary/bosco/latest/condor-7.7.6-UW_development-rhel5.7-stripped.tar.gz][right click here and select "save as" and save it in your home directory]]
      * Alternatively you can use =wget=:<pre class="screen">
%UCL_PROMPT% wget ftp://ftp.cs.wisc.edu/condor/temporary/bosco/latest/condor-7.7.6-UW_development-rhel5.7-stripped.tar.gz
</pre>
   1. Unpack the tar file and Install BOSCO: <pre class="screen">
%UCL_PROMPT% cd ~
%UCL_PROMPT% mkdir tmp-install
%UCL_PROMPT% cd tmp-install
%UCL_PROMPT% tar xvzf ~/condor-7.7.6-UW_development-rhel5.7-stripped.tar.gz
%UCL_PROMPT% cd condor-7.7.6-UW_development-rhel5.7-stripped/
%UCL_PROMPT% mkdir man
%UCL_PROMPT% ./bosco_install
</pre>

%TWISTY{%TWISTY_OPTS_DETAILED% }%   <pre class="screen">
-bash-3.2$ wget ftp://ftp.cs.wisc.edu/condor/temporary/bosco/2012-02-20/condor-7.7.6-UW_development-rhel5.7-stripped.tar.gz
--2012-02-22 18:35:09--  ftp://ftp.cs.wisc.edu/condor/temporary/bosco/2012-02-20/condor-7.7.6-UW_development-rhel5.7-stripped.tar.gz
           => `condor-7.7.6-UW_development-rhel5.7-stripped.tar.gz'
Resolving ftp.cs.wisc.edu... 128.105.2.28
Connecting to ftp.cs.wisc.edu|128.105.2.28|:21... connected.
Logging in as anonymous ... Logged in!
==> SYST ... done.    ==> PWD ... done.
==> TYPE I ... done.  ==> CWD /condor/temporary/bosco/2012-02-20 ... done.
==> SIZE condor-7.7.6-UW_development-rhel5.7-stripped.tar.gz ... 49527344
==> PASV ... done.    ==> RETR condor-7.7.6-UW_development-rhel5.7-stripped.tar.gz ... done.
Length: 49527344 (47M)

100%[===========================================================================>] 49,527,344  30.2M/s   in 1.6s    

2012-02-22 18:35:13 (30.2 MB/s) - `condor-7.7.6-UW_development-rhel5.7-stripped.tar.gz' saved [49527344]

-bash-3.2$ mkdir tmp-bosco/
-bash-3.2$ cd tmp-bosco/
-bash-3.2$ tar xzf ~/condor-7.7.6-UW_development-rhel5.7-stripped.tar.gz 
-bash-3.2$ cd condor-7.7.6-UW_development-rhel5.7-stripped/
-bash-3.2$ mkdir man
-bash-3.2$ ./bosco_install 
Installing Condor from /share/home/marco/tmp-bosco/condor-7.7.6-UW_development-rhel5.7-stripped to /share/home/marco/bosco


Condor has been installed into:
    /share/home/marco/bosco

Configured condor using these configuration files:
  global: /share/home/marco/bosco/etc/condor_config
  local:  /share/home/marco/bosco/local.gc2-wn2/condor_config.local

In order for Condor to work properly you must set your CONDOR_CONFIG
environment variable to point to your Condor configuration file:
/share/home/marco/bosco/etc/condor_config before running Condor
commands/daemons.
Created scripts which can be sourced by users to setup their
Condor environment variables.  These are:
   sh: /share/home/marco/bosco/bosco.sh
  csh: /share/home/marco/bosco/bosco.csh
</pre>
%ENDTWISTY%

Now BOSCO is installed. To use it:
   1. Add all the desired clusters (at least one)
   1. Start BOSCO
   1. Submit a test job

---++ Add a cluster to BOSCO
To add a new cluster to the resources you will be using through BOSCO:
   1. Setup the environment appropriate for your shell (if you did not already): <pre class="screen">
%UCL_PROMPT% cd ~
%UCL_PROMPT% source bosco/bosco.[csh|sh]
</pre>
   1. For the cluster %RED%mycluster%ENDCOLOR% with user and submit host %RED%username@mycluster-submit.mydomain%ENDCOLOR% (FQDN) and queue manager %RED%PBS%ENDCOLOR%. Replace the parts in red: <pre class="screen">
%UCL_PROMPT% bosco_cluster --add %RED%username@mycluster-submit.mydomain%ENDCOLOR%
</pre> %TWISTY{%TWISTY_OPTS_DETAILED% }%   <pre class="screen">
-bash-3.2$ bosco_cluster -add itbv-ce-pbs.uchicago.edu
Enter password to copy ssh keys to itbv-ce-pbs.uchicago.edu:
The authenticity of host 'itbv-ce-pbs.uchicago.edu (128.135.158.176)' can't be established.
RSA key fingerprint is 8e:a6:db:18:80:6b:b7:de:56:c8:5a:a2:75:19:11:8d.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'itbv-ce-pbs.uchicago.edu,128.135.158.176' (RSA) to the list of known hosts.
Installing BOSCO on itbv-ce-pbs.uchicago.edu...
Installation complete
</pre> %ENDTWISTY%

You can see a list of the current clusters in BOSCO by typing:<pre class="screen">
%UCL_PROMPT% bosco_cluster --list
</pre>
%TWISTY{%TWISTY_OPTS_DETAILED% }%   <pre class="screen">
-bash-3.2$ bosco_cluster -list
itbv-ce-pbs.uchicago.edu
itbv-ce-pbs.uchicago.edu
</pre>
%ENDTWISTY%

---+ Setup
Since BOSCO is not installed in the system path. An environment file must be sourced all the times you use BOSCO (start/stop/job submission or query, anything):<pre class="screen">
%UCL_PROMPT% source ~/bosco/bosco.[csh|sh]
</pre>

---+ Services 
BOSCO has some persistent services that must be running. You'll have to start it at the beginning and probably after each reboot of your host.
You should stop BOSCO before an upgrade and possibly before a shutdown of your host.
If you will not use BOSCO anymore, uninstall will remove it from your system.

To start BOSCO:<pre class="screen">
%UCL_PROMPT% bosco_start
</pre>

To stop BOSCO:<pre class="screen">
%UCL_PROMPT% bosco_stop
</pre>

To uninstall BOSCO:<pre class="screen">
%UCL_PROMPT% bosco_uninstall
</pre>



---+ Validation of Service Operation 

To send a BOSCO to the host %RED%mycluster-submit.mydomain%ENDCOLOR% (name as listed in the host list):
   1. Setup the environment appropriate for your shell (if you did not already): <pre class="screen">
%UCL_PROMPT% cd ~
%UCL_PROMPT% source bosco/bosco.[csh|sh]
</pre>
   1. For the cluster %RED%mycluster%ENDCOLOR% with user and submit host %RED%mycluster-submit.mydomain%ENDCOLOR%. Replace the parts in red: <pre class="screen">
%UCL_PROMPT% bosco_cluster --test %RED%mycluster-submit.mydomain%ENDCOLOR%
</pre> %TWISTY{%TWISTY_OPTS_DETAILED% }%   <pre class="screen">
-bash-3.2$ bosco_cluster -test itbv-ce-pbs.uchicago.edu
itbv-ce-pbs.uchicago.edu
itbv-ce-pbs.uchicago.edu
Testing ssh to itbv-ce-pbs.uchicago.edu...Passed!
Testing bosco submission...Passed!
Checking for submission to remote pbs cluster (could take ~30 seconds)...Failed
Showing last 5 lines of logs:
02/22/12 19:11:22 [24765] (1.0) blah_job_submit() failed: submission command failed (exit code = 1) (stdout:) (stderr:which: no bsub in (/usr/local/bin:/bin:/usr/bin)-qsub: Invalid credential MSG=Hosts do not match-)
02/22/12 19:11:24 [24765] resource itbv-ce-pbs.uchicago.edu is now up
02/22/12 19:11:24 [24765] No jobs left, shutting down
02/22/12 19:11:24 [24765] Got SIGTERM. Performing graceful shutdown.
02/22/12 19:11:24 [24765] **** condor_gridmanager (condor_GRIDMANAGER) pid 24765 EXITING WITH STATUS 0
</pre> %ENDTWISTY%


---+ Command summary
| *Action*	| *Arguments*	| *Implicit Input* | *Output* |
| bosco_install | | | Success/Failure |
| source bosco.[csh,sh] | | | |
| bosco_start | | | Success/Failure |
| bosco_stop | | | Success/Failure |
| bosco_uninstall | | | Success/Failure |
| bosco_cluster | --add user@Hostname… | | Success/Fail, entry in head node table |
| | --list | Head-node table | List of –add’d head nodes and their status |
| | --test Hostname | Submit file | Status of submitted jobs |
| | --remove Hostname | | Success/Fail, head node table with Hostname removed, delete if empty |
| condor-* | Various | Various | Various see the [[http://research.cs.wisc.edu/condor/manual/][Condor manual]] | 
Manually transfer output data from batch system.


---+ Troubleshooting


---++ Useful Configuration and Log Files
BOSCO underneath is using Condor. You can find all the Condor log files in =~/bosco/local.HOSTNAME/log=

---++ Known Issues

The current version is not supporting file transfer. Not even stdout and stderr. If you specify them in the Condor submit file (to something different from /dev/null) your job will fail.


---+ Get Help/Support
To get assistance you can send an email to bosco-discuss@opensciencegrid.org

---+ References 
Campus Grids related documents:
   * https://twiki.grid.iu.edu/bin/view/CampusGrids
   * https://twiki.grid.iu.edu/bin/view/Documentation/CampusFactoryInstall

Condor documents:
   * Condor manual: http://research.cs.wisc.edu/condor/manual/

How to submit Condor jobs:
   * Quick start: http://research.cs.wisc.edu/condor/quick-start.html
   * Tutorial: http://research.cs.wisc.edu/condor/tutorials/alliance98/submit/submit.html
   * Condor manual: http://research.cs.wisc.edu/condor/manual/v7.6/2_5Submitting_Job.html

---+ Comments
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = MarcoMambelli

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = 
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################
-->
