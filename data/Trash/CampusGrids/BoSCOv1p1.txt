%META:TOPICINFO{author="MarcoMambelli" date="1350940057" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="BoSCO"}%
<!-- conventions used in this document
   * Local UCL_HOST = %URLPARAM{"INPUT_HOST" encode="quote" default="bosco"}%
   * Local UCL_USER = %URLPARAM{"INPUT_USER" encode="quote" default="user"}%
   * Local UCL_DOMAIN = %URLPARAM{"INPUT_DOMAIN" encode="quote" default="opensciencegrid.org"}%
   * Set TWISTY_OPTS_DETAILED = mode="div" showlink="Show Detailed Output" hidelink="Hide" showimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleopen-small.gif" hideimgleft="/twiki/pub/TWiki/TWikiDocGraphics/toggleclose-small.gif" remember="on" start="hide" 
   * Set TOC2 =<div style="float:right; margin-right:-1.015em; padding:0.5em; background-color:white;">%TOC%<p class="twikiClear" /></div>
-->

---+!! BOSCO
%DOC_STATUS_TABLE%
%TOC{depth="3"}%



---# Introduction 

BOSCO is a job submission manager designed to help researchers manage large numbers (~1000s) of job submissions to 
the different resources that they can access on a campus (initially a PBS cluster running Linux).
This is release 1.1 of BOSCO, if you find any problems or need help installing or running !BoSCO, please email bosco-discuss@opensciencegrid.org .

It offers the following capabilities: 
   * Jobs are automatically resubmitted when they fail. The researcher does not need to babysit their jobs.                                                                                       
   * Job submissions can be throttled to meet batch scheduler settings (e.g. only 10 jobs running concurrently). The researcher does not need to make multiple submissions. BOSCO handles that for them.    
   * BOSCO is designed to be flexible and allows jobs to be submitted to multiple clusters, with different job schedulers (e.g. PBS, LSF, Condor). 
The primary advantage for the researcher is that they only need to learn one job scheduler environment even if the clusters utilize different native environments.                                                                    


%TWISTY{%TWISTY_OPTS_DETAILED% showlink="Click to see the format conventions used in this document" }%   
%INCLUDE{"Documentation/DocumentationTeam.DocConventions" section="Header"}%
%INCLUDE{"Documentation/DocumentationTeam.DocConventions" section="CommandLine"}%
%ENDTWISTY%


---# Requirements

   $ *Submit-node*: This is the system that the researcher uses to submit jobs. In general it can be the user's laptop, workstation, or it can be another system that the user logs into for submitting jobs to the cluster. A current requirement is that the submit-node must use the same Linux flavor that the PBS/LSF/Condor cluster is using. *There can not be any Condor collector running on the submit node*, otherwise it will conflict with the Campus Factory.
   $ *Cluster head-node*: This is the node that you normally login to on the PBS, LSF or Condor cluster.
      $ *PBS flavors supportted*: Torque and PBSPro
      $ *Condor flavors supported*: Condor 7.6 or later
      $ *LSF flavors*: no special requirements
   $ *Cluster*: This is the remote cluster that jobs will execute on.  The Cluster head-node is a node belonging to this cluster.  The cluster needs:
      $ *Shared Filesystem*: The Cluster needs a shared home filesystem
      $ *Network Access*: The worker nodes need to have access to the submit host.  The worker nodes can be behind a [[https://en.wikipedia.org/wiki/Network_address_translation][NAT]] between the worker nodes and the submit host.

BOSCO can be used as part of a more complex Condor setup (with flocking or multiple pools). Whatever is the setup:
   * the BOSCO host needs connectivity to the cluster submit nodes
   * the worker nodes (running the jobs, e.g. the nodes in the PBS cluster) must have network connectivity to the jobs submit node (the BOSCO host or a different Condor schedd flocking into it)

---# How to Install

Either you or a system administrator for you will have to install and setup BOSCO. 
The installation consists in downloading and installing the BOSCO software.
The setup consists in managing which clusters are included in the BOSCO pool and will execute your jobs; it includes all the operations performed using the =bosco_cluster= command.
The installation and setup are covered in two separate documents:
   * to install and setup BOSCO so that it is used and configured from a single user account please refer to BoscoInstall
   * to install and setup BOSCO so that it is configured from a single user account but it can be used by all the accounts on the host please refer to BoscoMultiUser

---# How to Use

In order to use BOSCO and submit a job:
   1. BOSCO must be installed
   1. BOSCO must be running (it must have been started)
   1. At least one cluster must have been added to BOSCO
   1. You must setup the environment

---## Starting/Stopping and Configuring BOSCO 
Each time I mention "you" in this section I refer either to you or to a system administrator that acts on your behalf, probably the same person that installed BOSO.
 
BOSCO has some persistent services that must be running. You'll have to start it at the beginning and probably after each reboot of your host.
You should stop BOSCO before an upgrade and possibly before a shutdown of your host.
If you will not use BOSCO anymore, uninstall will remove it from your system.

You need to add to BOSCO all the clusters of which you like to use the resources. In order to run jobs you need at least one.

Please refer to the BoscoInstall or BoscoMultiUser documents for operations including:
   * starting BOSCO
   * stopping BOSCO
   * updating BOSCO
   * uninstalling BOSCO
   * adding one or more clusters to BOSCO

---## Setup environment before using
Since BOSCO is not installed in the system path. An environment file must be sourced all the times you use BOSCO (start/stop/job submission or query, anything):
<pre class="screen">
%UCL_PROMPT% source ~/bosco/bosco_setenv
</pre>

%INCLUDE{"BoscoInstall" section="BoscoJob"}%

%INCLUDE{"BoscoInstall" section="BoscoCommands"}%


---# Troubleshooting


---## Useful Configuration and Log Files
BOSCO underneath is using Condor. You can find all the Condor log files in =~/bosco/local.HOSTNAME/log=

---## Known Issues

---## Make sure that BOSCO is running
BOSCO may not survive after you log out.
When you log back in after sourcing the setup (=source ~/bosco/bosco_setenv=), you should start BOSCO (=bosco_start=) specially if the command =condor_q= is failing.
More details about starting BOSCO are in BoscoInstall and BoscoMultiUser


---# Get Help/Support
To get assistance you can send an email to bosco-discuss@opensciencegrid.org

%INCLUDE{"BoscoInstall" section="BoscoReferences"}%

---+ Comments
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = MarcoMambelli

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|General|Integration|Monitoring|Operations|Security|Storage|Tier3|User|VO)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (Developer|Documenter|Scientist|Student|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (HowTo|Installation|Knowledge|Navigation|Planning|Training|Troubleshooting)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = 
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = 
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
############################################################################################################
-->




-- Main.MarcoMambelli - 05 Oct 2012
