%META:TOPICINFO{author="YuFu" date="1312395660" format="1.1" reprev="1.16" version="1.16"}%
%META:TOPICPARENT{name="SummerWorkshop2011"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

---++ Introduction

This is a repository of information for the OSG Summer workshop and the CMS Tier 3 workshop, both held at the Texas Tech University (Lubbock, TX), August 9-11, 20101.   
   * Meeting homepage in OSG Indico system is [[http://indico.fnal.gov/conferenceDisplay.py?confId=4531][here]],  [[http://indico.fnal.gov/conferenceTimeTable.py?confId=4531][agenda]].
   * Planning and organization: SiteCoordination.SummerWorkshop2011
   * Suggest format for hands-on guides [[HandsOn][here]], for example: ClientInstallationHandsOn.

---++ General Requirements
These apply to both the OSG site administrators and the CMS Tier 3 workshops.

Attendees should already have a valid grid certificate. Attendees should install an OSG 1.2 Grid client ([[ClientInstallationHandsOn][OSG client installation]]), specially if they plan to attend the Network session or to test grid resources. Information about certificates is available [[Documentation.GetAccessToGrid][here]].  Attendees will work with their own servers which should have pre-installed certificates. GUMS and CE installations will require one server each (it can be the same if you are just testing) with a platform [[http://vdt.cs.wisc.edu/releases/2.0.0/requirements.html][supported by VDT]].  You will need admin (root) privileges.  

---++ OSG and Tier 3s (Marco Mambelli)
This session presents an overview of OSG 1.2, VDT 2.0 and introduces some OSG concepts and the Tier 3 idea to newcomers.  This will be followed by a presentation of key security concepts.

Attendees will receive a brief description of the hands-on sessions.

---++ Network performance and troubleshooting (Jason Zurawski) - LAST YEAR
*Description:* Hands-on workshop will introduce the participants to network performance tools, and suggest strategies to locate and quickly resolve problems.  Emphasis will be placed on the use of diagnostic tools available in VDT including [[http://www.internet2.edu/performance/owamp/][OWAMP]], [[http://www.internet2.edu/performance/bwctl/][BWCTL]] and [[http://www.internet2.edu/performance/ndt/][NDT]] as well as introducing the concept of regular monitoring through the use of the [[http://psps.perfsonar.net][perfSONAR-PS]] framework.  

*Requirements:* Workshop exercises will be performed on a specially designed testbed accessed from the participants laptop.  Participants will need to have a laptop with a web browser and a terminal capable of connecting to remote resources via SSH.  Plugins for Flash and Java for the web browser will be required to view some of the web content.  

*Hands-on Section*
   * NetworkPerformanceTroubleshootingHandsOn

*Agenda:* 2h total

---++ KVM hands-on (Steven Timm, Suchandra Thapa)
*Description*:  This talk will give a short description of the KVM hardware virtualization hypervisor which is the default virtualization
method for Red Hat Linux, Scientfic Linux, and CentOS.  We will give an introduction to virtualized machines and virtualized
networking, then cover the basic ideas of KVM and libvirt.  There will be a short demonstration of how to use the virt-install, virt-manager,
and virsh utilities.

*Requirements*:  Participants in this tutorial should have access to a Redhat/Scientific Linux/Centos machine (5 or 6) on which
they have root and are allowed to start a virtual machine.  This machine must have its BIOS set to support hardware virtualization.
(Most Intel and AMD hardware built after 2007 has this capability.)

---++ Storage Element Introduction (Douglas Strain)
*Description*:  This talk will introduce the concept of a storage element and illustrate several examples and their usage, include Bestman Gateway with Hadoop/Xrootd, Bestman Fullmode, and dCache.  This will not be a hands-on talk.

*Requirements*: none.

---++ Storage Element Installation: !BeStMan2 and Hadoop (Jeff Dost)
*Hands-on guides:*  HadoopInstallationHandsOn  Participants are encouraged to be familiar with Hadoop and the installation process from the official OSG Hadoop twiki page: https://twiki.grid.iu.edu/bin/view/Storage/Hadoop

*Requirements* The participants will need to have a minimum of two servers, but preferably three or four, and root access on all servers.  All servers should have a single public IP address.  All servers must have the fuse kernel module and fuse userspace packages installed.  All servers must have Sun Java 1.6 installed.  A working gums service is required for user mappings; grid-mapfile mappings are not currently supported. One server will run the Hadoop !DataNode, one will run the Hadoop Namenode, one will run the Hadoop Secondary Namenode, and one will run the Bestman and Gridftp processes.  The BestMan+GridFTP server must have a valid host or service certificate installed in /etc/grid-security/{hostcert.pem,hostkey.pem} (for gridftp) and /etc/grid-security/http/{httpcert.pem,httpkey.pem} (for BestMan).

---++ Xrootd and Distributed Xrootd

---++ Job submission overview (Marco Mambelli)
*Description:* Installation of the OSG client tools both using RPMs and the Pacman package. Basic use of the OSG client tools to submit grid jobs, transfer files and query for resources.

*Requirements:*
   * 1 Machine or VM with RHEL 5 (or compatible OS, e.g. !CentOS 5, SL5)
   * Root access on the machine preferred (required for RPM installation).
   * IGTF x509 user certificate. Membership to some OSG VO preferred.
   * Outbound network access on the machine. Public ip address preferred.

---++ Installing a Glidein WMS VO frontend (Derek Weitzel)
---+++ Requirements 
   * 1 RHEL 5 (CentOS 5, SL5) Machine or VM
   * Root access on the machine
   * DOE Grid Proxy.  Preferred Proxy and Host Certs for VM
   * Public network access on the machine (public ip address)

---+++ Overview
Install & Configure a glideinwms frontend using the RPM.  The frontend will point to a test factory setup by UCSD (Jeff).

Guide: [[GlideinWMSFrontendInstall][VO Frontend Documentation]]

---++ Installing a Campus Factory (Derek Weitzel)
---+++ Requirements
   * PBS Submission node (doesn't have to be head node)
   * Access to (not necessarily root) to the submission node.

---+++ Overview
Install & Configure a campus factory.  I will focus on local submissions, ie submissions from the node the campus factory is running on, in order to reduce the number of nodes required.

Guide: [[CampusFactoryInstall][Campus Factory Install]]

---++ OSG client installation and basic use (Marco Mambelli)

---++ Tuning for HTPC submission, GPU, ... and using a single submit host (Marco Mambelli)


---++ Rocks hands-on (Yu Fu)
---+++ Overview
Install, configure and manage a cluster with help of the ROCKS software.
---+++ Requirements
   * We may not have enough time during this session of the workshop to try real install and config of a ROCKS cluster, but in order to set up a cluster based on ROCKS a minimum of two computers will be needed, one for the frontend server and one for the worker node. Those computers can be either physical machines or virtual machines. 30GB hard disk and 1GB memory are the basic hardware requirement for them. Dual ethernet ports are preferable for the frontend server and PXE network booting feature is preferable for the worker node(s).  
   * A copy of the ROCKS software is also needed, which can be downloaded from http://www.rocksclusters.org/wordpress/?page_id=123, a DVD image of the basic rolls is available at ftp://ftp.rocksclusters.org/pub/rocks/rocks-5.4/linux/area51+base+bio+condor+ganglia+hpc+kernel+os+sge+web-server+xen-5.4.i386.disk1.iso. You may need to burn the DVD image(s) to some DVD disks for convenient installation.
---+++ Reference and Guide: 
   * ROCKS website: http://www.rocksclusters.org
   * ROCKS software download: http://www.rocksclusters.org/wordpress/?page_id=123
   * User's Guide: http://www.rocksclusters.org/roll-documentation/base/5.4
   * Further instructions: https://wiki.rocksclusters.org/wiki/index.php/HOWTOs
   * ROCKS Wiki: https://wiki.rocksclusters.org/wiki/index.php/Main_Page

---++ Puppets hands-on (Suchandra Thapa)

---++ Moving away from Pacman to RPMs (Alain Roy)

You might have heard that OSG is moving away from the Pacman-based version of the VDT and is working on a version of the VDT based entirely on RPMs for Red Hat Enterprise Linux 5 (and variants). Alain will give you the scoop--what are the goals, what's the timeline, and what can you try out now? Alain hopes that you can give constructive criticism to make sure that are moving in the right direction and making the right technical decisions. Please come and give feedback!

Some background reading:

   * [[/SoftwareTeam/CommunityPackagingProposal][Community Packaging Proposal]]--the overview of our appraoch
   * [[/SoftwareTeam/NPTransition][Transition Plan]]
   * [[/SoftwareTeam/RPMDevelopmentGuide][RPM Development Guide]]--details of our technical approach for the curious.

---++ Fault tolerant installations and virtualization (Steven Timm)

*Description*
This hands-on will describe how to set up a fault-tolerant and virtualized version of an OSG web service using GUMS as an example.
Past experience shows that it is not possible to complete this whole process in an hour but we will give demonstrations
of the key points in the hands-on tutorial and people can continue later on their own time.   We will cover LVS, Heartbeat, DRBD,
virtualization, and multi-master MySQL replication.

*Prerequisites*
To complete the full hands-on tutorial you will need access to six virtual machines on which you have root.

---++ OSG installation tuning (CE/GUMS, ...)
This will be an interactive session like the "talk with the experts" session at the 2011 OSG all hands meeting.


---++ Security best practices, certificates and VO membership (Anand Padmanabhan)
Give an introduction about certificates, CA, CRLs, trusted relationships on OSG.

Instruct on security best practices for users (and maybe site administrators).

---++ OIM and MyOSG (Scott Teige)
*Description:* In this tutorial you will learn how to [[https://twiki.grid.iu.edu/bin/view/Operations/OIMRegistrationInstructions][register]] a person, a resource, a site, etc. in the OSG Information Management (OIM) system. There will also be a short demonstration of some the the most popular features of [[http://myosg.grid.iu.edu/about][MyOSG]], the "one stop shopping" site for the OSG. Nearly the entire content of this tutorial is given in this [[https://twiki.grid.iu.edu/bin/view/Operations/OIMStandardOperatingProcedures][overview]].

*Requirements:* You should have a valid grid certificate installed in your browser.

---++ Data movement with Globus Online (Douglas Strain)
*Description*: In this tutorial, you will register with Globus Online, set up your credentials, and go through an example data movement using the Globus Online transfer service.

*Requirements:*  You will need a machine with ssh, and access to 2 gridFTP servers.  You will need a valid grid certificate.  Also, it would help to speed the tutorial if you create an account on Globus Online before the tutorial.  If you wish to test Globus Connect (ie to upload files from a laptop), you will need to install this on your machine.

See https://www.globusonline.org/ for details.

---++ Porting your code to OSG: an example 
---++ Porting your code to the Grid (Derek Weitzel)
---+++ Requirements
None really.  Maybe code that you want to port.

---+++ Overview
Talk about common pitfalls when running on the grid.  Things you have to consider, such as:
   * No global file system
   * Data Pull model is much, much easier than push model.
   * Common problems with scientific code when ported to the grid.



---++ CMS Tier 3 workshop

---++ CRAB

---+++ Requirements

The only hard and fast requirements are that 
   * every user must have a DOE Grids certificate and have it installed on the machine where you wish to submit jobs from and 
   * be registered in the CMS !SiteDB. 
Please follow these instructions: https://twiki.cern.ch/twiki/bin/view/Main/CRABPrerequisitesGRIDCredentials and these to register in !SiteDB: https://twiki.cern.ch/twiki/bin/view/CMS/SiteDBForCRAB

It is also highly recommended that you have an account on the CMS LPC cluster. Please follow these instructions: http://www.uscms.org/uscms_at_work/physics/computing/getstarted/getaccount_fermilab.shtml

The tutorial will work from anywhere that has CMSSW, CRAB, and the gLite Grid client installed. You are encouraged to try to do this at your own institution, but we can't spend much time during the tutorial working through any problems with local setups, so even if you intend to set this up at your home institution, please have an account on the FNAL LPC ready to go as a backup.

For those who wish to try this at home, I can't do better than Malina's instructions:

   * gLite UI: http://hep-t3.physics.umd.edu/HowToForAdmins/crab.html This also explains how to install CRAB, which is trivial. Please use the 3.2.8 gLite UI, not a more up to date version. Later versions are not yet compatible with CRAB. While gLite also provides RPMs they seem to be much more problematic to get working, so we suggest using the tarballs.
   * CMSSW: The official CMS instructions are here: https://twiki.cern.ch/twiki/bin/view/CMSPublic/SDTCMSSW_aptinstaller Malina's instructions are here: http://hep-t3.physics.umd.edu/HowToForAdmins/cmssw.html 

For the truly adventurous, it is possible that the CRAB client will work with the OSG client commands and not require gLite at all. CRAB in Client mode basically uses the voms-proxy-*, myproxy-*, and lcg-* commands and not a lot else.

So, before coming to the tutorial, please follow the instructions about getting your certificate set up on both your home machine (if applicable) and the FNAL LPC (for sure). If you want to try at home, set up CMSSW, gLite, and CRAB as well.

---+++ Talk outline

---+++ Tutorial

SummerWorkshopCRABTutorial2011

---++ Monitoring your site

---++ Integrating Campus Clusters with CMS Jobs

---++ Multicore Processing

---++ !GlideIns - The Future of GRID Computing (Jeff Dost)

*Requirements:* None.  This talk is a slide based presentation with a demonstration to follow.

*Description:* This talk will focus on the benifits of using glideinWMS for CMS job management on the grid.  It will give a 
broad overview of the glidein architecture and how it is implemented in CMS including its integration with CRAB.  It will illustrate the advantages submission with glideinWMS has over non-pilot methods, and show the implications of how it changes the workflow for the CMS VO as well as for Site Administrators.

The demonstration portion will have two major parts:
   1. Trace the entire path a job takes from user submission to matching with a glidein pilot to running on a worker node.
   1. Show some techiques site admins can use to track glideins on their system.
      *  *example:* finding the real user of the job that the pilot is currently running

---++



%BR%
---++ *Comments*
%COMMENT{type="tableappend"}%

<!--
   * Set USERSTYLEURL = https://twiki.grid.iu.edu/twiki/pub/ReleaseDocumentation/HandsOn/centerpageborder.css
-->

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = MarcoMambelli

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = General

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Training

  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = RobSnihur
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         =
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->



-- Main.MarcoMambelli - 20 Jul 2011
