%META:TOPICINFO{author="ScotKronenfeld" date="1299768190" format="1.1" reprev="1.12" version="1.12"}%
%META:TOPICPARENT{name="RSV"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%LINKCSS%

%TOC%

%STARTINCLUDE%
%BR%


<a name="advanced_rsv_config"></a>

---+ Advanced !RSV Installations (Configurations)

---++ Condor-Cron 

<p> Starting with OSG 1.0 !RSV will always include a minimal Condor package called condor-cron that is used to schedule !RSV probes and consumers.

%NOTE% You can set =VDTSETUP_NO_CONDOR_CRON=1= in your environment to prevent Condor-Cron from installing.

%INCLUDE{"MonitoringInformation/MonitoringOsg10Ce"}%

---++ Pre-config check list
<p> Ensure you have gone through the [[https://twiki.grid.iu.edu/twiki/bin/view/ReleaseDocumentation/PreparingComputeElement#RSV_Prerequisites][<strong>RSV prerequisites section of the Preparing Compute Element</strong>]] document already. 

---++ Sending !RSV records to Nagios

   1. Edit your rsv-nagios.conf file and fill in the appropriate information.  It will be located at =VDT_LOCATION/osg-rsv/etc/rsv-nagios.conf=.  If you don't have an rsv-nagios.conf file you can download a template from [[http://vdt.cs.wisc.edu/releases/2.0.0/rsv-nagios.conf]].
   1. If your nagios config file contains password information you will want to lock down the permissions.  Here is a suggested way to do this.  Replace <em>rsvuser</em> with the group of your rsvuser.
      <pre class="screen">chown root:<em>rsvuser</em> $VDT_LOCATION/osg-rsv/etc/rsv-nagios.conf
chmod 0440 $VDT_LOCATION/osg-rsv/etc/rsv-nagios.conf</pre>
   1. In the configuration file at =VDT_LOCATION/osg-rsv/etc/consumers/nagios-consumer.conf=, check the following two settings:
      * Make sure that the path to your config file is correct.  It may be referencing a directory =config= instead of =etc=
      * If you want to use rsv2nsca add the string "--send-nsca" to the =args= line.
   1. Enable and start the nagios consumer.
      <pre class="screen">rsv-control --enable nagios-consumer</pre>
      The nagios-consumer will be started the next time that you start !RSV.  If you are already running !RSV you can turn on the nagios-consumer immediately by running:
      <pre class="screen">rsv-control --on nagios-consumer</pre>
   1. To verify that the nagios-consumer is running you can run =rsv-control -j=.
   1. The log information for the nagios-consumer can be found in these files
      * =VDT_LOCATION/osg-rsv/logs/consumers/rsv2nagios.log=
      * =VDT_LOCATION/osg-rsv/logs/consumers/rsv-nagios.out=
      * =VDT_LOCATION/osg-rsv/logs/consumers/rsv-nagios.err=

---++ Enabling non-default metrics or disabling default metrics

The [[RsvControl][rsv-control]] tool can be used to enable and disable metrics.

---++ Adding custom specifications to your !RSV configuration
If you want to add custom specifications to a particular metric's invocation (for example: to specify a non-default SRM client to be used by the =srm-ping-probe=) on a service then follow this section. These steps are fairly complex but our hope is that a tool named =rsv-control= will soon allow admins to do tasks like this using a simpler interface--stay tuned.
   1 Determine what parameter/value needs to be provided; plus probe name, metric name (and optionally FQDN of service endpoint):
      * Determine parameter switch for appropriate probe using =--help= switch; Probes are located in =${VDT_LOCATION}/osg-rsv/bin/=
 <pre class="screen"> cd ${VDT_LOCATION}/osg-rsv/bin/
 ./<strong><em>&lt;probe&gt;</em></strong> --help</pre>
      * You probably already know which metric is in context that needs an additional parameter to be passed to it. If not, then you can find out metrics tested by a probe as follows: After sourcing VDT's =setup.sh=, do the following:
 <pre class="screen"> cd ${VDT_LOCATION}/osg-rsv/bin/
 ./<strong><em>&lt;probe&gt;</em></strong> -m all -l </pre>
 ... to discover appropriate metric name. For example, when executed with the =srm-ping-probe=, you will get metric name =org.osg.srm.srmping=. 
      * (Optional): You, as admin, know the FQDN of the service under question.
   1 Add appropriate parameter/value pair to appropriate global-specs file or service-endpoint specific specs file. For example:
      * To specify location of SRM client that must be used by the =srm-ping-probe= on all SRM service endpoints:
 <pre class="screen"> mkdir -p ${VDT_LOCATION}/osg-rsv/specs/global-specs/
 echo -n " --srm-client-loc <strong><em>&lt;/usr/local/srm_custom/&gt;</em></strong> " \
    >> ${VDT_LOCATION}/osg-rsv/specs/global-specs/srm-ping-probe@org.osg.srm.srmping.spec</pre>
      * To specify location of SRM client that must be used by the =srm-ping-probe= on one SRM service endpoints called foo.grid.iu.edu but not other SRM endpoints:
 <pre class="screen"> mkdir -p ${VDT_LOCATION}/osg-rsv/specs/foo.grid.iu.edu/
 echo -n " --srm-client-loc <strong><em>&lt;/usr/local/srm_custom/&gt;</em></strong> " \
    >> ${VDT_LOCATION}/osg-rsv/specs/foo.grid.iu.edu/srm-ping-probe@org.osg.srm.srmping.spec</pre>
      * Repeat setting of global or service level specification for all applicable metrics
   1 Run =configure_osg_rsv= or =configure-osg= as you would normally do, and restart osg-rsv (=vdt-control --off osg-rsv; vdt-control --on osg-rsv=).


%INCLUDE{"MonitoringInformation/StartRsvV2"}%

%INCLUDE{"MonitoringInformation/ValidateRsvV2Configuration"}%
