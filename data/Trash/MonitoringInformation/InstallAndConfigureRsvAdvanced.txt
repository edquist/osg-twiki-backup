%META:TOPICINFO{author="ArvindGopu" date="1238154762" format="1.1" version="1.5"}%
%META:TOPICPARENT{name="RSV"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%LINKCSS%

%TOC%

%STARTINCLUDE%
%BR%


<a name="advanced_rsv_config"></a>

---+ Advanced !RSV Installations (Configurations)

%INCLUDE{"MonitoringInformation/BackgroundRsvV2"}%

%INCLUDE{"MonitoringInformation/GetRsvV2OnNonCeNode"}%

<p><br>

---++ Configuring !RSV using configure_osg_rsv script on the command line

<p> Configuring !RSV using the command line =configure_osg_rsv= script is recommended if:
   * If you want to run the !RSV client on one machine, and monitor a bunch of CEs/SEs on your site. Note that you *must* use a user proxy in this case, and you cannot use a service certificate.
   * If you find that configure_osg.py does not support advanced features you might be looking for; For example, you cannot specify different write locations for different !SRM SEs. In such a case, use the instructions provided below to configure !RSV.
   * *Additional Notes:*
      * In the examples shown below, the serviceUri for various services is shown in the standard =hostname:[port/service]= format. Most users will not use the optional port and service. For example, a typical SRM would run on port 8443, and so the user would specify just the =hostname=. But for a gridftp server running port =2813=, you should specify =hostname:2813=.

%INCLUDE{"MonitoringInformation/PreConfigCheckListRsv"}%

%INCLUDE{"MonitoringInformation/ShouldIUserServiceCert"}%



<a name="more_example_configs"></a>

---+++ Example configure_osg_rsv invocations

<p> Use *_one_* of the appropriate examples shown below, replace entries in =<em><strong>italics</strong></em>= to appropriate values
<p> <strong> Note that the one !GUMS probe that comes with RSVv2 is not expected to work robustly on all !OSG resources. We recommend you not enable them -- by avoiding specifying =--gums-probes=.</strong>

%INCLUDE{"MonitoringInformation/ConfigureRsvV2AdvStandaloneProxyGums"}%

---+++ !RSV running on OSG CE; !GridFTP server running on CE; and <strong>using !RSV service cert</strong> to run probes:

   <pre class="screen"> $VDT_LOCATION/osg-rsv/setup/configure_osg_rsv --user <em><strong>rsvuser</strong></em> --init --server y \
      --ce-probes --ce-uri "<em><strong>&#60;CE_FQDN[:port/service]&#62;</strong></em>" \ 
      --gridftp-probes  \ 
      --consumers --gratia --grid-type <strong><em>"OSG-ITB or OSG"</em></strong> \ 
      --verbose --setup-for-apache --use-rsv-cert \
      [--rsv-cert-file <em>/path/to/cert/public/cert</em> --rsv-key-file <em>/path/to/cert/private/key</em>] </pre>

<p> <strong>Note: </strong> if you have your CE and SE (!SRM or Gridftp based) running on the same host, then you can combine any of the following pairs =--ce-probes --ce-uri=,  =--srm-probes --srm-uri=, =--gridftp-probes --gridftp-uri= options into one =configure_osg_rsv= execution. 


%INCLUDE{"MonitoringInformation/ConfigureRsvV2AdvSeSrmServcertNogums"}%

%INCLUDE{"MonitoringInformation/ConfigureRsvV2AdvSeBestmanServcertNogums"}%

<p> Experimental components of !RSV v2, and their configuration, are [[#experimental_components][documented in a separate section below]].

<hr>
<p><br><p>

%INCLUDE{"MonitoringInformation/StartRsvV2"}%

%INCLUDE{"MonitoringInformation/ValidateRsvV2Configuration"}%


<p><br><p>
<hr>
<p><br><p>

<a name="experimental_components"></a>
---++ Configure experimental features/probes
<p> The following components are offered as-is on an experimental basis. You are welcome to try them, and report bugs, etc. If you do configure these components, you'll have to restart the osg-rsv service for it to take effect.

%INCLUDE{"MonitoringInformation/ConfigureRsvV2AdvCeServcertGums"}%
%INCLUDE{"MonitoringInformation/ConfigureRsvV2AdvCeServcertNogumsNagios"}%

%STOPINCLUDE%

-- Main.ArvindGopu - 27 Mar 2009