%META:TOPICINFO{author="ScotKronenfeld" date="1285973124" format="1.1" reprev="1.1" version="1.1"}%
---+!! Installing and testing !RSV probes

This page contains information for how !RSV probe developers can install and test their new probes.  For information on how to install and use !RSV as a user (not a developer) [[RSV33Installation][see here]].

This page assumes you've already written an !RSV probe.  See [[RSV33HowToWriteAProbeOverview][the guidelines for writing an RSV probe]].

%TOC{depth="4"}%

---++ How to install probes
   1 [[RSV33HowToWriteAProbeOverview][Write your RSV probe]].
   1 Put probe in osg-rsv/bin/probes directory.  The probe filename must end with =-probe=
   1 Put any helper scripts in the osg-rsv/bin/worker-scripts directory
   1 [[#MetricSymlinks][Make metric symlinks]]
   1 [[#ConfFiles][Create a .conf file]]
   1 [[#MetaFiles][Create a .meta file]]

#MetricSymlinks
---++ Make metric symlinks
Make a symlink for each metric that the probe implements in osg-rsv/bin/metrics directory pointing at probe:
<pre class="screen">
cd osg-rsv/bin/metrics
ln -s ../probes/my-probe-name org.osg.my.metric1
ln -s ../probes/my-probe-name org.osg.my.metric2
</pre>

#ConfFiles
---++ Conf files

To understand what conf files are used for, [[RSV33Config#MetricConfig][read here]].  You'll just be making a skeleton conf file for the admin to add to later.

For each *metric* you implement add a file named =org.osg.your.metric.conf= in the =osg-rsv/meta/metrics= directory.  At the top of this file put the string [org.osg.your.metric args].  Substitute in your metric name, leave the "args" part alone, and make sure there is exactly one space in between the metric name and "args".

For example, to implement the =org.osg.example.metric= metric, make a file named =org.osg.example.metric.conf= and make the first line of the file:
<pre class="screen">
[org.osg.example.metric args]
</pre>

You probably don't need to put anything else in here, but if you have interesting options to your probe, you can put in commented out entries as a template for users to fill in.  Here's an example:
<pre class="screen">
[org.osg.certificates.cacert-expiry args]
#cacerts-dir = 
#warning-hours = 
#error-hours = 
#type = 
#worker-script-file = 
#local-ce = 
</pre>


#MetaFiles
---++ Meta files

Meta files consist of two parts.  A settings section and an environment section.  Here's an example meta file:

<pre class="screen">
[org.osg.general.vdt-version]
default-cron-interval = 47 18 * * *

execute = local
service-type = OSG-CE
output-format = wlcg
probe-spec = v3
enable-by-default = true


[org.osg.general.vdt-version env]
PERL5LIB = PREPEND | !!VDT_LOCATION!!/osg-rsv/bin/probes:!!VDT_PERL5LIB!!
LD_LIBRARY_PATH = APPEND | !!VDT_LOCATION!!/globus/lib
GLOBUS_LOCATION = SET | !!VDT_LOCATION!!/globus
</pre>

---+++ Settings section

The settings section replaces the information that used to be declared at the top of the !RSV probes.  Here are the essential settings:
| *Setting* | *Value* |
| default-cron-interval | |
| execute | |
| service-type | |
| output-format | |
| probe-spec | |
| enable-by-default | |
| need-proxy | |

---+++ Environment section
This contains any specific environment settings your probe will need to run.  There are four actions you can take:
| *Action Name* | *Action Action* | 
| SET | Set a variable in the environment |
| UNSET | Remove a variable from the environment |
| PREPEND | Prepend a path to an environment variable |
| APPEND | Append a path to an environment variable |

There are a few magic variables you can use when defining environment settings:
| *Variable* | *Value* |
| !!VDT_LOCATION!! | The current VDT_LOCATION of the !RSV installation |
| !!VDT_PERL5LIB!! | The !PERL5LIB paths returned by running =$VDT_LOCATION/perl/perl-setup.pl= |
| !!VDT_PYTHONPATH!! | The PYTHONPATH paths returned by running =$VDT_LOCATION/python/python-setup.py= |

The !PERL5LIB and PYTHONPATH are useful to take advantage of any standard Perl or Python libraries the VDT installs.

---++ Testing the !RSV probe

Write this!

-- Main.ScotKronenfeld - 01 Oct 2010
