%META:TOPICINFO{author="KyleGross" date="1476285320" format="1.1" version="1.8"}%
%META:TOPICPARENT{name="RSV"}%
---+!! Installing and testing !RSV probes

This page contains information for how !RSV probe developers can install their new probes into the RSV framework.

This page assumes you've already written an !RSV probe.  See [[WriteProbe][the guidelines for writing an RSV probe]] or see [[WriteYourOwnRSVProbe][the overall process info]].

%TOC{depth="4"}%

---++ How to install probes
   1 Put probe in osg-rsv/bin/probes directory.  Remember that the probe filename must end with =-probe=
   1 Put any helper scripts in the osg-rsv/bin/worker-scripts directory
   1 [[#MetricSymlinks][Make metric symlinks]]
   1 [[#ConfFiles][Create a .conf file]]
   1 [[#MetaFiles][Create a .meta file]]

#MetricSymlinks
---++ Make metric symlinks
Make a symlink for each metric that the probe implements in osg-rsv/bin/metrics directory pointing at probe:
<pre class="screen">
cd osg-rsv/bin/metrics
ln -s ../probes/my-probe-name org.osg.my.metric1
ln -s ../probes/my-probe-name org.osg.my.metric2
</pre>

To make sure that rsv-control can find your probe run =rsv-control --list --all= and you should see your metrics listed now.


#MetaFiles
---++ Meta files

Meta files are the default probe configuration.  The .meta file is not meant to be edited by end users (they will edit the .conf file, see below).  Meta files consist of two parts - a settings section and an environment section.  You should create a .meta file at =VDT_LOCATION/osg-rsv/meta/metrics/org.osg.your.metric.meta=

Here's an example meta file, we'll break down the sections after the example.

<pre class="screen">
[org.osg.general.vdt-version]
default-cron-interval = 47 18 * * *

execute = local
service-type = OSG-CE
output-format = wlcg
probe-spec = v3
enable-by-default = false


[org.osg.general.vdt-version env]
PERL5LIB = PREPEND | !!VDT_LOCATION!!/osg-rsv/bin/probes:!!VDT_PERL5LIB!!
LD_LIBRARY_PATH = APPEND | !!VDT_LOCATION!!/globus/lib
GLOBUS_LOCATION = SET | !!VDT_LOCATION!!/globus
</pre>

---+++ Settings section
Th settings section begins with the header =[org.osg.your.metric]=.  The information in this section replaces the information that used to be declared at the top of the !RSV probes.  Here are the essential settings:
| *Setting* | *Example value* | *Description* |
| default-cron-interval | 27 * * * * | A cron time formatted string that represents when the metric will run.  We do not currently have a well defined method to determine when probes should run - talk to the VDT for help in determining this value |
| execute | local or remote | Set =local= if the metric should execute on the local machine and =remote= if the metric should execute on the remote CE. |
| service-type | OSG-CE | This categorizes the metric.  =OSG-CE= for CE metrics and =OSG-SRM= for storage metrics are the most common. |
| output-format | brief or wlcg | Set this based on the output you generate.  See [[WriteProbe][here]] for more info. |
| probe-spec | v3 | Set this to v3. |
| enable-by-default | true or false | All new probes should default to false until they have been tested. |
| need-proxy | true or false | If your probe requires a proxy set this to true, otherwise false.  Note that all execute=remote probes should set this to true |

---+++ Environment section
The environment section starts with the header =[org.osg.your.metric env]=.  This contains any specific environment settings your probe will need to run.  There are four actions you can take:
| *Action Name* | *Action Action* | 
| SET | Set a variable in the environment |
| UNSET | Remove a variable from the environment |
| PREPEND | Prepend a path to an environment variable |
| APPEND | Append a path to an environment variable |

There are a few magic variables you can use when defining environment settings:
| *Variable* | *Value* |
| !!VDT_LOCATION!! | The current VDT_LOCATION of the !RSV installation |
| !!VDT_PERL5LIB!! | The !PERL5LIB paths returned by running =$VDT_LOCATION/perl/perl-setup.pl= |
| !!VDT_PYTHONPATH!! | The PYTHONPATH paths returned by running =$VDT_LOCATION/python/python-setup.py= |

The !PERL5LIB and PYTHONPATH are useful to take advantage of any standard Perl or Python libraries the VDT installs.



#ConfFiles
---++ Conf files

Configuration files are meant to be edited by a site admin.  You'll just be making a skeleton conf file for the admin to add to later.  More information on .conf files is available [[ConfigureRSV#MetricConfig][here]].  

For each *metric* you implement add a file named =VDT_LOCATION/osg-rsv/etc/metrics/org.osg.your.metric.conf=.

For example, to implement the =org.osg.example.metric= metric, make a file named =org.osg.example.metric.conf= and make the first line of the file:
<pre class="screen">
[org.osg.example.metric args]
</pre>

You probably don't need to put anything else in here, but if you have interesting options to your probe, you can put in commented out entries as a template for users to fill in.  Here's an example:
<pre class="screen">
[org.osg.certificates.cacert-expiry args]
#cacerts-dir = 
#warning-hours = 
#error-hours = 
#type = 
#worker-script-file = 
#local-ce = 
</pre>

%META:TOPICMOVED{by="ScotKronenfeld" date="1299533061" from="MonitoringInformation.RSV33HowToWriteAProbeDetails" to="MonitoringInformation.InstallProbe"}%
