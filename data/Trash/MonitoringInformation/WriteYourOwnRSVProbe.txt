%META:TOPICINFO{author="ScotKronenfeld" date="1267205876" format="1.1" reprev="1.21" version="1.21"}%
%META:TOPICPARENT{name="RSV"}%
---+ Developing RSV Probes

%TOC%


---++ Introduction
The objective of this page is to help  members of the OSG community (system administrators, VO admins, users, etc.) to develop their own !RSV probes using the provided !RSV probe infrastructure.  These probes can be tailored to the user's needs, but should always output data in the standard !RSV metric data format (see below).  This will allow data collection within the !RSV collector infrastructure, as well as provide uniformity and seamless interoperability with the WLCG.  

---+++ !RSV Probe Specification and Requirements
The probes are designed to conform to the [[https://twiki.cern.ch/twiki/bin/view/LCG/GridMonitoringProbeSpecification][WLCG specifications]].

RSV Probes should be executable independent of location, scheduling and collection and should not require special permissions beyond a standard user.

---+++ If you choose to start from scratch (when developing a probe)
If you choose to start from scratch, then we only ask you follow the WLCG probe specifications linked above, and also generate Gratia record uploading scripts similar to this [[http://rsv.grid.iu.edu/documentation/example-gratia-script.html][example gratia uploader script]]. 

Each probe should return output in the probe specification's output format  on STDOUT: 
<pre>metricName: org.osg.batch.jobmanagers-available
timestamp: 2007-06-18T17:24:59Z
metricType: status
metricStatus: OK
serviceType: other
serviceURI: itb-zero.uits.indiana.edu
gatheredAt: peart.ucs.indiana.edu
summaryData: OK
detailsData: Available Batch Schedulers are condor.pm fork.pm managedfork.pm 
EOT</pre>



---++ Developing probe using existing Perl module

*NOTE:* Refer to [[RsvRepoAccess]] for information about checking RSV source code out of the SVN repository.

Currently !RSV probes are simple perl scripts that call various routines, in turn, within a RSVProbeBase.pm perl module -- so a basic understanding of Perl is required
To write your own probe, you can use the template/sample probe given below, or start from scratch. The !RSV probe infrastructure has been thoroughly developed, and provides several subroutines available to perform basic preliminary checks, printing of metric results, etc.  See below for a link to a sample probe script.

---+++ Quick notes about sample probe script
<ul>
<li>The probe script must provide an interface for the user, accept arguments if specified, and pass input data to the perl module for processing.
</li>
<li>The perl module receives the data, performs its tests on resources and services a resource may offer, and sets the appropriate data structures with the metric results for output.
</li>
<li> Then this output is printed on STDOUT using a specific subroutine (=Print_Metric()=)
   <ul><li> !RSV probes (or more precisely, a sub routine in the !RSVProbeBase perl module, also generate a Gratia record uploader script for central monitoring information collection.</li></ul>
</li>
<li>Additional worker scripts can be written in Perl or in another language (ex. shell script) and be called by the probe (acting as a wrapper to handle the data). 
</li>
</ul>


---+++ A sample !RSV probe (Template)
A simple probe template can be found here: [[https://osg-svn.rtinfo.indiana.edu/rsv/trunk/osg-rsv/bin/probes/remote-env-probe][remote-env-probe]]. We'll use this probe to explain how to write a new probe. Just follow the comments on the probe to figure out how you can develop your own probes. 
<p> The [[https://osg-svn.rtinfo.indiana.edu/rsv/trunk/osg-rsv/bin/probes/RSVProbeBase.pm][RSVProbeBase perl module]] is also fairly well commented, and most of the routines are self explanatory. 
<p> The current !RSV  probe-set in its entirety can be [[https://osg-svn.rtinfo.indiana.edu/rsv/trunk/osg-rsv/bin/probes/][exported from the RSV SVN repository]]
<p> If you have any questions/comments/suggestions, please [[http://rsv.grid.iu.edu/documentation/rsv-contact-info.html][contact the !RSV development team]]!


---++++ Testing probe
To test a probe, you will need a unix account, and a valid proxy if the probe does any Globus commands out to a CE/SE, and a service uri (FQDN of resource to test).  Other arguments including optional ones may be included such as timeout, etc.   Probes can be tested by hand for functionality (metrics in standard out) and automated into a monitoring infrastructure host as needed (see Adding a New Probe below).

<strong>Prerequisite if you use provided perl module</strong>: Note that, to test a probe that uses the RSVProbeBase perl module, you'll need to have the Date.pm, XML::Simple modules, and a few other basic Perl modules in your PERL5LIB environment variable. 

The typical probe (unless specificied as local) runs tests against a remote host; it can be forced to produce a Gratia sender python script using the --ggs option, as follows:

 <pre> perl ./probe -u &#60;hostname[:port][/service]&#62; -m &#60;metric name&#62; --ggs</pre>

For example:
 <pre> perl ./jobmanagers-available-probe -u cobra.uits.indiana.edu -m org.osg.batch.jobmanagers-available --ggs</pre>

Each probe should return output in the probe specification's output format  on STDOUT: 

<p> You can get metricNames using the <tt>-l</tt> switch on each probe.

----++++Note about the -m option:

Consider the -m option to be a required option, even if a probe only does 
one metric. Why? The -m option is not required by the probes but is a
required option according to the WLCG specs. If you are writing scripts to 
automate probe runs (apart from the ones we provide you) then please include 
=-m &#60;metric name&#62;= in the probe-execution line.

---++++Note about the -m option in the context of multi-metric probes:

For  probes that are capable of doing more than one metric test, if you'd like to retrieve all the metric names programatically, then please do:
 <pre> ./probe -m all -l </pre>


---++ Adding Your Probe to the !RSV Infrastructure
Once your probe is ready to be released, contact the VDT team to merge it into the next ITB release.


---++ Contact and Links
<li>To get in touch with the !RSV team, please refer to the RSVContactInfo.
<li>Release documentation for !RSV Installation and Configuration is located here: ReleaseDocumentation.InstallAndConfigureRSV


%META:TOPICMOVED{by="ThomasWang" date="1193841454" from="MonitoringInformation.WriteYourOwnProbe" to="MonitoringInformation.WriteYourOwnRSVProbe"}%
