%META:TOPICINFO{author="SoichiHayashi" date="1250197527" format="1.1" version="1.3"}%
%META:TOPICPARENT{name="RSV"}%
---++ How to cut a release

   * Note from Arvind to Soichi: This is not scripted though I don't see why we can't quickly copy/modify the MyOSG release script or the software-cache script do these steps; I kept using Unix history instead :)

   * The steps are similar to what we do to release other services:
      * For example, to cut a new ITB release 3.0.1:
 <pre> TAG=OSG_RSV-3.0.1-rc-1
 svn rm https://osg-svn.rtinfo.indiana.edu/rsv/releases/latest-itb -m "Deleting latest-itb release, will recreate in a minute";
 svn cp https://osg-svn.rtinfo.indiana.edu/rsv/trunk https://osg-svn.rtinfo.indiana.edu/rsv/releases/${TAG} -m "Tagging ${TAG}"
 svn cp https://osg-svn.rtinfo.indiana.edu/rsv/trunk https://osg-svn.rtinfo.indiana.edu/rsv/releases/latest-itb -m "Tagging latest ITB - ${TAG}"</pre>

   * Once an ITB release is thoroughly tested, a production release can be cut by losing the =-itb= suffix from the above steps.

---+++ How to cut VDT tarball release
   * We still provide VDT with a barebones RSV tarball that contains the =configure_osg_rsv= script and the =install_from_svn.sh= script.
   * Checkout latest ITB or production release -- for example, =https://osg-svn.rtinfo.indiana.edu/rsv/releases/latest-itb=
      * Create tarball
 <pre> # tar --no-same-owner -zcvf OSG_RSV_Base-3.0.1-rc-1.tar.gz \
osg-rsv/setup/configure_osg_rsv osg-rsv/setup/install_from_svn.sh </pre>
      * Import tarball into =https://osg-svn.rtinfo.indiana.edu/rsv/releases/tarballs/=
<pre>svn import OSG_RSV_Base-3.0.1-rc-1.tar.gz https://osg-svn.rtinfo.indiana.edu/rsv/releases/tarballs/OSG_RSV_Base-3.0.1-rc-1.tar.gz</pre>
----

---++ Testing Methodology
   * Fill in details on VDT/VTB/ITB testing etc.

---+++ Example directory structure (Current)
   * We have:
 <pre> 
 releases
 	3.0 
 	3.0-1
 	3.0-2 
 	latest (points at 3.0-2)
 	3.1
 	3.1-1
	latest-itb (points at 3.1-1)
</pre>
   * To fix a bug in existing production release, we will copy 
 <pre>
 releases/3.0-2 -> branches-3.0
 Check out branches-3.0 ... fix bug, commit</pre>
   * To release this bug fix, we copy:
 <pre>
 branches-3.0 -> releases/3.0-3
 Point latest to 3.0-3</pre>

---+++ Example directory structure (proposed)
   * We might have:
 <pre> 
 releases
 	3.0 
 	3.0-1
 	3.0-2 
 	latest-3.0 (points at 3.0-2)
 	latest (points at 3.0-2)
 	3.1
 	3.1-1
 	latest-3.1 (points at 3.1-1)
	latest-itb (points at 3.1-1)
</pre>
   * To fix a bug in existing production release, we will copy 
 <pre>
 releases/3.0-2 -> branches-3.0
 Check out branches-3.0 ... fix bug, commit</pre>
   * To release this bug fix, we copy:
 <pre>
 branches-3.0 -> releases/3.0-3
 Point latest-3.0 at 3.0-3
 Point latest to 3.0-3</pre>



-- Main.ArvindGopu - 23 Jul 2009