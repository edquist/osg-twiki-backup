%META:TOPICINFO{author="AlainRoy" date="1286575624" format="1.1" reprev="1.4" version="1.4"}%
%META:TOPICPARENT{name="RSV33"}%
---+!! How to write an !RSV probe:

This page contains an overview of how to write an !RSV probe.  The [[RSV33HowToWriteAProbeDetails][details for installing a probe are here]].

Writing a probe has become *much* easier with the RSV 3.3 release! Instead of writing a script that runs locally and explicitly invokes Globus commands to remotely test a CE, you simply write a script that execute on the CE. Also, instead of knowing the details of the WLCG Probe Specification Output, you can optionally output very simple text to describe what your probe did.

[[RSVV33ProbeComparison][Compare the old and new style probes]]

%TOC{depth="3"}%

---++ Language constraints:
   * can be written in any standard language that will be universally available (e.g. sh, perl, python)


---++ Probe output:
   * Your probe must return status and details on STDOUT
   * Your probe can (and should) write any other debugging info to STDERR.  STDERR can come before/after/in-the-middle of STDOUT, it doesn't matter.

The status can be in one of two formats, 'wlcg' and 'brief'.  

---+++ wlcg format
The wlcg output mode will look familiar to anyone who has used !RSV in the past.  There is probably somewhere I could link to in the twiki to fully explain the syntax (but I don't know where that is currently).

<pre class="screen">
metricName: org.osg.certificates.crl-expiry
metricType: status
timestamp: 2010-10-01T16:30:00Z
metricStatus: OK
serviceType: OSG-CE
serviceURI: pg.ihepa.ufl.edu
gatheredAt: pg.ihepa.ufl.edu
summaryData: OK
detailsData: OK: All CRLs have been recently updated
88 CRLs tested.
	0 had not been updated for atleast 72 hours;
	0 CRLs have not been updated for atleast 9 hours;
	88 CRLs have been updated with the last 9 hours.
EOT
</pre>

---+++ Brief format
The brief output format has been developed so that probe authors do not need to fully understand the wlcg format.  =rsv-control= will parse the brief output and create a wlcg-style record.

The brief mode is defined as follows:
   * First line is 'JOB RESULTS:'
   * Second line is the status
   * All remaining lines are the details
   * A trailing EOT is *not* necessary

Status can be one of:
|  *Status*  |  *Description*  |
|  OK  |  Service is running as expected  |
|  WARNING  |  Service may be degraded in some way, or about to become degraded  |
|  CRITICAL  |  Service has a problem affecting functionality and/or availability  |
|  UNKNOWN  |  Cannot determine service status  |

Here are some examples

Metric run resulting in 'OK' status:
<pre class="screen">
JOB RESULTS:
OK
Ping succeeded
</pre>

Metric run resulting in a non-OK status:
<pre class="screen">
JOB RESULTS:
CRITICAL
Ping unsuccessful against host foo.cs.wisc.edu

Troubleshooting tips:
 - Is the network available?
 - Is the remote computer available?

Ping output:
ping: unknown host foo
</pre>

---++ Return code:
   * always return 0 if the job produced a status and details (even if the status is not OK)
   * return non-zero if the job fails for a different reason (such as bad inputs, missing exes, etc)

---++ New types of metrics:
In order to simplify probe development we have added a concept of 'local' and 'remote' metrics:
   * local
      * The probe will execute on the same computer !RSV is running on.  
      * This is the method that all RSV probes are currently using  
      * The probe must use the appropriate commands to monitor the remote host (e.g. =globus-url-copy=, =srm-ping=).  
      * If the probe is going to run =globus-job-run= to execute some code on the remote computer, it is a good candidate to use the 'remote' universe below instead.  Many of the existing RSV probes could be converted.
   * remote
      * The !RSV infrastructure will execute the probe via =globus-job-run= on the host being monitored.  
      * This means that when the probe starts executing it will already be on the remote host with the appropriate environment set (e.g. OSG_LOCATION).
      * Some good candidates for this type of probe would be checking the osg-version, CA Certificates, or CE directory permissions.
      * This simplifies the probe development significantly since it does not need to understand Globus, proxies, authentication, etc.  
      * Note: this might be switched from using =globus-job-run= to using Condor-G in the future, but this should not affect the probes.
   * remote-batch? - This is not supported yet, but we may add a way to run a metric on the remote batch system

---++ Installing the !RSV probe:

[[RSV33HowToWriteAProbeDetails][Look here]]

-- Main.ScotKronenfeld - 01 Oct 2010

%META:TOPICMOVED{by="ScotKronenfeld" date="1285970848" from="MonitoringInformation.RSV33HowToWriteAProbe" to="MonitoringInformation.RSV33HowToWriteAProbeOverview"}%
