%META:TOPICINFO{author="BrianBockelman" date="1287150631" format="1.1" version="1.2"}%
%META:TOPICPARENT{name="RsvReportsOverview"}%
---+ Developing on RSV Reports 


---++ Getting the source

The RSV Reporting system is python-based and uses the built-in distutils module to create binary tarballs and RPMs of the reports.

First, make sure that you have a working system python and have the current pre-requisites installed for the RSV reports (this amounts to the MySQL bindings and setuptools currently).

Next, check out the code from subversion using the following command
<verbatim> svn co svn://t2.unl.edu/brian/rsvreports</verbatim>

(You may have to run 'yum install subversion' if the svn client is not already on your system).

---++ Creating a Release RPM

To make a release, first update the version number:
   * Update the version number in setup.py (currently, on line 5)
   * Update the release number in setup.cfg for the RPM (in the section [bdist_rpm])
      * If you add an RPM dependency, make sure it is listed in setup.cfg

Next, run the python build scripts:
<verbatim>python setup.py bdist_rpm</verbatim>

This should produce an RPM in the dist/ directory named
<verbatim>RSV-Reports-<version string>-<release number>.noarch.rpm
RSV-Reports-<version string>-<release number>.src.rpm</verbatim>

---++ Making a Release

Copy the *.noarch.rpm into the yum repository of your choice, and run "createrepo ." to re-generate the repository metadata.

If this is an official release at UNL, copy the RPM to t2.unl.edu.  The repositories it needs to be copied to are:
   * SL5/32-bit: /var/www/html/rpms/SL5/i686
   * SL5/64-bit: /var/www/html/rpms/SL5/x86_64

Copy the RPM to each of these directories, then run:
<verbatim>
createrepo /var/www/html/rpms/SL5/i686
createrepo /var/www/html/rpms/SL5/x86_64
</verbatim>

We encourage all changes to be submitted upstream.

Once released, send an email to goc@opensciencegrid.org requesting they test and deploy the new RPM.