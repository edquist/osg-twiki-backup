%META:TOPICINFO{author="BrianBockelman" date="1272289943" format="1.1" reprev="1.5" version="1.5"}%
%META:TOPICPARENT{name="WebHome"}%
---+ Measurements and Metrics Graphing

Metrics and Measurements provides a web graphing system designed for experts to pull data out of the Gratia system and other data sources.  It is based upon !GraphTool.

---+++ Install Directions
   * Start on a working RHEL-4 or -5 compatible system with a functional yum setup.
   * Install the Nebraska yum repository RPM:
      * For 32-bit RHEL-4 compatible installs: rpm -i http://t2.unl.edu/store/rpms/SL4/i686/Nebraska-repo-0.1-1.noarch.rpm
      * For 64-bit RHEL-4 compatible installs: rpm -i http://t2.unl.edu/store/rpms/SL4/x86_64/Nebraska-repo-0.1-1.noarch.rpm
      * For 32-bit RHEL-5 compatible installs: rpm -i http://t2.unl.edu/store/rpms/SL5/i686/Nebraska-repo-0.1-1.noarch.rpm
      * For 64-bit RHEL-5 compatible installs: rpm -i http://t2.unl.edu/store/rpms/SL5/x86_64/Nebraska-repo-0.1-1.noarch.rpm
   * Install the EPEL repository.
      * This is covered here: https://fedoraproject.org/wiki/EPEL/FAQ#howtouse
   * Do =yum install OSG-Measurements-Metrics=
      * This will pull in python-matplotlib and python-setuptools, which may conflict with old versions of OSG-Metrics-Measurements
      * If you forget to install the EPEL repository, the python-matplotlib dependency won't correctly resolve.
   * Install the optional dependency, _multiprocessing_, which will allow graphtool to do its CPU-intensive portions in a separate process, increasing the overall concurrency.
      * =yum install multiprocessing= 
   * Copy =/etc/DBParam_basic.xml.rpmnew= to =/etc/DBParam.xml=.
   * Fill out the templates in =/etc/DBParam.xml=.  You can set things up so all three connections point to the same Gratia database if you'd like (in fact, this is the usual setup for local collectors).
   * Start up the service with =service !GratiaWeb start=.
   * View the webpage at http://your_hostname.example.com:8100/gratia/xml/
   * The graphs utilize port 8100; it is common practice to use mod_proxy in Apache to put the graphs behind a production webpage.

---+++ Development Directions

 The source code for =OSG-Measurements-Metrics= is kept here:

<verbatim>
svn co svn://t2.unl.edu/brian/GraphUsers/gratia
</verbatim>

To rebuild the RPM, copy the setup files for OSG-Measurements-Metrics to the top-level directory:
<verbatim>
cp setup/setup.{cfg,py} .
</verbatim>

Then run,
<verbatim>
python setup.py bdist_rpm
</verbatim>

This will put the new copy of the RPM in =dist/=.  If you want to bump the version number, edit setup.py; if you want to bump the release number, edit setup.cfg.  Once you are done, make sure you copy them back to setup/.  Otherwise, =svn commit= will not pick up the changes.
