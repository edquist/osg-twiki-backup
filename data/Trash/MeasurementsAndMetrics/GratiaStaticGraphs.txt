%META:TOPICINFO{author="X509_2fDC_3dorg_2fDC_3ddoegrids_2fOU_3dPeople_2fCN_3dBrian_20Bockelman_20504307" date="1297189142" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="WebHome"}%
---+ Install and Configure the OSG Static Graphs

---++ Installation

This software runs only on SL5 and depends on the EPEL and Nebraska repositories.  Assuming you have already added EPEL to your YUM configuration, you add Nebraska by doing the following:

<verbatim>
rpm -Uhv http://t2.unl.edu/store/repos/nebraska/5/nebraska/x86_64/neb-koji-rpm-1.0-3.noarch.rpm
</verbatim>

Next, install the proper RPM:

<verbatim>
yum install GratiaStaticGraphs
</verbatim> 

If there are dependency resolution issues, STOP.  Please do not solve them yourself - report them!

---++ Configuration

Configuration, by default, is controlled in =/etc/osg_graphs.conf=.  You need to edit at least two items, both in the =[General]= section:

   * =Enabled=: Set to true.  Otherwise, the script exits 0 immediately.
   * =Dest=: Set to the top-level web location where the output images will be located.

Next, you should look at the cron job in =/etc/cron.d/GratiaStaticGraphs.cron=.  By default, this runs as user =nobody= every 8 hours.  Stdout is redirected to =/dev/null=, but stderr is not.  If you need to run this as a different user or need special setup to write into the destination directory (AFS tickets, for example), you may customize this file; edits will not be destroyed on upgrades.

---++ File Locations

   * =/etc/osg_graphs.conf=: The default configuration file.  Local edits are preserved upon upgrades.
   * =/etc/cron.d/GratiaStaticGraphs.cron=: Cronjob definition.  Local edits are preserved upon upgrades.
   * =/tmp/osg_graphs=: The default output directory.  Change this to the appropriate webroot.
   * =/usr/bin/static_graphs=: The driver script which produces the graphs.
   * =/usr/lib/python2.4/site-packages/gratia=: Python files implementing the =static_graphs= script.

---+ Building the OSG Static Graphs

First, checkout the sources:

<verbatim>
svn co svn://t2.unl.edu/brian/GraphUsers/gratia
</verbatim>

This will contain several different programs; we want to build the static_graphs one.  Copy over the appropriate setup files:

<verbatim>
cp setup/setup_static_graphs.cfg setup.cfg
cp setup/setup_static_graphs.py setup.py
</verbatim>

Increment the build or version number in =setup/setup_static_graphs.{cfg,py}= as necessary.

Next, generate the source tarball:

<verbatim>
python setup.py sdist
cp dist/GratiaStaticGraphs-0.3.tar.gz ~/rpmbuild/SOURCES/
</verbatim>

Generate the spec file:

<verbatim>
python setup.py bdist_rpm --spec-only
</verbatim>

Edit the resulting =dist/GratiaStaticGraphs.spec= and add the following line to the end:

<verbatim>
%config(noreplace) /etc/osg_graphs.conf
%config(noreplace) /etc/cron.d/GratiaStaticGraphs.cron
</verbatim>

Build the SRPM:

<verbatim>
rpmbuild -bs dist/GratiaStaticGraphs.spec
</verbatim>

Finally, build in Koji:

<verbatim>
koji build dist-el5-nebraska ~/rpmbuild/SRPMS/GratiaStaticGraphs-0.3-2.src.rpm
</verbatim>
