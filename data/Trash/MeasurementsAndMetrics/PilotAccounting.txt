%META:TOPICINFO{author="BrianBockelman" date="1280972223" format="1.1" version="1.2"}%
%META:TOPICPARENT{name="WebHome"}%
---+ OSG Proposal for Pilot and Payload Accounting

---++ Introduction

Using the current accounting system, the OSG has the ability to see only jobs running through the batch system of OSG sites.  Starting during Year 4, there has been increased usage of pilot-based systems.  These systems send in a pilot job to the batch system which is not a scientific payload, but rather downloads user "payload" jobs after it has started and verified the worker node environment is acceptable.  Multiple payload jobs might be run per pilot, and the payload might belong to a user distinct from the pilot (these are also known as Multi-User Pilot Jobs, or MUPJs).  The current OSG accounting system can only record the pilots, not the user jobs.

This document covers the OSG drivers and requirements for the MUPJ accounting, and describes the proposed solution.

---++ Drivers for MUPJ accounting

There are two drivers for the MUPJ accounting:
   * WLCG: The WLCG has requested the job accounting be done at a per-user level.  This means we should be able to track and report the CPU/wall usage per payload user, not just as the pilot proxy.
   * OSG Council request: The OSG council has requested the OSG project track the science domain of each job.  In multi-domain VOs, such as HCC, this amounts to being able record the DN or FQAN of the payload job.
   * Fermilab/BNL/security: Some site's security requirements force us to carefully trace what user's jobs were running at any time.  *NOTE* this requirement does not imply the OSG accounting must do this; sites seem satisfied with the glExec logs.

---++ Accounting Plan

We believe the security traceability requirements are covered by the glExec logs and do not consider them further here.

*High level*: The WLCG and OSG Council requests do not require the payload job information to be correctly represented at the site, but only at the central OSG level.  Hence, we plan on solving this by instrumenting the VO payload submit hosts to collect and send the requisite data.

In order to implement this, OSG needs a new policy that, if a VO would like to run a MUPJ, then it *must* report payload accounting.

A new probe needs to be designed for Panda and glideinWMS.  The latter will most likely be a few small changes to the existing Condor probe.  Collector/database work needs to be done in order to properly include the data into the summary tables.

*Technical details*: For each OSG-supported pilot system, there would need to be a new Gratia probe.  The glideinWMS one would be a variant of the existing condor probe and the Panda effort in OSG extensions would develop a new probe.  The changes needed for the probes to signify the data as payload instead of pilot data will be handled by the Gratia team.  These probes must record the DN of the pilot and the payload job, as well as any host information.

The Gratia collector will need to understand how to add payload data to the summary tables, which the OSG will need to consume.  This could be done by determining which summary row the data would have been recorded in, subtracting the relevant hours from it, and adding a new summary row.  The jobs do not need to be linked at the "raw record" hours.  The summarization logic should be able to handle the following cases:
   * Payload record arrives prior to pilot record
   * Pilot record arrives prior to the payload record
   * Pilot record never arrives
   * Payload record never arrives
The summary tables should have a special designation for payload hours reported which do not have corresponding pilot hours which prevents these "extra hours" from showing up in OSG's existing graphs and reports.  Payload records should never cause the total number of wall hours to increase in the graphs (i.e., they can only refine existing records, not add more time).