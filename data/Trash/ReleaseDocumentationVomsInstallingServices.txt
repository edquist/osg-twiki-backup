%META:TOPICINFO{author="DerekWeitzel" date="1308328940" format="1.1" version="1.42"}%
%META:TOPICPARENT{name="VomsInstallGuide"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%DOC_STATUS_TABLE%
%TOC%

<!--
   * Local UCL_CWD  = %URLPARAM{"INPUT_CWD" encode="quote" default="/usr/local/osg/voms"}%
-->
---++ About this Document
This document shows the installation of the Virtual Organization Membership Service, %LINK_VOMS%, service.  This service is used to maintain the membership of the VO, and also to manage attributes for users.

This document is intended to be only a portion of the larger [[ReleaseDocumentation.VomsInstallGuide][VOMS Installation Guide]].

%STARTINCLUDE%
%BR%

%EDITTHIS%
%BR%


---++ Requirements
   1 verify that your Operating System is [[http://vdt.cs.wisc.edu/releases/2.0.0/requirements.html][supported]]
   1 a %LINK_PACMAN% installation of version %PACMAN_VERSION% or later
   1 Installation must be done as root.
   1 allow inbound and outbound network connection _to all GUMS servers that may query this VOMS_

---++ Installation package
Setup %LINK_PACMAN%:

<pre class="rootscreen">
%UCL_PROMPT_ROOT% cd <i>PACMAN_DIR</i>
%UCL_PROMPT_ROOT% source setup.sh
</pre>

---++ Create the Installation Directory
Create an empty installation directory and change into it. 
Here we'll call it =voms=, created under  =/usr/local/osg=. 

<pre class="rootscreen">
%UCL_PROMPT_ROOT% mkdir -p %UCL_CWD%
</pre>

%WARNING% You can install VOMS in any arbitrary directory. Please don't directly use a system directory like =/opt= or =/usr= here. The installation routine will create many sub-directories in the install directory chosen.

---++ Installation using Pacman
In the next step we will use the =pacman= command line tool to install the package from the OSG software cache. %LINK_PACMAN% will ask whether you want to "trust the caches and accept the license", answer =yall= and =y= to install VOMS.

<pre class="rootscreen">
%UCL_PROMPT_ROOT% cd %UCL_CWD%
%UCL_PROMPT_ROOT% pacman -get  %CACHE%:voms
</pre>

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
Full output with questions:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% pacman -get  http://software.grid.iu.edu/osg-1.2:voms
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check... 

All prerequisite checks are satisfied.
...                                                                          


========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.
</pre>

The above line should be the last line of output you see.  The version number of the tarball may be different than that shown above.  Do not be concerned with this.
%ENDTWISTY%

If you saw no errors and Pacman created some _setup_ files, then the first part of the installation completed successfully. 

---++ Update the Environment

Depending on your shell update your environment by sourcing =%UCL_CWD%/setup.sh= or =%UCL_CWD%/setup.csh=:

<pre class="rootscreen">
%UCL_PROMPT_ROOT% source %UCL_CWD%/setup.sh
%UCL_PROMPT_ROOT% vdt-post-install 
Starting...
Done.
</pre>


<!-- How to install and handle CA Certificates and the CRL on storage and worker nodes:
InstallTheOSGCACertificateAuthorityPackage (short) or InstallACertificateAuthorityPackage (long) -->
%INCLUDE{"ReleaseDocumentation/CaCertificatesInstall" section="InstallTheOSGCACertificateAuthorityPackage" TOC_SHIFT=""}%


---++ Starting VOMS
With this release all services are initially disabled so you will have to enable them manually as follows:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% cd %UCL_CWD%
%UCL_PROMPT_ROOT% source setup.sh
%UCL_PROMPT_ROOT% vdt-control --enable fetch-crl
%UCL_PROMPT_ROOT% vdt-control --enable vdt-update-certs
%UCL_PROMPT_ROOT% vdt-control --enable vdt-rotate-logs
%UCL_PROMPT_ROOT% vdt-control --enable mysql5
%UCL_PROMPT_ROOT% vdt-control --enable apache
%UCL_PROMPT_ROOT% vdt-control --enable tomcat-55
%UCL_PROMPT_ROOT% vdt-control --enable voms 
</pre>
%NOTE% The voms service will not exist until you have created the VO.

In order to turn the VOMS services on, you have to perform the following action:
<pre class="rootscreen">
%UCL_PROMPT_ROOT% cd %UCL_CWD%
%UCL_PROMPT_ROOT% source setup.sh
%UCL_PROMPT_ROOT% vdt-control --on
enabling cron service fetch-crl... ok
enabling cron service vdt-rotate-logs... ok
enabling cron service vdt-update-certs... ok
enabling init service mysql5... ok
enabling init service apache... ok
enabling init service tomcat-55... ok
enabling init service voms... ok
</pre>

%NOTE% Technically now you have a running VOMS server but very little will work until you complete the configuration steps (below). Specially the following:
      * define a VOMS administrator
      * create a VO and add some users
      * allow read-only access to your VO


%STOPINCLUDE%

---++ *Comments*
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = StevenTimm

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = VO

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local TEST_READY   = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = TerrenceMartin
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = MarcoMambelli
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%

############################################################################################################
-->