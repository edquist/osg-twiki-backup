%META:TOPICINFO{author="TanyaLevshina" date="1267485423" format="1.1" reprev="1.38" version="1.38"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! <nop>Berkley Storage Manager (!BeStMan) 
%DOC_STATUS_TABLE%
%TOC{depth="2"}%
%STARTINCLUDE%
%BR%

---++ Introduction
The purpose of this document is to provide [[http://sdm.lbl.gov/bestman][BeStMan]] based SE administrators the information on how to prepare, install and validate the SE.

For general information on storage software architecture, implementations and use, please read [[https://twiki.grid.iu.edu/bin/view/Storage/StorageInfrastructureSoftware][StorageInfrastractureSoftware]]. For information on planning, installing and validating storage software, please follow this link to [[https://twiki.grid.iu.edu/bin/view/Storage/StorageSiteAdministrator][StorageSiteAdministrator]].

---+++!! Applicable Versions
The applicable software versions for this document are 
%RED%
%OSG_VERSION% 
%ENDCOLOR%
(or higher) and 
%RED%
*vdt-version  2.0*
%ENDCOLOR%
(or higher).

---+++!!Engineering Considerations
!BeStMan  could be installed on one node and the installation cache consists of the following components: 
   * !BeStMan is an implementation of SRM v2.2 for essential interfaces to disk based storage systems - [[http://datagrid.lbl.gov/bestman][BeStMan Home Page]] 
   * !GridFTP server  provides a high-performance, secure, reliable data transfer [[http://www.globus.org/toolkit/docs/3.2/gridftp][GridFTP documentation]]. 
   * POSIX-compliant file system
   * optional package
      * Gratia gridftp transfer probe - cron job that reports all the file transfers to [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaSiteCollector Gratia collector]]
      *  [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS][GUMS server]] - authentication and authorization service

The following questions should be answered before you can proceed with installation and 
configuration of !BeStMan-Gateway storage solution: 
 
   $ Q. _What authorization mechanism do you prefer?_ : You need to decide if you want to use grid-mapfile or !GUMS server for users’ authentication and authorization. More details about !GUMS could be found at [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS GUMS Installation Guide]]. %BR% %BR% We currently recommend using GUMS as it provides superior flexibility and allows a site to manage all of its mappings in one central location; most large sites use GUMS.
 
   $ Q. _Do you want to enable Gratia gridftp-transfer probes?_ : Yes!  The Gratia gridftp-transfer probes provide much-desired statistics that OSG uses for accounting, much like the Gratia job accounting.  More details can be found at [[https://twiki.grid.iu.edu/bin/view/Accounting/WebHome  Gratia Home Page]]. The reported information will include the source and destination of transfer, certificate subject of transfer initiator, size and status of the transferred file. %BR% %BR% This probe captures transfer statistics, hence it needs to be installed on your !GridFTP server.  If you do not run your !GridFTP server and !BeStMan server out of the same VDT installation, you will want to additionally install this probe on your other !GridFTP servers.

---+++!!Help!
If a problem occurs during installation or verification of the service, see [[#DebugInfo][Debugging Information]].


---++Checklist
   1. [[ReleaseDocumentation/PacmanInstall][pacman]] version >= %PACMAN_VERSION% is required
   1. The server must have a fully qualified domain name and a valid [[ReleaseDocumentation/GetGridCertificates][grid host certificate]] installed in =/etc/grid-security/=
   1. !BeStMan server needs to have a valid host certificate installed in =/etc/grid-security/bestmancert=. The certificate should be own by a user that is running !BeStMan server. The right permission (600) should be set on those files. %ICON{warning}%  !BeStMan should be configured with host certificate in order to be able to handle requests from !LCG-Utils tools. This is mandatory for at least all !BeStMan servers that support ATLAS experiment. Normally the OSG !BeStMan implementation uses a service certificate, not a host certificate. This causes lcg-cp to fail because the certificate name (which looks like http/hostname instead of just hostname) doesn't match the hostname. 
   1. The firewall must allow incoming connections to the !GridFTP port (default 2811). Outgoing connections must be allowed from high ports ( typically in range 32769-65535 ). We recommend to consult the [[ReleaseDocumentation/ComputeElementFirewalls][Firewall Guide]] if you install the !GridFTP server for the first time.
   1. A working GUMS server or a gridmap-file are needed for authorization using grid certificates.

---++ !BeStMan Installation Procedure
Login as root and check if pacman version >=%PACMAN_VERSION% is installed:
<pre class="screen">
su root
pacman -version
</pre>

Next,  create an installation directory and change this directory. This directory will later be used to get the !BeStMan package  from the %CACHE% cache.

<pre class="screen">
mkdir -p /opt/osg_%OSG_VERSION%-bestman/
cd /opt/osg_%OSG_VERSION%-bestman/
</pre>

If you are using GUMS authorization method you will need to setup _VDT_GUMS_HOST_ environment variable, if you are using  gridmap-file ,please, proceed to the next step.
<pre class="screen"> 
cd &lt;VDT_LOCATION&gt;
export VDT_GUMS_HOST=&lt;GUMS hostname&gt;  
</pre>

Finally, execute pacman to get the !BeStMan package from the %CACHE% cache. Pacman will ask whether you want to trust the cache (=yall=).
<pre class="screen">
cd &lt;VDT_LOCATION&gt;
pacman -get %CACHE%:Bestman
</pre>
The install procedure will print out a warning:
<verbatim>
========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.
</verbatim>

The information provided in the README is out of date. Please setup the CA certificates in the following way instead:
<pre class="screen">
source setup.sh
$VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
</pre>
This command will download certificates distributed by the OSG to =$VDT_LOCATION/globus/share/certificates= and create a symlink from =$VDT_LOCATION/globus/TRUSTED_CA= to that location. [[VDTCAManage][Other options]] are also available.

To reflect the changes update the environment and run the post installation script:
<pre class="screen">
vdt-post-install
</pre>

You can verify that the version installed is the version you expected by executing =vdt-version=. To see all services available use =vdt-control -list=
<pre class="screen">
vdt-version
vdt-control --list
</pre>
This completes the installation of the !BeStMan server. Move to the [[#!BeStMan Configuration][this step]] to configure the !BeStMan and !GridFTP servers. You may also chose to configure Gratia transfer probe at this time.
If you want to install additional !GridFTP servers on the different nodes, please, follow [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GsiFtpStandAlone][this document]]


---++ !BeStMan Configuration
You will need to configure !BeStMan first in order to enable it as a service. The full review of !BeStMan configuration options are provided in the [[http://sdm.lbl.gov/bestman/docs/bestman-guide.html][Bestman Administrative Guide]]. The process is controlled by a !BeStMan-specific configuration script ( =$VDT_LOCATION/bestman/setup/configure= ) with command line arguments to define such items as cache directories, CA cert and CRL locations, service ports, logging information ..

If you are using gridmap-file then the simplest configuratio command n for your !BeStMan installation  is shown below:
<pre class="screen">
cd &lt;VDT_LOCATION&gt; 
source setup.sh 
$VDT_LOCATION/vdt/setup/configure_bestman --server y 
</pre>

This command will install !BeStMan that will be 
   * running  by user _"daemon"_,
   * using certificate  /etc/grid-security/http/httpcert.pem and certificate key /etc/grid-security/http/httpkey.pem
   * listening on secure port 10443 and public port 10080
   * utilizing  gridftp server running on the same host on 2811 port
   * using gridmap-file for authorization

 If you want to use GUMS for authorization the simplest configuration  command will be:
<pre class="screen">
<verbatim>
cd &lt;VDT_LOCATION&gt; 
source setup.sh 
$VDT_LOCATION/vdt/setup/configure_bestman --server y\
        --cert <bestman service cert>\
        --key  <bestman service key>\
        --gums-host <GUMS hostname>\
        --gums-port <GUMS port number>\
</verbatim>
</pre>

Where 
   * _<bestman service cert>_  path to service certificate 
   * _<bestman service key>_  path to service certificate private key</br> 

%ICON{"warning"}% *the certificate file and key  should belong to the user* - Please, see [[#Checklist][Checklist]]. 

%ICON{warning}%  !BeStMan should be configured with host certificate in order to be able to handle requests from !LCG-Utils tools. This is mandatory for at least all !BeStMan servers that support ATLAS experiment. Normally the OSG !BeStMan implementation uses a service certificate, not a host certificate. This causes lcg-cp to fail because the certificate name (which looks like http/hostname instead of just hostname) doesn't match the hostname. 
   * _GUMS hostname_ the name of  !GUMS server, <br/> 
   * _GUMS port number_ the port of !GUMS  server, <br/>   

This command will install !BeStMan that will be 
   * running  by user _"daemon"_,
   * listening on secure port 10443 and public port 10080
   * utilizing  gridftp server running on the same host on 2811 port
 
It is important to notice that --server y should be specified, otherwise the =configure_bestman= script disables the bestman server and then
it needs to be turned on again with the =vdt-control --on bestman=.


More advanced command that allows you to use GUMS authorization, specified non-default ports for !BeStMan and !GridFTP ports range, list allowed or blocked paths, etc is show below

<pre class="screen">
<verbatim>
# ./configure_bestman  --server <y,n>\
        --user <bestman user>\
        --cert <bestman service cert>\
        --key  <bestman service key>\
        --http-port <public port number>\
        --https-port <secure port number>\
        --globus-tcp-port-range <low_port,high_port>\
        --volatile-file-lifetime <lifetime in seconds>\
        --cache-size <Cache size in MB>\
        --gums-host <GUMS hostname>\
        --gums-port <GUMS port number>\
        --with-transfer-servers <GridFTP server list>\
        --with-allowed-paths <List of accessible paths>\
        --with-blocked-paths <List of non-accessible paths>
</verbatim>
</pre>

Where :
   * _bestman user_
   * _bestman service cert_
   * _bestman service key_
   * _public port number_
   * _secure port number_
   * _low_port,high_port_
   * _lifetime in seconds_
   * _GUMS hostname_
   * _GUMS port number_
   * _GridFTP server list_
   * _List of accessible paths_
   * _List of non-accessible paths_

More configuration options could be found with _--help__ option.




 !BeStMan installation comes with a !GridFTP server.  If you want to use a GUMS server for user authentication and authorization copy two files from _$VDT_LOCATION/post-install_ to in _/etc/grid-security_: 
 
<pre >
cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 
</pre>
---+++ Gratia Transfer Probe
Since  !GridFTP server  is an integral part of the !BeStMan installation you will need  to enable and configure Gratia !GrdFTP transfer probe and perform the actions described in
 [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]]
---+++ Integration with the information system

Integration of the SE with the central information systems takes place during the Compute Element installation/configuration. See the topic [[ReleaseDocumentation/GenericInformationProviders][Generic Information Providers]]. The SE does not collect or publish information independently.

---++ Installation from downloaded tar file

   * Manual installation is possible after downloading !BeStMan from [[https://codeforge.lbl.gov/projects/bestman/][https://codeforge.lbl.gov/projects/bestman/]]. Please refer to the instructions on [[http://sdm.lbl.gov/bestman][BeStMan homepage]].


---++ Firewall issues

If you have firewall, the gridftp port range should be properly set. In order to do so, you need to modify vdt-local-setup.sh.

edit =$VDT_LOCATION/vdt/etc/vdt-local-setup.sh=
<pre> 
GLOBUS_TCP_SOURCE_RANGE= low_port,high_port 
GLOBUS_TCP_PORT_RANGE= low_port,high_port
export GLOBUS_TCP_SOURCE_RANGE
export GLOBUS_TCP_PORT_RANGE
</pre>
Where low_port,high_port - controls all outbound globus connections for gridftp (e.g GLOBUS_TCP_PORT_RANGE=40000,49150).<br>
This low_port,high_port must correspond to --globus-tcp-port-range of VDT configuration of !BeStMan (or --with-globus-tcp-port-range and --with-globus-tcp-source-range from the !BeStMan manual configuration).<br>
Also, make sure that two ports for !BeStMan (--http-port and --https-port from the VDT configuration) are open.<br>


---++ Validation

---+++ Site registration and daily monitoring
Once you have your SE setup and configured, you can register it with the [[http://datagrid.lbl.gov/sitereg/][LBNL SRM monitoring system]]. This will run daily tests against your SE and the results can be viewed [[http://datagrid.lbl.gov/osg/][here]].

---+++ Self-testing with srm clients
A series of self-testing can be done with [[Storage.SRMv2Client][srm clients]]. Follow instructions and samples below or on the [[Storage.SRMv2Client][srm client page]].

---+++ Self-testing with srm-tester
A series of self-testing can be done with [[Storage.SRMTester][srm-tester]]. Follow instructions and samples on the [[Storage.SRMTester][srm-tester page]].

---++ Sample client runs (or [[Storage.SRMv2Client][more SRM v2.2 client command line examples]])

   * Assuming that !BeStMan or LBNL srm client installation is in the PATH
      * ping
         * srm-ping srm://osp4.lbl.gov:62443/srm/v2/server
      * put
         * srm-copy file:////tmp/test.data srm://osp4.lbl.gov:62443/srm/v2/server\?SFN=/srmcache/star/osg.test.data
      * ls
         * srm-ls srm://osp4.lbl.gov:62443/srm/v2/server\?SFN=/srmcache/star/osg.test.data
      * get
         * srm-copy srm://osp4.lbl.gov:62443/srm/v2/server\?SFN=/srmcache/star/osg.test.data file:////tmp/osg.data
      * rm
         * srm-rm srm://osp4.lbl.gov:62443/srm/v2/server\?SFN=/srmcache/star/osg.test.data
      * mkdir
         * srm-mkdir srm://osp4.lbl.gov:62443/srm/v2/server\?SFN=/srmcache/star/osg.test.dir
      * rmdir
         * srm-rmdir srm://osp4.lbl.gov:62443/srm/v2/server\?SFN=/srmcache/star/osg.test.dir

---++ Space Usage in !BeStMan
---+++ Iintroduction
   * Generally there are two ways of using spaces in !BeStMan
      * Automatic space allocation and garbage collection: when a user "put"s files into !BeStMan managed cache, a certain amount of space is allocated for the operation. When the files are "not in use" any more, the allocated space is claimed for other files.
      * Dynamic space reservation: Users are allowed to reserve a certain amount of space with the designated quality of service when !BeStMan is configured in such a way, as long as space is available. This can be considered as a case for opportunistic storage space usage, and explained in more details in the following section.

---+++ Space Reservation in !BeStMan

   * As SRM v2.2 specification provides [[http://sdm.lbl.gov/srm-wg/doc/SRM.v2.2.html#_Toc163229731][space reservation]], !BeStMan supports space reservation by individual users in its online managed cache space, through !srmReserveSpace interface. Users can call command line client, srm-sp-reserve with desired space size inputs. 
      * Each space reservation returns a space token when successful, and the space token can be used in "put", "get", "bring online", or "copy" operations. 
      * Space will be reserved in replica quality space area by default unless requested otherwise, and all replica quality spaces will have associated space lifetimes. 
      * Files in the reserved space will not have file lifetimes greater than the space lifetime.
      * The total space size and the guaranteed space size through space reservation are the same in !BeStMan.
   * !BeStMan configuration entries in bestman/conf/bestman.rc
      * !PublicTokenMaxMBPerUser: Max space allocation size when automatic space allocation is done for a user when space is not reserved beforehand.
      * !DefaultMBPerToken: Default space reservation size when !srmReserveSpace is requested without specific size
   * It is possible for individuals that belong to particular VOs and Roles to allow using a specific disk or mss space through an additional configuration.

---+++ Sample client runs for space usage in !BeStMan and other SRMs
   * Similar commands will work with other SRM implementations. Just change the SRM service endpoint. e.g. dCache on srm://fapl033.fnal.gov:8442/srm/managerv2
      * space reservation
         * srm-sp-reserve -serviceurl srm://osp4.lbl.gov:62443/srm/v2/server -size 1000 -gsize 900 -lifetime 900
      * space update
         * srm-sp-update -serviceurl srm://osp4.lbl.gov:62443/srm/v2/server -size 5000 -gsize 4000 -lifetime 300 -spacetoken V.10
      * space tokens retrieval
         * srm-sp-tokens -serviceurl srm://osp4.lbl.gov:62443/srm/v2/server
      * space information retrieval
         * srm-sp-info -serviceurl srm://osp4.lbl.gov:62443/srm/v2/server -spacetoken V.10
      * put operation with the reserved space
         * srm-copy file:////tmp/test.data srm://osp4.lbl.gov:62443/srm/v2/server\?SFN=/srmcache/star/osg.test2.data -spacetoken V.10
      * purge an SURL in the reserved space
         * srm-sp-purge -serviceurl srm://osp4.lbl.gov:62443/srm/v2/server -s "srm://osp4.lbl.gov:8443/srm/v2/server?SFN=/srmcache/star/osg.test2.data" -spacetoken V.10 
      * space release
         * srm-sp-release -serviceurl srm://osp4.lbl.gov:62443/srm/v2/server -spacetoken V.10

---+++ 

---++ More Information

In order to learn more about [[http://datagrid.lbl.gov/bestman][BeStMan]], please visit the [[http://datagrid.lbl.gov/bestman][BeStMan official website]].

---++ Reference
   * [[ReleaseDocumentation.BestmanGateway][OSG BeStMan Gateway Mode page]]
   * [[ReleaseDocumentation.BestmanGatewayXrootd][OSG BeStMan Gateway and Xrootd page]]
   * [[ReleaseDocumentation.BestmanOnCE][OSG BeStMan Gateway on CE page]]
   * [[ReleaseDocumentation.GratiaTransferProbe][OSG Gratia Transfer Probe page]]
   * [[http://datagrid.lbl.gov/bestman][BeStMan website at LBNL]] - [[http://datagrid.lbl.gov/bestman/docs/bestman-guide.html][BeStMan User guides]], [[http://datagrid.lbl.gov/bestman/docs/bestman-faq.html][BeStMan FAQ]] and latest downloadable tar files available here. Latest downloadables should be the same version as in VDT.
   * [[Storage.SRMv2Client][SRM v2.2 LBNL client command line examples]]
   * [[Storage.SRMTester][SRM-Tester]]
   * [[http://hep-t3.physics.umd.edu/HowToForAdmins.html#osginstall][UMD !BeStMan Admin Instruction]] - UMD experience on how to admin !BeStMan
   * [[http://t2.unl.edu/documentation/hadoop/bestman-hdfs][UNL !BeStMan Instruction]]
   * [[http://wt2.slac.stanford.edu/xrootdfs/bestman-gateway.html][SLAC !BeStMan Gateway mode Instruction]] - SLAC guide on !BeStMan gateway mode
   * [[http://www.usatlas.bnl.gov/twiki/bin/view/Admins/BestMan][US ATLAS !BeStMan instruction page]]
   * [[http://datagrid.lbl.gov/osg][OSG SRM Daily Testing Results]] - OSG provides SRM v2.2 daily testing. Site registration is needed [[http://datagrid.lbl.gov/sitereg][HERE]]
   * [[http://sdm.lbl.gov/srm-wg][SRM specifications and collaboration]] - from SRM collaboration working group
   * [[http://s-2.sourceforge.net/][S2]] - A SRM v2.2 test suite from CERN. It provides basic functionality tests based on use cases, and cross-copy tests, as part of the certification process and supports file access/transfer protocols: rfio, dcap, gsidcap, gsiftp

---++ Support
   * osg-storage@opensciencegrid.org
   * srm@lbl.gov



%STOPINCLUDE% 
%BR% 
%COMPLETE2% %BR% 
%RESPONSIBLE% Main.AlexSim - 16 March 2009 %BR% 
%REVIEW% Main.TanyaLevshina  - 20 Jul 2009 %BR% 
%REVFLAG% %S% %BR%


---++ *Comments*
| Current version above - isn't this old? | Main.RobGardner | 16 Jul 2009 - 19:52 |
%COMMENT{type="tableappend"}%
<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = TanyaLevshina

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Storage

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = AlexSim
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = FirstLast
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->
