%META:TOPICINFO{author="BrianLin" date="1410984070" format="1.1" reprev="1.6" version="1.6"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! Writing Routes for HTCondor CE

%TOC{depth="4"}%

---# Generic routes

---## Sending jobs to a...

---### HTCondor backend

If your pool's collector/schedd resides on a separate machine(s), change the value(s) of =JOB_ROUTER_SCHEDD2_POOL= and =JOB_ROUTER_SCHEDD2_NAME= to the hostname of said machine(s).

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     %RED%TargetUniverse = 5; \ %ENDCOLOR%
     name = "Local_Condor"; \
] 

%RED%JOB_ROUTER_SCHEDD2_NAME = $(FULL_HOSTNAME)
JOB_ROUTER_SCHEDD2_POOL = $(FULL_HOSTNAME)%ENDCOLOR%
</pre>

---### PBS/SLURM batch system

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     %RED%GridResource = "batch pbs"; \
     TargetUniverse = 9; \ %ENDCOLOR%
     name = "Local_PBS"; \
]
</pre> 

---### LSF batch system

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     %RED%GridResource = "batch lsf"; \
     TargetUniverse = 9; \ %ENDCOLOR%
     name = "Local_LSF"; \
]
</pre> 

---### SGE batch system

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     %RED%GridResource = "batch SGE"; \
     TargetUniverse = 9; \ %ENDCOLOR%
     name = "Local_SGE"; \
]
</pre> 

---## Filtering jobs based on...

Filtering of jobs can be done via the =Requirements= attribute and will match if the !ClassAd expression that follows evaluates to =TRUE=. More information on the syntax of !ClassAd's can be found [[http://research.cs.wisc.edu/htcondor/manual/v8.0/4_1HTCondor_s_ClassAd.html][here]].

---### Glidein queue

The following entry routes jobs to the PBS queue if the incoming job (specified by TARGET) is an Analysis glidein.

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "batch pbs"; \
     TargetUniverse = 9; \
     name = "Filtering by queue"; \
     %RED%Requirements = (TARGET.queue =?= "analy"); \ %ENDCOLOR%
] 
</pre>

---### Job submitter

The following entry routes jobs to the PBS queue iff the submitter is =usatlas2=:

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "batch pbs"; \
     TargetUniverse = 9; \
     name = "Filtering by job submitter"; \
     %RED%Requirements = (TARGET.Owner =?= "usatlas2"); \ %ENDCOLOR%
] 
</pre>

This next job route also routes based on the job submitter but uses a regex to match:

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "batch pbs"; \
     TargetUniverse = 9; \
     name = "Filtering by job submitter (regex)"; \
     %RED%Requirements = regexp("^usatlas", TARGET.Owner); \ %ENDCOLOR%
] 
</pre>

---## Setting a default...

---### Maximum Memory

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "batch pbs"; \
     TargetUniverse = 9; \
     name = "Request memory"; \
     %RED%set_default_maxMemory = 1000; \ %ENDCOLOR%
] 
</pre>

---### Number of cores to request

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "batch pbs"; \
     TargetUniverse = 9; \
     name = "Request CPU"; \
     %RED%eval_set_default_xcount = 8; \ %ENDCOLOR%
] 
</pre>

---### Queue for jobs to be sent to

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "batch pbs"; \
     TargetUniverse = 9; \
     name = "Setting queues"; \
     %RED%eval_set_default_queue = "osg_queue"; \ %ENDCOLOR%
] 
</pre>

---## Setting maximum Walltime

Set a maximum Walltime of an hour:

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "batch pbs"; \
     TargetUniverse = 9; \
     name = "Setting WallTime"; \
     %RED%eval_set_remote_cerequirements = strcat("Walltime ==", "3600", "&& CondorCE == 1"); \ %ENDCOLOR%
] 
</pre>

---## Copying or deleting attributes in the routed job

If you want to copy the environment of an incoming job to the attribute 'Original_Environment', you could do the following:

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "batch pbs"; \
     TargetUniverse = 9; \
     name = "Copying attributes"; \
     %RED%copy_environment = "Original_Environment"; \ %ENDCOLOR%
] 
</pre>

If you wanted to remove an attribute for the job that gets routed:

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "batch pbs"; \
     TargetUniverse = 9; \
     name = "Copying attributes"; \
     %RED%delete_environment = True; \ %ENDCOLOR%
] 
</pre>

---# HTCondor batch system specific routes

---## Setting custom attributes

If you're using a site-specific attribute on your HTCondor backend, say =Experiment=. You can do that with =set_= or =eval_set=:

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     TargetUniverse = 5; \
     name = "Setting custom attribute"; \
     %RED%/* Set the experiment to a string */ \
     set_Experiment = "atlas"; \
     /* The following evaluates to Experiment = 'atlasSetting custom attribute' */ \ 
     eval_set_Experiment = strcat("atlas", Name); \%ENDCOLOR%
] 
</pre>

---## Setting periodic hold, release or remove

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     TargetUniverse = 5; \
     name = "Setting periodic statements"; \
     %RED%/* Puts the routed job on hold if the job's been idle and has been started at least once or if the job has tried to start more than once */ \
     set_Periodic_Hold = (NumJobStarts >= 1 && JobStatus == 1) || NumJobStarts > 1; \
     /* Remove routed jobs if their walltime is longer than 3 days and 5 minutes */ \ 
     set_Periodic_Remove = ( RemoteWallClockTime > (3*24*60*60 + 5*60); \
     /* Release routed jobs if the condor_starter couldn't start the executable and 'VMGAHP_ERR_INTERNAL' is in the HoldReason */ \        
     set_Periodic_Release = HoldReasonCode == 6 && regexp("VMGAHP_ERR_INTERNAL", HoldReason); \ %ENDCOLOR%
] 
</pre>

---## Setting an accounting group based on...

Accounting groups are an HTCondor construct that allows for sharing compute time amongst groups of users rather than splitting time based on Unix user name ([[http://research.cs.wisc.edu/htcondor/manual/v8.0/3_4User_Priorities.html#SECTION00447000000000000000][documented here]]). These groupings are HTCondor-specific and are not related to Unix user groups. In the past, admins used UID and extattr table files with their GRAM CE's to assign jobs to certain accounting groups based on username or proxy info ([[https://twiki.grid.iu.edu/bin/view/Documentation/Release3/InstallComputeElement#7_2_Configuring_your_CE_to_use_C][documented here]]). This option still works but can be overriden in your own routes if you so choose.

---### Username

Assigning an accounting group to a job is very flexible when using the !ClassAd language. The most basic use case takes the job's owner and appends it to a group e.g. a job with =Owner = bob= will result in =AccountingGroup = osg_group.bob=:

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "condor localhost localhost"; \
     eval_set_GridResource = strcat("condor ", $(FULL_HOSTNAME), $(FULL_HOSTNAME)); \
     TargetUniverse = 5; \
     name = "User accounting groups"; \
     %RED%eval_set_AccountingGroup = strcat("osg_group.", Owner); \ %ENDCOLOR%
] 
</pre>

---### Proxy attributes

Equivalent to extattr table

<pre class="file">
JOB_ROUTER_ENTRIES = [ \
     GridResource = "condor localhost localhost"; \
     eval_set_GridResource = strcat("condor ", $(FULL_HOSTNAME), $(FULL_HOSTNAME)); \
     TargetUniverse = 5; \
     name = "Proxy accounting groups"; \
     %RED%eval_set_AccountingGroup = strcat(ifThenElse(regexp("\/cms\/Role\=pilot", x509UserProxyFirstFQAN), "cms.wlcgpledge.pilot", \
                                       ifThenElse(regexp("\/cms\/Role\=production", x509UserProxyFirstFQAN), "cms.prod", \
                                       ifThenElse(regexp("\/cms\/uscms", x509UserProxyFirstFQAN), "cms.other.us", "other" \
                                      ))), ".", Owner); \ %ENDCOLOR%
] 
</pre>

---# Quirks and Pitfalls

   * If a value is set in JOB_ROUTER_DEFAULTS with =eval_set_&lt;variable&gt;= and you want to override it, you will need to use =eval_set_&lt;variable&gt;= in the JOB_ROUTER_ENTRIES.
   * Make sure to run =condor_ce_reconfig= after changing your routes, otherwise they will not take effect.
   * Before the last square bracket, make sure all lines end in a line continuation character (backslash).

-- Main.BrianLin - 11 Sep 2014
