%META:TOPICINFO{author="ForrestChristian" date="1179259138" format="1.1" version="1.5"}%
%META:TOPICPARENT{name="ForrestChristianSandbox"}%
%LINKCSS%

---+ Notes From an Install of OSG Client


---++ Scientific Linux 4 failing to be recognized by OSG Client installation
You can't install it without spoofing that your are !RedHat Enterprise Linux 3. Don't know why.

<pre class="screen">
$ <userinput>pacman -pretend-platform:RHEL-3 -get OSG:client</userinput>
</pre>

There are many supported platforms under pacman that are not supported for installation of the OSG client. The installation does not give you the option of installing anyway. You have to spoof RHEL 3. 

---++ Installing certificates

(details from Penelope Constanta of Fermilab)

I need to put my grid cert into the remote server but frankly I don't know how. Penelope's stuff cleared that up. My cert is stored in Firefox (dunno why) and I got a backup / export of the certificate. Unfortunately, it's NAME.p12 which according to Penelope is not what I will need. This format has both key and certificate combined: I need them separated.

---++++ To obtain the =usercert.pem= and =userkey.pem= files from a DOE_GRID_Certificate.p12 file:

<pre class="screen">
$ <userinput>cp <replaceable>DOE_GRID_Certificate</replaceable>.p12 $HOME/.globus</userinput>
$ <userinput>openssl pkcs12 -in <replaceable>DOE_Grid_Certificate.p12</replaceable> -clcerts -nokeys -out ./usercert.pem</userinput>
$ <userinput>openssl pkcs12 -in <replaceable>DOE_Grid_Certificate.p12</replaceable> -clcerts -nocerts -out ./userkey.pem</userinput>
$ <userinput>chmod go-rw userkey.pem</userinput>
</pre>

_for AFS servers:_ On AFS space, from your $HOME directory, issue the following command to protect the directory:  =fs sa ~/.globus system:anyuser none=

---++++ To update the Fermi VOMS information (e.g., after renewing): 
   1. Get the userxxx.pem certificate files from the p12 one (above steps)
   1. Run the following on your target machine after copying the *pem files to it: %BR% =openssl x509 -in .globus/usercert.pem -subject -serial -noout=

---++++ To get your personal certificate in PEM format:
Do not ignore the last step of changing the access rights.

<pre class="screen">
$ <userinput>openssl pkcs12 -in mycertificate.p12 -nokeys -out usercert.pem</userinput>
  Enter Import Password: <replaceable>*********</replaceable>
  MAC verified OK
$ <userinput>openssl pkcs12 -in mycertificate.p12 -nocerts -out userkey.pem</userinput>
  Enter Import Password:   <replaceable>*********</replaceable> 
  MAC verified OK
  Enter PEM pass phrase:   <replaceable>*********</replaceable>
  Verifying - Enter PEM pass phrase:   <replaceable>*********</replaceable>
$ <userinput>chmod go-rw *.pem</userinput>
</pre>

Stopping for now.

-- Main.ForrestChristian - 11 May 2007 %BR%


I use a PowerBook G4, so this doesn't work on my system. I have to scp the p12 file to the remote server. Which is harder than it should be because the of the incompatibility of my ssh software and this server, but who's complaining? Ex-systems administrators for swiss banks can get a file where it needs to go. Results:

<pre class="screen">
$ <userinput>ll *pem</userinput>
-rw-------   1 forrestc users     5034 May 14 14:51 usercert.pem
-rw-------   1 forrestc users     1919 May 14 14:51 userkey.pem
</pre>

The instructions (somewhere) say to install my credentials into =~/.globus=, which I took to be the same as =$HOME/.globus=. That didn't work: something's still wrong.

<pre class="screen">
$ grid-proxy-init
Your identity: /DC=org/DC=DOEGrids/OU=Certificate Authorities/CN=DOEGrids CA 1
Enter GRID pass phrase for this identity:
Creating proxy ........................................................ Done


ERROR: Could not verify the signature of the generated proxy certificate
       This is likely due to a non-matching user key and cert

Use -debug for further information.
d84 1
</pre>

Using =grid-proxy-init -debug=:

<pre class="screen">
$ <userinput>grid-proxy-init -debug</userinput>
$ grid-proxy-init -debug

User Cert File: /home/forrestc/.globus/usercert.pem
User Key File: /home/forrestc/.globus/userkey.pem

Trusted CA Cert Dir: (null)

Output File: /tmp/x509up_u11067
Your identity: /DC=org/DC=DOEGrids/OU=Certificate Authorities/CN=DOEGrids CA 1
Enter GRID pass phrase for this identity:
Creating proxy ...........++++++++++++
..++++++++++++
 Done


ERROR: Could not verify the signature of the generated proxy certificate
       This is likely due to a non-matching user key and cert


grid_proxy_init.c:1086:globus_gsi_cred_handle.c:globus_gsi_cred_verify_cert:1829:
Error verifying credential: Failed to verify credential
OpenSSL Error: a_verify.c:162: in library: asn1 encoding routines, function ASN1_verify: EVP lib
OpenSSL Error: rsa_eay.c:580: in library: rsa routines, function RSA_EAY_PUBLIC_DECRYPT: padding check failed
OpenSSL Error: rsa_pk1.c:100: in library: rsa routines, function RSA_padding_check_PKCS1_type_1: block type is not 01
</pre>

That can't be good, since I created the pem files from a single p12 file. I then tried =grid-proxy-info= to see if it got set anyway, but there wasn't a valid proxy.

<hr />

Okay, so I went poking around. I have now opened a new ssh window and run some configure scripts in =$HOME/osg-client/vdt/setup= which may be run automajically by genies. I ran, in this order:
   * configure_environment
   * configure_cert_request
   * configure_fetch_crl
   * configure_condor
   
<pre class="screen">
$ <userinput>./configure_condor</userinput>
Command failed:
    ./condor_configure 
    Exited with value 255
</pre>

That's so very helpful. 

   * configure_globus_ws
   * configure_srm (didn't work because I'm not sure what the parameters are)
   * configure_vdt_logrotate
   * configure_condor
<pre class="screen">
$ <userinput>./configure_condor --vdt-install /home/forrestc/osg-client/vdt --server n</userinput>
Command failed:
    ./condor_configure 
    Exited with value 127
</pre>

At least it fails with a different value.

Still no joy with =grid-proxy-init=. 

<blockquote><p>Just an aside here: I've not had this much difficulty installing software since I tried to get X running on my DEC Alpha under RH 6. And there I had to create my own drivers. </p></blockquote>

A README somewhere in this =vdt= tree has this to say:

<pre class="programlisting">
Because you are not root, we could not set up the certificates for Globus.
Because the Globus web services do not run as root, you need to copy the
host certificate and give the user that the Globus WS container runs as
(currently USERID) permission to use it. To the best of our knowledge you
cannot use service certificates. Specifically you should do:

cd /etc/grid-security/

cp hostkey.pem containerkey.pem

cp hostcert.pem containercert.pem

chown USERID: containerkey.pem containercert.pem

The globus-ws init script has been installed but cannot be started until
the install is complete.  We hope to address this issue in a future version
of the VDT.
</pre>

The point of not being root is partly because I'm on a shared box. There already IS a =containerkey.pem= that is owned by =daemon=, the user that the web server on this box runs as.

So I'm calling it a day and saying that this is ridiculous.

-- Main.ForrestChristian - 14 May 2007 %BR%

---

---++ New day, figuring certs are screwed up somehow

New day so trying something again. I saw fvlingen's "[[http://www.its.caltech.edu/~fvlingen/web/notes/gridJobSubmission.html][Installing the OSG/Condor Client and Submitting Jobs to the Grid (Based on Condor)]]" and tried to follow it:

---+++ Job submission
   * Setup the environment. =source setup.sh= (or =source setup.csh= for c-shell)
   * Run =globus-hostname= and see if outputs the correct hostname. Make sure this is consistent with the values in =/etc/hosts=. %BR% %BR%Actually, I just checked to see if it was cmssrv09.fnal.gov, which was the server that I was using and it was:
<pre class="screen">
$ <userinput>globus-hostname</userinput>
 cmssrv09.fnal.gov
</pre>
   * Make sure your firewall settings are correct (not blocking any servers that you start later on). You need to specify what ports globus can use for communicating with your machine: %BR% =export GLOBUS_TCP_PORT_RANGE=3000,6000= %BR%and in your =/etc/sysconfi/iptables= you need to specify that these ports are accessible. 
   I ran the first and ignored the second, since the point is not to run as root.
   * Run =voms-proxy-init= to create a proxy
   Well, the first time this failed with another cert complaint. So I went back, reexported my cert, wget-ed it from my box, copied it to $HOME/.globus, ran the =openssl= commands above to create the =*.pem= files. Then I tried it again:
<pre class="screen">
$ <userinput>voms-proxy-init</userinput>
Cannot find file or dir: $prefix/etc/vomses
Your identity: /DC=org/DC=doegrids/OU=People/CN=E. Forrest Christian 802298
Enter GRID pass phrase: <replaceable>*******</replaceable>
Creating proxy ....................................................................... Done
Your proxy is valid until Wed May 16 00:01:03 2007
</pre>

Which is definitely a step in the right direction.

Continuing on with fvlingen's suggestions:

   * Start condor:%BR% =condor_master= %BR%This starts several processes. Run =ps -auwx |grep 'condor'= for a list.
<pre class="screen">
$ <userinput>ps -auwx |grep 'condor'</userinput>
Warning: bad syntax, perhaps a bogus '-'? See /usr/share/doc/procps-3.2.3/FAQ
daemon   16303  0.1  0.1  9296 5400 ?        Ss   May10  10:07 /storage/local/data1/osg-ce/condor/sbin/condor_master
daemon   16304  0.0  0.0  7148 3200 ?        Ss   May10   1:38 condor_collector -f
daemon   16306  0.0  0.0  7260 3408 ?        Ss   May10   1:09 condor_negotiator -f
daemon   16310  0.0  0.1  9672 5460 ?        Ss   May10   3:05 condor_schedd -f
daemon   16312  0.5  0.3 17460 13232 ?       Ss   May10  41:26 condor_startd -f
daemon    1211  0.0  0.0  4520 1736 ?        S    May10   0:00 /storage/local/data1/osg-ce/globus/libexec/globus-scheduler-event-generator -s condor -t 1178831779
forrestc 16861  0.0  0.0  7144 3244 ?        Ss   12:17   0:00 condor_master
forrestc 16862  0.0  0.0  6876 2912 ?        Ss   12:17   0:00 condor_negotiator -f
forrestc 16863  0.0  0.0  8164 3448 ?        Ss   12:17   0:00 condor_schedd -f
forrestc 16864  0.9  0.0  7776 3424 ?        Ss   12:17   0:04 condor_startd -f
forrestc 18931  0.0  0.0  3928  608 pts/3    S+   12:25   0:00 grep condor
</pre>
   My =condor_master= command must run from the general installation here on this rather than on my own $HOME. That's interesting. Definitely something going on here. 
   * Create a jdl file (example)(there are many more possibilities): 
<pre class="programlisting">
universe = globus
#executable on your machine (this will be transferred)
Executable = /home/forrestc/jobs/Job-1137100059.3/jobStart.sh
#queue you want to use
GlobusScheduler= t2cms02.sdsc.edu/jobmanager-fork
#other files you want to transfer
transfer_input_files = /home/fvlingen/jobs/Job-1137100059.3/job.tar.gz
should_transfer_files = YES
when_to_transfer_output = ON_EXIT
#output file condor will write to on your local machine.
Output = /home/fvlingen/jobs/Job-1137100059.3/condor.out
Error = /home/fvlingen/jobs/Job-1137100059.3/condor.err
Log = /home/fvlingen/jobs/Job-1137100059.3/condor.log
stream_output = FALSE
stream_error = FALSE
ENABLE_GRID_MONITOR = TRUE
Queue
</pre>
   This required a bit more than I had ready, so I am going to check the Grid School tutorials for more on creating a job to run. But I'm moving forward at least.
   * Submit your job: %BR% =condor_submit <replaceable>&lt;jdl file></replaceable>=
   * Monitor your queue (see the <tt>condor_q</tt> documentation for details):
<pre class="screen">
$ <userinput>condor_q</userinput>
$ <userinput>condor_q -run</userinput>
</pre>
   * Cancel your job by running =condor_rm <replaceable>&lt;job id></replaceable>=. 
Hmm. I don't know who to hit up against. So I'm using something from the [[http://fermigrid.fnal.gov/user-guide-new.html#Voms-Proxy-Init][FermiGrid Users' Guide]]:
But what can  you do? It's time to leave.
