%META:TOPICINFO{author="ChrisGreen" date="1193277183" format="1.1" reprev="1.4" version="1.4"}%
%META:TOPICPARENT{name="Main.ChrisGreen"}%
<h1>Draft OSG News article on <tt>osg-vo-tests</tt></h1>

<h1>Overview</h1>

<a href="https://twiki.grid.iu.edu/twiki/bin/view/UserGroup/OsgVoSiteTests"><tt>osg-vo-tests</tt></a> is an extensible Perl package which enables <em>application owners</em> (by which I mean people responsible for running an application on OSG) to characterize OSG sites from the point of view of being able to run their application.

<h1>Motivation</h1>
<p><a href="http://vors.grid.iu.edu/cgi-bin/index.cgi">VORS</a> (The VO Resource Selector), while an invaluable tool within its scope, will not answer all of an application owner's questions:
<ul>
<li>Whether <em>my</em> jobs will be authorized and run (the dreaded GRAM errors 7, 47 & 22).</li>
<li>Whether grid-ftp works from a worker node; SQUID? srmcp?</li>
<li>Does MPI work? What is the compile command?</li>
<li>Other application libraries and utilities: DB clients, Curl, Ruby?</li>
<li>How many jobs are running right now? How many slots are free?</li>
<li>Is OSG_APP writable from the WN? OSG_DATA?</li>
<li>Will a batch job of mine ever actually start?</li>
</ul></p>
<p>In addition, there are multiple ways of discovering the information an application owner needs:
<ul>
<li>fork jobs;</li>
<li><a href="http://vors.grid.iu.edu/cgi-bin/index.cgi">VORS</a>;</li>
<li><nop>ReSS <nop>ClassAds;</li>
<li>batch jobs.</li>
</ul>
How does one collate and present or use information from these disparate sources? How can one tailor question sets for multiple combinations of requirements for different applications? <a href="https://twiki.grid.iu.edu/twiki/bin/view/UserGroup/OsgVoSiteTests"><tt>osg-vo-tests</tt></a> attempts to fulfill these needs.</p>

<h1>Some more details</h1>

<ul><li>The package is written in Perl, for several reasons:
<ul><li>It is extensible through module inheritance and dynamic code evaluation;</li>
    <li>There is a good chance of familiarity for VO application owners;</li>
    <li>One can have a fast development / test cycle.</li></ul></li>
<li>A human-readable HTML summary page is generated with links to detailed test results; also CSV for machine-readability.</li>
<li>The package obtains VO credentials (a VOMS proxy) before running the tests.</li>
<li>Batch job submission and monitoring are handled, including a time-out facility.</li>
<li>Application owners can:
<ul><li>add new tests;</li>
    <li>produce canned test list configurations for different applications.</li></ul></li>
<li>Example test run results are available for the <a href="http://user-support.opensciencegrid.org/site_tests/Engage/latest/">Engage</a> and <a href="http://user-support.opensciencegrid.org/site_tests/osg/latest/">OSG</a> VOs.
<li>Full documentation, download instructions and example configurations are available on the package's <a href="https://twiki.grid.iu.edu/twiki/bin/view/UserGroup/OsgVoSiteTests">home page</a>.
</ul>


-- Main.ChrisGreen - 25 Oct 2007
