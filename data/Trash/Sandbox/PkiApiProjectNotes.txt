%META:TOPICINFO{author="JeremyFischer" date="1329147183" format="1.1" reprev="1.7" version="1.7"}%
<h3>PKI Notes –November 2011</h3>
 
<b><u>Questions to be answered:</b></u>

<ul>
<li>Eval DigiCert API to see if creating an OSG frontend on to it is viable and what the trade offs are
<ul><li><b>This is only my opinion, but to give both the level of access control required by the OSG and the ability to archive the data we'd want to preserve in relation to certificates and users, I think it's not just viable, but rather a requirement. The DigiCert API model is fleshing out more and more, but the reality is that they do not have the same needs for data retrieval and archiving that the OSG does. This means that in order to maintain a database of users, their metadata, and the associated certs, an OSG frontend is required. In addition, in the case of a breach at DigiCert, OSG would have data on all valid hosts and users and could use that as a means of communications and reconstruction should it ever be necessary.</ul></b>
<li>Does DigiCert provide a DB of certs we can query for credentials OR do we maintain one  -- philosophically, do we want them to have that?  It increases reliance on DigiCert and landlocks the project if DigiCert closes down their operation.
<ul><li><b>In a word, no. At least not that I can tell anywhere. They provide the certs in every way (issue, renew, revoke, etc) but it does not appear that they have a way to query for credentials. Beyond that, the point made in the question is legitimate. It puts too much reliance on DigiCert for everything. In the worst case if DigiCert went offline, with an OSG credentials server, access to services would go on uninterrupted and work would continue. Since that service would be in the hands of the OSG, it could be made redundant -- a mirrored server -- and that way access and uptime are guaranteed, especially if they are spatially separated into two separate machine rooms. <i>This should be an idea to ponder when the implementation folks start brainstorming</i></b></ul>
<li>Long term -> Can we get to every certificate that DigiCert has issued? Is all data accessible? What APIs are their workflows meant to support?
<ul><li><b>With the most recent API additions, it does seem that we can access every DigiCert certificate issued for OSG. However, the only means right now involve the UI -- host certs info is available via the API but requires knowing either the order number or serial number. Both of these are only easily available if you have the actual certificate already or have access to the UI. <u>We need a means to search certs by host, institution, or name</u></b></ul>
<li>What types of interactions are possible? Acting as Net HSM only to full blown PKI service…broad spectrum.
<li>Existing scripts – can they use the DigiCert API? Is that an option to keep their workflow the same on the surface?
<ul><li><b>Existing scripts will probably have to be completely rewritten. The format of workflows could stay the same though, I think. Given how many people responded that they use their own wrappers or scripts for OSG operations, there will be a period of adjustment, but overall, it would seem that the underlying needs can all be satisfied.</b></ul>
<li>With DigiCert – do they hold all of the information necessary for renewal, can we do this with their API?
<li>is there a safety check – can’t issue same cert twice, explicitly note renewal versus new cert
     <ul>
          <li><b>Note</b>: <i>Issuing a cert to the same DN is okay as long as serial numbers are not the same. Serial numbering seems to be outside our scope of control, so assuming their system works correctly, we should be okay here. However, the concept of renewal is still an important on to have the specifics on.</i>
     </ul>
<li>What sort of metadata can be tagged on any request? Comments, codes, tie to trouble ticket, etc?
<ul><li><b>DigiCert is building comment fields into most of their API structure now. At the current time, it is the only means to add metadata via their interface. If, however, there is an OSG front end to the API system, we can add any appropriate metadata to a DB on our own server. The question comes down to defining what metadata we need.</b></ul>
<li>Can we get CRLs on demand?  Can we request at will? Created at time cert is revoked? Normal cron job? Can we request production of a CRL through the API?
<ul><li><b>At current writing, I cannot tell if CRLs can be issued automatically. In fact, I see no way via the UI or API to force issuing a CRL. This is something that must be addressed before production.</b></ul>
<li>What would the options be if DigiCert were compromised and to what depth?
<ul><li><b>This is outside the scope of PKI research. However, it was reviewed by Von and other members of the team and is part of the overall evaluation of DigiCert.</b></ul>
<li>Security Evaluation of DigiCert API? How isolated is it? How locked down can it be? Can they be exploited?
<ul><li><b>The security of the API system is mostly "security by obscurity". The problem with that is it cannot be depended on to remain secret from a determined party. Since the API functions are provided via port 443 web services, the host providing it could be firewalled to allow connection only from specific hosts. If the host also services other clients, perhaps a virtual interface could be bound to server and OSG function only routed to that specific IP. Then the both the firewall and webserver could be limited to access from specific networks. By forcing all OSG API usage through an OSG server, first, networks could be limited, password access could be enforced (creating another tier of access), and the DigiCert interface could thus be locked out from all other networks. If the API interface allows all DigiCert clients, then an enterprising cracker could access OSG data from other network interfaces. This is something for clarification from DigiCert and should probably be fully explored by OSG Security folks as well as API team.</b></ul>
<li>How do host and robot certs get renewed and revoked?
<li>Would DigiCert own the grid admin db? Can we manipulate grid admin policies and access control via API ?
<li>how many certs in last year, what level of history can we obtain via API, basically statistic/metric gathering and also specifics if possible on a granular basis
<li>Can we tag with metadata? Does it survive and propagate? Can it be searched on?
<ul><li><b>Redundant to question above on "What sort of metadata can be tagged..." DigiCert really appears to have no functionality for that in the API or UI currently in place. With an OSG front end, we could make our own tools to make the search process as granular as desired.</ul></li></b>
<li>Can we get stats/user info by VO, etc?
<ul><li><b>As it stands with DigiCert, not via UI or API as it currently stands. With an OSG maintained front end, we can collect and parse whatever data we need.</b></ul>
<li>How many and what machine/robot certs have been issued? Can we get numbers by VO?
<ul><li><b>We can easily retrieve single instances of certificates issued from DigiCert via API and we can view lists via UI of certs issued. There is no way via API to get numbers in bulk and no way at all to get by VO. Unless DigiCert changes their data design, this would again be something best done on an OSG frontend with OSG maintained data.</b></ul>
<li>Who maintains meta servers?
<ul><li><b>Unless something changes at a higher level, it would appear that OSG will be responsible for all metadata services. This would go hand in hand with the front end services as a prime time for collecting and storing any necessary metadata</ul></li></b>
<li>Can we get logging/auditing data out remotely?
<ul><li><b>A new API call exists now for getting logging data out. At first blush this looks to be the same data that is now available via the UI MKPI Audit Log. It should be adequate to troubleshoot API scripting issues. Further testing is underweigh currently.</b></ul>
 </ul>
<p>

<h3>Questions for API Analysis:</h3>

<ul>
<li>What do we want the API to do?
<li>What can the API do?
<li>What does DigiCert provide in terms of service?
<li>What can the API do that isn’t documented?
<li>What are the limitations of the API?
</ul>

<h3>Analysis of API</h3>
<ul>
<li>Does it live up to its documentation
<ul><li><b>Documentation for the API itself has been sparse. Over the course of the pilot, it has improved, but is still far from complete. Several items needed for the "security by obscurity" aspects are simply not there, whether on purpose or not. That said, each revision of the API documentation has improved overall.</ul></b>
<li>Non-Documented attributes
<li>Reliability, Scalability (how hard can we beat it until it breaks? Record limits)
    <ul><li><b>Error Handling: Trying to revoke a certificate that has already been revoked yields an HTML 200 return with "An Internal Error Occured". Not a terribly helpful troubleshooting message. Log review shows result as "Message: Error(s): api_cert_unavailable ". This should actually be returned with something helpful like "Certificate is not available for revocation. Possibly it has been revoked already?" Keeping a log on an OSG servers that could be consulted prior to the API call might be a good idea. Something to bear in mind for architecture of a new service.</ul></b>
</ul>

-=-

At the end, distill analysis of API into a one page architectural POV – how the API can best be implemented? Limitations ? Where it excels ? Where it fails? Best way to use? (as Net HSM? As more?)

-=- 

Bulk Gen proof of concept script is here - [[https://vdt.cs.wisc.edu/svn/sandbox/PKI-API-Testing-JLF/bulk-host-gen-proto.py][https://vdt.cs.wisc.edu/svn/sandbox/PKI-API-Testing-JLF/bulk-host-gen-proto.py]]

Adding new scripts based on API changes - [[https://vdt.cs.wisc.edu/svn/sandbox/PKI-API-Testing-JLF/]]

-- Main.JeremyFischer - 08 Nov 2011
