%META:TOPICINFO{author="TanyaLevshina" date="1282938826" format="1.1" version="1.56"}%
%META:TOPICPARENT{name="WebHome"}%
%DOC_STATUS_TABLE%
https://twiki.grid.iu.edu/twiki/pub/Storage/WebHome/images.jpg
%TOC{depth="2"}%
%STARTINCLUDE%
%BR%

---++ Introduction
This document describes the installation of a Storage Element that consists of !BeStMan-Gateway  on top of Xrootd. !BeStMan, developed by the Scientific Data Management Group of Lawrence Berkeley National Laboratory, is a generic SRM v2.2 load balancing front-end for transfer servers and disk-based storage systems.
Xrootd is a high performance network storage system widely used in high energy physics experiments such as ATLAS and ALICE. The underlying Xroot data transfer protocol provides highly efficient access to ROOT based data files. Please see [[#References][these]] references for more information.

For general information on storage software architecture, implementations and use, please read [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/StorageInfrastructureSoftware][StorageInfrastractureSoftware]]. For information on planning, installing and validating storage software, please follow this link to [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/StorageSiteAdministrator][StorageSiteAdministrator]].

The configuration of this distributed storage is pretty complicated, so we will not be able to provide automatic configuration scripts for all options available for each component for the time being. The goal of this document is to give enough information for system administrators to do initial simple configuration of the storage as well as provide references to the documents that may help accomplish more sophisticated configuration. 

---+++!! Applicable Versions
The applicable software versions for this document are 
%RED%
%OSG_VERSION% 
%ENDCOLOR%
(or higher) and 
%RED%
*vdt-version  2.0*
%ENDCOLOR%
(or higher).

---+++!!Engineering Considerations
!BeStMan-Gateway/Xrootd Storage Element requires at least three nodes. The following components have to be installed on the first node:
   * !BeStMan-Gateway is an implementation of SRM v2.2 for essential interfaces to disk based storage systems - [[http://sdm.lbl.gov/bestman][BeStMan Home Page]] 
   * !GridFTP-Xrootd  package that contains  !GridFTP server and Data Storage Interface (DSI) module for Xrootd/Posix. !GridFTP provides a high-performance, secure, reliable data transfer [[http://www.globus.org/toolkit/docs/4.2/4.2.1/data/gridftp/][GridFTP documentation]]. The Xrootd preload library allows standard POSIX I/O calls to xrootd served files instead of calls to the local file system.
   * If you want !BeStMan to use GUMS for authorization, you should be able to access existing GUMS server  or install it yourself on a different node, following [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS][GUMS Server Installation Guide ]]. If you choose to use grid-mapfile for authorization you may generate it during the installation.  
   * !XrootdFS is a Posix filesystem  that allows !GridFTP, !BeStMan and other grid applications to work with Xrootd storage system. !XrootdFS works on top of !FUSE.
   * optional package
      * Gratia gridftp transfer probe - cron job that reports all the file transfers to [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaSiteCollector Gratia collector]]
!Xrootd should be installed on two or more nodes. One node should be configured as a head node (redirector node), and all the other nodes will serve as data servers. 
 
<img src="%ATTACHURLPATH%/betsman_gateway_xrootd.jpeg" alt="betsman_gateway_xrootd.jpeg" width='384' height='288' />

 
The following questions should be answered before you can proceed with installation and configuration of !BeStMan-Gateway/Xrootd Storage solution: 

   $ Q. _What authorization mechanism do you prefer?_ : You need to decide if you want to use grid-mapfile or !GUMS server for user authentication and authorization. More details about !GUMS could be found at [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS GUMS Installation Guide]]. %BR% We currently recommend using GUMS as it provides superior flexibility and allows a site to manage all of its mappings in one central location; most large sites use GUMS.

   $ Q. _Do you need to support space tokens?_ : !BeStMan-Gateway supports pre-defined, static space tokens that should be included in configuration. It doesn't enforce allocation in the space with the static space tokens, nor keep track of contents in the space with the space tokens.  If you want to partition your storage space and have a “designated” space for some VOs or users, you can choose to use space tokens. You will have to decide the names and descriptions of the tokens as well as the size of the area. This information will be used in !BeStMan configuration, and Xrootd server configuration on data server and redirector nodes.  

   $ Q. _How to partition storage areas on Xrootd redirector and data server nodes_?: !Xrootd is using two storage areas. One storage area (referred as _storage_path_) could be accessed by clients using Xroot protocol. This area contains symbolic links to the data files that are located in the cache storage area (referred as  _storage_cache_).
The Xrootd developers recommended to use a separate partition for each storage area, but  in principal for _storage_path_ a directory can be used as well. In Xrootd 
production installation at SLAC an ext3 partition is used for  _storage_path_. This storage area requires a significant amount of inodes. However, too many inodes 
means small block size. For real files, that means a limit of file size (though not clear about sym linked files, which are big in size but are filled with empty holes). At 
SLAC, the block size is set to 1k (thus put a limit of real file size at ~256GB). 
 

   $ Q. _Do you want to enable Gratia gridftp-transfer probes_?: If you want to report all the transfers in and out of your storage, you would need to install or enable Gratia gridftp-transfer probes. More details should be found at [[https://twiki.grid.iu.edu/bin/view/Accounting/WebHome  Gratia Home Page]]. The reported information will include the source and destination of transfer, certificate subject of transfer initiator, size and status of the transferred file.   
 
---+++!!Help!
If a problem occurs during installation or verification of the service, see [[#DebugInfo][Debugging Information]].
%BR%
If you cannot resolve the problem, the best way to get help is by following this HelpProcedure.

---++Checklist
   1. [[ReleaseDocumentation/PacmanInstall][pacman]] version >= %PACMAN_VERSION% is required
   1. !FUSE should be installed on the node where !BeStMan-Gateway and !XrootdFS are installed
   1. The server must have a fully qualified domain name and a valid [[ReleaseDocumentation/GetGridCertificates][grid host certificate]] installed in =/etc/grid-security/=
   1. !BeStMan server needs to have a valid service certificate. The certificate should be own by a user login that is running !BeStMan server.The right permission (600) should be set on those files. By default !BeStMan is using a service certificate =/etc/grid-security/http/httpcert.pem= and certificate key =/etc/grid-security/http/httpkey.pem=.

%ICON{warning}%  !BeStMan should be configured with host certificate in order to be able to handle requests from !LCG-Utils tools. This is mandatory for at least all !BeStMan servers that support ATLAS experiment. Normally the OSG !BeStMan implementation uses a service certificate, not a host certificate. This causes lcg-cp to fail because the certificate service name (which looks like http/hostname instead of just hostname or host/hostname) doesn't match the hostname. There are two ways to solve this problem:
   * copy hostcert.pem, hostkey.pem into /etc/grid-security/http and rename these two files to httpcert.pem, httpkey.pem respectively. Change ownership of these files and directory.
   * create a directory  /etc/grid-security/bestmancert copy hostcert.pem, hostkey.pem into this directory and  these two files to bestmancert.pem, bestmankey.pem.respectively. Change ownership of these files and directory. You will need to use relevant options to specify certificate and certificate key while configuring !BeStMan.
   1. The firewall must allow incoming connections to the !BeStMan-Gateway ports (default:10080,10443)
   1. The firewall must allow incoming connections to the !GridFTP port (default 2811). Outgoing connections must be allowed from high ports ( typically in range 32769-65535 ). We recommend to consult the [[ReleaseDocumentation/ComputeElementFirewalls][Firewall Guide]] if you install the !GridFTP server for the first time.
   1.  The firewall must allow multiple ports to be opened for Xrootd daemons on redirector and data server nodes. See detailed information [[#XrootdFirewall][here]].
   1. A working GUMS server or a grid-mapfile are needed for authorization using grid certificates.

---++ !FUSE 

!FUSE is a kernel module that intercepts and services user requests to the !XrootdFS.  It has to be installed on the node where !BeStMan and !XrootdFS will be installed.

!FUSE can be installed via “yum install” or rpms. You will need three packages: 
   * fuse
   * fuse-libs
   * kernel-module-fuse - needed only for SL4

or you can download it  from   
http://sourceforge.net/project/showfiles.php?group_id=121684&package_id=132802 and build according to instructions  provided at http://fuse.sourceforge.net.   
 
You will need to have root access to install it. 
It is essential that FUSE version ( &gt; 2.7.3) and flavor match your kernel. Contact your sys admin if you have any questions.

---++ !BeStMan/Xrootd-GridFTP/XrootdFS Installation Procedure 
!BeStMan, !XrootdFS  and !FUSE have be installed on the same node. !BeStMan and !XrootdFS should be installed under the same directory. 
Login as root and check if pacman version >=%PACMAN_VERSION% is installed:
<pre class="rootscreen">
su root
cd &lt;PACMAN_LOCATION&gt;
. setup.sh
pacman -version
</pre>

Next,  create an installation directory and change to this directory. This directory will later be used to get the !BeStMan package  from the %CACHE% cache.

<pre class="rootscreen">
mkdir -p /opt/osg_%OSG_VERSION%-bestman/
cd /opt/osg_%OSG_VERSION%-bestman/
</pre>

Install !XrootdFS from %CACHE%. Pacman will ask whether you want to trust the cache (=yall=).
<pre class="rootscreen">
pacman -get %CACHE%:XrootdFS
</pre>
Next, you will need to install !BeStMan in the same directory. If you are using GUMS authorization method, you will need to setup _VDT_GUMS_HOST_ environment variable. If you are using  grid-mapfile, please proceed to the next step.
<pre class="rootscreen"> 
cd /opt/osg_%OSG_VERSION%-bestman/
export VDT_GUMS_HOST=&lt;GUMS hostname&gt;  
</pre>


Next, execute pacman to get the !BeStMan package from the %CACHE% cache. Pacman will ask whether you want to trust the cache (=yall=).
<pre class="rootscreen">
pacman -get %CACHE%:Bestman
</pre>
The install procedure will print out a warning:
<verbatim>
========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.
</verbatim>

The information provided in the README is out of date. Please setup the CA certificates in the following way instead:
<pre class="rootscreen">
source setup.sh
$VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
</pre>
This command will provide a self contained installation downloading the certificates distributed by the OSG. For more options, including system or shared installations, check CaCertificatesInstall.

To reflect the changes update the environment and run the post installation script:
<pre class="rootscreen">
vdt-post-install
</pre>

Generic !GridFTP server comes with  !BeStMan installation, but you will need to install additional package in order for !GridFTP to work with !Xrootd. This package should be installed in the same directory where !BeStMan is installed.  You can choose to have multiple !GridFTP servers for load balancing. Please follow [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GridFTPXrootd][these]] instruction to install additional !GridFTP servers.

<pre class="rootscreen">
pacman -get %CACHE%:Xrootd-GridFTP 
. setup.sh
</pre>


You can verify that the version installed is the version you expected by executing =vdt-version=. To see all services available use =vdt-control -list=
<pre class="rootscreen">
vdt-version
vdt-control --list
</pre>


This completes the installation of the !BeStMan/Xrootd-GridFTP/XrootdFS packages. Move to the next section to configure the !BeStMan, !Xrootd-GridFTP and !XrootdFS. You may also chose to configure Gratia transfer probe at this time.
If you want to install additional !GridFTP servers on the different nodes, please, follow [[GsiFtpStandAlone][this document]]

---++ !BeStMan/Xrootd-GridFTP/XrootdFS Configuratation 
In order to configure !XrootdFS you will need to do the following: 
<pre class="rootscreen">
cd  /opt/osg_%OSG_VERSION%-bestman/
<verbatim> 
. setup.sh
$VDT_LOCATION/vdt/setup/configure_xrootdfs \
 --user <user> \
 --cache <mountpoint> \
 --xrdr-host <hostname> \
 --xrdr-storage-path <storage_path>
</verbatim> 
</pre>
 
Where <br/> 
_user name_ of the non-privileged user login running xrootdfs daemon process <br/>
_mountpoint_ is  the !XrootdFS mount point that will be created for you, it has to be the same as the _storage_path_ <br/>
_hostname_ is a FQDN of Xrootd redirector host name<br/> 
_storage_path_ is the name of  storage area (_storage_path_) on the !Xrootd redirector. Usually the same name used on the data nodes.<br/> 

%ICON{"warning"}%The _storage_path_ is used throughout this document, and it refers to the path that has to be provided while accessing !BeStMan-Gateway, !GridFTP, !XrootdFS and Xrootd. For !XrootdFS, the _storage_path_ is a !XrootdFS mount point that is mapped to  _&lt;xrdr_host&gt;:&lt;xrdr_port&gt;:storage_path_. On the node where !XrootdFS is installed you can access data files directly. For !GridFTP the _storage_path_ is virtual mount point that allows to redirect user requests to  _&lt;xrdr_host&gt;:&lt;xrdr_port&gt;:storage_path_.  The  _storage_path_ should be the same for !GridFTP and !XrootdFS in order for !BeStMan to operate correctly.
For Xrootd the _storage_path_ is a directory that client (user , !XrootdFS, !GridFTP) can access using xroot protocol directly. This directory contains the symbolic links to the actual data files that is stored in _storage_cache_ area (Xrootd cache partition that should exist on every Xrootd node).   

Next, you will need to configure !BeStMan-Gateway first in order to enable it as a service. You will need to specify "use-xrootd" option, so !BeStMan could be configured in gateway-mode and be able to use xrootd as DFS. In gateway mode, !BeStMan is not managing the storage disks, and relies on !Xrootd to do so. You have to choose what authorization mechanism to use. Also, you need to decide if you would like to use static space token reservation, and in this case to come up with a list of token 
names, description and size of space allocated for each token. 
 
The example below shows how to configure !BeStMan in gateway mode, enable !GUMS and space token usage: 
<pre class="rootscreen">
<verbatim>
$VDT_LOCATION/vdt/setup/configure_bestman --server y \
 --user <user> \
 --cert  <service_cert> \
 --key   <service_key> \
 --http-port  <public_port> \
 --https-port  <secured_port> \
 --gums-host  <GUMS hostname> \
 --gums-port  <GUMS port number> \
 --use-xrootd  \
 --globus-tcp-port-range <low_port,high_port> \
 --with-tokens-list  "<TOKEN_1_NAME>[desc:<TOKEN_1_DESC>][<TOKEN_1_SIZE_GB>];<TOKEN_2_NAME>[desc:<TOKEN_2_DESC>][<TOKEN_2_SIZE>]"   \
 --with-transfer-servers <GridFTP server list>;
</verbatim>
</pre> 



Where  _user_ name is the non-privileged user login running !BeStMan server process <br>  
_service_cert_  path is the service certificate (the certificate file should belong to the _user_)<br>
_service_key_  path is the service certificate private key (the certificate key file should belong to the _user_). <br>
%ICON{"warning"}% *The certificate and key files  should belong to the user* - Please, see [[#Checklist][Checklist]]. 
%ICON{warning}%  !BeStMan should be configured with host certificate in order to be able to handle requests from LCG-Utils tools. This is mandatory for at least all !BeStMan servers that support ATLAS experiment. Normally the OSG !BeStMan implementation uses a service certificate, not a host certificate. This causes lcg-cp to fail because the certificate name (which looks like http/hostname instead of just hostname or hosthostname) doesn't match the hostname. 
<br/>
 
_public_port_http_ public port (==configure_bestman== default port: 10080) <br> 
_secured_port_http_ private port (==configure_bestman== default port: 10443) <br> 
_GridFTP server list_  is FQDN of your !GridFTP servers,  <br>  
_GUMS hostname_ the name of  !GUMS server, <br>  
_GUMS port number_ the port of !GUMS  server,   <br>  
_low_port,high_port_  controls all outbound globus connections for gridftp (e.g GLOBUS_TCP_PORT_RANGE=40000,49150) <br>
token list example:
"ATLASDATADISK[desc:ATLASDATADISK][40000];ATLASPRODDISK[desc:ATLASPRODDISK][30000];ATLASGROUPDISK[desc:ATLASGROUPDISK][30000]" <br>

_GridFTP server list_  is a list !FQDN of your !GridFTP servers, separated by ;   . e.g. 
“gsiftp://host1.domain.tld;gsiftp://host2.domain.tld” <br> 
 
If you want to use grid-mapfile for user authentication and authorization do not specify 
the following options: <br>  
--gums-host   <br>  
--gums-port <br>  
   
 
If you do not want to use statically reserved space tokens do not specify the following 
options: <br>  
--with-tokens-list 
 
If you don't have a firewall, do not specify the following options:<br>
--globus-tcp-port-range

Please make the appropriate modification to _/etc/sudoers_ described in !BeStMan  documentation, namely add the following lines to this file: 
<pre class="file">
<verbatim>
# Comment out this line, if it is in your ==/etc/sudoers== file (RHEL5+)
#Defaults    requiretty

Cmnd_Alias SRM_CMD = /bin/rm, /bin/mkdir, /bin/rmdir, /bin/mv, /bin/ls 
Runas_Alias SRM_USR = ALL, !root 
<user_name> ALL=(SRM_USR) NOPASSWD: SRM_CMD 
</verbatim>
</pre>

_user_name_ is the account running !BeStMan server process. %BR%
Please keep in mind that this is just an example, you can choose more  be more restrictive policy for your site.
Now, you have to configure  !GridFTP to work with !Xrootd

<pre class="rootscreen">
<verbatim>
$VDT_LOCATION/vdt/setup/configure_gridftp --use-xrootd \
 --xrootd-host <hostname>\
 --xrootd-mount-point <storage_path> \
 --xrootd-storage-path <storage_path> 
</verbatim>
</pre>
Where _hostname_ is a FQDN of the Xrootd redirector host,  <br\>
_storage_path_ is a !GridFTP virtual mount point and storage area on redirector node 

If you are using GUMS for authorization perform the following commands:
<pre class="rootscreen">
cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 
</pre> 

If you have a firewall, the gridftp port range should be properly set. In order to do so you will have to modify _vdt-local-setup.sh_.
<pre class="file">
#edit $VDT_LOCATION/vdt/etc/vdt-local-setup.sh 
GLOBUS_TCP_SOURCE_RANGE=&lt;low_port,high_port&gt;
GLOBUS_TCP_PORT_RANGE=&lt;low_port,high_port&gt;
export GLOBUS_TCP_SOURCE_RANGE
export GLOBUS_TCP_PORT_RANGE
</pre>

Where _low_port,high_port_ - controls all outbound globus connections for gridftp (e.g GLOBUS_TCP_PORT_RANGE=40000,49150)
 
---+++ Gratia !GridFTP Transfer Probe
If you are using !GridFTP server installed during the !BeStMan installation, you will need to enable and configure Gratia !GridFTP transfer probe, and perform the actions described in
 [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]]

---++Xrootd Installation 

You will have to install Xrootd on the redirector node and each data server node. The installation described here is done as root, even though the services do not  run as root. You need a non-privileged Xrootd user account on the redirector and on all data servers, and that user account must have a login shell. If you manage your accounts by hand (rather than using a service such as LDAP) you would, on your management node:
<pre class="rootscreen">
<verbatim>
/usr/sbin/groupadd -g <gid> xrootd 
/usr/sbin/useradd -u <uid> -g xrootd -d /home/xrootd xrootd
</verbatim>
</pre>
and copy /etc/passwd, /etc/shadow, /etc/group, and /etc/gshadow to each of the xrootd nodes. 

Login as root and check if pacman version >=3.28 is installed:
<pre class="rootscreen">
<verbatim>
su root
cd <PACMAN_LOCATION>
. setup.sh
pacman -version
</verbatim>
</pre>

Next create and change to an installation directory. <pre class="screen">
mkdir -p /opt/osg_%OSG_VERSION%-xrootd
cd /opt/osg_%OSG_VERSION%-xrootd
</pre>

Install the !Xrootd package from the %CACHE% cache.  Pacman will ask whether you want to trust the cache (answer =yall=).
<pre class="rootscreen">
pacman -get %CACHE%:Xrootd
</pre>

Update the environment and run the post installation script:
<pre class="rootscreen">
source setup.sh
vdt-post-install
</pre>

You can verify that the version installed is the version you expected by invoking =vdt-version= : <pre class="rootscreen">
vdt-version
</pre>

---++ Xrootd  Configuration 

---+++ Configuration on data server node 

To configure Xrootd on each data server node you have to login to the node as root and perform the following actions:

<pre class="rootscreen">
cd /opt/osg_%OSG_VERSION%-xrootd
source setup.sh
<verbatim>
$VDT_LOCATION/vdt/setup/configure_xrootd \
 --server y \
 --user <user> \
 --xrdr-host  <hostname> \
 --storage-path <storage_path> \
 --storage-cache <storage_cache> \
 --with-tokens-list "<TOKEN_1_NAME>[desc:<TOKEN_1_DESC>][<TOKEN_1_SIZE_GB>];<TOKEN_2_NAME>[desc:<TOKEN_2_DESC>][<TOKEN_2_SIZE>]" \
 --enable-cnsd
</verbatim>
</pre>
Where 
_user_ name of the non-privileged user login running Xrootd (this user SHOULD have a login shell) <br>
_hostname_ is the FQDN of redirector host. <br>
_storage_cache_ is the name of a directory that hosts actual data. Files under_cache_ is not visible to users.<br>
_storage_path_ is the name of a directory that contains symbolic links to actual files in _cache_. Xrootd clients have access to _storage_path_.<br>
_TOKEN_NAME_,_TOKEN_SIZE_ should matched tokens described in the !BeStMan configuration . If you  are not using static space tokens you should skip this option. <br>


---+++ Configuration on redirector node 

<pre class="rootscreen">
cd /opt/osg_%OSG_VERSION%-xrootd
source setup.sh 
<verbatim>
$VDT_LOCATION/vdt/setup/configure_xrootd \
 --server y \
 --user <user> \
 --this-is-xrdr \
 --storage-path <storage_path> \
 --storage-cache <storage_cache> \
 --with-tokens-list "<TOKEN_1_NAME>[desc:<TOKEN_1_DESC>][<TOKEN_1_SIZE_GB>];<TOKEN_2_NAME>[desc:<TOKEN_2_DESC>][<TOKEN_2_SIZE>]" \
 --enable-cnsd
</verbatim>
</pre>
 
Where 
_user_ name is the non-privileged user login running Xrootd (this user SHOULD have a login shell) <br>
_storage_cache_ is the name of a directory that hosts actual data. Files under_cache_ is not visible to users.<br>
_storage_path_ is the name of a directory that hosts  symbolic links to actual files in _cache_.  Xrootd clients have access to  _storage_path_.<br>
_TOKEN_NAME_,_TOKEN_SIZE_ should matched tokens described in the !BeStMan configuration.If you  are not using static space tokens you should skip this option.   <br>

 
#XrootdFirewall
---+++ Check firewall rules
It is important to make sure your firewall (if any) isn't blocking the ports that Xrootd uses for communication.  Otherwise, it becomes difficult to diagnose errors, and failures may occur.  Xrootd uses the following ports:

| *Host* | *Port Number* | *Protocol* |
|!Xrootd data server| random ports selected by the OS |tcp|
|!Xrootd redirector|1094|tcp|
||2094|tcp|
||1213|tcp|

Check the firewall rules with =/etc/init.d/iptables status=.   See below for more information on firewall configuration settings for Xrootd.
---++++ !!Firewall configuration for the Xrootd redirector

Edit the /etc/sysconfig/iptables file to add these lines ahead of the REJECT line (if your host has reject rules in its iptables configuration):
<pre class="file">
# Xrootd connections  (from anywhere) 
-A RH-Firewall-1-INPUT -m state --state NEW,ESTABLISHED -p tcp -m tcp --dport 1094 -j ACCEPT 
-A RH-Firewall-1-INPUT -m state --state NEW,ESTABLISHED -p tcp -m tcp --dport 1213 -j ACCEPT 
-A RH-Firewall-1-INPUT -m state --state NEW,ESTABLISHED -p tcp -m tcp --dport 2094 -j ACCEPT 
-A RH-Firewall-1-INPUT -m state --state NEW,ESTABLISHED -p tcp -m tcp --dport 2525 -j ACCEPT 
# 
</pre>
Check the status of iptables:
<pre class="screen">
/etc/init.d/iptables status
</pre>

Restart iptables:
<pre class="rootscreen">
/etc/init.d/iptables restart
</pre>
Check the status of the iptables to see the changes:
<pre class="rootscreen">
/etc/init.d/iptables status
</pre>

---+++ !!Firewall configuration for an Xrootd data server

Edit the /etc/sysconfig/iptables file and add these lines ahead of the REJECT line:
<pre class="file">
# Xrootd connections  (from anywhere) 
-A RH-Firewall-1-INPUT -m state --state NEW,ESTABLISHED -p tcp -m tcp --dport 2525 -j ACCEPT 
# 
</pre>
Check the status of iptables:
<pre class="rootscreen">
/etc/init.d/iptables status
</pre>
Restart iptables:
<pre class="rootscreen">
/etc/init.d/iptables restart 
</pre>
Check the status of the iptables to see the changes:
<pre class="rootscreen">
/etc/init.d/iptables status
</pre>
Now edit the file $VDT_LOCATION/xrootd/etc/xrootd.cfg and change xrd.port any to xrd.port 2525. 


---++ Enabling the Services
---+++ Enabling services on !BeStMan-Gateway node
You can use the _vdt-control -list_ command to see all services that are installed as part of the install, and whether or not they are enabled or disabled. 
You will need to enable the following services:
   * fetch-crl   
   * vdt-rotate-logs  
   * vdt-update-certs              
   * gsiftp
   * gratia-gridftp-transfer  %ICON{warning}% In case you want to run Gratia !GridFTP transfer probe
   * gums-host-cron   %ICON{warning}% In case you want to run Gratia !GridFTP transfer probe and are using !GUMS for authorization
   * edg-mkgridmap     %ICON{warning}% In case you want to use grid-mapfile for authorization 

First, login to !BeStMan-Gateway node as root. You can execute _vdt-control -enable_ command and list all services you want to enable:
<pre class="rootscreen">
cd /opt/osg_%OSG_VERSION%-bestman
source setup.sh
vdt-control --enable fetch-crl vdt-rotate-logs vdt-update-certs gsiftp
</pre> 

If you are using !GUMS or have grid-mapfile and don't want to use automatically generated one, please skip this section:
<pre class="screen">
cd  /opt/osg_%OSG_VERSION%-bestman
source setup.sh
vdt-control -enable edg-mkgridmap
edg/sbin/edg-mkgridmap
</pre> 

---++ Services Startup/Shutdown 
You have to be root to start/stop each service. You have to start all the components in the 
following order (this is order is optional but seems logical): 
   1. Start Xrootd redirector. Login on redirector node,  then: <pre class="rootscreen">cd  /opt/osg_%OSG_VERSION%-xrootd
. setup.sh 
vdt-control –on
</pre> 
   1. Start Xrootd on all the data server nodes. Login on each Xrootd data server node, then:<pre class="rootscreen">cd /opt/osg_%OSG_VERSION%-xrootd
. setup.sh 
vdt-control –on
</pre> 
   1, Start !XrootdFS,!GridFTP and  !BeStMan. Login on !BeStMan node, then: <pre class="rootscreen">cd /opt/osg_%OSG_VERSION%-bestman
. setup.sh 
vdt-control –on
</pre> 

You have to be root to stop each service. You have to stop all the components in the 
following order (this is order is optional but seems logical): 
 
   1. Stop !XrootdFS,!GridFTP and !BeStMan. Login on !BeStMan node, then: <pre class="rootscreen">cd  /opt/osg_%OSG_VERSION%-bestman
. setup.sh 
vdt-control –off
</pre> 
   1. Stop standalone !GridFTP servers. Login on each !GridFTP server node, then: <pre class="rootscreen">cd /opt/osg_%OSG_VERSION%-xrootd
. setup.sh 
vdt-control –off
</pre>  
   1. Stop Xrootd redirector. Login on redirector node,  then: <pre class="rootscreen">cd xrootd
. setup.sh 
vdt-control –off
</pre> 

---++ System Validation 
---++ Validation of Service Operation 
In order to verify that the system is functional, you will need to have access to srm client commands, be able to create a proxy certificate (_grid-proxy-init_ or _voms_proxy_init_ command) and have access to your certificate and private key.

There are multiple ways of doing this.

---+++ Preparing to run srm-client command on the !BeStMan node
Running commands on the node you have just installed !BeStMan. 
   * Login on this node as "yourself"
   * Setup location of !BeStMan installation
<pre class="screen">
cd &lt;VDT_LOCATION&gt;
. setup.sh
</pre>
   * Make sure that you have access to your certificate and private key files on that node, you will need it to create a proxy certificate. Execute grid-proxy-init:
<pre class="screen">
grid-proxy-init
Your identity: .....
Enter GRID pass phrase for this identity:
</pre>
   * You will need to add the path to all the srm client commands to your _PATH_ environment variable. You will need to have your proxy certificate to run srm clients.
<pre class="screen">
cd &lt;VDT_LOCATION&gt;
. setup.sh
export PATH=$PATH:$VDT_LOCATION/bestman/bin
</pre>

---+++ Preparing to run srm-client command from the different node

Install client command on the node where you have your certificate and public key files. The detailed instruction is provided in [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/ClientInstallationGuide][in the installation guide]]. Then generate a proxy certificate by issuing _grid_proxy_init or _voms_proxy_init_:
<pre class="screen">
. &lt;VDT_LOCATION&gt;/setup.sh
grid-proxy-init
Your identity: .....
Enter GRID pass phrase for this identity:
</pre>

or

<pre class="screen">
. &lt;VDT_LOCATION&gt;/setup.sh
voms-proxy-init -voms  &lt;voms_name&gt;
Enter GRID pass phrase for this identity:
</pre>
Where  &lt;VDT_LOCATION&gt; is the directory where you installed the client.

---+++ Executing SRM-client commands 
After you manage to get proxy certificate and access to srm commands you may try to verify !BeStMan:

Execute srm-ping: 
<pre class="screen">
 srm-ping srm://&lt;BeStMan_host&gt;:&lt;secured_port_http&gt;/srm/v2/server 
 </pre>

Expected results: 
<pre class="screen">
########################################### 
SRM_HOME is /usr/local/osg-client/srm-client-lbnl 
JAVA_HOME is /usr/local/osg-client/jdk1.5 X509_CERT_DIR = 
/usr/local/osg-client/globus/TRUSTED_CA 
GSI_DAEMON_TRUSTED_CA_DIR = /usr/local/osg-client/globus/TRUSTED_CA 
########################################### 
 
SRM-CLIENT: got remote srm object 
 
SRM-PING: Thu Sep 18 11:55:50 CDT 2008 Calling SrmPing Request... 
Ping versionInfo=v2.2 
 
Extra information 
        Key=backend_type 
        Value=BeStMan 
        Key=backend_version 
        Value=2.2.1.1 
        Key=GatewayMode 
        Value=Enabled 
        Key=gsiftpTxfServers 
        Value=gsiftp://osg-ress-2.fnal.gov 
        Key=clientDN 
        Value=/DC=org/DC=doegrids/OU=People/CN=Tanya Levshina 508821 
        Key=localIDMapped 
        Value=fnalgrid 
        Key=staticToken(0) 
        Value=DISK1 desc=DATA1 size=1073741824 
        Key=staticToken(1) 
        Value=DISK2 desc=DATA2 size=2147483648 
</pre> 


If you have reasonable result, you may try srm copy. First, create a file _test1_ in _/tmp_ directory and execute: 
<pre class="screen"> 
srm-copy   file:////tmp/test1 srm://&lt;BeStMan_host&gt;:&lt;secured_port_http&gt;/srm/v2/server\?SFN=&lt;storage_path&gt;/test1 -spacetoken &lt;TOKEN_1_NAME&gt; 
</pre> 

You should get back something similar to the following: 
%TWISTY%
<pre class="screen"> 
########################################### 
SRM_HOME is /usr/local/osg-client/srm-client-lbnl 
JAVA_HOME is /usr/local/osg-client/jdk1.5 X509_CERT_DIR = 
/usr/local/osg-client/globus/TRUSTED_CA 
GSI_DAEMON_TRUSTED_CA_DIR = /usr/local/osg-client/globus/TRUSTED_CA 
########################################### 
SRM-CLIENT: Thu Sep 18 11:57:09 CDT 2008 Connecting to 
httpg://cmswn086.fnal.gov:8443/srm/v2/server 
 SRM-CLIENT: Thu Sep 18 11:57:10 CDT 2008 Calling SrmPrepareToPutRequest 
now ... 
request.token=put:0 
status=SRM_SUCCESS 
explanation=null 
 
SRM-CLIENT: RequestFileStatus for SURL=file:////tmp/test1 is Ready. 
SRM-CLIENT: received TURL=gsiftp://osg-ress- 
2.fnal.gov//storage/local/data1/testxrootfs/test36 
 
SRM-CLIENT: Thu Sep 18 11:57:14 CDT 2008 start file transfer. 
SRM-CLIENT:Source=file:////tmp/test1 
SRM-CLIENT:Target=gsiftp://osg-ress- 
2.fnal.gov//storage/local/data1/testxrootfs/test36 
 
SRM-CLIENT: Thu Sep 18 11:57:22 CDT 2008 end file transfer. 
 
SRM-CLIENT: Thu Sep 18 11:57:22 CDT 2008 Calling putDone for 
srm://cmswn086.fnal.gov:8443/srm/v2/server?SFN=/storage/local/data1/tes 
txrootfs/test36 
 
SRM-CLIENT: Thu Sep 18 11:57:27 CDT 2008 end file transfer. 
 
SRM-CLIENT: Request completed with success 
 
SRM-CLIENT: Printing text report now ... 
 
SRM-CLIENT*REQUESTTYPE=put 
SRM-CLIENT*TOTALFILES=1 
SRM-CLIENT*TOTAL_SUCCESS=1 
SRM-CLIENT*TOTAL_FAILED=0 
SRM-CLIENT*REQUEST_TOKEN=put:0 
SRM-CLIENT*REQUEST_STATUS=SRM_SUCCESS 
SRM-CLIENT*SOURCEURL[0]=file:////tmp/test1 
SRM- 
CLIENT*TARGETURL[0]=srm://cmswn086.fnal.gov:8443/srm/v2/server?SFN=/sto 
rage/local/data1/testxrootfs/test36 
SRM-CLIENT*TRANSFERURL[0]=gsiftp://osg-ress- 
2.fnal.gov//storage/local/data1/testxrootfs/test36 
SRM-CLIENT*ACTUALSIZE[0]=15 
SRM-CLIENT*FILE_STATUS[0]=SRM_SUCCESS 
SRM-CLIENT*EXPLANATION[0]=SRM-CLIENT: PutDone is called successfully 
 
SRM-CLIENT: Thu Sep 18 11:57:27 CDT 2008 end file transfer. 
ExitCode=0 
</pre> 
%ENDTWISTY%

If you turn on Gratia !GridFTP transfer probes, you should be able to see the accounting information by accessing your Gratia collector. See details in  [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]].

 
#DebugInfo
---++ Debugging Information
---+++!!File Locations
If any of the tests described above have failed or you are just curious to see what’s going 
on, you could find log and configuration files for each of the module in the following 
location on a relevant node: 
|*Module Name*|*Configuration files*| *Log files*| 
|!BeStMan| $VDT_LOCATION/bestman/conf/bestman.rc |$VDT_LOCATION/vdt-app-data/bestman/logs/event.srm.log</br>$VDT_LOCATION/vdt-app-data/bestman/logs/bestman.log| 
|!GridFTP|$VDT_LOCATION/vdt/services/vdt-run-gsiftp.sh.env | $VDT_LOCATION/globus/var/log/gridftp.log <br/>$VDT_LOCATION/globus/var/log/gridftp-auth.log | 
|!XrootdFS |$VDT_LOCATION/xrootdfs/start.sh <br/>$VDT_LOCATION/xrootdfs/stop.sh |NA| 
|Xrootd – redirector |$VDT_LOCATION/xrootd/etc/xrootd.cfg  <br/>$VDT_LOCATION/xrootd/etc/xrootd_2.cfg  <br/>$VDT_LOCATION/xrootd/etc/StartXRD.cf  <br/>|$VDT_LOCATION/xrootd/var/logs/xrdlog  <br/>$VDT_LOCATION/xrootd/var/logs/cmslog  <br/>$VDT_LOCATION/xrootd/var/logs/ xrootd_cnd/xrdlog |
|Xrootd – data server| $VDT_LOCATION/xrootd/etc/xrootd.cfg  <br/>$VDT_LOCATION/xrootd/etc/StartXRD.cf |$VDT_LOCATION/xrootd/var/logs/xrdlog  <br/>$VDT_LOCATION/xrootd/var/logs/cmslog |

---+++!!Open Ports
|*Module Name*|*Port Number*| *Protocol*|
|!BeStMan| 8080 (default 10080)| tcp|
||8443 (default 10443)|tcp|
|!GridFTP|2811|tcp|
||lowPort,maxPort if needed to control outbound globus connections|tcp|
|!Xrootd redirector|1094|tcp|
||2094|tcp|
||1213|tcp|
|!Xrootd data server| opens random port selected by OS;|tcp|
|^|replace "xrd.port any" with a particular port in $VDT_LOCATION/xrootd/etc/xrootd.cfg| |
---+++!!Debugging Procedure
If   sanity checks failed you would probably need to check the each component in order 
to verify what went wrong with your installation. In order to do so you should ,probably, 
check all them in the following order: 
   * Xrootd 
   * !XroodFS 
   * !GUMS (if in use) 
   * !GridFTP 
   * !BeStMan 

%TWISTY%
---+++ !!Verifying Xrootd 
Login on the node where you have installed !BeStMan, then 
<pre class="screen">
cd $VDT_LOCATION
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$VDT_LOCATION/xrootd/lib 
export LD_PRELOAD=$VDT_LOCATION/xrootd/lib/libXrdPosixPreload.so 
echo “This is a test” >/tmp/test 
cp /tmp/test xroot://&lt;XRDR_host&gt;:1094//&lt;XRDR_storage_path&gt;/test 
cp xroot://&lt;XRDR_host&gt;:1094//&lt;XRDR_storage_path&gt;/test /tmp/test1 
diff /tmp/test1 /tmp/test 
</pre>

---+++ !!Verifying !XrootdFS 
Login on the node where you have installed !XrootdFS, then 
<pre class="screen">
cd &lt;storage_path&gt;
echo “This is a test” >test1 
ls –l test1 
cat test1 
</pre>

---+++ !!Verifying !GUMS 
Make sure that the service certificate you are specified for !BeStMan  configuration with  
--cert &lt;service_cert&gt; , --key  &lt;service_key&gt;  options and !GridFTP service certificate are 
accepted by !GUMS  (see [[http://vdt.cs.wisc.edu/releases/1.10.1/notes/GUMS.html GUMS Installation Documentation]])   
 
Get mapping _uid_ for your certificate and verify that this _uid_ exists on !BeStMan and !GridFTP node. 
 
---+++ !!Verifying !GridFTP 
Login on the node where you have installed have your certificate installed and  access to %CACHE%:client.

You will need to get your voms-proxy certificate: 
<pre class="screen">
voms-proxy-init –voms &lt;voname&gt;:/&lt;voname&gt; 
</pre>

Then test !GridFTP: 

<pre class="screen">
cd $VDT_LOCATION 
. setup.sh 
echo “This is a test” >/tmp/test 
globus-url-copy -dbg file:///tmp/test gsiftp://&lt;GridFtp_host&gt;/tmp/test 
</pre>

---+++!!Verifying !BeStMan
Make sure that !BeStMan is running and there is no error in the log file (_$VDT_LOCATION/vdt-app-data/bestman/logs/event.srm.log_). Login on the node where you have installed !BeStMan then

<pre class="screen">
[root@cmswn085 itb_bestman]# ps auxww|grep $VDT_LOCATION/bestman|grep -v grep
daemon   27648  0.0  0.0  4944 1168 pts/2    S    07:46   0:00 /bin/sh /usr/local/itb_bestman/bestman/sbin/bestman.server
daemon   27676  3.3  7.4 715240 155208 pts/2 Sl   07:46   1:59 /usr/local/itb_bestman/jdk1.6/bin/java -server -Xmx512m -Dorg.globus.tcp.port.range=20000,25000 -DX509_CERT_DIR=/usr/local/itb_bestman/globus/TRUSTED_CA -Daxis.ServerConfigFile=/usr/local/itb_bestman/bestman/conf/server-config.wsdd gov.lbl.srm.server.Server /usr/local/itb_bestman/bestman/conf/bestman.rc
</pre>
%ENDTWISTY%
---++ Known issues
   * None


---+++!!References
There are lots of references in this twiki to Bestman and Xrootd.
   * [[http://indico.fnal.gov/getFile.py/access?contribId=15&sessionId=26&resId=0&materialId=slides&confId=2538][Xrootd presentation on OSG Storage Forum]]
   * [[http://xrootd.slac.stanford.edu/doc/dev/xrd_config.htm][Xrootd XRD Config Reference]]
   * [[http://xrootd.slac.stanford.edu/doc/dev/cms_config.htm][Xrootd CMS Config Reference]] 
   * [[http://fuse.sourceforge.net  FUSE]]
   * [[http://wt2.slac.stanford.edu/xrootdfs/xrootdfs.html  XrootdFS]]
   * [[http://sdm.lbl.gov/bestman BeStMan]]  
   * [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/BestmanGateway BeStMan-Gateway Installation/Configuration Reference]]
   * [[https://twiki.grid.iu.edu/bin/view/Documentation/SETools%2cTips%2cFAQs][Tips and FAQ]]
   * [[http://www.globus.org/toolkit/docs/3.2/gridftp  GridFTP]]
   * [[http://xrootd.slac.stanford.edu/papers/Scalla-Intro.htm  Xrootd]]
   * [[http://vdt.cs.wisc.edu/index.html current VDT cache]]
 

---++ Support
   * [[https://twiki.grid.iu.edu/bin/view/Documentation/SETools%2cTips%2cFAQs][Frequently Asked Questions answered here]] 
   * If you cannot find answers, please send all your questions to osg-storage@opensciencegrid.org  


---+++Screen Dump of the Complete Install Process 
---++++ Basic Installation and Configuration
Below is a screen dump of basic installation and configuration of !BeStMan-Gateway/XrootdFS/Xrootd:
   * using gridmap file
   * running on specified ports
   * using specified certificate and key files
   * configuring static space token
   * not enabling gratia probe services
%TWISTY%
<pre classs="screen">
####Login on xrootd  node as root

# . /usr/local/pacman-3.28/setup.sh
# mkdir -p /opt/osg_1.2.8-xrootd
# cd /opt/osg_1.2.8-xrootd
# pacman -get http://software.grid.iu.edu/osg-1.2:Xrootd
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check...

All prerequisite checks are satisfied.
# . setup.sh
# vdt-post-install
Starting...
Nothing needs to be done at this time.
# vdt-version

You have installed a subset of VDT version 2.0.0p15:

Software                                                 Status              
--------                                                 ------              
Xrootd 20091028-1003                                     OK                  


Status legend:
OK: Software is up to date with the latest release in VDT version 2.0.0
- : Not enough information to determine if updates are available.
See man page for more information.
### ON REDIRECTOR NODE use this configurationuse this configuration command

# $VDT_LOCATION/vdt/setup/configure_xrootd --server y --user xrootd --this-is-xrdr --xrdr-storage-path /data/xrootdfs/public xrootdfs --xrdr-storage-cache /data/xrootdfs/spacetokens --with-tokens-list "FermiDATADISK[desc:FERMIDATADISK][40000];FermiGROUPDISK[desc:FERMIGROUPDISK][30000]" --public-cache-size 50


##### ON ALL DATA SERVER NODES use this configuration command
# $VDT_LOCATION/vdt/setup/configure_xrootd --server y --user xrootd --xrdr-host gw016k0.fnal.gov --xrdr-storage-path /data/xrootdfs/public --xrdr-storage-cache /data/xrootdfs/spacetokens --with-tokens-list "FermiDATADISK[desc:FERMIDATADISK][40000];FermiGROUPDISK[desc:FERMIGROUPDISK][30000]" --public-cache-size 50


# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
xrootd                  | init   | enable

# vdt-control -on
enabling init service xrootd... ok

#### LOGIN on BeStMan node

# . /usr/local/pacman-3.28/setup.sh
# mkdir -p /opt/osg_1.2.8-bestman/
# cd  /opt/osg_1.2.8-bestman/
# pacman -get http://software.grid.iu.edu/osg-1.2:XrootdFS
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): yall
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check...

All prerequisite checks are satisfied.
# export VDT_GUMS_HOST=gums.fnal.gov
# pacman -get http://software.grid.iu.edu/osg-1.2:Bestman
                                                                                


========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.



# . setup.sh                                      
# $VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
Setting CA Certificates for VDT installation at '/opt/osg_1.2.8-bestman'

Setup completed successfully.

# vdt-post-install
Starting...
Configuring PRIMA... Done.
Configuring EDG-Make-Gridmap... Done.
Completed all configuration.
# pacman -get http://software.grid.iu.edu/osg-1.2:Xrootd-GridFTP
# . setup.sh
# vdt-version

You have installed a subset of VDT version 2.0.0p15:

Software                                                 Status              
--------                                                 ------              
Berkeley Storage Manager (BeStMan) 2.2.1.3.8             OK                  
vdt-ca-manage 1.1                                        OK                  
vdt-update-certs 2.5                                     OK                  
CA Certificates 1.13 (includes IGTF 1.34 CAs)            -                   
EDG Make Gridmap 3.0.0                                   OK                  
Fetch CRL 2.6.6                                          OK                  
GPT 3.2-4.0.8p1                                          OK                  
Gratia GridFTP Probe 1.06.15h-1                          OK                  
Grid User Management System (GUMS) Client 1.3.17         OK                  
Java 5 SDK 1.5.0_22                                      OK                  
Java 6 SDK 1.6.0_17                                      OK                  
Logrotate 3.7                                            OK                  
PRIMA Authorization Module 0.8.4                         OK                  
pyOpenSSL module 0.9                                     OK                  
VOMS Client 1.8.8-2p1                                    OK                  
Wget 1.12                                                OK                  
XrootdFS 3.0rc3                                          OK                  


Status legend:
OK: Software is up to date with the latest release in VDT version 2.0.0
- : Not enough information to determine if updates are available.
See man page for more information.

# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
xrootdfs                | init   | enable
fetch-crl               | cron   | do not enable
vdt-rotate-logs         | cron   | do not enable
vdt-update-certs        | cron   | do not enable
gsiftp                  | inetd  | enable
gratia-gridftp-transfer | cron   | do not enable
gums-host-cron          | cron   | do not enable
edg-mkgridmap           | cron   | do not enable

# vdt/setup/configure_xrootdfs --user daemon --cache /data/xrootdfs/public --xrdr-host gw016k0.fnal.gov --xrdr-storage-path /data/xrootdfs/public
# vdt/setup/configure_bestman --server y --user daemon --cert /etc/grid-security/bestman_cert/bestmancert.pem --key /etc/grid-security/bestman_cert/bestmankey.pem --http-port 8080 --https-port 8443 --gums-host gums.fnal.gov --gums-port 8443 --use-xrootd --globus-tcp-port-range 40000,49150 --with-tokens-list "FermiDATADISK[desc:FERMIDATADISK][40000];FermiGROUPDISK[desc:FERMIGROUPDISK][30000]"

# vi /etc/sudoers
....
Cmnd_Alias SRM_CMD = /bin/rm, /bin/mkdir, /bin/rmdir, /bin/mv, /bin/ls 
Runas_Alias SRM_USR = ALL, !root 
<user_name> ALL=(SRM_USR) NOPASSWD: SRM_CMD 

# vdt/setup/configure_gridftp --use-xrootd --xrootd-host gw016k0.fnal.gov --xrootd-mount-point /data/xrootdfs/public  --xrootd-storage-path /data/xrootdfs/public
# cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
# cp /opt/osg_1.2.8-bestman/post-install/gsi-authz.conf /etc/grid-security 
# vi $VDT_LOCATION/vdt/etc/vdt-local-setup.sh 
# This file is sourced by setup.sh.  Use it for any custom setup for this site.
# This file will be preserved across VDT installations if OLD_VDT_LOCATION is set.
GLOBUS_TCP_SOURCE_RANGE=40000,49150
GLOBUS_TCP_PORT_RANGE=40000,49150
export GLOBUS_TCP_SOURCE_RANGE
export GLOBUS_TCP_PORT_RANGE

#  vdt-control -enable fetch-crl vdt-rotate-logs vdt-update-certs gsiftp
running 'vdt-register-service --name fetch-crl --enable'... ok
running 'vdt-register-service --name vdt-rotate-logs --enable'... ok
running 'vdt-register-service --name vdt-update-certs --enable'... ok
running 'vdt-register-service --name gsiftp --enable'... ok
# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
xrootdfs                | init   | enable
fetch-crl               | cron   | enable
vdt-rotate-logs         | cron   | enable
vdt-update-certs        | cron   | enable
gsiftp                  | inetd  | enable
gratia-gridftp-transfer | cron   | do not enable
gums-host-cron          | cron   | do not enable
edg-mkgridmap           | cron   | do not enable
bestman                 | init   | enable


# vdt-control -on
enabling init service xrootdfs... ok
enabling cron service fetch-crl... ok
enabling cron service vdt-rotate-logs... ok
enabling cron service vdt-update-certs... ok
enabling inetd service gsiftp... ok
skipping cron service 'gratia-gridftp-transfer' -- marked as disabled
skipping cron service 'gums-host-cron' -- marked as disabled
skipping cron service 'edg-mkgridmap' -- marked as disabled
enabling init service bestman... ok

# df
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/xvda1             9934940   8991124    431000  96% /
xrootdfs             706938732  82582596 624356136  12% /data/xrootdfs/public


</pre>
%ENDTWISTY%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = TanyaLevshina

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Storage

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = AlexSim
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = MarcoMambelli
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->

%META:FILEATTACHMENT{name="betsman_gateway_xrootd.jpeg" attachment="betsman_gateway_xrootd.jpeg" attr="" comment="BeStMan-gateway/Xrootd architecture" date="1235141572" path="betsman_gateway_xrootd.jpeg" size="35418" stream="betsman_gateway_xrootd.jpeg" tmpFilename="/usr/tmp/CGItemp11241" user="TanyaLevshina" version="1"}%
%META:FILEATTACHMENT{name="bestman-gateway-xrootd-howitworks.jpg" attachment="bestman-gateway-xrootd-howitworks.jpg" attr="" comment="!BeStMan Gateway with Xrootd - How it works" date="1237495053" path="bestman-gateway-xrootd-howitworks.jpg" size="52148" stream="bestman-gateway-xrootd-howitworks.jpg" tmpFilename="/usr/tmp/CGItemp8893" user="AlexSim" version="1"}%
