%META:TOPICINFO{author="BrianBockelman" date="1486494459" format="1.1" version="1.26"}%
%META:TOPICPARENT{name="Documentation.SecuritySiteResponsibilities"}%
---+ *Maintaining up-to-date Trusted CA information*
%DOC_STATUS_TABLE%
%TOC%

---++ About This Document
This document describes the importance of keeping the CA information at sites up-to-date and then covers the scripts and process for implementing it on machines.

---++ Maintain up-to-date Trusted CA information
The Trusted Certificate Authority (CA) certificates, and their associated Certificate Revocation Lists (CRLs), are used for every transaction on a resource that establishes an authenticated network connection based on end user's certificate. In order for the authentication to succeed, the user's certificate must have been issued by one of the CAs in the Trusted CA directory, and the user's certificate must not be listed in the CRL for that CA. CRLs can be thought of as a black list of certificates. CAs are the trust authorities, similar to DMV that issues you the driving license.  (Another way of thinking CRLs is the do-not-fly lists at the airports. if your certificate shows up in CRLs, you are not allowed access.) This is handled at the certificate validation stage even before the authorization check (which will provide the mapping of an authenticated user to a local account UID/GID). So you do not need to do worry about it; the grid software will do this for you. However, you should make sure that your site has the most up-to-date list of Trusted CAs. There are multiple trust authorities in OSG (think of it as a different DMV for each state). If you do not have an up-to-date list of CAs it is possible that some of your users transactions at your site will start to fail.  A current CRL list for each CA is also necessary, since without one transactions for users of that CA will fail.

There are two services that should be running in order to keep the CA certificate information current, *vdt-update-certs* and *fetch-crl*. There is a tool called *vdt-ca-manage* which can turn on these processes and has many other useful features, such as specifying where the Trusted CA certificates are to be stored on your machine. A complete documentation of vdt-ca-manage command can be found [[https://twiki.grid.iu.edu/bin/view/Trash/ReleaseDocumentationVdtCaManage][here]].

The example below shows the use of *vdt-ca-manage* and turning on the *vdt-update-certs* and *fetch-crl* services for an installation of the OSG 1.2 client package. 

You can run the vdt-ca-manage command with the help option to show all available options.
<pre class="rootscreen">
%UCL_PROMPT_ROOT% vdt-ca-manage --help setupca
vdt-ca-manage setupca --location [root|local|<PATH>] --url [vdt|osg|<URL>]
  Location:
    root  - install into /etc/grid-security
    local - install into $VDT_LOCATION/globus/share
    PATH  - install into PATH (e.g. /nfs/certificates)

  URL:
    vdt - use the VDT convenience distribution
    osg - use the OSG GOC distribution
    URL - use the distribution at URL (e.g. http://your.site.edu/ca-certificates-manifest-file)
</pre>

You can then setup the management of the CA package with the following command:

<pre class="rootscreen">
%UCL_PROMPT_ROOT% vdt-ca-manage setupca --location local --url osg
Setting CA Certificates for VDT installation at '/opt/osg-client-1.2'

Setup completed successfully.
</pre>

Enable the updating of the CA package.

<pre class="rootscreen">
%UCL_PROMPT_ROOT% vdt-control --enable vdt-update-certs
running 'vdt-register-service --name vdt-update-certs --enable'... ok
</pre>

Then turn the service on.

<pre class="rootscreen">
%UCL_PROMPT_ROOT% vdt-control --on vdt-update-certs
enabling cron service vdt-update-certs... ok

## Edit vdt/etc/vdt.logrotate to change rotation frequency and retention period
## from daily - 1 week to monthly - 1 year
# diff vdt/etc/vdt.logrotate vdt/etc/vdt.logrotate.orig
2,3c2
< # daily
< monthly
---
> daily
6,8c5
< # rotate 7
< # Keep a year's worth
< rotate 12
---
> rotate 7
</pre>

Enable the rotating of logs and then turn it on.

<pre class="rootscreen">
%UCL_PROMPT_ROOT% vdt-control --enable vdt-rotate-logs
running 'vdt-register-service --name vdt-rotate-logs --enable'... ok
</pre>

<pre class="rootscreen">
%UCL_PROMPT_ROOT% vdt-control --on vdt-rotate-logs
enabling cron service vdt-rotate-logs... ok
</pre>

Enable fetching of CRL's and turn that service on.

<pre class="rootscreen">
%UCL_PROMPT_ROOT% vdt-control --enable fetch-crl
running 'vdt-register-service --name fetch-crl --enable'... ok
</pre>

<pre class="rootscreen">
%UCL_PROMPT_ROOT% vdt-control --on fetch-crl
enabling cron service fetch-crl... ok
</pre>

Looking at all of the services that we just enabled.

<pre class="rootscreen">
%UCL_PROMPT_ROOT% vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | enable
vdt-rotate-logs         | cron   | enable
vdt-update-certs        | cron   | enable
condor                  | init   | do not enable
globus-ws               | init   | do not enable
</pre>

We can look at the crontab to see that the cron jobs have been set up.

<pre class="rootscreen">
%UCL_PROMPT_ROOT% crontab -l
55 * * * * /opt/osg-client-1.2/vdt/sbin/vdt-update-certs-wrapper --vdt-install /opt/osg-client-1.2 --called-from-cron
0 0 * * * /opt/osg-client-1.2/vdt/bin/vdt-rotate-logs
11 0,6,12,18 * * * /opt/osg-client-1.2/fetch-crl/share/doc/fetch-crl-2.6.6/fetch-crl.cron
</pre>

We can also check the version of the CA certificate package.

<pre class="rootscreen">
%UCL_PROMPT_ROOT% cat vdt/var/ca-certs-version
1.9
</pre>

Notice that the example ends with displaying the current version of the CA certificate package. You can compare this version with the distribution point at http://software.grid.iu.edu/pacman/cadist/ to see if they are the same, in which case you have the most recent version.

---+ Comments
| PM2RPM_TASK = SECURITY | Main.RobertEngel | 28 Aug 2011 - 05:49 |
%COMMENT{type="tableappend"}%


<!-- CONTENT MANAGEMENT PROJECT

   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = JamesBarlow

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Trash/Trash/Integration|Operations|Tier3)
   * Local DOC_AREA       = Security

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (Scientist|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = HowTo
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %YES%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = IgorSfiligoi
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = AnandPadmanabhan
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %YES%
 
-->

%META:TOPICMOVED{by="JamesBarlow" date="1273172651" from="Documentation.MaintainCAInformation" to="ReleaseDocumentation.MaintainCAInformation"}%
