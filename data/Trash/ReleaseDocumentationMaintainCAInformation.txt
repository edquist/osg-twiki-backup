%META:TOPICINFO{author="JamesBarlow" date="1280416134" format="1.1" version="1.7"}%
%META:TOPICPARENT{name="ReleaseDocumentation.SecuritySiteResponsibilities"}%
%SHOW_DOC_STATUS_TABLE%

---++ Maintain up-to-date Trusted CA information
The Trusted Certificate Authority (CA) certificates, and their associated Certificate Revocation Lists (CRLs), are used for every transaction on a resource that establishes an authenticated network connection based on end user's certificate. In order for the authentication to succeed, the user's certificate must have been issued by one of the CAs in the Trusted CA directory, and the user's certificate must not be listed in the CRL for that CA. CRLs can be thought of as a black list of certificates. CAs are the trust authorities, similar to DMV that issues you the driving license.  (Another way of thinking CRLs is the do-not-fly lists at the airports. if your certificate shows up in CRLs, you are not allowed access.) This is handled at the certificate validation stage even before the authorization check (which will provide the mapping of an authenticated user to a local account UID/GID). So you do not need to do worry about it; the grid software will do this for you. However, you should worry about whether your site have a fresh list of Trusted CAs. There are multiple trust authorities in OSG (think of it as a different DMV for each state). If you do not have a up-to-date list of CAs, it is possible that all transactions with your site will start to fail.

There are two services that should be running in order to keep the CA certificate information current, *vdt-update-certs* and *fetch-crl*. There is a tool called *vdt-ca-manage* which can turn on these processes and has many other useful features, such as specifying where the Trusted CA certificates are to be stored on your machine. A complete documentation of vdt-ca-manage command can be found [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/VDTCAManage][here]].

The example below shows the use of *vdt-ca-manage* and turning on the *vdt-update-certs* and *fetch-crl* services for an installation of the OSG 1.2 client package. 

<verbatim>
OSG Client 1.2 install

# cd /opt/pacman
# wget http://physics.bu.edu/pacman/sample_cache/tarballs/pacman-3.28.tar.gz

# tar --no-same-owner -xzvf pacman-3.28.tar.gz

# cd pacman-3.28
# . ./setup.sh
# cd /opt
# mkdir osg-client-1.2
# cd osg-client-1.2/

# pacman -get http://software.grid.iu.edu/osg-1.2:client
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): y
Do you want to add [http://vdt.cs.wisc.edu/vdt_200_cache] to [trusted.caches]? (y/n/yall): y
Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check...

All prerequisite checks are satisfied.



========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.


The VDT version 2.0.0 has been installed.


The OSG Client package OSG version 1.2.0 has been installed.

# . ./setup.sh

# vdt-ca-manage --help setupca
vdt-ca-manage setupca --location [root|local|<PATH>] --url [vdt|osg|<URL>]
  Location:
    root  - install into /etc/grid-security
    local - install into $VDT_LOCATION/globus/share
    PATH  - install into PATH (e.g. /nfs/certificates)

  URL:
    vdt - use the VDT convenience distribution
    osg - use the OSG GOC distribution
    URL - use the distribution at URL (e.g. http://your.site.edu/ca-certificates-manifest-file)


# vdt-ca-manage setupca --location local --url osg
Setting CA Certificates for VDT installation at '/opt/osg-client-1.2'

Setup completed successfully.


# vdt-control --enable vdt-update-certs
running 'vdt-register-service --name vdt-update-certs --enable'... ok
# vdt-control --on vdt-update-certs
enabling cron service vdt-update-certs... ok

## Edit vdt/etc/vdt.logrotate to change rotation frequency and retention period
## from daily - 1 week to monthly - 1 year
# diff vdt/etc/vdt.logrotate vdt/etc/vdt.logrotate.orig
2,3c2
< # daily
< monthly
---
> daily
6,8c5
< # rotate 7
< # Keep a year's worth
< rotate 12
---
> rotate 7

# vdt-control --enable vdt-rotate-logs
running 'vdt-register-service --name vdt-rotate-logs --enable'... ok
# vdt-control --on vdt-rotate-logs
enabling cron service vdt-rotate-logs... ok


# vdt-control --enable fetch-crl
running 'vdt-register-service --name fetch-crl --enable'... ok
# vdt-control --on fetch-crl
enabling cron service fetch-crl... ok

# vdt-control --list
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | enable
vdt-rotate-logs         | cron   | enable
vdt-update-certs        | cron   | enable
condor                  | init   | do not enable
globus-ws               | init   | do not enable

# crontab -l
55 * * * * /opt/osg-client-1.2/vdt/sbin/vdt-update-certs-wrapper --vdt-install /opt/osg-client-1.2 --called-from-cron
0 0 * * * /opt/osg-client-1.2/vdt/bin/vdt-rotate-logs
11 0,6,12,18 * * * /opt/osg-client-1.2/fetch-crl/share/doc/fetch-crl-2.6.6/fetch-crl.cron

# cat vdt/var/ca-certs-version
1.9
</verbatim>

Notice that the example ends with displaying the current version of the CA certificate package. You can compare
this version with the distribution point at http://software.grid.iu.edu/pacman/cadist/ to see if they are the same,
in which case you have the most recent version.

%RED%Also add example of showing log info on the fetch-crl status.%ENDCOLOR%

<!-- CONTENT MANAGEMENT PROJECT

   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = JamesBarlow

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Security

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (Scientist|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Knowledge
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = IgorSfiligoi
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = AnandPadmanabhan
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
 
-->

%META:TOPICMOVED{by="JamesBarlow" date="1273172651" from="Documentation.MaintainCAInformation" to="ReleaseDocumentation.MaintainCAInformation"}%
