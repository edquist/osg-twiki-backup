%META:TOPICINFO{author="MarkoSlyz" date="1315610616" format="1.1" reprev="1.3" version="1.3"}%
%META:TOPICPARENT{name="WebHome"}%
%TOC%

---+!! Electron Ion Collider (EIC) Simulations on OSG (Proof-of-principle Phase)

---++ Introduction.
The OSG User Support group is working with Thomas Ullrich and Tobias Toll from BNL on porting event simulations for the Electron Ion Collider (EIC) project to OSG. The project attracts collaborators from the Nuclear Physics community and is currently preparing the physcis case for the collider for 2012/2013.

---++ Requirements

<b>DRAFT</b><br>
These requirements need to be vetted with EIC. <br>

---+++ Production requirements

The application is one of the first implementations of an event generator for Electron / Ion collisions. It takes minutes to generate an event. The work is split in 2 parts: (1) generate  a table of branching ratios for the products of the Electron / Ion collisions, (2) look up the table to generate events. 

---++++ Handling the Branching Ratio Table

The branching ratio table is produced before starting to generate any events.

This table can be
   A.  computed completely by every job / thread, or
   A.  computed by each job for the portion of the parameter space evaluated by the job / thread, or
   A. pre-computed completely and shipped with every job, or
   A. pre-computed completely and pre-staged at all sites.

 (A) is inefficient as it duplicates the same computation at all worker nodes for every job, (B) requires too many code modifications, (C) requires to move ~1 GB per job, (D) is considered the least expensive: data will be deployed using the OSG Match Maker.

---++++ Generating Events

The goal is to calculate the values of four variables over a three dimensional phase space. The phase space is divided into bins, and
each bin requires a quantum mechanical average over about 400 different nucleon configurations.

To parallelize the application, we plan to partition the set of bins into small subsets.
Then each worker node will run a single threaded job that will calculate the variables for the bins in a single subset.

The original simulation application runs about 100 event generator threads concurrently, but running a single-threaded application on 100 nodes is a more appropriate fit to the DHTC model of OSG.

Generating events from 1 branching ratio table for 1 nucleus requires about 50 CPU yrs -> ~45 days on ~400 CPU. This is the target computation for the proof-of-principle phase.

It is possible to partition the set of bins in any way, and the complete calculation for a bin takes
about a half hour, so we can get individual jobs that are any multiple of a half hour. We plan to
look at how to divide up the phase space so that the total job time is not too long.

---+++ Platform requirements

   * Job duration on common OSG platforms = 6-12 hours / job (easily tuned)
   * Job application = SL5 64bits binaries
   * Job Memory requirement = 1 GB (??)
   * Local WN disk requirements = 1 GB (??)

---+++ I/O Data requirements

   * Input to the simulation job:
      * Common data: a table of the branching ratios for the products of the Electron / Ion collisions
         * Data are fairly static
         * 2 GB uncompressed; ~1GB compressed  -- the compression happens automatically by the application
         * Each job needs access to the table file
         * These are pre-installed in $OSG_DATA/engage/EIC 
      * A small parameter file ~1KB large.
        
   * Output of the simulation job:
       * A few MB per job
       * Output data from all jobs will be aggregated offline

---+++ Status

9/9/11: The common data has been staged to many sites, though some have errors.
We have run small test jobs using this data. The main program, called  tableGeneratorMain,
now runs single threaded. It also gets the range of bins to process from the command line.
which makes it easier to set up the jobs.

-- OSG User Support
