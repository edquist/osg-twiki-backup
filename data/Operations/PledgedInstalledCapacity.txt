%META:TOPICINFO{author="KarthikArun" date="1269626623" format="1.1" version="1.3"}%
-- Main.KarthikArun - 23 Mar 2010

%TOC%

---++Pledged Installed Capacity Reporting script
This document explains how to install and run the <b>Pledged installed capacity reporting </b> script.

---+++ Purpose of the script
The purpose of the script is to generate and email the pledged installed capacity report for sites in federations supported by USATLAS and USCMS VOs. The script is written in python and it uses python xpath libraries to parse the xml data published by MyOSG. Then it makes a dictionary from which the data could be summarized and a report generated and emailed if needed. 

---+++ How to install the script?
You can directly check out the script from the svn repository as shown below: <br>
cd to the directory of your choice. This will be the installation directory. From here execute the following command
<pre>
cd /directory/of/your/choice
svn co  https://osgbdiifilter.svn.sourceforge.net/svnroot/osgbdiifilter/pledgedCapacity/tags/beta-release-1 .
</pre>

---+++ How to run the script  ?
Here are the instructions to run the script. These instructions are the same for running the script manually from the command line and as a cronjob. <p>
<ol>
<li>The 1st step is to configure the script with proper parameters. For this edit the etc/config.ini file. The file provided is a template file with the following contents. The parameters to be filled in are pretty much self-explanatory. Note the default "config.ini" file could be overridden by another configuration file of your choice. To do this use the "--config <alternative_config_file>" option while running the script. 

<pre>
[emailCommon]
from = fromEmail
smtpServer = smtp server's FQDN

[emailReport]
to = comma separated emails of whoever wants to receive the report (mandatory if --email option is used while running the report)

[emailError]
to = comma separated emails of whoever wants to receive error messages from running the script, if any (mandatory)

</pre>
<li> The script could be ran in two modes namely either to email the report or to print the report to stdout. To email the report (to the list of emails configured in config.ini under [emailReport], run the report as shown in the following command. INSTALL_DIR is the directory to which you checked out the code. 
<pre>
export INSTALL_DIR="/installation/directory"; $INSTALL_DIR/bin/report.py --email
</pre>

Instead of emailing, if you want to print the report to stdout, do the following:
<pre>
export INSTALL_DIR="/installation/directory"; $INSTALL_DIR/bin/report.py
</pre>

<li> The script uses "config.ini" as the default configuration file. But if you want to use another configuration file of your choice say "alternative.ini", you can specify the alternative configuration file as shown below (use an alternative configuration file and email the report to the emails specified in that file):
<pre>
export INSTALL_DIR="/installation/directory"; $INSTALL_DIR/bin/report.py --config alternative.ini --email
</pre>
</ol>

---+++ Logging and Debugging information
The script logs important messages (reports and errors) to log files under var/log directory. In addition the script will also email the errors to the receipients specified in the [emailError] section of the config.ini file. 

---+++ Wish list
- Add more choices for the command line options <br>
- Make [emailError] optional (currently it is mandatory)<br>
- Other enhancements based on feedback and feature and change requests<br>

---+++ Feedback
If you have any questions/comments/suggestions, please feel free to drop me an email
