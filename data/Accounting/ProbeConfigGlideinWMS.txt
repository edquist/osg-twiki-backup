%META:TOPICINFO{author="DerekWeitzel" date="1325731328" format="1.1" reprev="1.15" version="1.15"}%
%META:TOPICPARENT{name="ProbeInstallation"}%
---+!! !GlideinWMS Probe Configuration

%TOC%

---++ Overview
This probe will read the GLIDEIN_ResourceType startd attribute.  This attribute needs to be set by the !GlideinWMS Factory (The OSG factories already have this set).  If this attribute does not exist, it will fall back to GLIDEIN_Site, and finally the !FileSystemDomain of the host.

The usage will be forwarded to the production Gratia collector (gratia-osg-prod.opensciencegrid.org) by default.

---++ Requirements and Preparation

The Probe assumes that condor binaries (=condor_history= for example) are in the default path (=/usr/bin=).  If they are not, please see section [[#NonStandardCondor][Non-Standard Condor]]

Host requirements (bare-bone installation):
   * Probe must be installed on the VO's schedd.
   * Currently most of our testing has been done on Scientific Linux 5.
   * Root access
   * Allow outbound network connection, on port 80, to the Gratia collector (default is http://gratia-osg-prod.opensciencegrid.org).  Gratia does not support HTTP proxies.

To be part of OSG your CE must be registered in OIM. To register your resource:
   * Use your user certificate.  [[Documentation.Release3.CertificateUserGet][Here]] are instructions to request a user certificate.
   * Register in OIM as described in Operations.OIMRegistrationInstructions

%INCLUDE{"Documentation.Release3.YumRepositories" section="OSGRepoBrief" TOC_SHIFT="+"}%

---++ Installation
   1. Install the Gratia Common and Gratia Condor RPM on the host that runs the =condor_schedd=.  Assuming you previously installed the OSG repo and have the release repository enabled:
   <pre class="screen">
yum install gratia-probe-condor </pre>
   1. Edit the ProbeConfig located in =/etc/gratia/condor/ProbeConfig=.  First, edit the =SiteName= and =ProbeName= to be a unique identifier for your !GlideinWMS Submit host.  There can be multiple probes (with different names) per site.   If you haven't already, you should register your !GlideinWMS submit host in [[https://oim.grid.iu.edu/oim/home][OIM]].  Then you can use the name you used to register the resource.
   <pre class="file">
ProbeName="condor:&lt;hostname>"
SiteName="HCC-GlideinWMW-Frontend"   </pre>
   Next, turn the probe on by editing the =EnableProbe=:
   <pre class="file">
EnableProbe="1"   </pre>
   1. Add the following to the condor configuration (recommended to =condor_config.local= or a new file in =/etc/condor/config.d= directory):
   <pre class="file">
# GlideinWMS Gratia commands
PER_JOB_HISTORY_DIR = /var/lib/gratia/data
JOBGLIDEIN_ResourceName="$$([IfThenElse(IsUndefined(TARGET.GLIDEIN_ResourceName), IfThenElse(IsUndefined(TARGET.GLIDEIN_Site), FileSystemDomain, TARGET.GLIDEIN_Site), TARGET.GLIDEIN_ResourceName)])"
SUBMIT_EXPRS = $(SUBMIT_EXPRS) JOBGLIDEIN_ResourceName   </pre>

---++ Usage Graphs
Usage graphs can be found under the heading Glidein Bar Graphs at 
http://gratiaweb.grid.iu.edu/gratia/xml

Specifically, [[http://gratiaweb.grid.iu.edu/gratia/xml/glidein_hours_bar_smry][this page]] may be useful.  Replace the variable =probe= with the name of your probe that you configured above.

*NOTE:* Usage could be delayed up to a few hours after the job has completed.

---++ Unusual Use Cases
---+++ Users without Certificates
If you have users that submit jobs without a certificate explicitly declared in the submit file, you will need to add =MapUnknownToGroup= to the ProbeConfig.  In the file =/opt/vdt/gratia/probe/condor/ProbeConfig=, add the value after the =EnableProbe=.

<pre class="file">
    ...
    SuppressGridLocalRecords="0"
    EnableProbe="1"
    %RED%MapUnknownToGroup="1"%ENDCOLOR%

    Title3="Tuning parameter"
    ...
</pre>

#NonStandardCondor
---+++ Non-Standard Condor Install
If Condor is installed in a non-standard location (ie not RPMs, or relocated RPM outside =/usr/bin=), then you need to tell the probe where to find the Condor binaries.  This can be done with a script =/root/setup.sh=.  

---++++ Creating =/root/setup.sh=
If you already have a Condor setup script that will add Condor attributes to the environment, then you can point to that:
<pre class="file">
source /path/to/condor/setup.sh </pre>

Otherwise, you can set the attributes manually:
<pre class="file">
export PATH=$PATH:/path/to/condor/bin
export CONDOR_CONFIG=/path/to/condor/etc/condor_config </pre>
