%META:TOPICINFO{author="JuanFelipeMosqueraMorales" date="1426533315" format="1.1" version="1.5"}%
---+ Analysis for the inclusion of new types of visualizations in Gratia Web 

The current release of Gratia Web uses the graphtool library to query, transform and plot data retreived from a SQL database. Gratia Web uses XML files to define the database connections, the queries, the input of the queries, the transformations that should be applied to the results, and the desired kind of plot. The render process for the plots is done on the server side using matplotlib and returning a png file that is included in the result page. However, javascript based plotting libraries, like [[https://developers.google.com/chart/][Google Charts]], can provide the users additional functionalities including animations, tooltips, and dynamic exploration of data in a visual way, and because of this It has been proposed to include these new visualizations in Gratia Web, but before modifiying Gratia Web and/or graphtool to include new types of visualizations the following questions should be considered:

---++ The user should see a similar page with parameters and query details, the plot area will have the new static or interactive plot (instead of the png image), can this be achieved? 

Due to the existence of a url/html navigation under the =/gratia/xml= path used to retrieve and modify the input parameters of the different queries configured in Gratia Web that the users are familiar with, it is a major concern to maintain the same mechanism  only replacing the previous area designated for the plot with the new visualizations. Graphtool code already offers 3 different exporters to export a query metadata and results. These exporters allow to export the information in XML+XSLT, in a PNG image, and in CSV. The web pages that the users visit trough the web browser are produced using the XML+XSLT export to render an HTML document. The XML+XSLT exporter could be extended or modifyed to include additional metadata that would allow the inclusion of the new visualizations in the result html page instead of the PNG image.

---++ Which part of the code will be reused? What will need to be added/changed? 

The XML exported would be reused, but would need a modification to be able to handle the new metadata parameters for the queries. As well the XSLT template should be modified to handle the new nodes that will be included in the XML result file. Additionally, for each one of the new types of visualizations there should be added a new javascript module that handles the plot formatting for labels, titles, etc.

---++ Will the plot configuration be similar? 

The plot configuration will remain the same. However, it will include additional metadata that if is not present would default to the matplotlib configuration.

---++ How long do you think will take? 

The first modifications to include and handle the new parameters from the XML exporter and the XSLT template will take 3 days, and including each of the new kinds of plots (Treemap, column charts, bar charts, etc) would take 2 days each one. Therefore, a first iteration for the first kind of plot would take 5 days.

---++ Is it worth or is the cost similar to write something from scratch? 

In comparison with writing something 








-- Main.JuanFelipeMosqueraMorales - 12 Mar 2015
