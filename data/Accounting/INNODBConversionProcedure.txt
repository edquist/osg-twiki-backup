%META:TOPICINFO{author="StevenTimm" date="1191002728" format="1.1" version="1.3"}%
%META:TOPICPARENT{name="Minutes2007Sep19"}%
---+ INNODB Conversion Procedure, revision %REVINFO{"$rev"}%

<ol>
#StepNum01pre1  <li>Configure the !MySQL instance on =gratia07= with the desired INNODB and default engine parameters.  Determine how much disk space is needed for the conversion and contact S. Timm to arrange it.
#StepNum01  <li>Take a standard tree copy of the mysqldb tree to =gratia07= and convert all tables to INNODB, timing the exercise.  Test to see if said INNODB database can successfully be backed up via TiBS</li>
#StepNum02  <li>Connect a new (not production) collector to the converted DB in order to upgrade the schema without affecting the uptime of the production collector.</li>
#StepNum03  <li>Announce a downtime for the production collector long enough to allow the completion of steps [[#StepNum05][5]] through [[#StepNum09][9]].</li>
#StepNum04  <li>Set up a replication process from the production collector to the temporary collector, with DBID carefully set to only replicate records
received since DB copy (manual DB interaction).</li>
#StepNum05  <li>Stop updates to the production DB and shut down the production collector after allowing replication to the temporary collector to complete.</li>
#StepNum06  <li>Remove the replication (manual DB interaction).</li>
#StepNum07  <li>Shut down the temporary collector after it has received the last replicated records from the production collector and take a note of the latest DBID (manual DB interaction) in the usage records on the temporary DB.</li>
#StepNum08  <li>Upgrade the production collector.</li>
#StepNum09  <li>Connect the production collector to the converted DB and bring it back up to receive data.</li>
</ol>

If I have covered all the bases correctly, this would allow us to upgrade the production collector to the latest version and to use INNODB with the minimum possible downtime as perceived by probes and report browsers.

-- Main.ChrisGreen - 19 Sep 2007