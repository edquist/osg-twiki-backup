%META:TOPICINFO{author="JohnWeigand" date="1205522675" format="1.1" reprev="1.7" version="1.7"}%
---+!! Gratia Upgrade Procedure

%TOC%

%STARTINCLUDE%
<!--
   * Set EDITTHISTEXT = <div class="twikiSmall"><a href="%TOPIC%">edit this section</a></div>

   * Set PROD_VER      = <b>v0.32</b>

   * Set PROD_NODE    = <b>gratia09</b>
   * Set PROD_DB       = <b>gratia06</b>
   * Set PROD_TC       = <b>%PROD_NODE%:/data/tomcat-itb</b>
   * Set PROD_TC_SERVICE = tomcat-itb
   * Set PROD_URL      = http://gratia09.fnal.gov:8881

   * Set TEMP_NODE    = <b>gratiax23</b>
   * Set TEMP_DB       = <b>gratia07</b>
   * Set TEMP_TC       = <b>%TEMP_NODE%:VDT_LOCATION/tomcat/v55</b>
   * Set TEMP_TC_SERVICE = tomcat-55
   * Set TEMP_URL      = http://gratiax23.fnal.gov:8880

   * Set DB_NAME       = <b>gratia_itb</b>

   * Set JUR               = <nop>JobUsageRecord
   * Set CONFIG          = <b>./gratia/service-configuration.properties</b>
-->

Database privileges:
   * ./post-install.sh summary-view
      * forces the update of the VIEWS.  There is a DEFINER= parameter in the <nop>VOProbeSummay view which contains the original database/collector used.  This can be reset by re-loading the views.



---++ Gratia Upgrade Procedure
%EDITTHISTEXT%

---+++ Overview

The intent is to minimize downtime (availability) of Gratia services.  This is a general outline and the details for each step will be addressed in a subsequent section.  This will also serve as a trial/template for future conversions where DB changes may require long conversion times. 

---+++ Setup the temporary %TEMP_NODE% tomcat and %TEMP_DB% database
<ol>
  <li> Install the current production version (%PROD_VER%) of Gratia on a test machine (%TEMP_NODE%)
     <ol type="a">
      <li> To avoid complications and additional work, it is best if this is an instance that has *no* probes reporting to it.
      <li> Turn off the <nop>MySql instance to reduce resource consumption
<pre>
service mysql5 stop
</pre>
      <li> We are only using the tomcat web services and will be pointing it to the %PROD_DB% to effect the conversion.
      <li> To be safe, turn off the update services: on the gratia-administration screen, 
         <ul>
           <li> go to System--&gt;Administration, 
           <li> scroll down and click on the _Stop Update Services_ link,
           <li> the _Current Status_ should show _Stopped_ 
          </ul>
       <li> *Remember* that every time you restart the _tomcat_ service, the Gratia collector comes up in _Update_ mode which *will* cause problems since we are converting the *real* database.  This is why using an instance that is assured of having no probes reporting to it is very important. 
      </ol>

   <li> We are going to be switching the %PROD_TC% collector/reporter to use the %TEMP_DB% database while the conversion takes place on %PROD_DB%.  So, to effect this, we need to do the following:
      <ol type="a">
      <li> Rather than take the %PROD_DB% database off-line to do a backup to %TEMP_DB%, we will use the nightly backup (currently a _mysqlhotcopy_).
      <li> On %TEMP_DB%:
         <ul>
         <li> The night before, remove all files under the <b>/data/mysqldb/%DB_NAME%</b> directory and set the ownership on the directory to *gratia.mysql*.
         <li> Also the night before, verify/set the users and privileges so the %TEMP_NODE% has permissions to update the stored procedures:
<pre>
GRANT ALL ON *.* TO 'root'@'&lt;your collector ip address&gt;  identified by 'root password';
GRANT GRANT OPTION ON *.* TO 'root'@'&lt;your collector ip address&gt; 
<b>...note you can the IP address by executing...
   host %TEMP_NODE%.fnal.gov</b>
</pre>
            Also verify that the %PROD_NODE% has the same root permisions for it's specific IP address.  If it doesn't, set them as above.

         <li> On the day of cutover, verify the ownership on the <b>/data/mysqldb/%DB_NAME%</b> directory and the ownership on the table files are *gratia.mysql*.  They will likely have been reset from the nightly backup.

         <li> If replication is in use, we need to turn it off temporarily and also be in a position to turn it back on once we have converted to using the %TEMP_DB% database:
<pre>
<b>... this creates a file to be used when turning Replication back on .... </b>
select "update Replication set running=1 where replicationid=",replicationid,";" 
from Replication where running=1 into outfile '/tmp/jgw.sql';
<b>... be sure that the <i>outfile</i> does not already exist or it will fail</b>

<b>... then turn replication off for those ids</b>
update Replication set running=0 where running=1;
</pre>

         <li> Update the *SystemProplist* table for the attributes below so the stored procedures, triggers and table statistics get updated correctly.
            <pre>
update <nop>SystemProplist set cdr=0 where car='gratia.database.storedProcedureVersion';
update <nop>SystemProplist set cdr=0 where car='gratia.database.summaryTriggerVersion';
update <nop>SystemProplist set cdr=0 where car='gratia.database.TableStatisticsVersion';

select * from SystemProplist;  

+--------+----------------------------------------+------+
| propid | car                                    | cdr  |
+--------+----------------------------------------+------+
|    211 | use.report.authentication              | true | 
|    212 | gratia.database.version                | 28   | 
|    214 | gratia.database.summaryTableVersion    | 26   | 
|    <b>215 | gratia.database.summaryTriggerVersion  |  0   | </b>
|    <b>216 | gratia.database.storedProcedureVersion |  0   | </b>
|    217 | gratia.database.wantSummaryTable       | 1    | 
|    218 | gratia.database.wantSummaryTrigger     | 1    | 
|    219 | gratia.database.wantStoredProcedures   | 1    | 
|    <b>220 | gratia.database.TableStatisticsVersion |  0   | </b>
+--------+----------------------------------------+------+
</pre>
         </ul>

      <li> On %TEMP_TC%:
         <ul>
         <li> change the %CONFIG% file entries to use the %TEMP_DB% database
         <pre>
service.mysql.url=jdbc:mysql://%TEMP_DB%.fnal.gov:<b>3320</b>/%DB_NAME%
<b>... use the values from the %PROD_TC% instance....</b>
service.mysql.user=<b>xxxxx</b>
service.mysql.password=<b>xxxxx</b>
service.reporting.user=<b>xxxxx</b>
service.reporting.password=<b>xxxxx</b>
</pre>
         <li> Restart the tomcat service.  It's also not a bad idea to remove the log files so it is easier to spot any problems.
<pre>
service %TEMP_TC_SERVICE% stop
rm -f VDT_LOCATION/tomcat/v55/logs/*
service %TEMP_TC_SERVICE% start

<b>... since there should be no updates occurring, nor any replication 
         you should see only this line in the <i>catalina.out</i> file and
         no other activity</b>
INFO: Server startup in 14307 ms
</pre>
         <li>A couple of things to look for in the logs (other than obvious stacktrace errors) is any failures in updating the triggers, procedures, summary tables, or summary views:
<pre>
 grep -i fail ./logs/*  
   * grep 
grep "Summary trigger updated successfully"
grep "Stored procedures updated successfully"
grep "Summary tables updated successfully"
grep "Summary view updated successfully"
grep "Table statistics updated successfully"
</pre>
         </ul>

      <li> Verify you are connected correctly by bringing up the administration page%BR% - %TEMP_URL%/gratia-administration


      <li>We need to create the static report files
         <ul>
         <li>Execute the following (as root):
<pre>
/usr/local/osg-collector/tomcat/v55/gratia/staticReports.py \
  /usr/local/osg-collector/tomcat/v55 \
  http://gratiax23.fnal.gov:8880/gratia-reporting
</pre>
          <li>Bring up the gratia reporting%BR% - %TEMP_URL%/gratia-reporting

          <li>Click on the _Static Reports_ menu item and then verify each report comes up.
          </ul>
      </ol>


   <li> We now have to "catch up" the %TEMP_DB% database before switching the %PROD_NODE% collector  to use it. 
         <ol type="a">
         <li> On %TEMP_DB%, find the last _dbid_  for the %JUR% table.
<!--
   * Set MAXDBID = 7901442
-->
<pre>
select max(dbid) from %JUR%;
+-----------+
| max(dbid) |
+-----------+
|   %MAXDBID% | 
+-----------+
</pre>

         <li> On %PROD_URL%/gratia-administration, add a replication entry pointing to %TEMP_NODE% and starting with the _dbid_ from the previous step _+1_.  Be sure to test it..*Do not activate it yet.*

         <li>In the %PROD_DB% %DB_NAME% database, set the _dbid_ in the _Replication_ table to the %MAXDBID%.
<pre>
select * from Replication where openconnection like '%%TEMP_NODE%%';
update Replication set dbid=%MAXDBID%  where openconnection like '%%TEMP_NODE%%';
</pre>

         <li> Now back on the %PROD_URL%/gratia-administration replication screen, refresh the screen ans verify the _dbid_ value.

         <li> If all is well, click the _Start_ button.  Then watch for a while in the %TEMP_TC% logs files for any errors.  You can also watch on the %TEMP_URL%/gratia-administration _Status_ screen.

         <li> *WAIT UNTIL* the _All Time Total_ numbers are equal for both %PROD_URL% and %TEMP_URL%. Then we are caught up and can proceed.

         <li> On the %PROD_URL%/gratia-administration replication screen, _Stop_ the replication for %TEMP_NODE%.  *CAN WE DELETE IT TOO???* 

         </ol>
</ol>

---+++ Switch the %PROD_NODE% tomcat to use the %TEMP_DB% database
<ol>

   <li> Switch the tomcat instances (%PROD_NODE%) using the <nop>MySql %PROD_DB% database to the  backup on %TEMP_DB%


   <li> Point the %TEMP_NODE% instance to the <nop>MySql %PROD_DB% database

</ol>

---+++ Effect the conversion using %TEMP_NODE% tomcat and %PROD_DB% database

<ol>
   <li> On the %TEMP_NODE% tomcat instance, stop the tomcat service:
<pre>
service %TEMP_TC_SERVICE% stop
</pre>

  <li>Edit the %TEMP_TC%/hibernate.cfg.xml file changing:
<pre>
         &lt;!-- SQL dialect --&gt;
<b>from.</b> &lt;property name="dialect"&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;
<b>to..</b> &lt;property name="dialect"&gt;org.hibernate.dialect.MySQLInnoDBDialect&lt;/property&gt;
</pre>

  <li>Start the gratia tomcat services:
<pre>
service %TEMP_TC_SERVICE% start
</pre>

  <li> When the tomcat service initializes, it will detect any schema changes have been effected and a conversion process will begin. 
     <ol type="a">
        <li> _tail_ the  _catalina.out_ log. 
        <li>When the conversion process completes the log will show the following message:
<pre>INFO: Server startup in _xxx_ms</pre>
      </ol>

   <li> *Wait until the previous step completes before proceeding.*

</ol>

---+++ Switch %PROD_NODE% tomcat back to the %PROD_DB% database
<ol>
   <li> Record the last _dbid_ of the  %JUR% on the _gratia06_ database.

   <li> On the %PROD_NODE% _tomcat_gratia_ instance:
      * add a replication entry to the %TEMP_NODE% 
      * start with the _dbid_ from the previous step for the %PROD_DB% database.

   <li> *Wait for a period*  
      * When both databases are close to being in sync, proceed. 

   <li> On %PROD_TC%:
      * Turn off the _update_ services

   <li> *Wait for a period*
      * When the record count (not _dbid_) of the <nop>JobUsageRecord in both databases are identical, then proceed.

   <li> On %PROD_TC%:
      * delete the replication entry to %TEMP_NODE%
      * stop the tomcat service
      * change the database back to the %PROD_DB% <nop>MySql database
      * change the hibernate configuration file to %INNODB%

   <li> On %TEMP_NODE% :
      * stop the tomcat service
      * change the database back to the %TEMP_NODE% <nop>MySql database

   <li> On %PROD_NODE%:
      * Start the %PROD_NODE%:tomcat_gratia_ instance
</ol>



<hr width=95% />





%STOPINCLUDE%

<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->
---++!! Major updates
<!--Future editors should add their signatures beneath yours!-->
-- Main.JohnWeigand - 10 Mar 2008
