%META:TOPICINFO{author="PhilippeCanal" date="1276012003" format="1.1" reprev="1.12" version="1.12"}%
%META:TOPICPARENT{name="WebHome"}%
<!--
These are general in nature and should be changed in the this template if the location changes:
   * Set CURRENT_TOMCAT = ==gratia09==
   * Set CURRENT_MYSQL = __gratia06__
   * Set NEW_TOMCAT = ==gratia07==
   * Set NEW_MYSQL = __ gratia07__
   * Set TOMCAT_ALIAS = ==gratia.opensciencegrid.org==
   * Set MYSQL_ALIAS = ==gratia-db01.fnal.gov==
   * Set RELEASE_TAR_REPOSITORY = /afs/fnal.gov/files/expwww/gratia/html/Files

These are specific to a release and require changing:
   * Set RELEASE_DATE = 2010/06/09
   * Set CURRENT_RELEASE = v1.06.16
   * Set RELEASE_TAG = v1-06-16
   * Set NEXT_DEVEL_VERSION = v1.07

   * Set BUILD_DIRECTORY = /home/weigand/cdcvs/gratia-%CURRENT_RELEASE%

-->
---+!! Gratia Release %CURRENT_RELEASE% (%RELEASE_DATE%)%BR% 


%TOC%

%STARTINCLUDE%
---+ Overview

<!--The main purpose of this release (%CURRENT_RELEASE%) is to add support for authenticated connection between Probe and Collector.-->

---++Main Features:
   * Maintenance release.
   * See previous patch release [[GratiaReleaseV1dot06dot14][v1.06.14]] for changes since v1.04.

   * Implement cutoff date.
   * Speed up housekeeping deletion (and remove use of temporary table).
   * Additional housekeeping logging.

---++ Probe Improvements:

   * Add summarization capability to the dCache probe.
   * Separate the !JobUsageRecord support form the main library which is now !GratiaCore.py

---+++ Details

   * Tweak !ProbeConfig extra items for dCache-transfer probe.
   * Reorganize !GridFtpLogDir config item insertion..
   * Sleep and configurable DB name for dCache-transfer probe.
   * Core updates for HTTP timeout waiting for acknowledgement from collector.
   * Improve connection timeout mesage to avoid confusion.
   * Improvements to xrootd probe.
   * Fix for staticmethod (make it work in 2.3).
   * Fix mechanism intended to avoid corruption caused by reading in-progress log.
   * Robustness fix to !GetNodeData function in Gratia.py.
   * Fix for exception in debug statements in Gratia.py.
   * Increase default !BundleSize to 100 in !ProbeConfigTemplate and Gratia.py.
   * Remove unecessary dependencies from dCache-storage probe.
   * !EGEE-provided probe is now version-controlled instead of unpackaged and patched from source.
   * Unused !GridftpTransfer.sh script removed prior to final packaging.
   * Condor probe security fixes from Wisconsin.
   * Add gratia-probe-services as a dependency to the xrootd-storage probe
   * Fix to cron scripts for !WorkingFolder discovery in dCache-storage and gridftp-transfer cron scripts.
   * Remove erroneous ITB tag for services API package.
   * Better use of lock files in *_cron.sh.
   * Fixes and updates to dCache-storage probe, including addition of !README file to package.
   * Added redesigned xrootd-transfer probe
   * Minor updates for the xrootd-storage probe found in testing.
   * Fix to condor probe for standalone (non-VDT) operation.


---++ Collector Improvements:

   * Add a publicly available summary of the replication 

   * In addition to the expiration date, when there is a limited retention of the records,
we also reject the records that are in the future.  For now, the rejection is set to
the same duration as the expiration.  For example if the service.lifetime.JobUsageRecord is
set to 3 months, we reject all !JobUsageRecord that are either set more than 3 months in
the past or more than 3 months in the future.

   * Increase the default batch size for row deletion from 200 to 1000.
   * Change the default fault batch size for _Xml row deletion to 100000.

   * Introduce the 2 customizable parameters:

      * service.lifetimeManagement.BatchSize and service.lifetimeManagement.XmlBatchSize

   * Add an index to quickly find empty !ExtraXml

   * Rework the row deletion from !RecordType_Xml.

      a. We no longer keep the row when the !EndTime is greater than the !ServerDate (and !EndTime was greater than the cutoff date).
      a. We no longer use a temporary table.
      a. Improve the 'limited' delete query by using a dbid range to restrict the searches.
         1. We find the maximum plausible dbid by searching in !RecordType_Meta for the dbid clause to or equal to the limit date
         1. We find the minimum plausible dbid by searching in !RecordType_Xml for the first dbid with !ExtraXml==""
         1.  the delete query where clause is:
   !ExtraXml = "" and !ServerDate < :dateLimit and :mindbid <= X.dbid and X.dbid < :maxdbid

   * On gr8x0 the current (typical rate) are (for a Transfer record database):
      * !JobUsageRecord_Xml 10000 rows per second (so for a typical transaction time of 10s).
      * !JobUsageRecord_Meta  120 rows per second (so for a typical transaction time of  9s).
      * The other deletion are more than 1000 rows per seconds such that the total time is completely dominated by _Meta.

   * Add index !ComputeElement(!UniqueID, !Timestamp)

---+++ Pending explicit request from Stakeholders.
   * Improve response time of Status page.
   * Automatic table optimization (schedulable, abortable, triggerable) [Insert will be disabled during optimization]
   * Automatic sync of !VONameCorrection table and info OIM.

---+++ Notices

   * Web Services *must* be improved to pass the cert info along to the Gratia Accounting Probes.

<!--  ---++ Additional Features:  -->

<!--   -------------------------------------------- -->
---+ Anticipated downtime
It is expected that this release will require the Gratia services and reporting to be unavailable beginning at:
   * Start: %RELEASE_DATE%  hh:mm CST
   * Available: %RELEASE_DATE% hh:mm CST

The changes affecting downtime  for this release are:
   1 Length of time to make a backup of the database to the backup area using =mysqlhotcopy=
   1 Installation and validation on the 6 Gratia schemas




<!--   -------------------------------------------- -->
---+ Collectors and Databases Affected

The following Gratia collectors and databases will be converted with this release:
%TABLE{ tableborder="1" cellpadding="0" cellspacing="1" headerbg="#99CCCC" databg="#FFFFCC, #FFFFFF"}%
%EDITTABLE{  header="|*Schema*|*URL*|*Description*|" format="| text, 20 | text, 20 | text, 35 | text, 15 | text, 5 | text, 15 |"  changerows="on" quietsave="on" editbutton="Edit table" }%
|*Schema*|*<nop>MySql port*|*Collector URL*|*Collector host*|*Size (bytes)*|*Size (rows)*|
| fermi_itb | %CURRENT_MYSQL%.fnal.gov:3320 | gratia-fermi.fnal.gov:8881 | gratia08.fnal.gov: |  868K |               1 |
| fermi_osg | %CURRENT_MYSQL%.fnal.gov:3320 | gratia-fermi.fnal.gov:8880 | gratia08.fnal.gov: |  5.0G |   2,554,484 |
| gratia | %CURRENT_MYSQL%.fnal.gov:3320 | gratia.opensciencegrid.org:8880 | gratia09.fnal.gov |  60.0G |  30,226,750 |
| gratia_itb | %CURRENT_MYSQL%.fnal.gov:3320 | gratia.opensciencegrid.org:8881 | gratia09.fnal.gov 3.5 |  9.2G |   2,796,812 |
| gratia_osg_integration | %CURRENT_MYSQL%.fnal.gov:3320 | gratia.opensciencegrid.org:8885 | gratia09.fnal.gov |  3.5G |      905,703 |
| gratia_qcd  | %CURRENT_MYSQL%.fnal.gov:3320 | gratia-fermi.fnal.gov:8883 | gratia08.fnal.gov: |  2.2G |      817,080 |

%BR%
The following Gratia collectors and databases will __NOT__  be converted with this release.  These repositories contained specialized reports that have not as yet been upgraded to the new Birt V2.2 software. __However__, they will be taken out-of-service while the other databases are being updated.%BR%

%TABLE{ tableborder="1" cellpadding="0" cellspacing="1" headerbg="#99CCCC" databg="#FFFFCC, #FFFFFF"}%
%EDITTABLE{  header="|*Schema*|*URL*|*Description*|" format="| text, 20 | text, 20 | text, 35 | text, 15 | text, 5 |  text, 15 |"  changerows="on" quietsave="on" editbutton="Edit table" }%
|*Schema*|*<nop>MySql port*|*Collector URL*|*Collector host*|*Size (bytes)*|*Size (rows)*|
| gratia_psacct | %CURRENT_MYSQL%.fnal.gov:3320 | gratia08.fnal.gov:8882 | gratia08.fnal.gov: |  6.6G |     4,144,690 |
| gratia_osg_daily | %CURRENT_MYSQL%.fnal.gov:3320 | gratia.opensciencegrid.org:8884 | gratia09.fnal.gov |  65.0M |    56,300     |



<!-- BUILD DISTRIBUTION -------------------- -->
---+ Build the %CURRENT_RELEASE% for distribution
<ol>
<li>Make sure your build area contains all _committed_ changes.
<ul><li>svn status</li></ul>
</li>

<li>In _gratia/build-scripts/Makefile_ , change the _version_default_ to:
<ul><li>version_default = %NEXT_DEVEL_VERSION%</li>
       <li>commit the change</li>
</ul>
</li>

<li>Tag the release (for all committed changes):
<ul><li>svn cp https://gratia.svn.sourceforge.net/svnroot/gratia/trunk https://gratia.svn.sourceforge.net/svnroot/gratia/tags/%RELEASE_TAG%</li></ul>
</li>

<li> _Into a *new* area_, export the tagged release:
<ul><li>svn export https://gratia.svn.sourceforge.net/svnroot/gratia/tags/%RELEASE_TAG% gratia-%CURRENT_RELEASE%</li></ul>
</li>

<li>Build it for the release (this insures that tar files are produced for VDT):
<ul><li>cd gratia-%CURRENT_RELEASE%/build-scripts</li>
<li>source setup-jdk15.sh</li>
<li>make release</li></ul>
</li>

<li>Copy the built tar files to the release area:
<ul><li>scp ../target/*_%CURRENT_RELEASE%.tar   flxi07.fnal.gov:%RELEASE_TAR_REPOSITORY%/</li></ul> </li>

<li>Update the version number on the [[InstallationGuideVDT][services release TWiki page]]:</li>
<ul><li>Edit and update the TWiki variable _<nop>ReleaseVersion_.</li></ul>
</ol>
 

<!-- ----------------- SHUTDOWN AND DATABASE BACKUP ------------- -->
---+ Shutdown and database backup.

---++ On the tomcat/collector nodes
<ol>
<li> __comment__ out the __root__ user cron entry for the static reports:

On __gratia08__ :
<pre class="screen">
42 0 * * * '/data/tomcat-fermi_itb/gratia/staticReports.py' '/data/tomcat-fermi_itb' 'http://gratia-fermi.fnal.gov:8881/gratia-reporting/' 
42 0 * * * '/data/tomcat-qcd/gratia/staticReports.py' '/data/tomcat-qcd' 'http://gratia-fermi.fnal.gov:8883/gratia-reporting/' >/dev/null 
42 0 * * * '/data/tomcat-fermi_osg/gratia/staticReports.py' '/data/tomcat-fermi_osg' 'http://gratia-fermi.fnal.gov:8880/gratia-reporting/' 
</pre>

On __gratia09__ :
<pre class="screen">
42 0 * * * '/data/tomcat-osg_integration/gratia/staticReports.py' '/data/tomcat-osg_integration' 'http://gratia.opensciencegrid.org:8885/gratia-reporting/' 
42 0 * * * '/data/tomcat-itb/gratia/staticReports.py' '/data/tomcat-itb' 'http://gratia.opensciencegrid.org:8881/gratia-reporting/' 
42 0 * * * '/data/tomcat-gratia/gratia/staticReports.py' '/data/tomcat-gratia' 'http://gratia.opensciencegrid.org:8880/gratia-reporting/' 
</pre>
</li>

    <li> Disable _init.d_ services  as __root__ user:

On __gratia08__:
   * chkconfig tomcat-ps off
   * chkconfig tomcat-qcd   off
   * chkconfig tomcat-fermi_osg off
   * chkconfig tomcat-fermi_itb  off

On __gratia09__ :
   * chkconfig tomcat-gratia  off
   * chkconfig tomcat-osg_daily   off
   * chkconfig tomcat-osg_integration off
   * chkconfig tomcat-itb    off

</li>
        

     <li> For __ALL__ of the Gratia collectors (  __including those <u>not</u> being upgraded__  ) ,  __stop__ the Gratia update services:
   * In your browser,  connect to the Gratia administrative services url for each of the databases.
   * Select the _System / Administration_ menu option in the left menu
   * Then scroll down to the _Starting/Stopping Database Update Services_ section and select the _Stop Update Services_ link.

__Note:__ Effective with Gratia v0.31, this step is not necessary.  For any pre-v0.31 installation, this step is still necessary.
 
      </li>

     <li> __Stop__ the tomcat init.d service for__ALL__ Gratia collectors.

On __gratia08__:
   * service tomcat-fermi_itb  stop
   * service tomcat-fermi_osg stop
   * service tomcat-ps  stop
   * service tomcat-qcd stop

On __gratia09__ :
   * service tomcat-gratia  stop
   * service tomcat-itb  stop
   * service tomcat-osg_daily  stop
   * service tomcat-osg_integration stop

</li>

<li>This is optional, but probably a good idea to save off the logs under each tomcat instance and empty the _log_ directory.  It will facilitate catching any errors that may occur (of course there won't be any, but a good idea anyway).
<b>This can be performed while the database backups are being performed.</b>

On __gratia09__ :
   * date=`date '+<nop>%Y<nop>%m<nop>%d'`
   * cd /data/tomcat-osg_integration/logs
   * tar zcf  /data/gratia_tomcat_logs_backups/tomcat-osg_integration.$date.tgz     * 
   * rm -f *
   * 
   * cd     /data/tomcat-itb/logs/
   * tar zcf /data/gratia_tomcat_logs_backups/tomcat-itb.$date.tgz   *
   * rm -f *
   * 
   * cd  /data/tomcat-gratia/logs/
   * tar zcf /data/gratia_tomcat_logs_backups/tomcat-gratia.$date.tgz  *
   * rm -f *

On __gratia08__ :
   * date=`date '+<nop>%Y<nop>%m<nop>%d'`
   * cd        /data/tomcat-fermi_itb/logs/
   * tar zcf /data/gratia_tomcat_logs_backups/tomcat-fermi_itb.$date.tgz   *
   * rm -f *
   * 
   * cd  /data/tomcat-qcd/logs/
   * tar zcf /data/gratia_tomcat_logs_backups/tomcat-qcd.$date.tgz     *
   * rm -f *
   * 
   * cd     /data/tomcat-fermi_osg/logs/
   * tar zcf /data/gratia_tomcat_logs_backups/tomcat-fermi_osg.$date.tgz  *
   * rm -f *

</li>

</ol>

---++ On the !MySql server node (  %CURRENT_MYSQL% )
  <ol type="1">
    <li> __comment__ out the cron entries for:

__gratia__ user cron jobs.
<pre class="screen">
0 0 1-15 * *   dir=/home/gratia/interfaces/apel-lcg; cd $dir; ./lcg.sh --config=lcg.conf --date=previous --update
30 01 * * *   dir=/home/gratia/interfaces/apel-lcg; cd $dir; ./lcg.sh --config=lcg.conf --date=current --update
</pre>

__root__ user cron entry.
<pre class="screen">
43 2 * * * /usr/local/bin/mysqlhotcopy_cron.sh &gt; /var/log/mysqlhotcopy.out 2&gt; &1
</pre>
</li>


<li>On the !MySql server node ( %CURRENT_MYSQL% ):

Take a back up the database instances (this will include all schema) using part of the _msqlhotcopy_cron_ script from the command line as _root_ user.
%BR%Backup will only being done to  _/backup/mysqldb_ on %CURRENT_MYSQL% in order to reduce the downtime.
   * mysqlhotcopy -p lisp01 --addtodest fermi_itb /backup/mysqldb       
   * mysqlhotcopy -p lisp01 --addtodest gratia_osg_daily /backup/mysqldb    
   * mysqlhotcopy -p lisp01 --addtodest gratia_qcd /backup/mysqldb     
   * mysqlhotcopy -p lisp01 --addtodest gratia_osg_integration /backup/mysqldb  
   * mysqlhotcopy -p lisp01 --addtodest fermi_osg /backup/mysqldb   
   * mysqlhotcopy -p lisp01 --addtodest gratia_psacct /backup/mysqldb   
   * mysqlhotcopy -p lisp01 --addtodest gratia_itb /backup/mysqldb   
   * mysqlhotcopy -p lisp01 --addtodest gratia /backup/mysqldb      


Backup times:
%TABLE{ tableborder="1" cellpadding="0" cellspacing="1" headerbg="#99CCCC" databg="#FFFFCC, #FFFFFF"}%
%EDITTABLE{  header="|*Schema*|*Expected Duration*|*Actual Duration*|" format="| text, 20 | text, 20 | text, 20 |"  changerows="on" quietsave="on" editbutton="Edit table" }%
|*Schema*|*Expected Duration*|*Actual Duration*|
| fermi_itb | 1 sec |  |
| gratia_osg_daily | 6 secs  |        |
| gratia_qcd  | 64 secs |    |
| gratia_osg_integration | 99 secs  |       |
| fermi_osg | 132 secs |  |
| gratia_psacct | 179 secs  |      |
| gratia_itb | 461 secs (8 min)  |    |
| gratia | 2900 secs (48+ min)   |  |

     </li>



</ol>


<!-- ----------------- UPGRADE AND IMPLEMENTATION ------------- -->
---+ Upgrade and implementation
The __upgrades should be single-threaded__ , that is, performed for each database schema one at a time.  

We will perform these upgrades based on the size of the individual database schema, in ascending order.

---++ On the tomcat/collector nodes
<ol>
  <li>Install the new software on a Gratia tomcat instance:
%BR% pswd=xxx
%BR% source=%BUILD_DIRECTORY%
%BR% pgm=%BUILD_DIRECTORY%/common/configuration/update-gratia-local 
%BR% On __gratia09:__
   * $pgm  -d $pswd -S $source  osg_integration
   * $pgm  -d $pswd -S $source  itb
   * $pgm  -d $pswd -S $source   gratia
%BR% On __gratia08:__
   * $pgm  -d $pswd -S $source  fermi_itb
   * $pgm  -d $pswd -S $source qcd
   * $pgm  -d $pswd -S $source   fermi_osg

</li>


<li>Start the gratia tomcat services:
   * service &lt;tomcat service&gt; start
   * When the tomcat service initializes, it will detect any schema changes have been effected and a conversion process will begin. 
   * _tail_ the  _catalina.out_ log. When the conversion process completes the log will show the following message:%BR%
       "INFO: Server startup in _xxx_ms"

<li>Then, _start_ the Gratia _update_ services for the database schema just upgraded.%BR%
   * In your browser, connect to the Gratia administrative services url for each of the databases.%BR%
   * Select the _System / Administration_ menu option in the left menu%BR%
   * Then scroll down to the _Starting/Stopping Database Update Services_ section and select the _Start Update Services_ link.
   * As __each__ collector/tomcat host update service is started, monitor the tomcat logs files for any errors.
   * Bring up the gratia _administration_ web interface and verify that the collectors are processing the data.
   * Bring up the gratia _reporting_ web interface and verify that the reports look reasonable while still _tail'ing_ the log files.

<li>If all looks good, _stop_ the Gratia _update_ services for the database schema just upgraded.


<li> Run the static reports cron as _root_ and verify these reports are generated:
   * ./gratia-reports/reports-static/UsageByVOByDate-ranked.pdf
   * ./gratia-reports/reports-static/UsageBySiteByDate-ranked.pdf
   * ./gratia-reports/reports-static/WeeklyUsageByVO-ranked.pdf

On __gratia08__ :
<pre class="screen">
42 0 * * * '/data/tomcat-fermi_itb/gratia/staticReports.py' '/data/tomcat-fermi_itb' 'http://gratia-fermi.fnal.gov:8881/gratia-reporting/' 
42 0 * * * '/data/tomcat-qcd/gratia/staticReports.py' '/data/tomcat-qcd' 'http://gratia-fermi.fnal.gov:8883/gratia-reporting/' 
42 0 * * * '/data/tomcat-fermi_osg/gratia/staticReports.py' '/data/tomcat-fermi_osg' 'http://gratia-fermi.fnal.gov:8880/gratia-reporting/' 
</pre>

On __gratia09__ :
<pre class="screen">
42 0 * * * '/data/tomcat-osg_integration/gratia/staticReports.py' '/data/tomcat-osg_integration' 'http://gratia.opensciencegrid.org:8885/gratia-reporting/' 
42 0 * * * '/data/tomcat-itb/gratia/staticReports.py' '/data/tomcat-itb' 'http://gratia.opensciencegrid.org:8881/gratia-reporting/' 
42 0 * * * '/data/tomcat-gratia/gratia/staticReports.py' '/data/tomcat-gratia' 'http://gratia.opensciencegrid.org:8880/gratia-reporting/' 
</pre>
</li>

<li>If satisifed, __stop__ the tomcat service for that tomcat database schema so you can proceed to the next one.
   * service &lt;tomcat service&gt; stop
</li>
</ol>


<!-- ----------------- ACTIVATING THE NEW RELEASE ------------- -->
---+ Activating the new release

---++ On the tomcat/collector nodes
  <ol>
        <li> __start__ the tomcat service for the Gratia collectors.%BR%

On __gratia08:__
   * service tomcat-fermi_itb  start
   * service tomcat-fermi_osg start
   * service tomcat-ps start
   * service tomcat-qcd start

On __gratia09:__
   * service tomcat-gratia start  
   * service tomcat-itb start
   * service tomcat-osg_daily start
   * service tomcat-osg_integration start
</li>

   <li> As __each__ collector/tomcat host service is started, monitor the tomcat logs files for any errors.

</li>

   <li> Bring up the gratia administrative web interface and verify that the collectors are processing the data.%BR%
     If they are not processing any data,  __verify__ the Gratia update services are active.
<ul><li>In your browser,  connect to the Gratia administrative services url for each of the databases.</li>
       <li>Select the _System / Administration_ menu option in the left menu</li>
       <li>Then scroll down to the _Starting/Stopping Database Update Services_ section and and view the status.</li>
</ul>
      </li>

    <li> Enable _init.d_ services for all tomcats as __root__ user:

On __gratia08:__
   * chkconfig tomcat-ps on
   * chkconfig tomcat-qcd   on
   * chkconfig tomcat-fermi_osg on
   * chkconfig tomcat-fermi_itb  on

On __gratia09:__
   * chkconfig tomcat-gratia  on
   * chkconfig tomcat-osg_daily   on
   * chkconfig tomcat-osg_integration on
   * chkconfig tomcat-itb    on
</li>

   <li> __Uncomment/verify__   the __root__ user cron entry for the static reports:

On __gratia08__ :
<pre class="screen">
42 0 * * * '/data/tomcat-fermi_itb/gratia/staticReports.py' '/data/tomcat-fermi_itb' 'http://gratia-fermi.fnal.gov:8881/gratia-reporting/' 
42 0 * * * '/data/tomcat-qcd/gratia/staticReports.py' '/data/tomcat-qcd' 'http://gratia-fermi.fnal.gov:8883/gratia-reporting/' 
42 0 * * * '/data/tomcat-fermi_osg/gratia/staticReports.py' '/data/tomcat-fermi_osg' 'http://gratia-fermi.fnal.gov:8880/gratia-reporting/' 
</pre>

On __gratia09__ :
<pre class="screen">
42 0 * * * '/data/tomcat-osg_integration/gratia/staticReports.py' '/data/tomcat-osg_integration' 'http://gratia.opensciencegrid.org:8885/gratia-reporting/' 
42 0 * * * '/data/tomcat-itb/gratia/staticReports.py' '/data/tomcat-itb' 'http://gratia.opensciencegrid.org:8881/gratia-reporting/' 
42 0 * * * '/data/tomcat-gratia/gratia/staticReports.py' '/data/tomcat-gratia' 'http://gratia.opensciencegrid.org:8880/gratia-reporting/' 
</pre>
</li>
</ol>

---++ On the !MySql server node ( %CURRENT_MYSQL% )
<ol>
<li> __Uncomment__   the __root__ user cron job(s) for gratia backups
<pre class="screen">
43 2 * * * /usr/local/bin/mysqlhotcopy_cron.sh > /var/log/mysqlhotcopy.out 2>&1
</pre>
</li>
<li> __Uncomment__  the __gratia__ user cron job(s).
<pre class="screen">
0 0 1-15 * *   dir=/home/gratia/interfaces/apel-lcg; cd $dir; ./lcg.sh --config=lcg.conf --date=previous --update
30 01 * * *   dir=/home/gratia/interfaces/apel-lcg; cd $dir; ./lcg.sh --config=lcg.conf --date=current --update
</pre>
</li>
</ol>



<!-- ----------------- POST MORTEM  ------------- -->
---+ Post-mortem
At this time, this will appear to be random notes.  After the conversion, they may be organized.

<ol>

</ol>


%STOPINCLUDE%

<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->
---++!! Major updates
<!--Future editors should add their signatures beneath yours!-->
