%META:TOPICINFO{author="JohnWeigand" date="1204050115" format="1.1" reprev="1.6" version="1.6"}%
<!--
   * Set check =  <img src="/pub/TWiki/TWikiDocGraphics/choice-yes.gif" alt="DONE" title="DONE" width="16" height="16" border="0" /> 
-->
---+!! Gratia Access/Login Specification 

%TOC%

%STARTINCLUDE%
---+ Overview
This document is intended to serve as both a requirements and design specification for limiting access and visibility into the two web service user interfaces of Gratia: 
   * administration services
   * reporting services


---+ gratia-administration
The Gratia administration is accessible as http(s)://&lt;node.domain&gt;:&lt;port&gt;/gratia-administration.  It allows for viewing the status of the collector and for maintenance of several data tables.

---++ administration access requirements
The Gratia administration web user interface login will allow access to all update service menu options, otherwise only the read-only menu options will be available. 

%TABLE{ tableborder="1" cellpadding="0" cellspacing="1" headerbg="#99CCCC" databg="#FFFFCC, #FFFFFF"}%
%EDITTABLE{  header="|*Menu option*|*No login required*|*Login required*|" format="| textarea, 5x30 | textarea, 5x50 | textarea, 5x50 |"  changerows="on" quietsave="on" editbutton="Edit table" }%
|*Menu option*|*No login required*|*Login required*|
| Maintenance<br />   * Site Table<br />   * VO Management<br />   * VOName correction |  |  <img src="/pub/TWiki/TWikiDocGraphics/choice-yes.gif" alt="DONE" title="DONE" width="16" height="16" border="0" />   |
| Probes<br />   * active, inactive or all<br />   * CPU Info<br />   * Roles |  |  <img src="/pub/TWiki/TWikiDocGraphics/choice-yes.gif" alt="DONE" title="DONE" width="16" height="16" border="0" />   |
| Authentication<br />   * Certificates |  |  <img src="/pub/TWiki/TWikiDocGraphics/choice-yes.gif" alt="DONE" title="DONE" width="16" height="16" border="0" />   |
| Replication<br />   * Job Usage Replication<br />   * Metric Replicatino |  |  <img src="/pub/TWiki/TWikiDocGraphics/choice-yes.gif" alt="DONE" title="DONE" width="16" height="16" border="0" />   |
| System<br />   * System status: normal or detailed |  <img src="/pub/TWiki/TWikiDocGraphics/choice-yes.gif" alt="DONE" title="DONE" width="16" height="16" border="0" />   |  |
| System<br />   * Administration |  |  <img src="/pub/TWiki/TWikiDocGraphics/choice-yes.gif" alt="DONE" title="DONE" width="16" height="16" border="0" />   |
| Documentation<br />   * Installation<br />   * Security<br />   * Replication<br />   * Gratia Service Settings |  <img src="/pub/TWiki/TWikiDocGraphics/choice-yes.gif" alt="DONE" title="DONE" width="16" height="16" border="0" />   |  |

<p>


 List of requirements.
   1 For an instance of a Gratia collector, at least one Gratia administrator must be defined.
   1 The Gratia administrators are identified and managed by the VO
   1 A user grid certificate will be used to identify the administrator

---++ administration access design
The identity of a Gratia administrator will be defined in the _TOMCAT_HOME/gratia/service-configuration.properties_ file.  
   * For Gratia instances servicing multiple VO's, multiple entries are allowed
   * The identity of the Gratia administrator(s) will be defined by specifying the FQAN as defined by the VO.
   * In order to insure that the most current list of administrative identities is always used this file should be read each time the login service is invoked (explicitly or implicitly).  An alternative method of insuring currency is to read the timestamp on the file and read it only when it has changed.
<pre>
<b>service-configuration.properties file entries:</b>
  service.admin.identity.0=/cms/uscms/Role=gratiaadmin
  service.admin.identity.1=/cms/uscms/gratiaadmin/Role=NULL
  service.admin.identity.2=/atlas/usatlas/Role=gratiaadmin

<i>(the above entries show various examples of how the 
identity of the Gratia administrators can be defined 
within a VO)</i>
</pre>

The Gratia login process will need the identity of the OSG VO VOMS servers in order to authenticate the identity of the user.          
   * This will be in the form of an OS file called _TOMCAT_HOME/gratia/voms-servers_ 
   * File permissions of 644
   * Initially, this file will be manually maintained.  In the long term, this file should be distributed by the OSG GOC.
   * In order to insure that the most current list of VOMS servers is always used this file should be read each time the login service is invoked (explicitly or implicitly).  An alternative method of insuring currency is to read the timestamp on the file and read it only when it has changed.
<pre>
<b>./gratia/voms-servers file:</b>
  # comment line
  atlas  https://voms.cern.ch:8443/voms/atlas/services/VOMSAdmin
  cms    https://voms.cern.ch:8443/voms/cms/services/VOMSAdmin
  geant4 https://voms.cern.ch:8443/voms/geant4/services/VOMSAdmin
</pre>

The user identity requesting login access will be retrieved from a grid certificate imported in their browser. The DN (subject) of the certificate and CA (issuer) of the certificate, in the following form, will be used:
<pre>
DN: /DC=org/DC=doegrids/OU=People/CN=John Weigand 458491
CA: /DC=org/DC=DOEGrids/OU=Certificate Authorities/CN=DOEGrids CA 1
</pre>

The procedure for logging in for the "happy-day" scenario is:
   1 When the administration page is initially accessed, the _Status: normal_ page will be presented and a  _login_ menu option should appear at the top of the left frame menu list along with the list of _read-only_ menu options.  
   1 If the user desires administrative update options, the user will select the _login_ menu option.
   1 The login process will read the imported user certificate from the browser is access the identity (DN/subject) of the user.
   1 Using the _voms-server_ file, the login process will access each of the VO's VOMS servers specified by the _service-configuration.properties_ file's _service.admin.identity.n_ list of Gratia admin FQANS, the _<nop>VOMSAdmin_ methods below can be used to authorize the user:
      * <nop>listRoles (java.lang.String username, java.lang.String userca) 
      * <nop>listUsersWithRole (java.lang.String groupname, java.lang.String rolename)
   1 If the user is _not_ authorized, 
      * the left frame menu will remain unchanged.
   1 If the user is authorized, 
      * the left frame menu will display all the menu options available
      * a _logoff_ menu option will replace the _login_ menu option.

Additional login processing considerations:
   1 There is no need to query all the VOMS servers designated by the _service.admin.identity.n_ list if the user is determined to be a Gratia administrator.  Once is enough.
   1 In order to take into account the scenario where a user's Gratia admin privileges have been revoked (similar to a CRL situation), a _refresh_ parameter will be added to the _system-configuration.properties_ file.  The login process will _implicitly_ re-authorize the user as though the user had selected the _login_ menu option.  This will be done  "behind-the-scenes" when the user performs any action including a refresh of a page.  This interval is the time between _login_ authorization checks.
   1 In order to take into account a user being logged in with  Gratia administrator privileges and leaving his browser unattended for an extended period, a _timeout_ parameter will be added to the _system-configuration.properties_ file. If a user has been inactive for the period specified, the login process will  return the user to the "read-only" state and menu options.  The user will have to _explictely_ login again.

<pre>
<b>service-configuration.properties file:</b>
# service.admin.refresh -&gt; (expressed in minutes). 
#     This is time interval at which a user' admin authorization is re-checked.
 service.admin.timeout-&gt; (expressed in minutes). 
#     This is time interval at which a user' admin authorization is reset and requires
#     an explicit login.  This is only done is the user is inactive for this period of time.
service.admin.refresh=30
service.admin.timeout=30
</pre>





---++ adminstration access open issues
<ol>
<li>Command line shutdown of update services using _wget_ .<p>
Currently the _initd_ tomcat service, does a _wget_ to stop the _update services_ prior to stopping _tomcat_.
<pre>
  wget -O - -q 'http://gratia.opensciencegrid.org:8881/gratia-administration/systemadministration.html?action=stopDatabaseUpdateThreads'
</pre>
This will not be allowed when the login access is implemented.  An alternative is required.
</li>
<p>


<li>

</li>

</ol>
<p>


---+ gratia-reporting
The Gratia reporting is accessible as http(s)://&lt;node.domain&gt;:&lt;port&gt;/gratia-reporting.  It allows for viewing the accounting data only.  There is no maintenance/update capability.  The general intent in this area is to to allow various levels of visibility to the data:
   * public-like data viewable by anyone
   * VO level data viewable by members of a VO
   * Individual user data (DN level) for members of a VO

The detailed requirements for this capability have not been fully defined yet.

---++ reporting view requirements
This section has not been defined yet.

---++ reporting view design



%STOPINCLUDE%



<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->
---++!! Major updates
<!--Future editors should add their signatures beneath yours!-->
-- Main.JohnWeigand - 25 Feb 2008%BR%

%META:TOPICMOVED{by="JohnWeigand" date="1203954709" from="Accounting.GratiaLoginRequirements" to="Accounting.GratiaAccessLoginSpecification"}%
