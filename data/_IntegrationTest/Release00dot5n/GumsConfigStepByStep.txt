%META:TOPICINFO{author="KyleGross" date="1476285886" format="1.1" reprev="1.8" version="1.8"}%
%META:TOPICPARENT{name="GumsAdmins"}%
<!-- This is the default OSG Trash/Trash/Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!Configure GUMS Step by Step
%TOC%
%STARTINCLUDE%


---++Introduction
The gums.config file is written in XML and has three parts: 

*persistenceFactories* - defines where the local data can be stored. For example, GUMS will keep a local copy of the Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo listings; you can decide where to keep them. In OSG, it's always mysql. Each component that needs persistence information will retrieve it from mysql.  

*groupMappings* - defines groups of users and sets how they are to get mapped. A groupMapping is defined by two things: a set of users (userGroup) and a policy for account mapping (accountMapping). Optionally, the policy can be composed of multiple policies (compositeAccountMapping) 

*hostGroups* - defines which groupMappings are used for the different hosts. 
---++File Structure
The XML file has this structure:
<verbatim>
<gums>
  <persistenceFactories>
    <persistenceFactory/>
  </persistenceFactories>
  <adminUserGroup/>
  <groupMappings>
    <groupMapping>
      <userGroup/>
      <accountMapping/>
    </groupMapping>
    <groupMapping>
      <userGroup/>
      <compositeAccountMapping>
        <accountMapping/>
        <accountMapping/>
        <accountMapping/>
      </compositeAccountMapping>
    </groupMapping>
    ...
  </groupMappings>

  <hostGroups>
    <hostGroup/>
  </hostGroups>
</gums>
</verbatim>

---++Getting Started
---+++persistenceFactories
The default file includes one persistenceFactory element; leave it as is %RED%(even the password?)%ENDCOLOR%.
<verbatim>
<persistenceFactory 
name='mysql'
className='gov.bnl.gums.MySQLPersistenceFactory'
jdbcDriver='com.mysql.jdbc.Driver'
jdbcUrl='jdbc:mysql://cd-94372.dhcp.fnal.gov/GUMS_1_0' 
user='gums' 
password='VDTXLKRBKIM' 
autoReconnect='true' />
</verbatim>

---+++groupMappings
This element contains groupMapping elements. The only essential attribute is "name". This is the name for the mapping defined within this element. Each groupMapping element in the file must have a unique name.  
<verbatim>
<groupMapping name='osg1'>
</verbatim>

---++++userGroup
The userGroup element is a subelement of groupMapping. 

----+++++Required, fixed-value attributes
It has two attributes which are always needed and should never be changed from the default values: className and persistenceFactory.  
<verbatim>
className='gov.bnl.gums.VOMSGroup'
persistenceFactory='mysql' 
</verbatim>
----+++++Required, installation-specific attributes
It has others which are required, but that you need to set for your own installation: url, name, voGroup, sslCertfile, ss1key. The default values for these last two should work as is, but check.

Values:%BR%
name: your Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo name%BR%
voGroup: a group defined in Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfoMS under your VO %BR%
url: URL for your Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfoMS admin server%BR%
sslCertfile: path to the httpcert.pem file on your GUMS host %BR%
sslKey path to the httpkey.pem file on your GUMS host %BR%
E.g.,
<verbatim>
name='myusergroup1' 
voGroup="/myvo/group1"
url='https://my-voms-server:8443/edg-voms-admin/vos/services/VOMSAdmin'
sslCertfile='/etc/grid-security/http/httpcert.pem'
sslKey='/etc/grid-security/http/httpkey.pem' 
</verbatim>
----+++++Optional attributes
There are two optional attributes: voRole and ingoreFQAN.

voRole: Specifies which Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo role(s) (defined in a Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfoMS) must be specified in the proxy in order to make a match. Should be used with ignoreFQAN="false".%BR%
ignoreFQAN: This dictates whether to process or ignore role and group information, if any, in a proxy obtained with voms-proxy-init. False means "process it"; true means "ignore it".

We recommend that you always include ignoreFQAN with its value, either true or false. That way you don't have to remember the default value (which is "false").
<verbatim>
voRole="role1"
ignoreFQAN="false"
</verbatim>
---++++accountMapping
An accountMapping element defines the logic with which the user credentials are mapped to the local account. You can choose whether you want to implement mapping to a group account or to a pool of accounts.  
---+++++Group Account Mapping
For group mapping, you just have to specify the implementing class (use the value for className shown here, below) and the name of the group account, e.g.,
<verbatim>
<accountMapping 
className='gov.bnl.gums.GroupAccountMapper' 
groupName='groupaccount1' />
</verbatim>
---+++++Pool Account Mapping
To use a pool of accounts, you  need to specify the implementing class (use the value for className shown here, below), the place to look up the pool of accounts (the persistenceFactory, always set to "mysql" in OSG) and the name for the pool (there may be multiple pools defined), e.g.,:
<verbatim>
<accountMapping 
className='gov.bnl.gums.AccountPoolMapper'
persistenceFactory='mysql' 
name='Pool_1' />
</verbatim>
---+++++Both (Composite)
You may include both types of mapping within one groupMapping element. A typical use for this would be to map the incoming user to a pool account if available, and if not, then fallback to a group account.  Use the <tt>compositeAccountMapping</tt> element as shown here to accomplish this:
<verbatim>
<compositeAccountMapping>
   <accountMapping className='gov.bnl.gums.AccountPoolMapper'
      persistenceFactory='mysql' 
      name='Pool_1' />
   <accountMapping 
      className='gov.bnl.gums.GroupAccountMapper'
      groupName='groupaccount1' />
</compositeAccountMapping>
</verbatim>
---+++hostGroup
A hostGroup element has to define which hosts use which mappings.  It has three required attributes:%BR%
*className*: use the value for className shown here, below%BR%
*wildcard*: specifies a host or set of hosts; can use a wildcard %BR%
*groups*: specifies the group mapping to be used by the specified host(s) (The value must match the "name" attribute of one or more of the groupMapping elements).

<verbatim>
<hostGroup 
className='gov.bnl.gums.WildcardHostGroup'  
wildcard='*.fnal.gov' 
groups='osg1' />
</verbatim>
As with other elements in the gums.config file, GUMS maps according to the first match encountered. If you implement multiple hostGroups, make sure your wildcard value only catches the hosts it should; and put broader matches after narrower ones (e.g., myhost.fnal.gov ahead of *.fnal.gov).


---++A Simple Example
Here we'll use group mapping to a single account, osg01.  We'll assume people are coming in with a standard grid proxy so that we can ignore Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo groups and roles.  
%RED%(We haven't talked about FQAN or the adminUserGroup...)%ENDCOLOR%
<verbatim>
<gums>
  <persistenceFactories>
    <persistenceFactory ... (all the default values as listed above) />
  </persistenceFactories>
  <adminUserGroup 
    className='gov.bnl.gums.ManualUserGroup'
    persistenceFactory='mysql' 
    name='admins' />
  <groupMappings>
     <groupMapping>
       name='osg01'
        <userGroup 
          className='gov.bnl.gums.VOMSGroup'
          name='usergroup1'
          url='https://your-voms-server:8443/edg-voms-admin/{VO name}/services/VOMSAdmin'
          voGroup="/myvo/group1"
          persistenceFactory='mysql' 
          sslCertfile='/etc/grid-security/http/httpcert.pem'
          sslKey='/etc/grid-security/http/httpkey.pem'
          ignoreFQAN="true"/>
       <accountMapping 
          className='gov.bnl.gums.GroupAccountMapper' 
          groupName='osg01account' />
     </groupMapping>
  </groupMappings>
  <hostGroups>
    <hostGroup 
      className='gov.bnl.gums.WildcardHostGroup' 
      wildcard='*.fnal.gov' 
      groups='osg01' />
  </hostGroups>
</gums>
</verbatim>

---++Add Some Extras

---+++groupMappings
If you want <nop>MonALISA to be able to retrieve information for a given groupMapping, you'll need to set two other attributes in that groupMapping element: 

accountingVo: its value should be similar or identical to the Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo name and must be completely lowercase%BR%
accountingDesc: the same string as accountingVo but in uppercase 

E.g.,
<verbatim>
     <groupMapping>
       name='osg01'
       accountingVo=''myvo
       accountingDesc='MYVO'>
         ...
     </groupMapping>
</verbatim>

These values will appear in the $VDT_LOCATION/monitoring/grid3-user-vo-map.txt file (the inverse map file) when you run Generate Inverse Map on the GUMS web UI.


<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.AnneHeavey - 20 May 2005

%STOPINCLUDE%
