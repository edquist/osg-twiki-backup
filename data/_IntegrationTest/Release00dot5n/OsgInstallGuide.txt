%META:TOPICINFO{author="KyleGross" date="1476285889" format="1.1" reprev="1.10" version="1.10"}%
%META:TOPICPARENT{name="WebHome"}%
<!-- This is the default OSG Trash/Trash/Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>%TOPIC%
%TOC%
%STARTINCLUDE%


---++ Introduction

OSG maintains a software cache with reference implementations of the OSG "standard" services. The ensemble of these services is defined as the OSG release. It is not necessary (nor common) for an OSG site to provide all of these services. For Release 0.2, there are four standard services: Trash.Trash/Trash/IntegrationComputeElements (CE), StorageElements (SE), Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfoMembershipServices (Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfoMS), and DiscoveryServices (DS). The standard service names link to definitions of the service interfaces and requirements generally independent of implementation. The links below connect to instructions on how to deploy the default configuration of the OSG reference implementations. This is a good starting point for new participants and is commonly used for OSG production services.

---++ How to configure a Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo Membership Service

 The VOs which you wish to service must have a Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo Membership Service configured before you'll be able to provide any services to them. If you are a new VO, this is the place to start. (Old guide at Trash/Trash/Integration.VoAdmins)  If you are a resource provider and not managing a VO, then skip ahead to the service you wish to provide. VomsWhatToDo contains the current information on how to deploy a Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo Membership Service.

A current list of VOs is [[http://osg.grid.iu.edu/OSG/index.php?option=com_content&task=view&id=36&elMenu=Grid%20Support][here]], and a list of Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo Membership Service servers is [[http://osg.grid.iu.edu/OSG/index.php?option=com_content&task=view&id=37&elMenu=Grid%20Support][here]]. (%BLUE% This should be kept current; linked to catalog instead? Remember Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfoMS are authoritative so there needs to be a vetting process so shouldn't be bare dynamic discovery. %ENDCOLOR%)

---++ How to configure a Compute Element

Documentation.OsgCEInstallGuide contains the current information on how to deploy a Compute Element. A Compute Element is by far the most common OSG standard service (and was the only standard service on Grid3) and you may find lingering documentation that talks about OSG deployment and assumes you are deploying a Compute Element. Please report those as you find them !!

There are several different configuration options for a Compute Element depending on which authorization methods you wish to use. We'll document the basics and point you to extensions that you're likely to want to investigate once you get running (or right away for the more adventurous).

---++ How to configure a Storage Element

There is no reference implementation of a Storage Element supported at this time. 

---++ How to configure a Discovery Service

Trash/Trash/Integration.DiscoveryServiceInstallation contains the current information on how to deploy a Clarens Discovery Service.  OSG is in an intermediate state with regards "standardization" of a Discovery Service. For Compute Elements we continue to use a single, central GridCat instance as our catalog for discoverying CEs. This maintains compatibility with tools used on Grid3, but has a large central operations requirement and is not likely the model we'll use moving forward. The Clarens Discovery service is a first instance of a dynamic discovery service, but is built for Web Services only. We have documented how to register SRM and INFN Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfoMS servers with the Claren Discovery service, but have not defined required interfaces. This release is intended as an experiment to determine how such a service should work and to resolve how to discover non Web Services based services.

<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.DaneSkow - 10 May 2005

-- Main.BurtHolzman - 11 May 2005
%STOPINCLUDE%
