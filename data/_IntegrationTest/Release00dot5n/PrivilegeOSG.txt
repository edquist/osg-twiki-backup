%META:TOPICINFO{author="ElizabethChism" date="1466109831" format="1.1" version="1.21"}%
%META:TOPICPARENT{name="WebHome"}%
<!-- This is the default OSG Trash/Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>An Introduction to Privilege (Authorization) in OSG
%TOC%
%STARTINCLUDE%
---++ A Brief Tour of the Privilege Components
Thanks go to Alain Roy who wrote this for the [[http://vdt.cs.wisc.edu/releases/1.4.0/privilege.html][VDT website]].

The privilege components are described below and are shown in the following diagram:

   * Trash/Trash/VirtualOrganizations/VOInfoMS. The Virtual Organization Membership Service organizes grid users into Virtual Organizations (VOs), so that users working together on a common project across multiple real organizations can be grouped together in the privilege system. Each Trash/Trash/VirtualOrganizations/VOInfoMS server instance lists the X509 certificate for each user belonging to its Trash/Trash/VirtualOrganizations/VOInfo and may include other information about users including the subgroups and roles in which they participate. Trash/Trash/VirtualOrganizations/VOInfoMS is used to find out whether a user is a member of the Trash/Trash/VirtualOrganizations/VOInfo or one of its subgroups, and whether the user may assume a given role or capability. The Trash/Trash/VirtualOrganizations/VOInfoMS Admin web application and service (not shown in the diagram) is used to manage the VO, and voms-proxy-init is the client side tool that an end user uses to obtain a proxy certificate.

   * GUMS. The Grid User Management System maps an end-user's credentials (proxy certificates) to a local user account under which the user's job can be run. While a GUMS service can be configured to perform all mappings based on a static configuration, typically it is configured to look up users in one or more Trash/Trash/VirtualOrganizations/VOInfoMS servers and to map them based on Trash/Trash/VirtualOrganizations/VOInfo membership and role(s).
 
   * PRIMA. The PRIvilege Management and Authorization component is the interface between a Globus Toolkit gatekeeper (or other GSI service) and a mapping service like GUMS. It implements a Globus authorization callout by packaging requests in the SOAP web service format required by GUMS and handling responses.

<!-- Trash/Trash/VirtualOrganizations/VOInfoMS and GUMS -->
     <img src="%ATTACHURLPATH%/alainsvomsgums.gif" alt="alainsvomsgums.gif" width='677' height='379' />

<!-- OSG guides
   * Trash/Trash/VirtualOrganizations/VOInfo administrator guide: VoAdmins
   * Compute Service site administrator guides: OSGCEInstallGuide-0.1.6 and GumsAdmins

 Plone and Project Web

   * OSG Plone https://plone3.fnal.gov/opensciencegrid/techgroups/tg-policy/vo-privilege
   * The Privilege project <a href="http://computing.fnal.gov/docs/products/voprivilege/">homepage</a> contains links to everything.  
   * Transition plan: http://computing.fnal.gov/docs/products/voprivilege/documents/transition-to-privilege.html
-->
---++ Privilege Components, More Detail
---+++ On Trash/Trash/VirtualOrganizations/VOInfoMS Host
   * Trash/Trash/VirtualOrganizations/VOInfoMS-Admin (one per VO): manages list of people in a VO. Allows the Trash/Trash/VirtualOrganizations/VOInfo manager to maintain a list of Trash/Trash/VirtualOrganizations/VOInfo members, and assign membership to Trash/Trash/VirtualOrganizations/VOInfo groups and roles. Allows edg-mkgridmap and GUMS to retrieve the list.
   * Trash/Trash/VirtualOrganizations/VOInfoMS Server (one per VO): server component that allows creation of extended proxies. It's separate from Trash/Trash/VirtualOrganizations/VOInfoMS-Admin, but uses the same database.
   * Trash/Trash/VirtualOrganizations/VOInfoMS-Admin publisher: Publishes the existence of a Trash/Trash/VirtualOrganizations/VOInfoMS-Admin service to the [[http://osg.ivdgl.org/twiki/bin/view/Trash/Trash/Integration/DiscoveryServiceInstallation][Discovery Service]].
%RED%Which part communicates privileges to GOC?%ENDCOLOR%

---+++ On Submission Host
   * Trash/Trash/VirtualOrganizations/VOInfoMS Client (on each submission host): allows a user to generate a proxy with =voms-proxy-init= that contains Trash/Trash/VirtualOrganizations/VOInfo/group/role information. It contacts the Trash/Trash/VirtualOrganizations/VOInfoMS Server to generate the proxy.

---+++ At Site
   * edg-mkgrimap (on each gatekeeper *not served by GUMS*): a script that generates the grid-mapfile taking information from Trash/Trash/VirtualOrganizations/VOInfoMS servers. %RED%directly?%ENDCOLOR% It runs every so often on a gatekeeper, contacts the list of Trash/Trash/VirtualOrganizations/VOInfoMS servers specified in the configuration file %RED%config file comes from where?%ENDCOLOR%, and creates a grid-mapfile.
   * GUMS Server (one per site): a service that allows you to manage privilege-to-userid mapping on site. It can be contacted by GUMS Client (below) to generate grid-mapfiles and the inverse accounting map (account-to-VO) used by Trash/Trash/VirtualOrganizations/VOInfoJobs accounting %RED%what is this?%ENDCOLOR% in !MonALISA. It can also be contacted by the PRIMA module (below) to retrieve the mapping for a single request.
   * GUMS Client (on each gatekeeper): a client tool that connects to GUMS Server to retrieve maps (grid-mapfile and accounting map). It also includes admin tools to manage GUMS. 
      * Used in conjuction with PRIMA to deploy the accounting map. 
      * Used without PRIMA for those services that must still use a grid-mapfile.
   * PRIMA module (on each gatekeeper that needs to contact GUMS): gatekeeper callout module that contacts an authorization server (i.e., GUMS) to retrieve the privilege-to-userid mapping. It is a library that the gatekeeper can be configured to use. For every gatekeeper request, it will contact the GUMS server.

---++ I'd like to pull out the remaining sections
---++Trash/Trash/VirtualOrganizations/VOInfoMS version info (shouldn't need here)
%RED% Do we need this?%ENDCOLOR%
Any Trash/Trash/VirtualOrganizations/VOInfoMS-Admin 0.7.x is suitable. Version 0.7.6, though, allows to give world readable access to any valid Grid credentials. This avoid the problem of authorizing every single gatekeeper or GUMS server on OSG.

Trash/Trash/VirtualOrganizations/VOInfoMS Server 1.3.2 or later are fine. If a Trash/Trash/VirtualOrganizations/VOInfo is not going to use Role based authorization, there is no need to install the Trash/Trash/VirtualOrganizations/VOInfoMS server.

Trash/Trash/VirtualOrganizations/VOInfoMS Client version 1.4.0 (coming in VDT 1.3.3) is strongly advised, as it can read the vomses configuration file in the default location, which can be prepackaged as part of OSG deployment. %RED% Does OSG client include Trash/Trash/VirtualOrganizations/VOInfoMS client?%ENDCOLOR%

Trash/Trash/VirtualOrganizations/VOInfoMS-Admin publisher
%RED% Do we need this?  I don't see a reference to this in "Trash/Trash/VirtualOrganizations/VOInfoms what to do".%ENDCOLOR%

The Trash/Trash/VirtualOrganizations/VOInfoMS-admin publisher can be obtained from http://discover.gridservice.info/publish-voms-admin.tar.gz.  This is used to publish the existence of the Trash/Trash/VirtualOrganizations/VOInfoMS-Admin service to the [[http://osg.ivdgl.org/twiki/bin/view/Trash/Trash/Integration/ItbRel015#Discovery_Service][Discovery Service]].  This tarball contains a 'publish-voms-admin.sh' script that will perform the publication.<br/>
Usage:
<verbatim>
publish-voms-admin.sh --vomsServer vo.racf.bnl.gov --vomsPort 8443 --vomsVersion 76 --vomsName atlas \
                      --discVO ATLAS --serverDN "/DC=org/DC=doegrids/OU=Service/CN=vo.racf.bnl.gov"
</verbatim>
Replace the arguments with the appropriate settings for your Trash/Trash/VirtualOrganizations/VOInfoMS-admin installation.  The script is configured to keep the registration active for 12 hours.  Before that time period expires, the voms-admin server must be re-registered with the [[http://osg.ivdgl.org/twiki/bin/view/Trash/Trash/Integration/ItbRel015#Discovery_Service][Discovery Service]].  A simple cron job can be used to run the publication script every 6 hours to ensure that the Trash/Trash/VirtualOrganizations/VOInfoMS-Admin service registration is kept up to date.

To check the state of the registration in the [[http://osg.ivdgl.org/twiki/bin/view/Trash/Trash/Integration/ItbRel015#Discovery_Service][Discovery Service]], go to 
a [[http://ultralight.caltech.edu:8080/jclarens/web/rendezvous/rendezvous_interface.html][OSG Discovery Service registry]].  Press 'submit' with no search criteria to see a list of all servers registered with the Discovery Service.  Click on a server uri to see a list of all services available at that location.

---++GUMS Installation guidance

---+++GUMS client  (used by gatekeepers using GUMS gridmap compatibility mode)
Installation is covered in [[ReleaseDocumentation/GumsAdmins][the GumsAdmins page].

---+++GUMS server

   * We recommend that you install the GUMS server from the OSG pacman cache. Instructions for this install are available at [[ReleaseDocumentation/GumsAdmins][the GumsAdmins page]].

   * Quick installation guide at: http://grid.racf.bnl.gov/GUMS/guide_howto_installation.html.  (**Note: these instructions refer to standalone installation from the master GUMS repository and this should be used as general guidance for the moment --until we get the howto's moved over here**) %RED%status?%ENDCOLOR%

   * [[http://grid.racf.bnl.gov/GUMS/download.html][links to releases and builds]]

   * [[http://grid.racf.bnl.gov/GUMS/][Find everything about GUMS]]. This includes instructions for standalone installation of GUMS outside the OSG pacman system.

---++PRIMA Installation/Activation Guidance
The suggested version is the one coming with VDT 1.3.5. %RED% as of Oct 06?%ENDCOLOR%

You can find documentation on how to activate the PRIMA Authorization module in VDT to query a GUMS Identity Mapping Service at: [[PrivilegeSiteWhatToDo#Configure_the_PRIMA_module]] %RED% Still the right instructions there?  Why not part of release doc? %ENDCOLOR%

   * %RED%Plone no longer active; where to find this?%ENDCOLOR% Also a document with the URLs of two test  GUMS Servers that may be used for evaluation: Title: "GUMS Mapping Servers for ITB 0.1.0".
https://plone3.fnal.gov/opensciencegrid/techgroups/tg-policy/vo-privilege:

---++Privilege Scenario Reports

Here we link reports from site administrators and testers of the site-level Trash/Trash/VirtualOrganizations/VOInfo management services.

   * [[SDSSFermilabGUMS][GUMS Installation status report]] (Neha Sharma) 



<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.RobGardner - 10 Mar 2005 %BR%
-- Main.AnneHeavey - 19 Oct 2006
%STOPINCLUDE%

%META:FILEATTACHMENT{name="alainsvomsgums.gif" attachment="alainsvomsgums.gif" attr="" comment="VOMS and GUMS" date="1161279184" path="alainsvomsgums.gif" size="23556" stream="alainsvomsgums.gif" user="Main.AnneHeavey" version="1"}%
