%META:TOPICINFO{author="ElizabethChism" date="1466010178" format="1.1" version="1.17"}%
%META:TOPICPARENT{name="ItbRel015"}%
<!-- This is the default OSG Trash/Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>Discovery Service Installation
%TOC%
%STARTINCLUDE%


---++Introduction

JClarens is a grid service framework for hosting and developing new grid services. It is a Java implementation of the more general [[http://clarens.sourceforge.net][Clarens grid service framework]].  The Discovery Service is one such grid service.

The Discovery Service provides a way to dynamically discover and advertise Web Services in the OSG.  Local Discovery Service instances can run on many sites and each one will receive the same set of service advertisements.   Once a service is published to any of the local Discovery Service instances, the publication is sent out to all other Discovery Service instances immediately.  In this archtecture, sites are never polled for the services that they provide.  Instead, each site pushes out service descriptions to the Discovery Service.  This push model is much more scalable than a poll model where each site must be queried directly.

The Discovery Service is a catalog that is meant to be updated only occassionally (no more than once a day, possibly only once a week or month).  It is not meant to store up-to-the-minute monitoring information.  Other services from the MIS group provide the more frequently updated monitoring information.

The Discovery Service uses the Jini P2P framework provided by MonALISA to propogate and discover service information.

The schema for describing a web service is defined by the ServiceDescriptor type in the WSDL: http://discover.gridservice.info/wsdl/rendezvous.wsdl

<verbatim>
ServiceDescriptor {
    Provider endpoint[];   /* Endpoint information for invoking the service */
    String registrant;     /* not used */
    String admin;          /* Adminstrator email */
    String provider_dn;    /* Certificate subject of the host */
    String uri_suffix;     /* service-specific suffix appended to the endpoint */
    String vo;             /* Name of the VO offering this service */
    String site;           /* Name of site */
    String age;            /* Do not set.  Assigned on the server. */
    String expire;         /* If not set, then it will be assigned on the server */
    String description;    /* Human readable description of the service */
    String wsdl;           /* URL to the WSDL describing the service */
    String wsdl_signature; /* not used */
    String version;        /* Service version number */
    Item data;
}

Provider {
    String uri;      /* Endpoint uri for accessing the service */
    String encoding; /* Message level encoding (SOAP, XMLRPC, etc.) */
}

Item {
    String key;   /* Arbitrary key */
    String value; /* Arbitrary value */
}
</verbatim>

In the OSG there are several types of services that are currently advertised through the Discovery Service:
   * VirtualOrganizations/VOInfoMS-Admin - VirtualOrganizations/VOInfoMS servers are advertised to help maintain a list of the current valid VOs and their configurations.  This allows sites to generate an up-to-date =edg-mkgridmap.conf= file or =gums.config= template from a single query to a local or a remove Discovery Service instance.
   * SRM/DRM - SRM/DRM has built-in support for advertising itself to the Discovery Service.

In order to run the Discovery Service, both JClarens and the Discovery Service packages must be installed. Fortunately, the VDT installer makes this easy.

---++Basic Installation

   1. JClarens and the Discovery Service should be installed on a separate machine from the gatekeeper. There is no requirement that it run on the gatekeeper.  Installing on a separate machine will help reduce the load and memory usage on the gatekeeper itself.  It is possible, though not recommended, that the Discovery Service is run on the gatekeeper, but as of VDT 1.3.8 this installation process has known problems.
   1. Install a service certificate and key into =/etc/grid-security/http/httpcert.pem= and =/etc/grid-security/http/httpkey.pem=. This should be done before installing the VDT.  
   1. If you haven't done so already, [[http://vdt.cs.wisc.edu/releases/1.3.10/installation_pacman.html][install pacman]].
   1. Install the JClarens and Discovery Service packages from the VDT cache<br/>
      =pacman -get !http://vdt.cs.wisc.edu/vdt/vdt_1310_cache:jClarens-Discovery=
   1. During the installation, pacman will ask if you want to enable the JClarens web services framework.  Good admins (who got a service cert first) should answer =y=. Impatient admins, answer =s=.
    <verbatim>
      Would you like to enable the jClarens web services framework?
</verbatim>
   1. The installer will also ask if you want to setup daily rotation of log files.  This is highly recommended for any tomcat web application.  Answer =y=.
    <verbatim>
      Would you like to setup daily rotation of VDT log files?
</verbatim>
   1. The installer will ask if you want to setup the EDG CRL update daemon.  This is a site-specific decision and does not affect the Discovery Service installation.  Answer appropriately for your site.
    <verbatim>
      Do you want the EDG CRL update daemon to be installed? [y/n]
</verbatim>
   1. The installer will ask where you want to install the CA files.  This does not affect the Discovery Service installation, so choose whatever location you would like.
    <verbatim>
      Where would you like to install CA files?
</verbatim>

Good admins -- you're done!  Anyone else should get a service certificate and install the Apache and Tomcat init scripts.

   * vdt/setup/configure_apache --server y
   * vdt/setup/configure_tomcat --server y --version 5
 
The installation will start jclarens automatically.  If you need to start or stop jclarens manually, use the following commands:
<verbatim>
service apache stop
service tomcat-5 stop

service apache start
service tomcat-5 start
</verbatim>

---++Site Configuration

The Discover Service operates in two modes:  Publication and Discovery.  In Publication mode, the services hosted in JClarens (including the Discover Service itself) are advertised to the other Discovery Services in the OSG-ITB.  Additionally, the web service interface of a local Discovery Server will advertise services published via the "rendezvous.register" method to the other Discovery Services.  In order to run in Discovery mode, the Discovery Service requires access to a [[http://monalisa.caltech.edu][MonALISA]] server that has been configured to receive [[http://monalisa.caltech.edu/dev_ap_mon.html][ApMon publications]].  This MonALISA server does not need to reside on the same host, or even at the same site as the Discovery Service.

In Discovery Mode, the Discovery Service listens for service advertisements from other Discovery Services.  No changes are necessary to enable Discovery mode for the Discovery Service.

There are three files that must be updated for the local site installation (these need to be verified against a VDT 1.3.8 installation):  

---+++$VDT_LOCATION/tomcat/v4/webapps/jclarens/xmlrpc_handlers.properties
   1. Change the value of =monitor.dest= to point to the [[http://monalisa.caltech.edu][MonALISA]] server that was configured to receive [[http://monalisa.caltech.edu/dev_ap_mon.html][ApMon publications]].<br/>
      =monitor.dest=my.monalisa.host:8884= (TODO:  A public MonALISA server for Discovery publications will be installed at Caltech in the near future.  New hardware has just arrived...)
   1. The =clarens.admin= property contains a certificate DN fragment for the user who is given full access to all services on the server.  Any user who logs in with a certificate containing this substring will bypass all access control checks.  Comment out this property to remove all adminstrator access.<br/>
      =#clarens.admin=OU=GAE=
   1. Set the =vo.name= property to the name of the virtual organization to which this server belongs.<br/>
      =vo.name=uscms=
   1. Set the =clarens.admin.email= property to a valid email address.  Important notices about jClarens and the Discovery Service may be sent to this address.

---+++$VDT_LOCATION/tomcat/v4/webapps/jclarens/mlstore.properties
   1. Change the name of the MonALISA group to OSG-ITB<br/>
      =lia.Monitor.group = OSG-ITB=

---+++$MONALISA_HOME/Service/myFarm/myFarm.conf
   1. Set up the [[http://monalisa.caltech.edu][MonALISA]] server to accept [[http://monalisa.caltech.edu/dev_ap_mon.html][ApMon publications]] by adding the following line:<br/>
      =^monXDRUDP{ListenPort=8884,ParamTimeout=3600,NodeTimeout=3600,ClusterTimeout=3600}%5=

---++Validation
There are three validation steps that the Discovery Service is running.  The first is to use the browser interface on the local Discovery Service instance:  http://localhost:8080/jclarens/web/rendezvous/rendezvous_interface.html.  Press the 'Submit' button to see a list of services (both local and remote) that have been discovered by the registry.  At a minimum you should see an entry for the local host.  If you wait long enough (~5 minutes or less), you should start to see entries for other OSG-ITB sites as well.

The second validation test is to check the [[http://ultralight.caltech.edu:8080/jclarens/web/rendezvous/rendezvous_interface.html][Discovery Service registry hosted at Caltech]].  If your local Discovery Service has been configured correctly then you should see your site listed in this registry.

The third validation step involves publishing a service to the registry from the command line.  Command line tools are available from http://discover.gridservice.info/publish-voms-admin-1.3.7.tar.gz.  This package contains generic service publication scripts as well as a script for publishing voms-admin services to the registry.  The README.osg file in the tarball contains information on how to customize and use these scripts.  Validation is successful when the publish script publishes a service with no errors and the query script returns the service that was published via the publish script.

<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.MichaelThomas - 14 Apr 2005

%STOPINCLUDE%