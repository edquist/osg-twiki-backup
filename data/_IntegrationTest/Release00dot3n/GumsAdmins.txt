%META:TOPICINFO{author="JohnWeigand" date="1116359700" format="1.0" version="1.10"}%
%META:TOPICPARENT{name="ItbRel015"}%
<!-- This is the default OSG Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>%TOPIC%
%TOC%
%STARTINCLUDE%



---+++ Introduction
 
<a href="http://grid.racf.bnl.gov/GUMS/">GUMS</a> (Grid User Management System) is a Grid Identity Mapping Service. Identity mapping is necessary when a site's resources do not use grid credentials natively, but instead use a different mechanism to identify users, such as UNIX accounts or Kerberos principals. In these cases, the grid credential for each incoming job must be associated with an appropriate site credential. The GUMS server performs this mapping and communicates it to the gatekeepers. The gatekeepers are charged with enforcing the site mapping established by GUMS. The GUMS client (gatekeeper) portion consists of an admin tool for querying and/or changing the state of the server. Typically, the term "GUMS" refers to the server portion.

GUMS is particularly well suited to a heterogeneous environment with multiple gatekeepers; it allows the implemenation of a single site-wide usage policy, thereby providing better control and security for access to the site's grid resources. Using GUMS, individual resource administrators are able to assign different mapping policies to different groups of users and define groups of hosts on which the mappings will be used. GUMS was designed to integrate with the site's local information services (such as HR databases or LDAP).

To use GUMS with OSG ITB, it needs to be installed separately. For the OSG ITB we will be using two senerios, "Full Privilege" and the "Compatibility" site configurations.

More Information can be obtained from the following resources:

	* OSG Plone https://plone3.fnal.gov/opensciencegrid/techgroups/tg-policy/vo-privilege
	* The Privilege project <a href="http://computing.fnal.gov/docs/products/voprivilege/">homepage</a> contains links to everything.  
	* Transition plan: http://computing.fnal.gov/docs/products/voprivilege/documents/transition-to-privilege.html
	* vo-admins@opensciencegrid.org - you can add yourself to this mail list by sending mail to listserv@opensciencegrid.org with the body of the mail being: add vo-admins 

---+++ Install GUMS
If you want to be able to start GUMS automatically, you need to be root.

First of all, make sure no old copy of gums is installed on the system you're using for the GUMS server. To do so, run:
<verbatim> 
ls $VDT_LOCATION/gums-service
</verbatim>
This should return "fail to find the file".  You should install GUMS from VDT %OSG_ITB_VDT_VERSION%. The full GUMS service description and a detailed manual is at the GUMS site:
http://grid.racf.bnl.gov/GUMS

Here we describe the pacman GUMS installation. You can choose to install GUMS manually, or learn more about the installation at 
http://grid.racf.bnl.gov/GUMS/guide_howto_installation.html

Setup pacman.  If you have a $VDT_LOCATION, go to it. If you don't, then create one and cd to it.  Run the pacman install command from there:
<verbatim>
# pacman -get http://www.cs.wisc.edu/vdt/vdt_135_cache:GUMS
</verbatim>

This will install both the GUMS server and the GUMS client. 
You'll want to make it so it starts/shuts down with the server.  The VDT will do this for you if you answer "y" to the question "Would you like to enable the GUMS server to run automatically?".  Answering "y" creates /etc/init.d/tomcat-5 which is a startup script.

Output:
<verbatim>
[root@cd-94372 osg-itb-015]# pacman -get http://www.cs.wisc.edu/vdt/vdt_135_cache:GUMS
Package [GUMS] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [GUMS-Questions] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [GUMS-Service] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [GUMS-Service-Questions] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [Tomcat-5] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [Tomcat-5-Questions] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [GUMS-Service-Extras] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [GUMS-Service-Extras-Questions] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Downloading [GUMS-1.3.5.tar.gz] from [www.cs.wisc.edu]...
			1/1 kB downloaded...										 
Installing package [GUMS-Questions].

If you would like, we can configure GUMS to start automatically 
at boot time.

Configuring the GUMS daemon requires 
  - changes to /etc/init.d (or /etc/rc.d/init.d)
  - starting up a MySQL server
  - starting up an Apache and Tomcat server

Would you like to enable the GUMS server to run automatically?
Choices: y (yes), n(no), s (skip this question) y
Downloading [GUMS-Service-1.3.5.tar.gz] from [www.cs.wisc.edu]...
			1/1 kB downloaded...										 
Installing package [GUMS-Service-Questions].
Downloading [Tomcat-5-1.3.5.tar.gz] from [www.cs.wisc.edu]...
			1/1 kB downloaded...										 
Installing package [Tomcat-5-Questions].
Downloading [jakarta-tomcat-5.0.28.tar.gz] from [www.cs.wisc.edu]...
		 10/10 MB downloaded...										 
Installing package [Tomcat-5].
Downloading [GUMS-Service-Extras-1.3.5.tar.gz] from [www.cs.wisc.edu]...
			1/1 kB downloaded...										 
Installing package [GUMS-Service-Extras-Questions].
Downloading [gums-service-extras-1-13.tar.gz] from [www.cs.wisc.edu]...
			2/2 MB downloaded...										 
Installing package [GUMS-Service-Extras].
Downloading [gums-service-1.0.1.tar.gz] from [www.cs.wisc.edu]...
			4/4 MB downloaded...										 
Installing package [GUMS-Service].
</verbatim>

Start tomcat-5 and apache:
<verbatim>
# $VDT_LOCATION/post-install/tomcat-5 start|stop
# $VDT_LOCATION/post-install/apache start|stop
</verbatim>

Under $VDT_LOCATION, 
	* apache/conf/httpd.conf got updated to include tomcat-5 installation of GUMS. 
	* There's a gums-service directory which is for tomcat-5 services provided by gums
	* There's a gums directory which contains the gums client and host scripts

If you answered "n" to the question or did the install as non-root,  you'll need to run the above 2 commands to start it up each time. 
You'll also need to set up the services with the following commands:
<verbatim>
	 vdt/setup/configure_apache --server y
	 vdt/setup/configure_tomcat --server y --version 5
</verbatim>

Verify you have access to your GUMS services. Go to your gums web interface at https://your-gums-server:8443/gums. You should get a screen up. You can't do anything until you configure GUMS.

---+++ Configure GUMS

	* Add yourself to the list of gum admins:
	  <verbatim>
		 Log into your gums host (as root)
		cd to $VDT_LOCATION/gums-service/sbin
		./addAdmin "your CN" 
	  </verbatim>
	This will give you admin access through  your gums web interface.  Note: you must run addAdmin from the sbin directory.  The VDT hopes to fix this in a future release.
	
	* A template gums.config file is installed in $VDT_LOCATION/tomcat/v5/webapps/gums/WEB-INF/classes/gums.config.  It is very bare.  To get some instant gratification, place the following into the file:

<verbatim>
		<groupMapping name='osg' accountingVo='osg' accountingDesc='OSG'>
		  <userGroup className='gov.bnl.gums.VOMSGroup'
					 url='https://grid03.uits.indiana.edu:8443/edg-voms-admin/vos/services/VOMSAdmin'
					 persistenceFactory='mysql' name='osg' voGroup="/vos/osg"
					 sslCertfile='/etc/grid-security/http/httpcert.pem'
					 sslKey='/etc/grid-security/http/httpkey.pem' ignoreFQAN="true"/>
		 <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
					 groupName='osg' />
	  </groupMapping>
</verbatim>

	* Now, go back to your gums web interface at https://your-gums-server:8443/gums, click on "Generate Grid Mapfile," enter the hostname of the gums server and click "Generate grid-mapfile."  You should get the text of a grid-mapfile formatted output.  For a more complete gums.config file, refer to Appendix A, below.
	* Connect your gums server to your VOMS server.  First you need to allow others (i.e., your gums server) to list the contents of your VO.  Point your browser at your VOMS server (https://your-voms:8443/edg-voms-admin/your-vo/webui/Admin/global-acl/edit.  Click on "Operation -> List", then click "Add new entry."  This will allow all outside users to view your VO.  
	* Add an entry for your VOMS server to your gums.config like the one above, modified accordingly.  There are lots of options that can be added to the gums.config file.  For full details see the following documents:  

The gums configuration guide:
http://grid.racf.bnl.gov/GUMS/guide_howto_configuration.html
and the gums.config reference:
http://grid.racf.bnl.gov/GUMS/guide_config_gums.html
to explore more options.

---+++ Full privilege site configuration

In this configuration, you will have:
	* One GUMS server per local account domain to manage the mapping from Grid identity (DN+attributes) to local username.  A local account domain is similar to an YP domain.
	* Your gatekeeper(s) configured with the PRIMA module to connect to the GUMS server for each gatekeeper request.
	* Your gatekeeper(s) configured with gums-host to retrieve the accounting inverse map in a cron job
So you need to:
	* Install one GUMS at your site for the grid account domain (e.g. YP domain)
	* Configure it (if the default OSG policy is not good enough for you)
	* Configure the PRIMA module on your gatekeeper(s)
	* Install and configure gums-host on your gatekeeper(s)

---+++ Compatibility site configuration

You do not _require_ the full privilege site configuration, but it's advisable. You will not be able to provide role based authorization in this configuration. Also, you will introduce delays since each gatekeeper will have to regenerate the map before implementing the new policy or allowing new users. You should fall back to this configuration if:
	* Your gatekeeper(s) or service must be configured through grid-mapfile (i.e. you have tools or services that manipolate that file directly, without passing through globus)
	* The idea of running GUMS 24/7 scares the hell out of you, and you'd rather approach with caution.
In this configuration, you will have:
	* One GUMS server per local account domain to manage the mapping from Grid identity (DN+attributes) to local username
	* Your gatekeeper(s) configured with gums-host to retrieve both maps in a cron job
So you need to:
	* Install GUMS at your site
	* Configure it (if the default OSG policy is not good enough for you)
	* Install and configure gums-host on your gatekeeper(s)

---+++ Understanding GUMS config

GUMS uses the gums.config file in this way.

A request comes in to map user DN="/DC=org/DC=doegrids/OU=People/CN=Gabriele Carcassi" FQAN="/atlas/usatlas" from gatekeeper "/DC=org/DC=doegrids/OU=Services/CN=mygk.usatlas.bnl.gov".

Gums will look through the hostGroups section to find a match. Say we have:
<verbatim>
  <hostGroups>
	 <!-- RHIC gatekeepers -->
	 <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='star*.*.bnl.gov' ... />
	 <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='phenix*.*.bnl.gov' ... />

	 <!-- ATLAS test gatekeeper -->
	 <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='mygk.usatlas.bnl.gov' ... />

	 <!-- Rest of ATLAS gatekeepers -->
	 <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='*.usatlas.bnl.gov' ... />
  </hostGroups>
</verbatim>

GUMS will go through that list *in that order*, and find the first match. In this case the match will be the third. Notice that if you put the third hostGroup last, it would never actually be used, because mygk.usatlas.bnl.gov matches also "*.usatlas.bnl.gov". This is typical when you have more broad default together with more specific cases. In this situation, the *default goes last*.

Let's look more closely at the hostGroup entry. In our case it is:
<verbatim>
	 <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='mygk.usatlas.bnl.gov' 
groups='atlasProd,usatlasPool,ivdglPool,uscmsPool,sdssPool,grasePool,osgPool,fmriPool,cdfPool,atlasPool,gridexPool' />
</verbatim>

GUMS will now take the list of groups, go through that list *in the order specified* and figure out if the given credential, DN="/DC=org/DC=doegrids/OU=People/CN=Gabriele Carcassi" FQAN="/atlas/usatlas", is part of that group. GUMS will check whether the credentials are part of atlasProd, if not usatlasPool, and so on, until either a match is found or the list ends. *The first match will define the map*, and the user will get mapped according to that map. As before, if you have broad default with more specific case, the *default goes last*.

Each group must be defined in the groupMappings section. For example, we have:
<verbatim>
	 <groupMapping name='atlasProd' accountingVo='usatlas' accountingDesc='ATLAS'>
		<userGroup className='gov.bnl.gums.VOMSGroup' url='https://vo.racf.bnl.gov:8443/edg-voms-admin/atlas/services/VOMSAdmin' persistenceFactory='mysql'
					  name='atlasProd' voGroup="/atlas" voRole="production" sslCertfile='/etc/grid-security/gumscert.pem' sslKey='/etc/grid-security/gumskey.pem' />
		<accountMapping className='gov.bnl.gums.GroupAccountMapper' groupName='usatlas1' />
	 </groupMapping>
</verbatim>

The userGroup defines "who is going to be part of this map". In this case, it's all the people defined in the ATLAS VO server that are part of /atlas and have a role production. We are not ignoring the FQAN, therefore they need to come is as '/atlas/Role=production'. In our example, DN="/DC=org/DC=doegrids/OU=People/CN=Gabriele Carcassi" FQAN="/atlas/usatlas" does not have the correct FQAN, therefore the user doesn't match. We proceed with the next group, usatlasPool.

<verbatim>
	 <groupMapping name='usatlasPool' accountingVo='usatlas' accountingDesc='ATLAS'>
		<userGroup className='gov.bnl.gums.VOMSGroup' url='https://vo.racf.bnl.gov:8443/edg-voms-admin/atlas/services/VOMSAdmin' persistenceFactory='mysql'
					  name='osgusatlas' voGroup="/atlas/usatlas" sslCertfile='/etc/grid-security/gumscert.pem' sslKey='/etc/grid-security/gumskey.pem' ignoreFQAN="true"/>
		<compositeAccountMapping>
		  <accountMapping className='gov.bnl.gums.AccountPoolMapper' persistenceFactory='mysql' name='bnlPool' />
		  <accountMapping className='gov.bnl.gums.GroupAccountMapper' groupName='usatlas1' />
		</compositeAccountMapping>
	 </groupMapping>
</verbatim>

This says all the people in the ATLAS VO, part of /atlas/usatlas, are part of this group. ignoreFQAN="true" means they do not need to present an FQAN to match this group. Our case, DN="/DC=org/DC=doegrids/OU=People/CN=Gabriele Carcassi" FQAN="/atlas/usatlas", is clearly part of /atlas/usatlas. Even if it came in with no FQAN, though, it would be a match.

Since there is a match, GUMS will use this map to determine the account. It looks at the account mapping, which happens to be composite: GUMS will go through the accountMapping *in that order*, until one returns a value. The first is a pool of account, which will return the already assigned account, or assign a new account. If it doesn't return any account, though, because there are no more accounts in the pool, the next accountMapping will be used, which always return the same account, usatlas1.

---+++ Troubleshooting

	* PRIMA 0.2 (from ItbRel015) can not interface to a GUMS server that runs with a service (vs host) certificate.  If you will be using PRIMA you need to switch the certificate used by gums:
<verbatim>
		# cd /etc/grid-security/http
		# mv httpkey.pem httpkey.pem.sav
		# mv httpcert.pem httpcert.pem.sav
		# cd ..
		# cp hostkey.pem http/httpkey.pem
		# cp hostcert.pem http/httpcert.pem
		# chown -R daemon:daemon http
</verbatim>
	
---+++ Appendix A: OSG-ITB gum.config groupmappings

<verbatim>
  <groupMappings>

		<groupMapping name='ivdgl' accountingVo='ivdgl' accountingDesc='iVDgL'>
		  <userGroup className='gov.bnl.gums.VOMSGroup'
url='https://grid03.uits.indiana.edu:8443/edg-voms-admin/vos/services/VOMSAdmin'
					  persistenceFactory='mysql' name='ivdgl' voGroup="/vos/services"
					  sslCertfile='/etc/grid-security/hostcert.pem'
					 sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>

		 <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
							 groupName='ivdgl' />
		</groupMapping>

		<groupMapping name='osg' accountingVo='osg' accountingDesc='OSG'>
		  <userGroup className='gov.bnl.gums.VOMSGroup'
url='https://grid03.uits.indiana.edu:8443/edg-voms-admin/vos/services/VOMSAdmin'
					  persistenceFactory='mysql' name='osg' voGroup="/vos/osg"
					  sslCertfile='/etc/grid-security/hostcert.pem'
					 sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		 <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
							 groupName='osg' />
		</groupMapping>

		<groupMapping name='fmri' accountingVo='fmri' accountingDesc='FMRI'>
		  <userGroup className='gov.bnl.gums.VOMSGroup'
url='https://grid03.uits.indiana.edu:8443/edg-voms-admin/vos/services/VOMSAdmin'
					  persistenceFactory='mysql' name='fmri' voGroup="/vos/fmri"
					  sslCertfile='/etc/grid-security/hostcert.pem'
					 sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		 <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
							 groupName='fmri' />
		</groupMapping>

		<groupMapping name='usatlas' accountingVo='usatlas' 
					 accountingDesc='ATLAS'>
		  <userGroup className='gov.bnl.gums.VOMSGroup'
url='https://vo.racf.bnl.gov:8443/edg-voms-admin/atlas/services/VOMSAdmin'
					 persistenceFactory='mysql'
					 name='usatlas' voGroup="/atlas" 
					 sslCertfile='/etc/grid-security/hostcert.pem'
					 sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		  <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
							 groupName='usatlas1' />
		</groupMapping>

		<groupMapping name='cdf' accountingVo='cdf' accountingDesc='CDF'>
			<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://testbed008.cnaf.infn.it:8443/edg-voms-admin/cdf/services/VOMSAdmin'
					persistenceFactory='mysql' name='cdf' voGroup="/cdf" 
					sslCertfile='/etc/grid-security/hostcert.pem'
					sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		  <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
							 groupName='cdf' />
		</groupMapping>
	 <groupMapping name='grase' accountingVo='grase' accountingDesc='GRASE'>
			<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://dylan.ccr.buffalo.edu:8443/edg-voms-admin/GRASE/services/VOMSAdmin'
				  persistenceFactory='mysql' name='grase' voGroup="/GRASE/grid"
				  sslCertfile='/etc/grid-security/hostcert.pem'
				  sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		<accountMapping className='gov.bnl.gums.GroupAccountMapper'
				  groupName='grase' />	 
		</groupMapping>

  <groupMapping name='uscms' accountingVo='uscms' accountingDesc='CMS'>
		<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://cmssrv17.fnal.gov:8443/edg-voms-admin/uscms/services/VOMSAdmin'
					 persistenceFactory='mysql'
					 name='uscms' voGroup="/uscms/gumstest"
sslCertfile='/etc/grid-security/hostcert.pem'
sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		<accountMapping className='gov.bnl.gums.GroupAccountMapper'
  groupName='uscms01' />
	 </groupMapping>

  <groupMapping name='sdss' accountingVo='sdss' accountingDesc='SDSS'>
		<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://hotdog63.fnal.gov:8443/edg-voms-admin-sdss/services/VOMSAdmin'
					 persistenceFactory='mysql'
					 name='sdss' voGroup="/sdss/grid3"
sslCertfile='/etc/grid-security/hostcert.pem'
sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		<accountMapping className='gov.bnl.gums.GroupAccountMapper'
  groupName='sdss' />
	 </groupMapping>

  <groupMapping name='gadu' accountingVo='gadu' accountingDesc='GADU'>
		<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://cmsvo.fnal.gov:8443/edg-voms-admin/gadu/services/VOMSAdmin'
					 persistenceFactory='mysql'
					 name='gadu' voGroup="/gadu/grid3users"
sslCertfile='/etc/grid-security/hostcert.pem'
sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		<accountMapping className='gov.bnl.gums.GroupAccountMapper'
  groupName='gadu' />
	 </groupMapping>

  </groupMappings>
</verbatim>

<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.LeighGrund - 19 Apr 2005

%STOPINCLUDE%

