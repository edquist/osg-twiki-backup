%META:TOPICINFO{author="AnneHeavey" date="1116523306" format="1.0" version="1.19"}%
%META:TOPICPARENT{name="ItbRel015"}%
<!-- This is the default OSG Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>%TOPIC%
%TOC%
%STARTINCLUDE%



---+++ Introduction
 
<a href="http://grid.racf.bnl.gov/GUMS/">GUMS</a> (Grid User Management System) is a Grid Identity Mapping Service. Identity mapping is necessary when a site's resources do not use grid credentials natively, but instead use a different mechanism to identify users, such as UNIX accounts or Kerberos principals. In these cases, the grid credential for each incoming job must be associated with an appropriate site credential. The GUMS server performs this mapping and communicates it to the gatekeepers. The gatekeepers are charged with enforcing the site mapping established by GUMS. The GUMS client (gatekeeper) portion consists of an admin tool for querying and/or changing the state of the server. Typically, the term "GUMS" refers to the server portion.

GUMS is particularly well suited to a heterogeneous environment with multiple gatekeepers; it allows the implemenation of a single site-wide usage policy, thereby providing better control and security for access to the site's grid resources. Using GUMS, individual resource administrators are able to assign different mapping policies to different groups of users and define groups of hosts on which the mappings will be used. GUMS was designed to integrate with the site's local information services (such as HR databases or LDAP).

To use GUMS with OSG ITB, it needs to be installed separately. For the OSG ITB we will be using two senerios, "Full Privilege" and the "Compatibility" site configurations.

More Information can be obtained from the following resources:

	* The full GUMS service description and a detailed manual is available at the GUMS site: http://grid.racf.bnl.gov/GUMS
	* OSG Plone https://plone3.fnal.gov/opensciencegrid/techgroups/tg-policy/vo-privilege
	* The Privilege project <a href="http://computing.fnal.gov/docs/products/voprivilege/">homepage</a> contains links to everything.  
	* Transition plan: http://computing.fnal.gov/docs/products/voprivilege/documents/transition-to-privilege.html
	* vo-admins@opensciencegrid.org - you can add yourself to this mail list by sending mail to listserv@opensciencegrid.org with the body of the mail being: add vo-admins 

---+++ Install GUMS
If you want to be able to start GUMS automatically, you need to do the install as root.

First of all, make sure no old copy of GUMS is installed on the system you're using for the GUMS server. To do so, run:
<verbatim> 
ls $VDT_LOCATION/gums-service
</verbatim>
This should return "fail to find the file".  You should install GUMS from VDT %OSG_ITB_VDT_VERSION%. 

Here we describe the pacman GUMS installation. You can choose to install GUMS manually, or learn more about the installation at 
http://grid.racf.bnl.gov/GUMS/guide_howto_installation.html

Set up pacman.  If you have a $VDT_LOCATION, go to it. If you don't, then create one and cd to it.  Run the pacman install command from there:
<verbatim>
  pacman -get http://www.cs.wisc.edu/vdt/vdt_%OSG_ITB_VDT_VERSION%_cache:GUMS
</verbatim>

Output:
<verbatim>
Package [GUMS] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [GUMS-Questions] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [GUMS-Service] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [GUMS-Service-Questions] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [Tomcat-5] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [Tomcat-5-Questions] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [GUMS-Service-Extras] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Package [GUMS-Service-Extras-Questions] found in [http://www.cs.wisc.edu/vdt/vdt_135_cache]...
Downloading [GUMS-1.3.5.tar.gz] from [www.cs.wisc.edu]...
			1/1 kB downloaded...										 
Installing package [GUMS-Questions].

If you would like, we can configure GUMS to start automatically 
at boot time.

Configuring the GUMS daemon requires 
  - changes to /etc/init.d (or /etc/rc.d/init.d)
  - starting up a MySQL server
  - starting up an Apache and Tomcat server

Would you like to enable the GUMS server to run automatically?
Choices: y (yes), n(no), s (skip this question) y
Downloading [GUMS-Service-1.3.5.tar.gz] from [www.cs.wisc.edu]...
			1/1 kB downloaded...										 
Installing package [GUMS-Service-Questions].
Downloading [Tomcat-5-1.3.5.tar.gz] from [www.cs.wisc.edu]...
			1/1 kB downloaded...										 
Installing package [Tomcat-5-Questions].
Downloading [jakarta-tomcat-5.0.28.tar.gz] from [www.cs.wisc.edu]...
		 10/10 MB downloaded...										 
Installing package [Tomcat-5].
Downloading [GUMS-Service-Extras-1.3.5.tar.gz] from [www.cs.wisc.edu]...
			1/1 kB downloaded...										 
Installing package [GUMS-Service-Extras-Questions].
Downloading [gums-service-extras-1-13.tar.gz] from [www.cs.wisc.edu]...
			2/2 MB downloaded...										 
Installing package [GUMS-Service-Extras].
Downloading [gums-service-1.0.1.tar.gz] from [www.cs.wisc.edu]...
			4/4 MB downloaded...										 
Installing package [GUMS-Service].
</verbatim>

This installs both the GUMS server and the GUMS client. 
You'll want to make it so it starts/shuts down with the server.  The VDT will do this for you if you answer "y" to the question "Would you like to enable the GUMS server to run automatically?" (shown in output).  Answering "y" creates <tt>/etc/init.d/tomcat-5</tt> which is a startup script.

Under $VDT_LOCATION, these changes occur:
	* If mysql, tomcat v5 and/or apache aren't already installed, it/they will get installed
	* <tt>apache/conf/httpd.conf</tt> gets updated to include tomcat-5 installation of GUMS. 
	* There's a gums-service directory which is for tomcat-5 services provided by GUMS
	* There's a gums directory which contains the GUMS client and host scripts
	* A mysql GUMS database is created, (currently) named gums_1_0

Start tomcat-5 and apache (stop them first if they've been running):
<verbatim>
 $VDT_LOCATION/post-install/tomcat-5 start
 $VDT_LOCATION/post-install/apache start
</verbatim>

If you answered "n" to the question or did the install as non-root,  you'll need to run the above 2 commands to start it up each time. 
You'll also need to set up the services with the following commands:
<verbatim>
	 vdt/setup/configure_apache --server y
	 vdt/setup/configure_tomcat --server y --version 5
</verbatim>

Verify that you have access to your GUMS services. Go to your GUMS web interface (in a certificate-enabled browser) at <tt>https://your-gums-server:8443/gums</tt>. You should get a screen up. You won't be able to do anything until you configure GUMS.

---+++ Configure GUMS
Make sure you log into your GUMS host as root.  

	* Add yourself to the list of GUMS admins. If you have a root mysql password, you'll need it for this step.  If you don't have one, it won't be required. Run the following commands:
		 
		 <verbatim>
		ssh -l root your.host  #login as root however you like
		cd $VDT_LOCATION/gums-service/sbin
		./addAdmin "your DN"	#quotes needed due to spaces in DN string
	  </verbatim>
	This will give you admin access through your GUMS web interface.  Note: you must run <tt>addAdmin</tt> from the <tt>gums-service/sbin</tt> directory.  This may be fixed in a future VDT release.

Output of the addAdmin command:
<verbatim>
WARNING: You must have created the database before running this script!

Adding the following DN to the local database:
Certificate DN for administrator: "/DC=org/DC=doegrids/OU=People/CN=Anne Heavey 830711"

Is this correct? (Enter 'yes' to proceed)
yes

Adding the admin:
Enter the root mysql password

</verbatim>
If there's no password set, it will finish by itself.  Ignore the warning; the database got created during the installation.

Go to your gums web interface at <tt>https://your-gums-server:8443/gums</tt>. Click "Generate Grid Mapfile".  Enter anything (e.g., xyz) as host computer just to test that the process runs.  You should get "null" as a response.  If you hadn't added yourself as an admin, you'd get:

	  <verbatim>
	  GUMS encountered an error
	  Error Type: gov.bnl.gums.admin.AuthorizationDeniedException
	  Error Message: Authorization denied
	  </verbatim>	
	* A default gums.config file is installed in 
<verbatim>
$VDT_LOCATION/tomcat/v5/webapps/gums/WEB-INF/classes/gums.config
</verbatim>
(Note that <tt>$VDT_LOCATION/gums</tt> is symlinked to <tt>/$VDT_LOCATION/gums-service/var/war</tt>).
 This file has two groupMapping elements (i.e., groupMapping with no "s" at the end), both of which need to be replaced.  They fall inside the one <nop>groupMappings element (with an "s").

To get some instant gratification, first replace the groupMapping elements with the following element:
<verbatim>
		<groupMapping name='osg' accountingVo='osg' accountingDesc='OSG'>
		  <userGroup className='gov.bnl.gums.VOMSGroup'
					 url='https://grid03.uits.indiana.edu:8443/edg-voms-admin/vos/services/VOMSAdmin'
					 persistenceFactory='mysql' name='osg' voGroup="/vos/osg"
					 sslCertfile='/etc/grid-security/http/httpcert.pem'
					 sslKey='/etc/grid-security/http/httpkey.pem' ignoreFQAN="true"/>
		 <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
					 groupName='osg' />
	  </groupMapping>
</verbatim>
Note that this sample groupMapping element points to a voms server at Indiana and to the "vos/osg" group, that it uses group account mapping (the className attribute of accountMapping contains <tt>GroupAccountMapper</tt>), and the group account which it maps to is "osg" (the groupName attribute of accountMapping).

Next, make a couple of other changes to the file:
	* In the hostGroup element, change the "groups" attribute to 'osg' to match the inserted element (delete groupA and groupB) and change the wildcard attribute value from '*.site.com' to the CE or gatekeeper host(s) that the group mappings apply to (*.fnal.gov shown in example below).  As indicated, you can use a wildcard to specify a set of hosts.
<verbatim>
	 <hostGroup className='gov.bnl.gums.WildcardHostGroup'  wildcard='*.fnal.gov' groups='osg' />
</verbatim>
	* On your GUMS web interface at <tt>https://your-gums-server:8443/gums</tt>, click Update users.
This retrieves the members of the "vos/osg" group from the Indiana VOMS server, and inserts them into the mysql database.
	* Still on your GUMS web interface, click on "Generate Grid Mapfile," enter the hostname of the GUMS server (or whatever portion of the hostname is needed for matching, according to your use of the wildcard) and click "Generate grid-mapfile."  You should get the text of a grid-mapfile formatted output (as of this writing):
<verbatim>
#---- members of vo: osg ----#
"/DC=org/DC=doegrids/OU=People/CN=Alexis Rodriguez 233072" osg
"/DC=org/DC=doegrids/OU=People/CN=Andrew Zahn 730598" osg
"/DC=org/DC=doegrids/OU=People/CN=Craig Phillip Prescott 50911" osg
</verbatim> 

If you get errors and need to look in log files, they're kept under <tt>$VDT_LOCATION/tocmat/v5/logs</tt>.  The first one to check is the <tt>gums-service-admin.log</tt>, and second the <tt>gums-service-developer.log</tt>.

A few notes about maintenance:
	* The gums.config needs to be maintained such that it includes mappings for all active VOs in OSG.  More on this later... shall we call it GumsConfig?
	* You'll need to be notified of changes to the list of VOs in order to maintain this.  Go to $VDT_LOCATION/tomcat/v5/webapps/gums/WEB-INF/classes/log4j.properties and look at the bottom of the file. Here's where you set up notification. Look for these lines:
<verbatim>
  #log4j.appender.mail=org.apache.log4j.net.SMTPAppender
  #log4j.appender.mail.from=gums@site.com
  #log4j.appender.mail.subject=gums e-mail alert
  #log4j.appender.mail.SMTPHost=smtp.site.com
  #log4j.appender.mail.to=admin@site.com
  #log4j.appender.mail.layout=org.apache.log4j.PatternLayout
  #log4j.appender.mail.layout.ConversionPattern=%d{DATE} [%-5p]: %m%n
</verbatim>
Uncomment them and set the "from", "SMTPHost", and "to" lines to the right values for your site.  "From" should be the username under which GUMS runs.  Here is a sample:
<verbatim>
  log4j.appender.mail=org.apache.log4j.net.SMTPAppender
  log4j.appender.mail.from=daemon@cd-94372.dhcp.fnal.gov
  log4j.appender.mail.subject=gums e-mail alert
  log4j.appender.mail.SMTPHost=smtp.fnal.gov
  log4j.appender.mail.to=aheavey@fnal.gov
  log4j.appender.mail.layout=org.apache.log4j.PatternLayout
  log4j.appender.mail.layout.ConversionPattern=%d{DATE} [%-5p]: %m%n
</verbatim>
Towards the top of the same file (line 22) under the heading "Log for GUMS administrator", you'll see:
<verbatim>
  log4j.logger.gums.resourceAdmin=INFO, adminFile
  #log4j.logger.gums.resourceAdmin=INFO, mail, adminFile
</verbatim>
Comment out the first line and uncomment the second so that the resource info that you need to get comes to you via email in addition to going to a file.
	* To set the time interval for GUMS to read info from VOMS and generate a grid mapfile, go to <tt>$VDT_LOCATION/gums-service/var/war/WEB-INF/web.xml</tt>. The third line from the bottom contains the interval in minutes:
<verbatim>
 <env-entry-value>720</env-entry-value>
</verbatim>
You may want to adjust the value.
After you change these files, stop and restart tomcat-5.  To test for notification, force an error.  E.g., in gums.config, give an incorrect groupMapping name:  
<verbatim>
	  <groupMapping name='osg_anne' accountingVo='osg' accountingDesc='OSG'>
</verbatim>

Now go to the GUMS-Admin UI <tt>https://your.gums.host:8443/gums</tt>, click Update Members. You should get an error which (among other text) should contain "Error Message: GUMS is misconfigured: please check the resource admin log for errors, and the gums.config file."
You should receive one or more email notifications as well. (The error shown above generated three messages.)  One of them contains the solution: 

"19 May 2005 10:31:00,169 [FATAL]: The configuration wasn't read properly. GUMS is not operational: Error at (32, 97: The groupMapping 'osg' is used within a hostGroup, but it was not defined."

Don't forget to fix your error now!
---+++Add your VO

Add your own VO now.

********************Anne stopped here 5/19/05 ************

For a more complete gums.config file, refer to Appendix A, below.
	* Connect your gums server to your VOMS server.  First you need to allow others (i.e., your gums server) to list the contents of your VO.  Point your browser at your VOMS server (https://your-voms:8443/edg-voms-admin/your-vo/webui/Admin/global-acl/edit.  Click on "Operation -> List", then click "Add new entry."  This will allow all outside users to view your VO.  
	* Add an entry for your VOMS server to your gums.config like the one above, modified accordingly.  There are lots of options that can be added to the gums.config file.  For full details see the following documents:  

The gums configuration guide:
http://grid.racf.bnl.gov/GUMS/guide_howto_configuration.html
and the gums.config reference:
http://grid.racf.bnl.gov/GUMS/guide_config_gums.html
to explore more options.

---+++ Full privilege site configuration


In this configuration, you will have:
	* One GUMS server per local account domain to manage the mapping from Grid identity (DN+attributes) to local username.  A local account domain is similar to an YP domain.
	* Your gatekeeper(s) configured with the PRIMA module to connect to the GUMS server for each gatekeeper request.
	* Your gatekeeper(s) configured with gums-host to retrieve the accounting inverse map in a cron job
So you need to:
	* Install one GUMS at your site for the grid account domain (e.g. YP domain)
	* Configure it (if the default OSG policy is not good enough for you)
	* Configure the PRIMA module on your gatekeeper(s)
	* Install and configure gums-host on your gatekeeper(s)

---+++ Compatibility site configuration

You do not _require_ the full privilege site configuration, but it's advisable. You will not be able to provide role based authorization in this configuration. Also, you will introduce delays since each gatekeeper will have to regenerate the map before implementing the new policy or allowing new users. You should fall back to this configuration if:
	* Your gatekeeper(s) or service must be configured through grid-mapfile (i.e. you have tools or services that manipolate that file directly, without passing through globus)
	* The idea of running GUMS 24/7 scares the hell out of you, and you'd rather approach with caution.
In this configuration, you will have:
	* One GUMS server per local account domain to manage the mapping from Grid identity (DN+attributes) to local username
	* Your gatekeeper(s) configured with gums-host to retrieve both maps in a cron job
So you need to:
	* Install GUMS at your site
	* Configure it (if the default OSG policy is not good enough for you)
	* Install and configure gums-host on your gatekeeper(s)

---+++ Understanding GUMS config
(Anne editing 5/19)
GUMS uses the gums.config file in this way.

A request comes in to map user DN="/DC=org/DC=doegrids/OU=People/CN=Gabriele Carcassi" FQAN="/atlas/usatlas" from gatekeeper "/DC=org/DC=doegrids/OU=Services/CN=mygk.usatlas.bnl.gov".

Gums will first look through the hostGroups section to find a match to the gatekeeper CN. Say we have:
<verbatim>
  <hostGroups>
	 <!-- RHIC gatekeepers -->
	 <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='star*.*.bnl.gov' ... />
	 <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='phenix*.*.bnl.gov' ... />

	 <!-- ATLAS test gatekeeper -->
	 <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='mygk.usatlas.bnl.gov' ... />

	 <!-- Rest of ATLAS gatekeepers -->
	 <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='*.usatlas.bnl.gov' ... />
  </hostGroups>
</verbatim>

GUMS will go through that list *in that order*, and find the first match to the "wildcard" attribute. In this case, we match the third hostGroup specification. Notice that if you put the third hostGroup last, it would never actually be used, because mygk.usatlas.bnl.gov also matches "*.usatlas.bnl.gov", which covers a broader range of hosts. If you have broader match together with more specific cases, the broader one *goes last*.

Let's look more closely at the hostGroup entry; there are additional attributes, in particular "groups".  This attribute refers to group mappings. In our case it is:
<verbatim>
	 <hostGroup className="gov.bnl.gums.WildcardHostGroup" wildcard='mygk.usatlas.bnl.gov' 
groups='atlasProd,usatlasPool,ivdglPool, ...' />
</verbatim>

GUMS will now go through the list of groups (actually group mappings) *in the order specified* and take the first one that matches the given credentials.
GUMS will check whether the credentials are part of atlasProd; if not, then usatlasPool, and so on, until either a match is found or the list ends. *The first match will define the map*, and the user will get mapped accordingly. As before, if you have both a broad default and a more specific case, the *default goes last*.

In a correct configuration, each group must be defined in the groupMappings section in a groupMapping element. The first group mapping GUMS checks is atlasProd.  A groupMapping element contains userGroup elements.
<verbatim>
	 <groupMapping name='atlasProd' accountingVo='usatlas' accountingDesc='ATLAS'>
		<userGroup className='gov.bnl.gums.VOMSGroup' url='https://vo.racf.bnl.gov:8443/edg-voms-admin/atlas/services/VOMSAdmin' persistenceFactory='mysql'
					  name='atlasProd' voGroup="/atlas" voRole="production" sslCertfile='/etc/grid-security/gumscert.pem' sslKey='/etc/grid-security/gumskey.pem' />
		<accountMapping className='gov.bnl.gums.GroupAccountMapper' groupName='usatlas1' />
	 </groupMapping>
</verbatim>

The userGroup defines "who is going to be part of this map". 
Unless the attribute 'ignoreFQAN="true"' is present, the FQAN must match a userGroup voGroup, and if defined, a voRole and/or voCapability(?). The groupMapping "atlasProd" has one userGroup, whose voGroup is "/atlas". The voRole of "production" is required. There is no attribute '"ignoreFQAN="true"', so the FQAN has to match '/atlas/Role=production'.	Our sample FQAN has only a name in it.  It doesn't match.
 We proceed with the next group, usatlasPool.

<verbatim>
	 <groupMapping name='usatlasPool' accountingVo='usatlas' accountingDesc='ATLAS'>
		<userGroup className='gov.bnl.gums.VOMSGroup' url='https://vo.racf.bnl.gov:8443/edg-voms-admin/atlas/services/VOMSAdmin' persistenceFactory='mysql'
					  name='osgusatlas' voGroup="/atlas/usatlas" sslCertfile='/etc/grid-security/gumscert.pem' sslKey='/etc/grid-security/gumskey.pem' ignoreFQAN="true"/>
		<compositeAccountMapping>
		  <accountMapping className='gov.bnl.gums.AccountPoolMapper' persistenceFactory='mysql' name='bnlPool' />
		  <accountMapping className='gov.bnl.gums.GroupAccountMapper' groupName='usatlas1' />
		</compositeAccountMapping>
	 </groupMapping>
</verbatim>

This says all the people in the ATLAS VO (where is this specified? userGroup name is osgusatlas -- that's different... AH), part of /atlas/usatlas, are part of this group. The attribute 'ignoreFQAN="true"' means a matching FQAN is not required. Our case, DN="/DC=org/DC=doegrids/OU=People/CN=Gabriele Carcassi" FQAN="/atlas/usatlas", is clearly part of /atlas/usatlas. Even if it came in with no FQAN, however, it would still be a match.

Since there is a match, GUMS will use this groupMapping element to determine the account. It looks at the accountMapping, which happens to be composite (there's a pool of accounts and a group account): GUMS will go through the accountMapping elements *in the order listed*, until one returns a value. 

The first is a pool of accounts; if it has any available accounts left, it will return either a previously assigned account, or it will assign a new account to this user. If its pool of accounts is exhausted, it will not return an account.  In this case, the next accountMapping element will be used; this one always maps to the same group account, usatlas1.

(anne ends 5/19)
---+++ Troubleshooting

	* PRIMA 0.2 (from ItbRel015) can not interface to a GUMS server that runs with a service (vs host) certificate.  If you will be using PRIMA you need to switch the certificate used by gums:
<verbatim>
		# cd /etc/grid-security/http
		# mv httpkey.pem httpkey.pem.sav
		# mv httpcert.pem httpcert.pem.sav
		# cd ..
		# cp hostkey.pem http/httpkey.pem
		# cp hostcert.pem http/httpcert.pem
		# chown -R daemon:daemon http
</verbatim>
	
---+++ Appendix A: OSG-ITB gum.config groupmappings

<verbatim>
  <groupMappings>

		<groupMapping name='ivdgl' accountingVo='ivdgl' accountingDesc='iVDgL'>
		  <userGroup className='gov.bnl.gums.VOMSGroup'
url='https://grid03.uits.indiana.edu:8443/edg-voms-admin/vos/services/VOMSAdmin'
					  persistenceFactory='mysql' name='ivdgl' voGroup="/vos/ivdgl"
					  sslCertfile='/etc/grid-security/hostcert.pem'
					 sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>

		 <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
							 groupName='ivdgl' />
		</groupMapping>

		<groupMapping name='osg' accountingVo='osg' accountingDesc='OSG'>
		  <userGroup className='gov.bnl.gums.VOMSGroup'
url='https://grid03.uits.indiana.edu:8443/edg-voms-admin/vos/services/VOMSAdmin'
					  persistenceFactory='mysql' name='osg' voGroup="/vos/osg"
					  sslCertfile='/etc/grid-security/hostcert.pem'
					 sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		 <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
							 groupName='osg' />
		</groupMapping>

		<groupMapping name='fmri' accountingVo='fmri' accountingDesc='FMRI'>
		  <userGroup className='gov.bnl.gums.VOMSGroup'
url='https://grid03.uits.indiana.edu:8443/edg-voms-admin/vos/services/VOMSAdmin'
					  persistenceFactory='mysql' name='fmri' voGroup="/vos/fmri"
					  sslCertfile='/etc/grid-security/hostcert.pem'
					 sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		 <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
							 groupName='fmri' />
		</groupMapping>

		<groupMapping name='usatlas' accountingVo='usatlas' 
					 accountingDesc='ATLAS'>
		  <userGroup className='gov.bnl.gums.VOMSGroup'
url='https://vo.racf.bnl.gov:8443/edg-voms-admin/atlas/services/VOMSAdmin'
					 persistenceFactory='mysql'
					 name='usatlas' voGroup="/atlas" 
					 sslCertfile='/etc/grid-security/hostcert.pem'
					 sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		  <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
							 groupName='usatlas1' />
		</groupMapping>

		<groupMapping name='cdf' accountingVo='cdf' accountingDesc='CDF'>
			<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://testbed008.cnaf.infn.it:8443/edg-voms-admin/cdf/services/VOMSAdmin'
					persistenceFactory='mysql' name='cdf' voGroup="/cdf" 
					sslCertfile='/etc/grid-security/hostcert.pem'
					sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		  <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
							 groupName='cdf' />
		</groupMapping>
	 <groupMapping name='grase' accountingVo='grase' accountingDesc='GRASE'>
			<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://dylan.ccr.buffalo.edu:8443/edg-voms-admin/GRASE/services/VOMSAdmin'
				  persistenceFactory='mysql' name='grase' voGroup="/GRASE/grid"
				  sslCertfile='/etc/grid-security/hostcert.pem'
				  sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		<accountMapping className='gov.bnl.gums.GroupAccountMapper'
				  groupName='grase' />	 
		</groupMapping>

  <groupMapping name='uscms' accountingVo='uscms' accountingDesc='CMS'>
		<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://cmssrv17.fnal.gov:8443/edg-voms-admin/uscms/services/VOMSAdmin'
					 persistenceFactory='mysql'
					 name='uscms' voGroup="/uscms/gumstest"
sslCertfile='/etc/grid-security/hostcert.pem'
sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		<accountMapping className='gov.bnl.gums.GroupAccountMapper'
  groupName='uscms01' />
	 </groupMapping>

  <groupMapping name='sdss' accountingVo='sdss' accountingDesc='SDSS'>
		<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://hotdog63.fnal.gov:8443/edg-voms-admin-sdss/services/VOMSAdmin'
					 persistenceFactory='mysql'
					 name='sdss' voGroup="/sdss/grid3"
sslCertfile='/etc/grid-security/hostcert.pem'
sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		<accountMapping className='gov.bnl.gums.GroupAccountMapper'
  groupName='sdss' />
	 </groupMapping>

  <groupMapping name='gadu' accountingVo='gadu' accountingDesc='GADU'>
		<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://cmsvo.fnal.gov:8443/edg-voms-admin/gadu/services/VOMSAdmin'
					 persistenceFactory='mysql'
					 name='gadu' voGroup="/gadu/grid3users"
sslCertfile='/etc/grid-security/hostcert.pem'
sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		<accountMapping className='gov.bnl.gums.GroupAccountMapper'
  groupName='gadu' />
	 </groupMapping>

<groupMapping name='gridex' accountingVo='gridex' accountingDesc='GridEX'>
		<userGroup className='gov.bnl.gums.VOMSGroup'
url='https://grid03.uits.indiana.edu:8443/edg-voms-admin/vos/services/VOMSAdmin'
					 persistenceFactory='mysql'
					 name='gridex' voGroup="/vos/gridex"
sslCertfile='/etc/grid-security/hostcert.pem'
sslKey='/etc/grid-security/hostkey.pem' ignoreFQAN="true"/>
		<accountMapping className='gov.bnl.gums.GroupAccountMapper'
  groupName='gridex' />
	 </groupMapping>

  </groupMappings>
</verbatim>

<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.LeighGrund - 19 Apr 2005
-- Main.AnneHeavey - 17 May 2005
-- Main.JohnWeigand - 17 May 2005

%STOPINCLUDE%

