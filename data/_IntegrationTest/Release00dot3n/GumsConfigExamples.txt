%META:TOPICINFO{author="KyleGross" date="1476285880" format="1.1" reprev="1.10" version="1.10"}%
%META:TOPICPARENT{name="GumsAdmins"}%
<!-- This is the default OSG Trash/Trash/Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>Some gums.config Examples
%TOC%
%STARTINCLUDE%


---++Introduction
This  page illustrates some possible authorization configurations possible in the gums.config file.
To minimize confusion (especially by the author), only those attributes relevant to the desired behavour will be shown.
The _missing_ elements/attributes are still required and are:
<center>
| *Element* | *Attribute* |
|groupMapping| accounting, accountDesc|
|userGroup| className, url, persistenceFactory, sslCertfile, sslKey|
</center>
   
---++Grid vs. Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfoMS proxy authorization
The key attribute to authorization for the basic grid proxy (Globus grid-proxy-init with no extended attributes) or the Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfoMS proxy (voms-proxy-init with extended attributes)  is based on the ==ignoreFQAN== attribute of the <b>userGroup</b> element.

An ==ignoreFQAN== value of ==true== will only take into account the user's DN, as shown below, regardless of whether the proxy contains extended attributes (voms proxy) or not (grid proxy).  In the example below, all members in the ==/uscms== group  will be assigned using the same account mapping rules regardless of the proxy type (voms/grid) used.
<verbatim>
<groupMappings >
  <groupMapping name=uscms ..... > 
     <userGroup className='gov.bnl.gums.VOMSGroup'
        name='uscms'
        voGroup='/uscms'
        ignoreFQAN='true'
      />
     <accountMapping ....... />
  </groupMapping>
</groupMappings>
</verbatim>
If the ==ignoreFQAN==  attribute was ==false==, then only those users in the ==/uscms== group  using   voms proxies would be assigned an account.  Those users using grid proxies would be ==Denied== authorization.



---+++Supporting both grid and voms proxy
To support both the grid and voms type proxies, you need to create 2 ==groupMapping(s)==, one with ==ignoreFQAN='true'== (for grid) and one with 
==ignoreFQAN='false'== (for voms).
<verbatim>
<groupMappings >
  <groupMapping name='uscmsGRID' ..... > 
     <userGroup className='gov.bnl.gums.VOMSGroup'
        name='uscmsGRID'
        voGroup='/uscms'
        ignoreFQAN='true'
      />
     <accountMapping ....... />
  </groupMapping>
</groupMappings>

<groupMappings >
  <groupMapping name='uscmsVOMS' ..... > 
     <userGroup className='gov.bnl.gums.VOMSGroup'
        name='uscmsVOMS'
        voGroup='/uscms'
        ignoreFQAN='true'
      />
     <accountMapping ....... />
  </groupMapping>
</groupMappings>

<hostGroups>
   <hostGroup.. wildcard='your_ce_host' groups='uscmsVOMS,uscmsGRID' />
  </hostGroups>
</verbatim>


---++Group vs Pool Account mapping
==Group Mappings==  are used for mapping all users of a Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo/subgroup to a single account.<br>
==Pool Account Mappings== are used for  mapping each  user to  unique individual accounts.

The key attributes to this are in the ==account Mapping== element with the ==className== attribute  specified as the ==GroupAccountMapper== class and the ==groupName== attribute specifying the ==UNIX user acccount== assigned.

All users in the group ==/uscms== of the Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo will be mapped to the ==uscms01== account.
<verbatim>
<groupMappings >
  <groupMapping name=uscms ..... > 
     <userGroup className='gov.bnl.gums.VOMSGroup'
         name='uscms01'
         voGroup='/uscms'
         ignoreFQAN='true'  .......
      />
     <accountMapping className='gov.bnl.gums.GroupAccountMapper' 
         groupName='uscms01' />
  </groupMapping>
</groupMappings>
</verbatim>



---++CE-1 accepts cms, atlas and sdss users .... CE-2 accepts only cms and atlas users
CE-1 gatekeepers authorizes cms, atlas and sdss accounts.<br>
CE-2 gatekeeper authorizes only cms and atlas.<br>
Both gatekeepers will use the same account mappings for cms and atlas.<br>
  <verbatim>
<groupMappings ... >
  <groupMapping name=cms ....  > </groupMapping>
  <groupMapping name=atlas...   > </groupMapping>
  <groupMapping name=sdss....  > </groupMapping>
</groupMappings>

<hostGroups>
   <hostGroup.. wildcard='ce1.domain' groups='cms,atlas,sdss' />
   <hostGroup.. wildcard='ce2.domain' groups='cms,atlas' />
</hostGroups>
  </verbatim>

---++General Guidelines
The <b>gums.config</b> can get pretty cumbersome to edit and verify for correctness, especially as the number of VOs and the use of extended attributes increases.

Here is a short list of general guidelines for some of the attributes that can cause some subtle mapping problems.  Treat it as a KISS set of guidelines.
 <OL>
  <LI>The ==groupMapping==     ==name==     attribute  must be unique for all ==groupMapping== elements.
        <UL><LI>This value is used in the ==hostGroup==     ==groups==   attribute..
           All  ==groupMapping== elements must be accounted for in one of the ==hostGroup== elements or
            a miconfiguration error will occur. 
          <LI>If you have more than 1 ==groupMapping== with the same ==name==, when GUMS
              performs the update from all the Trash/Trash/Trash/Trash/VirtualOrganizations/VOInfo VOMS servers, it will process the first one it finds
               populating the database and then when it hits the 2nd with the same name, it will
               overwrite the 1st.  
          </UL>

  <LI>Make the ==userGroup== element  ==name==  attribute the  same as the ==groupMapping==
          ==name== attribute.<br>
          <UL><LI>Currently, there can be only one ==userGroup== for each ==groupMapping==.  The 
            ==userGroup name== populates the ==userGroup== column of the ==User== table in the
            GUMS database.  This will allow you to more easily correlate the database ==User== table entry
            with the configuration entries.
          </UL>

  <LI>The ==hostGroup groups==  attribute must contain all ==groupMapping==  ==name== 
           attribute values.
         <UL><LI>If not, a misconfiguration error will likely occur</UL>

  <LI>When you populate the ==hostGroup groups==    attribute, the ==groupMapping==
           for voms proxies <b>must</b> precede the ==groupMapping== for grid proxies.  
           If not, all your authorizations will be based on grid proxies.
           The extended attributes of voms proxies will never get evaluated.  
       <UL><LI>The order of the names in the ==hostGroup groups==    attributes is the order
               in which GUMS evaluates an authorization request.
          <LI>If you are supporting both voms and grid proxies, you should have 2 ==groupMapping==
          elements: one with ==ignoreFQAN='true'==  (grid proxy) and one with ==ignoreFQAN='false'==  
           (voms proxy). 
          <LI>To  facillitate identifying these in the ==hostGroup groups==   attribute, a naming 
          convention for the  ==groupMapping name==    attribute might be ==[vo_name]-voms== 
          and ==[vo_name]-grid==.
      </UL>
          

  <LI>In all of the above cases where you are creating a name, <b>do not</b> use case sensitivity to
           distinguish.  In several cases, these ==names== are used in the !MySql GUMS database and
            'MyVO' is treated the same as 'myvo' on queries and updates.
         
</OL>

Remember, this is just a general set of guidelines.
-- Main.JohnWeigand - 08 Jul 2005


<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.JohnWeigand - 08 Jun 2005<br>
-- Main.JohnWeigand - 08 Jul 2005 - added the General Guidelines TOC entry<br>

%STOPINCLUDE%
