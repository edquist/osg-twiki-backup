%META:TOPICINFO{author="AnneHeavey" date="1117131896" format="1.0" version="1.16"}%
%META:TOPICPARENT{name="OSGCEInstallGuide"}%
<!-- This is the default OSG Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>%TOPIC%
%TOC%
%STARTINCLUDE%


---++Introduction

The Authorization system determines who can access your resources and how. A good description of the available authorization scenarios can be found under http://grid.racf.bnl.gov/GUMS/guide_architecture.html (see the heading "GUMS in the grid architecture").  Of those discussed, OSG supports three, namely: Grid3, Compatibility, and Full Privilege.  Here's a brief explanation of each:

	* *Grid3*: Authorization is performed via the grid mapfile on the gatekeeper. The grid mapfile is either created manually on each gatekeeper, or created by a VOMS Admin installation.  GUMS is not used. Synchronizing all the grid mapfiles is difficult in this case.  You may prefer this configuration if:
		* You are a small site (one gatekeeper) and,
		* You deal with a small set of fairly static VOs

	* *Compatibility*: Authorization is still performed via the grid mapfile on the gatekeeper, however the file is created by GUMS. GUMS polls VOMS Admin periodically and creates/updates the grid mapfile. If the site has only one GUMS server (one communication point to VOMS) centralized mapping is enabled. Given the GUMS configuration options, account pools (many accounts, one-to-one DN-to-account mapping) can be implemented as well as group accounts (many-to-one DN-to-account mapping).  You should consider this configuration if:
		* Your gatekeeper(s) or service must be configured through grid-mapfile (i.e. you have tools or services that manipulate this file directly, without passing through globus)
		* You'd rather approach with caution than jump right into running GUMS 24/7.



	* *Full Privilege*: This scenario implements the PRIMA authorization module with GUMS -- no more grid mapfile.  The gatekeeper uses a callout to PRIMA upon receipt of each request, PRIMA forwards the request to the GUMS web service which performs the dynamic mapping. PRIMA can process FQANs, thus enabling mapping based on VO groups and roles as defined in VOMS.

The flowchart below will help you decide what kind of configuration you should setup.

<verbatim>
				 |
				 |
  --------------------------						----------------------
  | Is your site going to  |		  YES!		| Refer to			  |
  | support role-based	  |----------------->| Full privilege	  |
  | authorization?			|						| configuration		|
  --------------------------						----------------------
				 |														 
			 NO |
				 |
  ------------------------------					--------------------------
  | Do you want to use account |	  YES!		| Refer to compatibility |
  | pools at your site?		  |-------------->| configuration			 |
  ------------------------------					--------------------------
				 |														 
			 NO |
				 |
  ------------------------------					--------------------------
  | Would you like to use one  |	  YES!		| Refer to compatibility |
  | gridmap file to control	 |-------------->| configuration			 |
  | all your gatekeepers?		|					--------------------------
  ------------------------------					
				 |
			 NO |
				 |
  ----------------------- 
  | Refer to Grid3		|
  | configuration		 |
  -----------------------
</verbatim>

We'll present the "how to" information in order of simplest (Grid3) to most sophisticated (full privilege) so that you can implement step-by-step and test as you go, if you like.

---++ Grid3 configuration

In this configuration, you will need the EDG mkgridmap daemon running on your gatekeeper to create the grid-mapfile (discussed below). If you followed the ITB installation instructions this configuration gets set up for you automatically.  To test it, see the instructions at OSGCEInstallGuide#Authorizing_Users_Test_Configura.

---+++ Setting up edg-mkgridmap for local users

You probably want to keep some portion of your current gridmapfile (at least your own entry) as locally known users so that you won't get locked out should there ever be a problem with a VOMS server.

The *edg-mkgridmap* script uses a configuration file to dictate 
  its behavior. This config file is located at
  <tt>$VDT_LOCATION/edg/etc/edg-mkgridmap.conf</tt>.

  The *edg-gridmapfile-upgrade* daemon has a similar configuration
  file <tt>$VDT_LOCATION/edg/etc/edg-gridmapfile-upgrade.conf</tt>.

  One of the parameters specifies a _local_ *grid-mapfile* that
  will be added to the output of the *edg-mkgridmap* command (the set of DNs returned from all the VOMS).  You need to populate this file; it's at $VDT_LOCATION/edg/etc/grid-mapfile-local.

Now, to create this local portion:

	* Set the *GRIDMAP_LOCAL_FILE* variable in 
	 <tt>$VDT_LOCATION/edg/etc/edg-gridmapfile-upgrade.conf</tt> as follows:

		==GRIDMAP_LOCAL_FILE=$VDT_LOCATION/edg/etc/grid-mapfile-local==

(Warning: if you put in a bad address, it won't find the file, but it fails silently)

	* %RED%(This next step may not be necessary. Does anyone know if it is? JW and AH 5/26)%ENDCOLOR% Add this new directive to the end of the *$VDT_LOCATION/edg/etc/edg-mkgridmap.conf* (use the actual path, not the $VDT_LOCATION variable):

<tt><b>gmf_local <i>/path/to/VDT_LOCATION</i>/edg/etc/grid-mapfile-local</b></tt>

(If you put in a bad address, this one does give error message.) 

  Now local *grid-mapfile* entries to this file will be 
  added every time the script is executed.

---+++ Configure the list of VOs you wish to enable.
The default configuration, set in the mkgridmap.conf file, provides access from all OSG VOs. If that is acceptable to you, then you're done with this step.

If not, then you'll need to edit the file $VDT_LOCATION/edg/etc/edg-mkgridmap.conf to comment out the line for each VO you wish to disable.

---+++ Setup and test access to each selected VOMS service

To do a "shotgun" test of them all, as root, run

<pre> 
$ cd $VDT_LOCATION/edg/sbin
$ ./edg-mkgridmap --verbose --output=test.out
</pre>
	
  The most common error is "Internal Server Error" which indicates an
  authentication failure.  This can happen either because access to the
  VOMS DB has not been completed, or because the local site credentials
  (host certificate and key) are not valid.  Set the X509_USER_CERT and
  X509_USER_KEY variables to %RED%(to what?)%ENDCOLOR% to test using a different, valid, certificate
  and key.

If the VO administrator has not enabled world read of the VO membership, then you must contact the VO
administrator and request that your site be given access to the VOMS database. You will need to provide
the Subject and Issuer Distinguished Names (DN) for your host certificate.  The simplest thing to do is send email
to the VO administrator requesting access and including the output of the command (check that the path to the hostcert.pem is correct for you):

<pre>
  $ openssl x509 -in /etc/grid-security/hostcert.pem -subject -noout
</pre> 

---+++ Configure the automatic update scripts to refresh the gridmapfile

Since VOs are likely adding/removing members over time, you will want to update your grid mapfile to reflect this. OSG provides some scripts (lifted from the EDG project :-) ) to do that periodically and automatically. The following commands will copy and start the daemon:

<pre>
	cp $VDT_LOCATION/post-install/edg-gridmapfile-upgraded /etc/init.d/
	/etc/init.d/edg-gridmapfile-upgraded start
</pre>

---+++ Test configuration

Run the site_verify script again locally (as a regular user) and verify that the authorization still works. If you have problems, SiteVerify has some debugging advice on how to identify common problems.


---++ Compatibility configuration

A couple of points to be aware of regarding this configuration relative to Full Privilege:

	* You will not be able to provide role based authorization in this configuration. 
	* You will introduce delays since each gatekeeper will have to regenerate the map before implementing the new policy or allowing new users. 

In the compatibility configuration, you will have:
	* One GUMS server per local account domain to manage the mapping from Grid identity (DN+attributes) to local username
	* The GUMS client program gums-host running via cron on your gatekeeper(s) to retrieve both the forward and inverse maps (forward is DN-to-account, inverse is user-to-VO).


---+++Requirements
Your site needs to install and configure GUMS (see GumsAdmins). There needs to be one GUMS server per map of 'DN to local uid'. An institution would only need one GUMS server if there is a global uid assignment (eg. a single NIS domain), but you'd need multiple GUMS to cover multiple mappings.

The CE administrator needs to install and configure the GUMS Client software on the CE(s), and for each CE, identify the appropriate GUMS server to point to (if more than one is available).

---+++ Test your configuration
Run the $VDT_LOCATION/verify/site_verify.pl script again locally (as a regular user with a proxy certificate, not root) and verify that the authorization still works. If you have problems, SiteVerify has some debugging advice on how to identify common problems.

---+++ Configure GUMS Client software on your CE
The GUMS-Client package (from the VDT) is installed as part of the OSG ITB CE install.  Files are located in the $VDT_LOCATION/gums directory.

You need to edit the <tt>gums-client.properties</tt> configuration file to point to the appropriate GUMS server:

<verbatim>
 cd $VDT_LOCATION/gums/etc
 cat ./gums-client.properties
 gums.location=https://localhost:8443/gums/services/GUMSAdmin
 gums.authz=https://localhost:8443/gums/services/GUMSAuthorizationServicePort
</verbatim>

Change the <tt>localhost</tt> in this file to be the name of the GUMS Service host.  

---+++Test grid mapfile generation using gums-host command
Documentation on this command is available at http://grid.racf.bnl.gov/GUMS/guide_commands.html and http://grid.racf.bnl.gov/GUMS/guide_installation.html, near the bottom under the heading "Installing the client tools".

The <tt>$VDT_LOCATION/gums/bin/gums-host</tt> can be used to generate a grid mapfile.  It uses the host certificate. As root, run:
<verbatim>
  cd $VDT_LOCATION/gums/bin/gums-host
  ./gums-host generateGridMapfile
</verbatim>
Output should look similar to the following:
<verbatim>
#---- members of vo: osg ----#
"/DC=org/DC=doegrids/OU=People/CN=Alexis Rodriguez 233072" osg01
"/DC=org/DC=doegrids/OU=People/CN=Andrew Zahn 730598" osg01
"/DC=org/DC=doegrids/OU=People/CN=Craig Phillip Prescott 50911" osg01
#---- members of vo: Test3userGroup ----#
"/DC=org/DC=doegrids/OU=People/CN=Anne Heavey 830711" osg01account
"/DC=org/DC=doegrids/OU=People/CN=John Weigand 458491" osg01account
</verbatim>
If it fails, with an error like%BR%
<tt>No map was found for the host xyz.dhcp.fnal.gov</tt>,
then verify the GUMS server's gums.config file, in particular the wildcard attribute of the hostGroups element to make sure your host name gets mapped (e.g., xyz.dhcp.fnal.gov is missed by *.fnal.gov and needs *.*.fnal.gov).

---+++Test User-to-VO Map generation using gums-host command 
<verbatim>
  cd $VDT_LOCATION/gums/bin/gums-host
  ./gums-host  generateGrid3UserVoMap
</verbatim>
Output should look similar to the following:
<verbatim>
#User-VO map
# #comment line, format of each regular line line: account VO
# Next 2 lines with VO names, same order, all lowercase, with case (lines starting with #voi, #VOc)
#voi xxx test3
#VOc OSG TEST3
#---- accounts for vo: osg ----#
osg01 xxx
#---- accounts for vo: Test3userGroup ----#
osg01account test3
</verbatim>

In the Compatibility Scenario, GUMS creates the grid mapfile, therefore you'll need to create a cron job to have GUMS update the grid mapfile on a regular basis. A cron file has been provided to generate the maps every six hours.  Regardless of the GUMS implementation you choose, you will need to generate the user-to-VO map this way if not the grid mapfile.  Run the command:
<verbatim>
 ln -s $VDT_LOCATION/gums/bin/gums-host-cron /etc/cron.hourly/gums-host-cron
</verbatim>

---++ Full privilege configuration
In this configuration, requests to your gatekeeper(s) and gridftp server(s) use the authorization callout to contact an external service (GUMS is the OSG reference implementation) which checks whether the requester is permitted access and, if access is permitted, returns a local user id assigned to the requester's grid credential. This removes the need for maintaining grid mapfiles on each gatekeeper and/or gridftp server. 

---+++Requirements
Your site needs to install and configure GUMS (see GumsAdmins). There needs to be one GUMS server per map of 'DN to local uid'. An institution would only need one GUMS server if there is a global uid assignment (eg. a single NIS domain), but you'd need multiple GUMS to cover multiple mappings.

The CE administrator needs to install and configure the GUMS Client software on the CE(s), and for each CE, identify the appropriate GUMS server to point to (if more than one is available).

---+++ Install the GSI and PRIMA modules and configure Globus to use the Authorization modules

Copy these files as shown:
<pre>
	  (do we want to have them backup older versions ?)
	$ cp $VDT_LOCATION/post-install/gsi-authz.conf	/etc/grid-security/
	$ cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security/
</pre>

The prima-authz.conf file is preconfigured during the VDT installation except for the reference that points to the particular GUMS server to use.
To set the right GUMS server, modify the imsContact line and replace the URL with the one appropriate for your GUMS server, e.g.,:

<pre>
imsContact https://atlasgrid13.usatlas.bnl.gov:8843/gums/services/GUMSAuthorizationServicePort
</pre>

(The default URL is a test GUMS server that you can use for debugging your system if the need arises. *Will this be true indefinitely ? Probably not. What are plans ?* )

---+++ Test configuration

Run the site_verify script again locally (as a regular user) and verify that the authorization still works. If you have problems, SiteVerify has some debugging advice on how to identify common problems.

---+++Test User-to-VO Map generation using gums-host command 
A cron file has been provided to generate the maps every six hours.  Even in full privilege mode, you will need to generate the user-to-VO map this way.  Run the command:
<verbatim>
 ln -s $VDT_LOCATION/gums/bin/gums-host-cron /etc/cron.hourly/gums-host-cron
</verbatim>

---++ Debugging the authentication chain

A page describing the steps to follow in testing and debugging privilege components has been started under the topic GoldenChainDebugging.

You may find the PrivilegeSiteWhatToDo and VoAdmins topics (older versions of instructions) helpful as well.

---++Definitions:
(Should we collect these somewhere or does this need to be inline ? AH thinks they should go in the OSG glossary -- but hasn't put them there yet!)
	* Role-based authorization: authorization decisions based on extended proxies (roles and groups in addition to DNs) A user can get a different extended proxy from the VO VOMS server according to the role he/she is to play.  For example, the user may send a request as a member of the analysis group, and at another time may send a request as a production coordinator. Role-based authorization allows the site to map the user to a different account depending on his/her role.
	* Account pools: Each DN is assigned a unique local account from a preallocated pool of local accounts. A particular DN always gets the same local account from then on. A site can choose to have one or more pools (for example, one pool per VO, one pool per group in a VO, one pool per role in a VO, etc...)
	* Central management: being able to control access to a number of gatekeepers from a single file, and not having to look/change configuration on each gatekeeper. (often useful for large sites) (this is vague -- central account management? AH)
*FQAN*: to do...

---++Appendix A: Add Required Users
The following users are are required to exist on your gatekeeper (elsewhere Compute Element) in order to be a member of the OSG-ITB.

<pre>
	  enter user 1 here
	  enter user 2 here
	  etc.
</pre>

---++Appendix B: List of Known Vomses
The following vomses are members of the OSG-ITB and potentially members of the production OSG.  Users can place these entries in ~/.edg/vomses.

<pre>
	  "cdf" "fermigrid2.fnal.gov" "15020" "/DC=org/DC=doegrids/OU=Services/CN=host/fermigrid2.fnal.gov" "cdf" "32"
	  "uscms" "fermigrid2.fnal.gov" "15019" "/DC=org/DC=doegrids/OU=Services/CN=host/fermigrid2.fnal.gov" "uscms" "32"
	  "fermilab" "fermigrid2.fnal.gov" "15001" "/DC=org/DC=doegrids/OU=Services/CN=host/fermigrid2.fnal.gov" "fermilab" "32"
	  "gadu" "fermigrid2.fnal.gov" "15018" "/DC=org/DC=doegrids/OU=Services/CN=host/fermigrid2.fnal.gov" "gadu" "32"
	  "dzero" "fermigrid2.fnal.gov" "15002" "/DC=org/DC=doegrids/OU=Services/CN=host/fermigrid2.fnal.gov" "dzero" "32"
	  "des" "fermigrid2.fnal.gov" "15017" "/DC=org/DC=doegrids/OU=Services/CN=host/fermigrid2.fnal.gov" "des" "32"
	  "sdss" "fermigrid2.fnal.gov" "15014" "/DC=org/DC=doegrids/OU=Services/CN=host/fermigrid2.fnal.gov" "sdss" "32"
	  Add your vomses here.
</pre>

<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.DaneSkow - 11 May 2005
--Main.AnneHeavey - 24 May 2005

%STOPINCLUDE%

