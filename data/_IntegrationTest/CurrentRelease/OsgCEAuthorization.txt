%META:TOPICINFO{author="DaneSkow" date="1115828800" format="1.0" version="1.1"}%
%META:TOPICPARENT{name="OSGCEInstallGuide"}%
<!-- This is the default OSG Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>%TOPIC%
%TOC%
%STARTINCLUDE%


---++Introduction

OSG provides several options for authorization configuration. The flowchart below will help you decide what kind of configuration you should setup.

Definitions:
	* Role based authorization: authorization decisions based on extended proxies (roles and groups in addition to DNs) A user can get a different extended proxy from the VO VOMS server for various roles she wishes to play. This says, for example, that in a moment he is acting as a member of the analysis group, and the other is acting as a production coordinator. Role based authorization will allow you to map the user to a different account depending on the role.
	* Account pools: Each DN is assigned a unique local account from a preallocated pool of local accounts. That DN, and no other, will be mapped to the same account from then on. You can choose to have one or more pools (for example, a pool per VO, a pool for a group in a VO, a pool per role in a VO, etc...)
	* Central management: being able to control access to a number of gatekeepers from a single file, and not having to look/change configuration on each gatekeeper. (often useful for large sites)

<verbatim>
				 |
				 |
  --------------------------						----------------------
  | Is your site going to  |		  YES!		| Refer to			  |
  | support role based	  |----------------->| Full privilege	  |
  | authorization?			|						| site configuration |
  --------------------------						----------------------
				 |														 
			 NO |
				 |
  ------------------------------					--------------------------
  | Do you want to use account |	  YES!		| Refer to compatibility |
  | pools at your site?		  |-------------->| site configuration	  |
  ------------------------------					--------------------------
				 |														 
			 NO |
				 |
  ------------------------------					------------------------
  | Would you like to manage	|	  YES!		| Refer to				 |
  | all your mapping from a	 |-------------->| compatibility		  |
  | single point?				  |					| site configuration	|
  ------------------------------					------------------------
				 |
			 NO |
				 |
  ----------------------- 
  | Refer to				|
  | Ye olde grid3		 |
  | site configuration  |
  -----------------------
</verbatim>

---+++ Full privilege site configuration
In this configuration, you will have:
	* One GUMS server per local account domain to manage the mapping from Grid identity (DN+attributes) to local username.  A local account domain is similar to an YP domain.
	* Your gatekeeper(s) and gridftp server(s) configured with the PRIMA module to connect to the GUMS server for each gatekeeper request.
	* gums-host running via cron to generate the inverse map for gatekeeper and gridftp accounting.
So you need to:
	* Install one GUMS at your site for the grid account domain (e.g. YP domain)
	* Configure it (if the default OSG policy is not good enough for you)
	* Configure the PRIMA module on your gatekeeper(s)
	* Install and configure gums-host on your gatekeeper(s)

Instructions for this configuration are located [[http://osg.ivdgl.org/twiki/bin/view/Integration/PrivilegeSiteWhatToDo#Full_Privilege_or_Compatability][here]]

---+++ Compatibility site configuration
You will not be able to provide role based authorization in this configuration. Also, you will introduce delays since each gatekeeper will have to regenerate the map before implementing the new policy or allowing new users. You should fall back to this configuration if:
	* Your gatekeeper(s) or service must be configured through grid-mapfile (i.e. you have tools or services that manipolate that file directly, without passing through globus)
	* The idea of running GUMS 24/7 scares the hell out of you, and you'd rather approach with caution.
In this configuration, you will have:
	* One GUMS server per local account domain to manage the mapping from Grid identity (DN+attributes) to local username
	* gums-host running via cron on your gatekeeper(s) to retrieve both the forward and inverse maps
So you need to:
	* Install GUMS at your site
	* Configure it (if the default OSG policy is not good enough for you)
	* Install and configure gums-host on your gatekeeper(s)

Instructions for this configuration are located [[http://osg.ivdgl.org/twiki/bin/view/Integration/PrivilegeSiteWhatToDo#Full_Privilege_or_Compatability][here]]

---+++ "Ye olde grid3" site configuration
You may prefer this configuration if:
	* You are a small site (one gatekeeper) and,
	* You deal with a small set of fairly static VOs

In this configuration, you will have:
	* The EDG mkgridmap daemon running on your gatekeeper to create the grid-mapfile

Instructions for this configuration are located [[http://osg.ivdgl.org/twiki/bin/view/Integration/PrivilegeSiteWhatToDo#Ye_olde_grid3_mode][here]]

  Please refer to the VoAdmins and PrivilegeSiteWhatToDo topics for further information.



<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.DaneSkow - 11 May 2005

%STOPINCLUDE%

