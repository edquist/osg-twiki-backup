%META:TOPICINFO{author="MichaelWilde" date="1120801048" format="1.0" version="1.1"}%
%META:TOPICPARENT{name="WSGramServiceReadinessPlan"}%
<!-- This is the default OSG Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>%TOPIC%
%TOC%
%STARTINCLUDE%


---++Introduction

Doc on how to manage (start stop) a GT 4.0 container via Xinetd is coming in 4.0.1, but here is some info now...

---++Details

>>>>>>>>>>>>>>>>>>>>>>>
From: Mats Rynge <rynge@isi.edu>
Date: July 7, 2005 11:30:51 PM CDT

it is still not straight forward, as you need a certain
environment for starting the container. I like to use a two script
approach. First, create a file in $G_L called start-stop

-----------------------------------------------------------------------
#! /bin/sh

set -e

export GLOBUS_LOCATION=/cluster/globus/globus-4.0.0
export GLOBUS_OPTIONS="-Xms256M -Xmx512M -Dorg.globus.wsrf.container.server.id=dc-user2:8443"

cd $GLOBUS_LOCATION

case "$1" in
	 start)
		  $GLOBUS_LOCATION/sbin/globus-start-container-detached -p 8443
		  ;;
	 stop)
		  $GLOBUS_LOCATION/sbin/globus-stop-container-detached
		  ;;
	 *)
		  echo "Usage: globus {start|stop}" >&2
		  exit 1
		  ;;
esac

exit 0
-----------------------------------------------------------------------


Set up your environment at the top of the script. You might need to add 
things like JAVA_HOME and modify your path.

Then, in /etc/init.d create a new file called globus-4.0.0


-----------------------------------------------------------------------
#!/bin/sh -e

case "$1" in
start)
	 su - globus /nfs/software/globus/globus-4.0.0/sbin/container-start-stop start
	 ;;
stop)
	 su - globus /nfs/software/globus/globus-4.0.0/sbin/container-start-stop stop
	 ;;
restart)
	 $0 stop
	 sleep 1
	 $0 start
	 ;;
*)
	 printf "Usage: $0 {start|stop|restart|reload|force-reload}\n" >&2
	 exit 1
	 ;;
esac

exit 0
-----------------------------------------------------------------------

Change the paths and user (globus in my case). Use the init.d tool
(updated-rc.d on Debian, chkconfig on Redhat) to edit what runlevels to
start the service on.

The difference is that the first script is executed as the user you want
to run the container as. The second script is executed as root during
startup, and hence the su to the right user. I like the two script
approach as it allows me to start/stop the container as the globus user
easily. These scripts could probably be combined in some nice way.

-- 
Mats Rynge
USC/Information Sciences Institute  -  Center for Grid Technologies
<<<<<<<<<<<<<<<<<<<<<<<


<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.MichaelWilde - 08 Jul 2005

%STOPINCLUDE%

