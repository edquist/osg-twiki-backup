%META:TOPICINFO{author="DaneSkow" date="1113599939" format="1.0" version="1.3"}%
%META:TOPICPARENT{name="SiteAdmins"}%
<!-- This is the default OSG Integration template. 
Please modify it in the sections indicated to create your topic!
If you have any comments/complaints about this template, then please email me:
rwg@hep.uchicago.edu.  (Adapted from Atlas wiki template, Ed Moyse)
--> 

<!-- By default the title is the WikiWord used to create this topic !-->
<!-- if you want to modify it to something more meaningful, just replace %TOPIC% below with i.e "My Topic"!-->

---+!!<nop>%TOPIC%
%TOC%
%STARTINCLUDE%


---++Introduction

The authorization configuration of OSG is one of the major enhancements over the Grid3 functionality. It does introduce a number of new components (known affectionately as "the Golden Chain") that need to work together and so has plenty of opportunity for confusion, particularly on error. The goal of this page is to document a set of debugging steps and diagnostics to tell what is working and what is going wrong.

The Golden Chain is the following set of steps performed to do full role based authorization:

	1 Get a VOMS extended proxy with the attributes you wish to use
	1 Submit a request to a service (site_verify will initiate a simple request as you to test. The rest should be automaticly performed behind the scenes.)
	1 Gatekeeper PRIMA modules parse the proxy attributes and contacts the GUMS service for uid mapping
	1 GUMS service checks its database and configuration to map a local user id for that DN + attributes and return the answer to the gatekeeper.
	1 The gatekeeper performs the job as the assigned user
	! GUMS generates a reverse mapfile (**What is the name of this**) to map local usage to VO for accounting purposes.a

To start, go ahead and configure the compute elements to use the services per the Privilege installation instructions you've followed in the admin guide (*put in the Wiki Link*). Run site_verify and if it passes the authentication stage, then the configuration is correct and the services are running. If it fails, then some debugging needs to be
done. The sections below contain debugging information for the different OSG authorization configuration modes.

---++General Triage

There are a few things which are common to all these tests and those are prerequisites tested here:

	* Do you have a valid grid proxy ?
		* Issue the command "grid-proxy-info" and if you get an error, there is a basic problem with your configuration.
			* If you don't have grid-proxy-info in your path, there may be a problem with your environment setup. Have you done a $VDT_LOCATION/setup.sh ?
	* Do you have a good network connection ?
		* (** A good test to test for presence of firewall might be good here.**)

---++Full Privilege authorization mode

In the full privilege mode, the following components need to work (test in the following order):

---+++VOMS server: to get an extended grid proxy
		* Test this by using the voms-proxy-init (*need a detailed test here*)
---+++PRIMA modules: on gatekeeper to parse the extended proxy and communicate with GUMS
		* Look in the gatekeeper log for error messages. You may want to turn on verbose logging to get more clues (*how ? Need some extended debugging info here*)
---+++GUMS server: to map the DN + attributes to a local user id
		* Do you know where your GUMS server is running ? PRIMA thinks it is running here (*pointer to configfile entry*)
		* Test this by running XXX (*need a detailed test here*)
---+++GUMS client: is installed on gatekeeper to get the reverse user mapping information needed for accounting
		* Test this by running XXX (*need a detailed test here*)

---++Compatability mode Privilege authorization

---+++PRIMA modules: on gatekeeper to communicate with GUMS
		* Look in the gatekeeper log for error messages. You may want to turn on verbose logging to get more clues (*how ? Need some extended debugging info here*)
---+++GUMS server: to map the DN to a local user id
		* Do you know where your GUMS server is running ? PRIMA thinks it is running here (*pointer to configfile entry*)
		* Test this by running XXX (*need a detailed test here*)
---+++GUMS client: is installed on gatekeeper to get the reverse user mapping information needed for accounting
		* Test this by running XXX (*need a detailed test here*) (*Is this needed in this mode?*)

---++Grid3 mode authorization

		* Look in the gatekeeper log for error messages. You may want to turn on verbose logging to get more clues (*how ? Need some extended debugging info here*)


<!-- MAJOR UPDATES
For significant updates to the topic, consider adding your 'signature' (beneath this editing box) !-->

*Major updates*:%BR%
<!--Future editors should add their signatures beneath yours!-->
-- Main.DaneSkow - 15 Apr 2005

%STOPINCLUDE%

%META:TOPICMOVED{by="DaneSkow" date="1113599939" from="Integration.GoldenChainTest" to="Integration.GoldenChainDebugging"}%
