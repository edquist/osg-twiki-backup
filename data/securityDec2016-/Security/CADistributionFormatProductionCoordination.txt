%META:TOPICINFO{author="AnandPadmanabhan" date="1303833348" format="1.1" reprev="1.4" version="1.4"}%
%META:TOPICPARENT{name="SecurityTeamWorkingArea"}%
---++ Coordinating tests of new CA distribution format on production sites
%TOC%
The proposed change in the CA package due to the new layout from IGTF to accommodate openssl 1.0 is slated to go into production on OSG with the next IGTF release. The changes have already been identified in [[https://twiki.grid.iu.edu/bin/view/SoftwareTeam/SEP7][SEP7]] and implemented. However since this change affects our security infrastructure significantly the security team will like to have the changes tested on few older versions of Production sites before we roll out a production deployment. For this purposes the chosen test sites will be asked to temporarily install the CA package from the ITB CA cache. Below you will find instructions for how to accomplish this change, how to rollback in case of errors or after the testing is complete and a short survey of the testing.

---+++ Meeting Minutes
   * [[March 22, 2011]]
   * [[March 28, 2011]]
   * [[Apr 7, 2011]]

---+++ Instructions for the site
[[https://twiki.grid.iu.edu/bin/view/Security/CADistributionFormatProductionTesting][Instructions for admins participating in the tests]]

---+++ Software/Services to be Tested/Validated
   1. CE 
      * gatekeeper
      * gsiftp
      * RSV probes
      * vdt-update-certs
      * vdt-ca-manage
      * fetch-crl
   2. SE (dcache/bestman)
   3. GUMS
   4. VOMS
   5. OSG client
      * globus client tools
      * srm client tools
      * Condor-G
   6. WN Client
   7. pilot job framework
   8. glexec

---+++ Software versions to be tested
---++++ OSG CE, WN Client, glexec
Using the information on the page we have identified potential candidates for testing each of the OSG version we have deployed on production (see list of sites below). 

When possible we have tried to use sites that are running multiple versions of OSG on different CEs and those that we believe have good experience on OSG. On these sites we hope we can test the CE services, glexec and OSG_WN Client. 

   * 1.0.1(EXP) gaia.physics.mcgill.ca
   * 1.0.4(EXP) abitibi.sbgrid.org
   * 1.0.5 cunygrid.gc.cuny.edu
   * 1.2.0(EXP) cms-xen19.fnal.gov
   * 1.2.1 smuosggate.physics.smu.edu
   * 1.2.3 ce01.cmsaf.mit.edu
   * 1.2.4 ff-grid.unl.edu
   * 1.2.5 ff-grid3.unl.edu
   * 1.2.6 iut2-grid6.iu.edu
   * 1.2.7 fester.utdallas.edu
   * 1.2.8 cmsosgce.fnal.gov
   * 1.2.9 tier2-01.ochep.ou.edu
   * 1.2.10 grid1.oscer.ou.edu
   * 1.2.11 ouhep0.nhn.ou.edu
   * 1.2.13 ff-grid2.unl.edu
   * 1.2.14 gpn-husker.unl.edu
   * 1.2.15 cmsosgce3.fnal.gov
   * 1.2.16 fermigridosg1.fnal.gov
   * 1.2.17 d0cabosg1.fnal.gov
   * 1.2.18 cms-xen2.fnal.gov

As for 1.2.x sites do we need to test all sub versions or would it be ok to test a subset that had a significant change in the CE software stack.

Looking at the release notes (available 1.2.4+) it may be sufficient only to test following (1.2.4+) subversion: 1.2.4, 1.2.6, 1.2.9, 1.2.10,
1.2.14, 1.2.16, 1.2.17, 1.2.18. 


---++++ SE
   * Test srm/dcache, srm/bestman, xrootd, hadoop?
   * Need to identify production versions that are being used in the OSG and few sites that are will to test
   * Coordinate with the developers (and storage team)
      * Ask them to test all the major versions of the software that are deployed on OSG
      * Inquire if testing of minor versions are also needed
      * Record and discuss any concerns they might have. Identify any versions that might have problems and develop a plan to patch them is deemed appropriate.
      * Get developers signoff

---++++ GUMS
   * Need to identify production versions that are being used in the OSG and few sites that are will to test
   * Coordinate with the developers at BNL
      * Ask them to test all the major versions of the software that are deployed on OSG
          * Test minor versions if needed
      * Identify any versions that might have problems and develop a plan to patch them is deemed appropriate.
      * Get developers signoff
   * Do we also need to test SAZ, LCAS, LCMAPS, edg-mkgridmap etc?

---++++ VOMS
   * Need to identify production versions that are being used in the OSG and few sites that are will to test
   * We need to test voms-admin, voms-rs
   * We need to better understand the problems EGI had after their switch.
      * John W tested it and was unable to reproduce the errors encountered by EGEE.
   * Coordinate with the developers 
      * Ask them to test all the major versions of the software that are deployed on OSG
          * Test minor versions if needed
      * Identify any versions that might have problems and develop a plan to patch them is deemed appropriate.
      * Get developers signoff
   * VOMS developers informed us that there is indeed a bug in VOMS-Admin 2.x, that will be fixed in VOMS Admin 2.6.
      * Also EMI 1.0 will contain VOMS-Admin 2.6.0 and will have the patch for the new CA distribution format. 


---++++ OSG Client
   * What OSG client versions need to be tested?
      * Is there any way to know what versions are being used.
  
---++++ Pilot job framework
   * Need to test the OSG Pilot factory. Need to coordinate with Igor?
   * Need testing of glexec versions deployed on production site.
      * We need to involve glexec developers to test older versions of the code
      * Has been tested on ITB

---++++ Questions for developers
   * Q1. Given the new CA format files to support openssl 1.0, how will you  expect your production software to be affected? What about the older versions of your software  that might be used on OSG, would they be affected?
   * Q2. What kind of testing would you like to conduct (and how can we help), for you to be comfortable with OSG making the switch. would it sufficient to test the oldest version used on OSG and the newest one? What are the S/W that need testing and who will be able to help with such testing?
   * Q3. Please look at the instructions I put together for site admins ([[https://twiki.grid.iu.edu/bin/view/Security/CADistributionFormatProductionTesting]]). These are written for the CE. Do you think it is also sufficient for testing software componanr, if not please feel free to add appropriate instruction to the twiki page. Also what kind of verification steps would we conduct to validate your software component?
   * Q4: When do they plan to make a new release?  

---+++++ Response from GUMS developer 
<verbatim>

For your Q1:

In theory, on the server side GUMS itself shouldn't be affected at all, provided its underlying platforms are updated. 
All the certificate validation is done on the gatekeeper, and calls to GUMS involve only strings. 
The SSL-protected connection to GUMS simply uses whatever SSL libraries are built into Apache or Tomcat (depending on how SSL is set up).

However, when acting as a *client* (connecting to various VOMS servers) GUMS uses the glite Trustmanager. 
This is where we could be affected, since it interacts with the CA store and validates the external connections. 
But as long as the trustmanager project is kept up, GUMS should be fine.

That said, I don't know the current status of upkeep and near-term plans for the glite Trustmanager. 
I do know that a lot of grid software is using it, and I *think* those projects still work on distributions that have moved to openssl 1.0.

I'll ask around to see if I can get solid information. Please let us know if you learn anything.

Regarding your question Q2, given that GUMS only interacts with the underlying SSL framework via 3rd-party libs, 
I don't think extensive testing is called for. It will either work completely or not at all. 
Especially since this is just about how to look up a CA/CRL, not the format itself.

Regarding Q3:
Twiki looks fine. If my answers above are right, nothing special should be needed for GUMS.


The key question: Is there a plan to *remove* the old hash values for the CA directories?
 As long as the old hash links exist, old software should work OK regardless of how it functions.
</verbatim>

.


-- Main.AnandPadmanabhan - 29 Mar 2011
