%META:TOPICINFO{author="AnandPadmanabhan" date="1363642019" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="SecurityTeamWorkingArea"}%
---++ Security drill to access and understand user/job traceability 

A number of Virtual Organizations (VOs)  are submitting job on behalf of their user by using pilot job framework, for e.g. glidein WMS. A job owner is still the person on whose behalf the job is executed and he/she is responsible for the behavior of the job. Hence being able to identify an individual user has been important. This has been traditionally been done by using X.509 digital user certificates. These user certificates are part of the job payload and are individually authenticated and authorized by the resource providers. Since the certificates are associated with individual users, it has been fairly straightforward for the sites to make connections between a executable/job to an individual.

However there is a growing trend for VOs to move away from the model of requiring every individual to get a user certificates. This is especially true for smaller/newer users/VOs since this eliminates the learning curve of understanding and getting the X.509 certificates. With technologies like glidein frontend and factory provided and hosted by OSG, this tread has been accelerating. However without the user certificates being part of the job payload the OSG resource providers are only able to get the identify of the pilot job submission systems. This implies they might be able to track the problem back to only the VO.  However from the OSG security perspective it is very important for each action of using a grid resource is traceable back to a particular user and we are able to get contact information for him/her. The goal of this exercise is hence to understand what information is needed from the VO, which log files might assist them, and what information is missing. 

As the first step we focus on the use of glideinWMS frontend

---+++ VOs using glideinWMS frontend

Typically glidein frontend logs are located at /var/log/gwms-frontend and which can be configured using /etc/gwms-frontend/frontend.xml. However the frontend logs contain information of the communication between the front end and the factory and do not much help with the traceability of a particular job. The frontend configuration file will however be able to tell you which factory you are communicating with and the list of sites that your frontend is able to submit to.

The more important logs in terms of tractability comes from HTCondor. Typically the configuration files are in /etc/condor/condor_config and /etc/condor/config.d/*. The log files are typically located at /var/log/condor/. These along with condor_history command (files /var/lib/condor/spool/) will help the frontend admin track the sites a particular users jobs was finally completed at.

The admin will have to find a mechanism external to OSG (e.g. system logs) to provide local user and login information.

---++++ Missing information 

   * Condor_history together with schedd and match logs may be able to provide the last location where the job ran at. However it does not seem to record all the locations where a job runs.  
   * Is it possible to match to a particular VO job from the worker node. Does the site has to rely on the VO or can some additional information be recorded in the site logs for e.g. what is the cluster ID of the remote job, which fronend it was submitted from

---++++ Other potential issues
   * Log rotation is filesize based rather than time based. This could cause the logs to rotate out before the 3 months period on heavily used VO frontends.

-- Main.AnandPadmanabhan - 18 Mar 2013
