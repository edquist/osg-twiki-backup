%META:TOPICINFO{author="KyleGross" date="1480453377" format="1.1" version="1.4"}%
%TOC%
---++ OSG SecurityTeam Teams review of Glite Authorization Service 

The OSG security team collaborated with members from EGEE project to evaluate the suitability to OSG of the authorization solution developed for EGEE.

---+++Timeline
*Jun 2009*: Project started <br>
*Jun-Jul 2009*: Deployment and testing at NCSA <br>
*Jul 2009*: Completion of evaluation followed by discussion at the OSG-EGEE Trash/Trash/Blueprint meeting 

---+++Deployment and testing experience at NCSA

The Argus service (formerly Glite authorization service) consists of 3 main components: (a) the Policy Administration Point (PAP) to manage policies; (b) the Policy Decision Point (PDP) to evaluate policies; and (c) the Policy Enforcement Point (PEP) to enforce policy decisions. Anand Padmanabhan (OSG) deployed all components of the Argus software. Christoph Witzig (EGEE) and Chad La Joie (EGEE) provided help and answered questions when needed.

   * We configured the server according to instructions https://twiki.cern.ch/twiki/bin/view/EGEE/AuthorizationFramework.
   * We used the simplified policy language developed for Argus to write simple policies at the PAP.
   * We used the command line interface of PEP to test how the policies are evaluated and authorization requests handled at the enforcement point. 
   * A number of use-cases were tested. Specifically, we tested the use case of banning users since the OSG security team was most interested in it.
   * We also tried to evaluate the XACML (HERAS) engine used by Argus

---+++Issues
   * One of the major concerns we had with the Augus service was that it does not follow the interoperability profile that was developed jointly in OSG and EGEE (http://www.fnal.gov/docs/products/voprivilege/focus/AuthZInterop/documents/AuthZInterop%20XACML%20Profile%20v1.1.pdf).
      * This concern is a show stopper if Argus does not implement a compatibility version which can speak the language of interoperability profile.
   * Another concern we had was the XACML engine (HERAS). The HERAS website did not provide any guidelines on how the software can be deployed or tested. So we were unable to make any independent evaluation of the XACML engine and have no idea how it works in a production environment. The EGEE team does not have any documented evaluation, though they claimed that the developers were responsive. 
   * Adding few new attributes to the Argus service (to satisfy interoperability profile) was said to be a month or two of effort. This deeply concerns us (as was pointed by Miron in the blueprint meeting). Our understanding is that the middle-man (Hazus or Argus) should not require any change when the two parties (i.e. client and server) decide they want to send and base authorization decisions on new attributes (e.g. color of socks). 
   * The version of Argus software tested also did not work with RFC compliant grid proxies (i.e. grid-proxy-init). This was deemed as a bug which will be fixed.

---+++Results
   * We have discussed our findings and concerns with EGEE partners.
   * No decision/recommendation has been made at this time.

-- Main.AnandPadmanabhan - 24 Aug 2009
