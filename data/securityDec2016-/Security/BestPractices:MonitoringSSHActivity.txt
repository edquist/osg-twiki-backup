%META:TOPICINFO{author="JamesBarlow" date="1273175196" format="1.1" version="1.4"}%
%META:TOPICPARENT{name="ReleaseDocumentation.BestPractices"}%

%DOC_STATUS_TABLE%

---+ Security Best Practices
%TOC%

%ICON{wip}% Work in Progress

This page documents security practices recommended by the OSG Security Team.


Here are a few things you should do in order to monitor ssh and its  use on your system.

---++ Look at your daily logwatch reports:

Logwatch is a customizable syslog monitor. It can parse and analyze system logs and then report according to your specification. A default logwatch report will include things like analysis of

<verbatim>
pam_unix module [ login information ]
sendmail  [ mailboxes and their sizes ]
sshd logins [ successful and failed ]
filesystem information [ volumes and disk space availability ]

Configuring logwatch and delivering emails to your account:

Logwatch by default would send daily logwatch reports to your root account. 
In order to configure the mails to come to your mailbox  you need to change the following in 
your "/etc/aliases" file

# Person who should get root's mail
root:           your-email@your-mailaddress.com
Note: Make sure you run command "newaliases" to rebuild the databases for mail aliases file.
</verbatim> 

Note 2: Changing this setting will also send you other emails [ ex. Cron completion etc ]

Here is a good explanation for logwatch [ Readme file ] :
http://www2.cvs.logwatch.org:81/index.cgi/*checkout*/logwatch/README?rev=1.34


---++ Change SSH to use version 2 only

SSH version 1 is vulnerable  to man-in-the-middle attacks and has other design flaws. By default SSH will fallback to version 1 if version 2 is unavailable. SSH version 1 use should be avoided. The following configuration settings will let you disable SSH-v1 - 

<verbatim>
In file: /etc/ssh/sshd_config change
# Protocol 2, 1
Protocol 2
Note: Make sure that you restart SSH service once the above change is made.
</verbatim>

---++ Use Passphrase on your keys
Its a most common misconception that using passphrase less key will keep the security intact if the key size is sufficiently big ( 2048 or more bits ). A big key size will protect ssh from the key guessing attacks but a passphrase protects the keys from being used if someone gets access to your account and steals the keys.

Yes, but then how would someone have access to my account ?

This is a fairly legitimate question but we have noticed that attackers are using various ways to try to harvest user accounts - bruteforcing, trying variously other exploits and gaining privileges by privilege escalation exploits and trojaning ssh binaries.

You may not be able to protect a system which you don't administrate [ you  may still have to log on those machines ] but you can definitely protect your credentials from being used once they are stolen by using passphrases on your keys.

---++ Don't use shared keys

One of the bad system administration practices is to use same password for various hosts. Likewise

Avoid using same keys on all hosts
Avoid sharing keys between peers

---++ Use strong passwords

Bruteforce SSH attacks are successful because users are not very careful with their passwords. Your password should have sufficient strength and should not be easily guessable.

Sometimes administrators use test host or a temporary account created to quickly check something  and end up putting a weak temporary password on it ( for example : test/test or test/password ). Admins often forget about these accounts and which are they bruteforced by miscreants providing them a foot in your network.

Another example is installation service. Often admins are installing a service like mysql or postgres. Installation manuals state to create user accounts ( appropriately named mysql or postgres ). More often admins end up putting passwords as mysql, mysql123 or postgres or something similar for such account. One has to be careful and need to put a strong password as well as change the shell to nologin:

<verbatim>
in /etc/password file
[root@host etc]# cat /etc/passwd | grep mysql
mysql:x:27:27:MySQL Server:/var/lib/mysql:/sbin/nologin

While installing mysql, postgres etc you should run the following command to create account:
pw groupadd mysql
pw useradd mysql -c "MySQL Server" -d /dev/null -g mysql -s /sbin/nologin
</verbatim>

<!-- CONTENT MANAGEMENT PROJECT

   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = JamesBarlow

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Security

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (Scientist|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Knowledge
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MineAltunay
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %NO%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = AnandPadmanabhan
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
 
-->