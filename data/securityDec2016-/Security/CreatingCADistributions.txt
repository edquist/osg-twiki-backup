%META:TOPICINFO{author="DougOlson" date="1272487559" format="1.1" reprev="1.30" version="1.30"}%
%META:TOPICPARENT{name="PoliciesProcedures"}%
%DOC_STATUS_TABLE%

%TOC%
---+ Creating CA Distributions
This page documents the OSG Security Team process for creating new Certificate Authority packages for distribution to OSG sites. Note that you must follow the process through to the end to notify GOC of the new distribution.

<b>Updated 27,28 April 2010</b> to reflect building a CA package based on the new IGTF layout that makes symlinks from CA files to names including both the new and old hash name forms for openssl 1.0. %RED%<b>In Testing</b>%ENDCOLOR%

Please refer to the separate procedure on [[AddRemoveCA][adding or removing CAs]] before making a new [[CADistribution][CA distribution]].

---++ Setup
   1 Get a user certificate+key in pkcs12 format from the DOEGrids CA. See Documentation.CertificateGet for instructions.
   1 Ask goc@opensciencegrid.org to add permissions for your certificate subject to access the https://osg-svn.rtinfo.indiana.edu/cadist svn repository. 
   1 Verify that rpmbuild is installed. The rpmbuild command is required for making the rpm, so it's best to use a !RedHat machine (any flavor) for this process.
   1 Verify that dpkg-deb, fakeroot, dpkg-scanpackages and debsigs  are in your $PATH:<br />$ which dpkg-deb fakeroot dpkg-scanpackages debsigs 
      * If any of the tools are not installed on your system you may use build-debian-tools to download and install them <br/> $./build-debian-tools
      * source the setup.sh file from the installed debian tools directory
   1 Install an svn client. Version 1.4.x is strongly recommended. Don't use a version 1.5.x client. See http://subversion.tigris.org/getting.html and/or http://www.collab.net/downloads/subversion/svn1.4.html.
   1 Configure svn to use your pkcs12 certificate+key for authentication by adding the following to ~/.subversion/servers, changing the path to your pkcs12 file as appropriate:<br />[groups]<br />iu = *.indiana.edu<br />[iu]<br />ssl-client-cert-file = /home/username/.globus/usercred.p12 
   1 Checkout a copy of the https://osg-svn.rtinfo.indiana.edu/cadist svn repository:<br />$ svn co https://osg-svn.rtinfo.indiana.edu/cadist 
   1 Setup [[http://www.gnupg.org][GPG]] with the security@opensciencegrid.org private key (see [[Security.SecureEmailKeyManagement]]) for signing the distribution.
   1 Install [[http://vdt.cs.wisc.edu/components/fetch-crl.html][fetch-crl]].
   1 Define variable for OSG Security PGP key<br>$ export OSGSECKEYID=7FD42669<br><it>Note that you should verify the key id value with </it><tt>gpg --list-keys</tt>
   1 Download, import, and verify the IGTF signing key (for example, by verifying the signature):<br/>$ gpg --recv-key 3CDBBC71<br/>$ gpg --check-sigs 3CDBBC71<br/>$ gpg --default-key $OSGSECKEYID --lsign-key 3CDBBC71

---++ Updating to a new IGTF distribution
   1 Change to an empty working directory and set $CAWORKDIR to the path:
      * $ cd `mktemp -d`
      * $ export CAWORKDIR=`pwd` 
   1 Set $IGTF_CERTS_VERSION:
      * $ export IGTF_CERTS_VERSION=1.34
   1 Checkout or update the OSG svn directories
      * cd ~/svn/cadist/trunk/CA-Certificates-Base
      * svn update
      * export CABASEDIR=`pwd`
   1 Set the OSG version (Note that a version for the ITB should have an ITB following the release number).
      * $export OUR_CERTS_VERSION=1.14ITB
   1 Create the new distribution directory for the release
      * cd $CABASEDIR
      * mkdir $OUR_CERTS_VERSION
      * mkdir $OUR_CERTS_VERSION/certificates
      * export CADIST=`pwd`/$OUR_CERTS_VERSION/certificates
   1 Download the new IGTF distribution tarball (and PGP signature) from http://dist.eugridpma.info/distribution/igtf/current/:<br>Note that to get the new symlink layout you may need to download http://dist.eugridpma.info/distribution/igtf/$IGTF_CERTS_VERION-new/:
      * cd $CAWORKDIR
      * $ wget http://dist.eugridpma.info/distribution/igtf/current/igtf-policy-installation-bundle-$IGTF_CERTS_VERSION.tar.gz
      * $ wget http://dist.eugridpma.info/distribution/igtf/current/igtf-policy-installation-bundle-$IGTF_CERTS_VERSION.tar.gz.asc
   1 Verify the PGP signature on the tarball:
      * $ gpg --verify igtf-policy-installation-bundle-$IGTF_CERTS_VERSION.tar.gz.asc
   1 Unpack the certificates:
      * $ tar xzf igtf-policy-installation-bundle-$IGTF_CERTS_VERSION.tar.gz 
   1 Select the CAs and install to temporary location
      * cd igtf-policy-installation-bundle-$IGTF_CERTS_VERSION
      * ./configure --prefix=$CADIST --with-profile=classic --with-profile=mics --with-profile=slcs
      * make install
   1 Install the non-IGTF CAs. Refer to the procedure on [[AddRemoveCA][adding or removing CAs]]
      * cd $CABASEDIR/non-igtf-certificates
      * for each CA to install, %BLUE% alias %ENDCOLOR% = alias name of the CA<br/>./alias.install $CADIST
   1 compare differences to previous version:
      * cd $CADIST
      * $ for ca in * ; do  diff $ca $CABASEDIR/%RED%previous%ENDCOLOR%/certificates; done
      * $ for ca in $CABASEDIR/%RED%previous%ENDCOLOR%/certificates/* ; do  diff $ca . ; done
      * make sure appropriate extra CA files from $CABASEDIR/non-igtf-certificates are included or removed from the distribution directory, $CADIST
   1 Generate the index file
      * cd $CABASEDIR
      * $ ./mk-index.pl --version $OUR_CERTS_VERSION --dir $CADIST --out $CADIST/INDEX.html
   1 Verify that $CADIST/INDEX.html contains the right number of CAs:
      * ls $CADIST/*.pem | wc  # should agree with the number of CAs listed in $CADIST/INDEX.html
   1 Update the $CADIST/CHANGES file. 
   1 Add new distribution to repository
      * cd $CABASEDIR
      * svn add $OUR_CERTS_VERSION
   1 Commit all changes:<br />$ svn commit -m "Updated to IGTF version $IGTF_CERTS_VERSION, OSG version $OUR_CERTS_VERSION"

---++ Check the CA certificates and CRLs

   1 Run fetch-crl and investigate any error messages:
      * $ pushd $CADIST
      * $ $VDT_LOCATION/fetch-crl/sbin/fetch-crl --loc `pwd` --out `pwd`
   1 Check for expired or near-expired CRLs:
      * $ $CABASEDIR/[[%ATTACHURL%/check-crl-expiry.pl.txt][check-crl-expiry.pl]] *.r0
   1 Check for expired or near-expired CAs:
      * $ $CABASEDIR/[[%ATTACHURL%/check-ca-expiry.pl.txt][check-ca-expiry.pl]] *.0
   1 Cleanup:
      * $ rm *.r0
      * $ popd

---++ Make the CA tarball distribution
   1 Make sure the $CABASEDIR directory in your svn workspace is up-to-date and contains no local modifications:
      * $ cd $CABASEDIR
      * $ svn status 
   1 Tag the SVN repository:
      * $ svn copy https://osg-svn.rtinfo.indiana.edu/cadist/trunk \<br /> https://osg-svn.rtinfo.indiana.edu/cadist/tags/osg-certificates-$OUR_CERTS_VERSION-igtf-$IGTF_CERTS_VERSION \<br /> -m "Tagging OSG certificates distribution $OUR_CERTS_VERSION containing IGTF version $IGTF_CERTS_VERSION" 
   1 Create the tarball:
      * $ cd $CABASEDIR/$OUR_CERTS_VERSION
      * $ tar cvfz osg-certificates-$OUR_CERTS_VERSION.tar.gz --exclude .svn certificates 
   1 Sign it with the security@opensciencegrid.org PGP key:
      * $ gpg --default-key $OSGSECKEYID -b osg-certificates-$OUR_CERTS_VERSION.tar.gz 
   1 Make the manifest:
      * $ ../make-manifest 
   1 Make the MD5 checksums:
      * $ ( cd certificates; md5sum *.pem ) > cacerts_md5sum.txt

---++ Make the RPM
   1 Verify that $OUR_CERTS_VERSION and $IGTF_CERTS_VERSION are set correctly:
      * $ echo $OUR_CERTS_VERSION $IGTF_CERTS_VERSION
   1 Verify that rpmbuild is in your $PATH:
      * $ which rpmbuild
   1 Make sure CWD is correct
      * $ cd $CABASEDIR/$OUR_CERTS_VERSION
   1 Run the make-rpm script:
      * $ ../make-rpm

---++ Make the DEB
   1 Verify that $OUR_CERTS_VERSION and $IGTF_CERTS_VERSION are set correctly:
      * $ echo $OUR_CERTS_VERSION $IGTF_CERTS_VERSION
   1 Make sure CWD is correct
      *  $ cd $CABASEDIR/$OUR_CERTS_VERSION
   1 Run the make-deb script:
      *  ../make-deb

---++ Save the distribution files in SVN

   1 Set the svn release directory
      * For production OSG: <tt>export SVNDIR=$CABASEDIR/../../release</tt>
      * For an ITB release:  <tt>export SVNDIR=$CABASEDIR/../../release-itb</tt>
   1 Copy the files to the svn release directory:
      * $ cd $CABASEDIR/$OUR_CERTS_VERSION
      * $ cp osg-certificates-$OUR_CERTS_VERSION.tar.gz osg-certificates-$OUR_CERTS_VERSION.tar.gz.sig \<br/> osg-ca-certs-$OUR_CERTS_VERSION-0.noarch.rpm osg-ca-certs-$OUR_CERTS_VERSION-0.deb \<br/>ca-certs-version cacerts_md5sum.txt  $SVNDIR
   1 Change to the svn release directory:
      * $ cd  $SVNDIR
   1 Commit the files:
      * $ svn add osg-certificates-$OUR_CERTS_VERSION.tar.gz osg-certificates-$OUR_CERTS_VERSION.tar.gz.sig \<br/> osg-ca-certs-$OUR_CERTS_VERSION-0.noarch.rpm osg-ca-certs-$OUR_CERTS_VERSION-0.deb; <br/>svn commit -m "OSG certificates distribution $OUR_CERTS_VERSION"

---++ Update the web site

Update [[CADistribution]] if there are any significant changes to the contents of the distribution (beyond regular IGTF distribution updates).

---++ Announce the new distribution
---+++ For production OSG
Notify the GOC that a new release is available.
The GOC will publish and announce the release.
Send email according to the following template:
<pre>
To: goc@opensciencegrid.org
Cc: osg-security-team@opensciencegrid.org
Subject: Request to immediately deploy NEW OSG CA DISTRIBUTION RELEASE n.x

Tarball Version: n.x
RPM Version: n.x-0
DEB Version n.x-0
</pre>
The email message must be signed by your DOEGrids certificate.

---+++ For an ITB release
Notify the GOC that a new release is available.
The GOC will publish and announce the release - or perhaps you should just send a notice to osg-int
after being informed by GOC that it is published.
Send email according to the following template:
<pre>
To: goc@opensciencegrid.org
Cc: osg-security-team@opensciencegrid.org
Subject: Request to immediately deploy NEW OSG-ITB CA DISTRIBUTION RELEASE n.xITB

From https://osg-svn.rtinfo.indiana.edu/cadist/release-itb

Tarball Version: n.xITB
RPM Version: n.xITB-0
DEB Version: n.xITB-0
</pre>
The email message must be signed by your DOEGrids certificate.

---++ References
   * [[http://vdt.cs.wisc.edu/internal/igtf-updates.html][VDT Distribution Process]] 
   * [[http://svnbook.red-bean.com/en/1.4/][Subversion Manual]] and [[http://svnbook.red-bean.com/en/1.4/svn.ref.html][Subversion Reference]] 
   * [[https://osg-svn.rtinfo.indiana.edu/cadist/][OSG WebSVN -- CA distribution repo]] 
   * [[http://software.grid.iu.edu/pacman/cadist/][OSG CA Certificates Distribution hosted by the GOC]]
   * [[http://yum.grid.iu.edu/][OSG GOC Yum Repository]]
   * [[http://dist.eugridpma.info/distribution/igtf/current/][IGTF Distribution]] 
   * [[http://security.teragrid.org/TG-CAs.html][TeraGrid CAs]] 
   * [[http://www.tacar.org/][TERENA Academic CA Repository]]
   * [[http://goc.grid.sinica.edu.tw/gocwiki/Procedure_for_new_CA_release][EGEE Procedure]]

<!-- CONTENT MANAGEMENT PROJECT

   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = JamesBarlow

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Security

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (Scientist|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Knowledge
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MineAltunay
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %NO%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = AnandPadmanabhan
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
 
-->

%META:FILEATTACHMENT{name="check-ca-expiry.pl.txt" attachment="check-ca-expiry.pl.txt" attr="" comment="a script to check for expired and expiring CA certificates" date="1249503840" path="check-ca-expiry.pl" size="419" stream="check-ca-expiry.pl" tmpFilename="/usr/tmp/CGItemp14259" user="JimBasney" version="1"}%
%META:FILEATTACHMENT{name="check-crl-expiry.pl.txt" attachment="check-crl-expiry.pl.txt" attr="" comment="a script to check for expired and expiring CRLs" date="1249503914" path="check-crl-expiry.pl" size="771" stream="check-crl-expiry.pl" tmpFilename="/usr/tmp/CGItemp14332" user="JimBasney" version="1"}%
