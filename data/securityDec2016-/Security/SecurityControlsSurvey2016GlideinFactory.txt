%META:TOPICINFO{author="JeffDost" date="1480550447" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="SecurityControlsAssessment2016"}%
---+ OSG Security Controls Survey

   * Last survey answers [[https://twiki.grid.iu.edu/bin/view/Security/SecurityControlsSurvey2014GlideinFactory][SecurityControlsSurvey2014GlideinFactory]]

---++Data Integrity 

---+++ 1. Which core service or asset are you reporting for?  
OSG Glidein Factory

---+++ 2. Have you read the OSG Security Plan, Data Integrity section 2.3.3 within the past 12 months and understand your responsibilities for the proper handling of Sensitive Personal Data, Restricted Data, Limited Distribution Data and Public Data? See [[https://osg-docdb.opensciencegrid.org:440/cgi-bin/ShowDocument?docid=389][OSG Security Plan]]
Yes.

---+++ 3. If your service does not store, process, transmit any data, you may indicate it here and conclude the survey.  
No.

---+++ 4. Are you the owner of the data? The data owner is responsible for collection, storage, and treatment of the data. Although you own the core service/process, there may be another person who owns the data. If so, please provide his/her name below, and answer the following questions with that person.  
[Write your answer]

---+++ 5. Please enter data name you own along with a very brief description and the data type. The data types are explained in Section 2.3.3  of the [[https://osg-docdb.opensciencegrid.org:440/cgi-bin/ShowDocument?docid=389][OSG Security Plan]]	  
---++++ 5A. Name  
[Write your answer]

---++++ 5B. Description  
[Write your answer]

---++++ 5C. Type  
[Write your answer]

---+++ 6. What is your data backup policy (e.g., weekly full, daily differential, etc.) ? 
[Write your answer]

---+++ 7. Backups


---++++ 7A. How long do you retain the back-ups?  
[Write your answer]

---++++ 7B. How do you ensure that your data back-ups are stored correctly, protected and restorable?  
[Write your answer]

---+++ 8. Please list your on-call support email address and/or phone number in case of emergencies, such as unexpected power loss, security attacks or natural disasters.  
[Write your answer]

---+++ 9. Are you aware of any attacks against the data? What do you think is the biggest threat against the data?  
[Write your answer]

---+++ 10. If you own Restricted Data  please answer the following questions.  
[Write your answer]

---++++ 10A. Who are the authorized people who can access this data? How do you determine this list of people?  
[Write your answer]

---++++ 10B. Do you inform the authorized people about how they should treat restricted data?  
[Write your answer]

---++++ 10C. Which access control mechanisms applies to this data?  
[Write your answer]

---++++ 10D. Do you keep a log of accesses to the data? 
[Write your answer]

---++++ 10 E. And if so, how long do you keep the log files?  
[Write your answer]

---++++ 10F. What information is recorded in the log files?  
[Write your answer]

---++++ 10G. How do you terminate rights of authorized recipients? Which mechanisms are used to achieve this?  
[Write your answer]

---+++ 11. If you do not own any limited data, skip to Question 12. If you have multiple data under restricted category and each one has different answers for the following questions, please answer the questions for each data separately	 
[Write your answer]

---++++ 11A. Who is authorized to access the data? How do you determine this list of people?  
[Write your answer]

---++++ 11B. How do you communicate the security requirements to the data to authorized recipients ? Do the recipients agree to the requirements? Do you keep record of such communications in a way that can be audited?	  
[Write your answer]

---++++ 11C. Which access control mechanisms applies to this data?  
[Write your answer]

---++++ 11D. Do you keep logs of access to the data? 
[Write your answer]

---++++ 11E. And if so, how long do you keep the log files?   
[Write your answer]

---++++ 11F. What information is recorded in the log files?  
[Write your answer]

---++++ 11G.  How do you terminate rights of authorized recipients? Which mechanisms are used to achieve this?  
[Write your answer]

---+++ 12. If you have any public data, please answer the following questions  
[Write your answer]

---++++ 12A. What are the, if there are any, access control mechanisms applied to your Public data to maintain its integrity? (An example would be a list of the authorized people who can modify the data.) 											 
[Write your answer]

---++ Configuration Management  

---+++ 1. Which core service or asset are you reporting for?  
OSG Glidein Factory

---+++ 2. Please indicate if you have read the OSG Security Plan, Configuration Management section 2.3.4 within the past 12 months and understand your responsibilities for Monitoring, Version Control and Security Review of the OSG Core resources under your control. See [[https://osg-docdb.opensciencegrid.org:440/cgi-bin/ShowDocument?docid=389][OSG Security Plan]] 
Yes.

---+++ 3. How do you ensure that your service's configuration variables are not modified by unauthorized parties?  How can you detect if unauthorized changes are made?  
The Glidein factories have three configured services, glideinWMS, HTCondor for glidein submission, and httpd to publish glidein configuration information. Configuration is split into two types, local, and published. The local configuration includes HTCondor, httpd, and glideinWMS not including site submission configuration. The local configuration can only be modified via the root user on the factory hosts. See “Physical/Console Access Control” section #5 for details on how root access is obtained.

The published configuration includes site submission configuration part of glideinWMS. This is version controlled and hosted on github. The github repo is rsa ssh protected using deploy keys. Only authorized factory operators with root access can push changes to the repo, and only from the factory nodes.

Unauthorized changes of published configuration can be seen in the github change logs, or by diffing the local git repo with the remote github repo. We also get automated email notifications whenever the github repo changes. Unauthorized changes of local configuration is not currently monitored.

---+++ 4. Please indicate the version control system you employ for tracking changes to your service configuration. For e.g. do you maintain a change log that could be used to track and rollback any changes to configuration?  
github hosted at
https://github.com/opensciencegrid/osg-gfactory

The repo maintains a changelog, and we can roll back to any commit.

---+++ 5. Please indicate the process of approving configuration changes for your core OSG service. Specifically what steps are taken to review the security implication of the proposed changes   
Most daily changes are for adding or changing files that describe how glideins are submitted to sites. Security impact is minimal for these changes so they are not audited. Registering new VO frontends or changing configuration variables that affect the behavior of the factory services must be approved by Factory Ops lead, Jeff Dost before changes are made. Jeff Dost reports and discusses impact of changes with OSG Operations team (Scott Teige, Rob Quick) before making major changes, and may request evaluation from the OSG Security team if security impact appears significant.

---++ Vulnerability Management 

---+++ 1. Which core service or asset are you reporting for?	  
OSG Glidein Factory

---+++ 2. What system do you use to report and track vulnerabilities of your core service. E.g. Do you maintain vulnerability logs?   
Depend on announcements from the OSG security team via the OSG operations weekly call and the announcements on the goc@opensciencegrid.org about software vulnerabilities. If we discover any vulnerabilities we contact the security team at security@opensciencegrid.org, to understand the impact, and how to properly correct the vulnerability, based on their assessment. If vulnerabilities are related to software bugs, we may submit tickets to notify the glideinWMS or HTCondor developers if needed depending on the affected software.

---+++ 3. What steps do you employ to mitigate vulnerability to your core services. For e.g. What types of vulnerability scanning are being done? Do you have regular scheduled updates/maintenance schedule to fix known vulnerabilities?  
We keep systems up to date with the latest system and service rpms from the OSG yum repos at regular intervals consistent with the OSG update schedule. When announcements about vulnerabilities in software we use are sent out, we follow the necessary steps to patch our systems outlined in the recommendations.
 
---++ Physical/Console Access Control 

---+++ 1. Which core service or asset are you reporting for?  
OSG Glidein Factory

---+++ 2. Please indicate if you have read the OSG Security Plan, Physical Access Control and Site Management section 2.3.6 within the past 12 months and understand your responsibilities for the OSG Core resources under your control. See [[https://osg-docdb.opensciencegrid.org:440/cgi-bin/ShowDocument?docid=389][OSG Security Plan]]
Yes.

---+++ 3. Physical access to all production core OSG systems must be controlled -- with a lock, key, etc.  Verify that  your core OSG resources comply with this requirement and are indeed in an access controlled area, as defined above.
Factory hosted at SDSC requires biometric hand scanner and personal pin number to enter machine room. Physical access to GOC factory requires both keycard and biometric hand scanner to enter the machine room at the IU Data Center.

---+++ 4. Who among your team currently has root and sudo access on the OSG systems providing core services and what is the policy of granting such access?  
Sys admins who administer hardware and current factory operators have root and sudo access to the factories.

SDSC factory sys admins (gfactory-1.t2.ucsd.edu):
Frank Wuerthwein (fkw@ucsd.edu)
Terrence Martin (tmartin@ucsd.edu)
Edgar Fajardo (emfajard@ucsd.edu)
James Letts (letts@physics.ucsd.edu)

GOC factory sys admins (glidien.grid.iu.edu, glidien-itb.grid.iu.edu, glidien-int.grid.iu.edu):
Thomas Lee (thomlee@iu.edu)

Factory operators with root access to all factories:
Jeff Dost (jdost@ucsd.edu)
Martin Kandes (mkandes@sdsc.edu)
Marian Zvada (marian.zvada@cern.ch)
Vassil Verguilov (vassil.verguilov@cern.ch)
Krista Majewski (klarson1@fnal.gov)

GOC-INT factory operator (glidien-int.grid.iu.edu only):
Suchandra Thapa (ssthapa@uchicago.edu)

---+++ 5. According to the OSG Security Plan, network login or command line access to a production core OSG system shall be permitted only from a client via secure authorization and authentication mechanisms. Describe which authorization and authentication mechanisms you are using for secure network login or command line access by privileged staff versus unprivileged users.  
We only allow network logins for privileged staff – admins and factory operators. The factory service does not provide end user logins. Network logins are provided using ssh for the gfactory user only, using rsa based authentication, and restricted to only work from the following login hosts via iptables:
jump.grid.iu.edu
uaf-[1-10].t2.ucsd.edu
 
Root is accessed only via sudo from the gfactory user, ssh from the outside to root is disabled.

---+++ 6. All production core OSG systems shall run the absolute minimum set of network services required for their functions.   Have you verified in the past year that your core OSG resource systems are running only those network services necessary for system operation? Also list the network services running that are deemed NOT necessary.  
The only network services we run are HTCondor, httpd, and ssh, which are all required. Only HTCondor daemons needed to submit to grid resources are enabled, and all httpd modules such as php and mysql are disabled, it is only used to host static text files.

---+++ 7. All production core OSG service providers must have a plan describing redundancy or other mechanisms used to maintain service availability in case of operational disruption or emergencies. Please describe the redundancy plans that would be deployed for your core service to ensure availability in case of unplanned disruption or emergency.  
We provide redundancy by hosting two identical factories in different geographical locations, the SDSC factory (gfactory-1.t2.ucsd.edu) and the GOC factory (glidein.grid.iu.edu). If one goes down, the other can completely serve pilots to the VOs without negatively impacting end users. This is built into glideinWMS and requires no human intervention.

---+++ 8. On each production core OSG system, a copy of the system and service logs shall be saved on line for at least 30 days.  Have you verified within the past year that this requirement is being met?  
Our pilot logs rotate quickly on ssd drives because there are thousands of them written a day. However before rotating out, we rsync them to a large magnetic drive and keep them for 30 days there per OSG requirements.
 
---++ Authentication Control 

---+++ 1. Which core service or asset are you reporting for?  
OSG Glidein Factory

---+++ 2. Indicate that you have read the OSG Security Plan, Access Control section 2.4.2 Scanning section 2.4.3 within the past 12 months and understand your corresponding responsibilities for the OSG Core resources under your control. See [[https://osg-docdb.opensciencegrid.org:440/cgi-bin/ShowDocument?docid=389][OSG Security Plan]] 
Yes.

---+++ 3. What authentication mechanism is employed for privileged access to core resources  
End users can only request pilots if their VO Frontend is registered with the factory. Registration uses x509 host certificates on both the frontend and factory side for authentication. Ensuring only authorized users can submit pilots through the factory on their behalf and run user jobs inside the requested pilots is the responsibility of the VO Frontend, not the factory.

---+++ 4.  How is privileged access to core resource granted and what authorization technique is used?  
Pilots are sent to grid sites with x509 proxy credentials sent by the VO Frontend. It is up to the site admins who own the compute resources to authorize VO pilots based on their credentials, the factory just passes through the credentials.

---+++ 5. What is the authentication and authorization techniques used for non-privileged user access?  
Non-privileged users have read-only privileges and can query the factory condor_collector using condor_status and schedds using condor_q, and browse the httpd monitoring web pages, to read information about site resources (core counts, supported walltime, memory, etc), and monitoring statistics about how many pilots are running where, and their cpu utilization. Writing submission requests to the collector and submitting to schedds are restricted in condor with gsi authentication, and authorization is granted only for privileged users with the condor mapfile. The web pages are read only by nature, they do not include any scripts that allow remote writing or modifying of data on the servers.

---+++ 6. At what frequency are you scanning web services for vulnerabilities and what types of vulnerability scanning are being done?  
We don't perform internal scanning on the web service, there are minimal security risk, as stated above it is a read only web server that just displays monitoring information, and none of this information is restricted.

---+++ 7. What remedial procedures are followed when vulnerabilities are detected?  
If we discover any vulnerabilities we contact the security team at security@opensciencegrid.org, to understand the impact, and how to properly correct the vulnerability, based on their assessment. If vulnerabilities are related to software bugs, we may submit tickets to notify the glideinWMS or HTCondor developers if needed depending on the affected software.

---+++ 8. What steps are being taken to scan for local vulnerabilities/intrusion detection and how often?   
We don't perform any regular scans that I am aware of to discover local vulnerabilities or detect intrusions.


<!--
Accessible by security team only:
   * Set ALLOWTOPICVIEW = Main.SecurityTeamGroup, Main.JeffDost
   * Set ALLOWTOPICCHANGE = Main.SecurityTeamGroup, Main.JeffDost
   * Set DENYTOPICVIEW = Main.TwikiGuest
-->


-- Main.ZalakShah - 19 Oct 2016
