%META:TOPICINFO{author="AnandPadmanabhan" date="1326141948" format="1.1" version="1.9"}%
%META:TOPICPARENT{name="Documentation.PoliciesProcedures"}%
%TOC%

---+ Secure Email Key Management in OSG

This page documents key management practices for supporting signed and encrypted email to/from security@opensciencegrid.org. These instructions are for OSG Security Team and GOC members who deal with the private keys. Instructions for other OSG participants who deal with security@opensciencegrid.org public keys are at Documentation.SecureEmail.

See IncidentResponseCommunication for additional background.

---++ PGP key generation

First, determine the ID of the current security@opensciencegrid.org keypair:
<verbatim>
$ gpg --list-secret-keys security@opensciencegrid.org
sec   1024D/AABBCCDD 200X-XX-XX [expires: 200X-XX-XX]
uid                  Open Science Grid Security <security@opensciencegrid.org>
$ export OLDOSGSECKEYID=AABBCCDD
</verbatim>

Following the example of CERT, US-CERT, and others, we generate a keypair valid for one year (actually 13 months to allow for a transition period):

<verbatim>
$ gpg --gen-key
Please select what kind of key you want:
   (1) DSA and Elgamal (default)
   (2) DSA (sign only)
   (5) RSA (sign only)
Your selection? 
DSA keypair will have 1024 bits.
ELG-E keys may be between 1024 and 4096 bits long.
What keysize do you want? (2048) 
Requested keysize is 2048 bits
Please specify how long the key should be valid.
         0 = key does not expire
      <n>  = key expires in n days
      <n>w = key expires in n weeks
      <n>m = key expires in n months
      <n>y = key expires in n years
Key is valid for? (0) 13m
Key expires at Mon Aug  3 14:59:39 2009 CDT
Is this correct? (y/N) y

You need a user ID to identify your key; the software constructs the user ID
from the Real Name, Comment and Email Address in this form:
    "Heinrich Heine (Der Dichter) <heinrichh@duesseldorf.de>"

Real name: Open Science Grid Security
Email address: security@opensciencegrid.org
Comment: 
You selected this USER-ID:
    "Open Science Grid Security <security@opensciencegrid.org>"

Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o
You need a Passphrase to protect your secret key.

We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.
gpg: key 66F456CC marked as ultimately trusted
public and secret key created and signed.

pub   1024D/66F456CC 2008-07-09 [expires: 2009-08-03]
      Key fingerprint = 90D3 9626 E6AF CE96 40FB  15FC B399 2A3F 66F4 56CC
uid                  Open Science Grid Security <security@opensciencegrid.org>
sub   2048g/280E702E 2008-07-09 [expires: 2009-08-03]
$ export OSGSECKEYID=66F456CC
</verbatim>

Next, sign the new key with the old key:
<verbatim>
$ gpg --default-key $OLDOSGSECKEYID --sign-key $OSGSECKEYID
</verbatim>


---+++ PGP key export

Now we have a new keypair in the local keyring and we've set the OSGSECKEYID environment variable. Export the key to send to other Security Team and GOC members:

<verbatim>
$ gpg --export-secret-key -a $OSGSECKEYID > osg-security-seckey.asc
</verbatim>

Export the public key to upload to the OSG web site:

<verbatim>
$ gpg --export -a $OSGSECKEYID > osg-security-pubkey.asc
</verbatim>

Now, *securely* send the secret key and public key to the other Security Team and GOC members, for example by face-to-face exchange of USB tokens, postal mail of CD-ROMs, or encrypted email. Be sure to tell them the passphrase you set on the private key.

---++ PGP secret key import

To import the security@opensciencegrid.org secret key to your keyring, save it to a file named osg-security-seckey.asc and run:

<verbatim>
$ gpg --import --allow-secret-key-import < osg-security-seckey.asc 
gpg: key 66F456CC: secret key imported
gpg: key 66F456CC: public key "Open Science Grid Security <security@opensciencegrid.org>" imported
gpg: Total number processed: 1
gpg:               imported: 1
gpg:       secret keys read: 1
gpg:   secret keys imported: 1
$ export OSGSECKEYID=66F456CC
</verbatim>

Note that the associated public key is also imported and we set the OSGSECKEYID environment variable for later use.

---+++ PGP key edit

You should also set the key to be trusted and change the passphrase:

<verbatim>
$ gpg --edit-key $OSGSECKEYID
Secret key is available.

pub  1024D/66F456CC  created: 2008-07-09  expires: 2009-08-03  usage: SC  
                     trust: unknown       validity: unknown
sub  2048g/280E702E  created: 2008-07-09  expires: 2009-08-03  usage: E   
[ unknown] (1). Open Science Grid Security <security@opensciencegrid.org>

Command> trust
pub  1024D/66F456CC  created: 2008-07-09  expires: 2009-08-03  usage: SC  
                     trust: full          validity: unknown
sub  2048g/280E702E  created: 2008-07-09  expires: 2009-08-03  usage: E   
[ unknown] (1). Open Science Grid Security <security@opensciencegrid.org>

Please decide how far you trust this user to correctly verify other users' keys
(by looking at passports, checking fingerprints from different sources, etc.)

  1 = I don't know or won't say
  2 = I do NOT trust
  3 = I trust marginally
  4 = I trust fully
  5 = I trust ultimately
  m = back to the main menu

Your decision? 5
Do you really want to set this key to ultimate trust? (y/N) y

pub  1024D/66F456CC  created: 2008-07-09  expires: 2009-08-03  usage: SC  
                     trust: ultimate      validity: unknown
sub  2048g/280E702E  created: 2008-07-09  expires: 2009-08-03  usage: E   
[ unknown] (1). Open Science Grid Security <security@opensciencegrid.org>
Please note that the shown key validity is not necessarily correct
unless you restart the program.

Command> passwd
Key is protected.

You need a passphrase to unlock the secret key for
user: "Open Science Grid Security <security@opensciencegrid.org>"
1024-bit DSA key, ID 66F456CC, created 2008-07-09

Enter the new passphrase for this secret key.

                   
Command> quit 
</verbatim>

---+++ GPG and multiple secret keys

If you already had a secret key, you now have multiple secret keys in your keyring:

<verbatim>
$ gpg --list-secret-keys
/Users/jbasney/.gnupg/secring.gpg
---------------------------------
sec   1024D/19209234 2008-01-02 [expires: 2009-01-26]
uid                  Jim Basney <jbasney@ncsa.uiuc.edu>
ssb   2048g/F66483A5 2008-01-02

sec   1024D/66F456CC 2008-07-09 [expires: 2009-08-03]
uid                  Open Science Grid Security <security@opensciencegrid.org>
</verbatim>

You should set the *default-key* option in ~/.gnupg/gpg.conf with the ID of your personal key (19209234 in the example above). You may also need to set your default key in other programs that use GPG. For Thunderbird Enigmail, set the Use specific !OpenPGP key ID option via Tools -> Account Settings -> !OpenPGP Security.

---+++ GPG key signing

Finally, if you have your own private key, you should sign the security@opensciencegrid.org key and submit your signature to the keyserver network:

<verbatim>
$ gpg --sign-key $OSGSECKEYID

pub  1024D/66F456CC  created: 2008-07-09  expires: 2009-08-03  usage: SC  
                     trust: ultimate      validity: ultimate
[ultimate] (1). Open Science Grid Security <security@opensciencegrid.org>


pub  1024D/66F456CC  created: 2008-07-09  expires: 2009-08-03  usage: SC  
                     trust: ultimate      validity: ultimate
 Primary key fingerprint: 90D3 9626 E6AF CE96 40FB  15FC B399 2A3F 66F4 56CC

     Open Science Grid Security <security@opensciencegrid.org>

This key is due to expire on 2009-08-03.
Are you sure that you want to sign this key with your
key "Jim Basney <jbasney@ncsa.uiuc.edu>" (19209234)

Really sign? (y/N) y

You need a passphrase to unlock the secret key for
user: "Jim Basney <jbasney@ncsa.uiuc.edu>"
1024-bit DSA key, ID 19209234, created 2008-01-02

$ gpg --send-keys $OSGSECKEYID
gpg: sending key 66F456CC to hkp server pgp.mit.edu
 </verbatim>

---++ PGP message signing

In case we have multiple private keys in the keyring, we use the OSGSECKEYID environment variable to specify the security@opensciencegrid.org key:

<verbatim>
$ cat message.txt 
This is a test message.
$ gpg --default-key $OSGSECKEYID --clearsign < message.txt > signed-message.txt

You need a passphrase to unlock the secret key for
user: "Open Science Grid Security <security@opensciencegrid.org>"
1024-bit DSA key, ID 66F456CC, created 2008-07-09

$ cat signed-message.txt 
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

This is a test message.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkh1H1UACgkQs5kqP2b0VswtUgCgyfQSxS39anW/5G2NoMOfErd8
vl0An2AJnWv/1JVVhwVvzOaRRf7UejhR
=uk/w
-----END PGP SIGNATURE-----
</verbatim>

---++ PGP public key import

Note: this is not needed if you have already imported the secret key, since that will also import the public key automatically.

To import the security@opensciencegrid.org public key to your keyring, save it to a file named osg-security-pubkey.asc and run:

<verbatim>
$ gpg --import < osg-security-pubkey.asc 
gpg: key 66F456CC: public key "Open Science Grid Security <security@opensciencegrid.org>" imported
gpg: Total number processed: 1
gpg:               imported: 1
</verbatim>

---++ PGP message verification

<verbatim>
$ gpg --verify < signed-message.txt 
gpg: Signature made Wed Jul  9 15:28:05 2008 CDT using DSA key ID 66F456CC
gpg: Good signature from "Open Science Grid Security <security@opensciencegrid.org>"
</verbatim>

---++ PGP message encryption

<verbatim>
$ cat message.txt 
This is a test message.
$ gpg --recipient security@opensciencegrid.org -a --encrypt < message.txt > encrypted-message.txt
$ cat encrypted-message.txt 
-----BEGIN PGP MESSAGE-----
Version: GnuPG v1.4.9 (Darwin)

hQIOA/nJ6NgoDnAuEAf+I7pf1rTs3LWa+DMSDIsS3pJFuewFiENAonfTK1XogKjU
kFxSPeH8PGm7e6hsoydvkWRhJz5yqkGhbllYLIgivUwFfNvjDbVUDVa65bTt1B9a
bVv31pQU9+K9CiKKVozc5Dnsnt2GtgEOSmyRWTom67GjUjRHSrgiJZbKsEj1JTFT
FldelUAM+W1MEsSOe70+euLtQEU+NGolh1B6pQDPSPzmbUefYAIfkjeFFZxgsqX+
DtLc29PZhzXJKLr02KcRkDrNIHFOWCABm7DKfmTH1YF6Pp2+SrIdXsstgYzlcvxk
W3fSwpZ6BjkTKmQQr1QDSX1020UK8PJCUs4eekp8wggAgaqgjoKnTtErv9/O20HC
DvGkrReK07T+bLM32sL+eyyU5XENjZbMNpLIw9GIGgpBQgcQ40gdGUGugx3kO6wD
bMpxIIfllTDxaW2/bVAyNQBZyL9N+9A4woT/wan7cpAj5BHYfSTeSouXFFuiO309
OJMZ0MN59wzfeoM+lm39Y/P2nnMd2nWxca5OYZZ/zQ/tnyFypVpd2QWgkJ1jkLia
Qpc/9Ap6LoJ1wt2bg47fUrPxGBykZWp8LcGEo8aEwCqLl7ESguuhatnkiCnz9V4L
4SvBR7HeTpP9J8PxufyKhjSP07j2V5leSYsOnxkoZ/BQfQGGiGbG4ubO/Zf+K3Zx
B9JRASC0dEKsauvE8iZdOuDLsyYHpm/kDoSObZFXDVKZzU+mu3fvof5Fh8/p8v6q
qaEUDsppBcuz6khfVmD+XuNXWuqB6aNHzpvBTUtTcCDuYurf
=tWU4
-----END PGP MESSAGE-----
</verbatim>

---++ PGP message decryption

<verbatim>
$ gpg --decrypt < encrypted-message.txt > decrypted-message.txt

You need a passphrase to unlock the secret key for
user: "Open Science Grid Security <security@opensciencegrid.org>"
2048-bit ELG-E key, ID 280E702E, created 2008-07-09 (main key ID 66F456CC)

gpg: encrypted with 2048-bit ELG-E key, ID 280E702E, created 2008-07-09
      "Open Science Grid Security <security@opensciencegrid.org>"
$ cat decrypted-message.txt 
This is a test message.
</verbatim>

<!--
This page requires authentication to view:
   * Set ALLOWTOPICVIEW = Main.GridGroup
-->