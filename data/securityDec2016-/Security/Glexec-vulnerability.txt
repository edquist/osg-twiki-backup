%META:TOPICINFO{author="KyleGross" date="1480625567" format="1.1" reprev="1.4" version="1.4"}%
%META:TOPICPARENT{name="SoftwareVulnerability2011"}%
---++Glexec Vulnerability 
%TOC%
---+++ Initial Report
Sent to OSG SecurityTeamTeamTeamTeamTeamTeam team and VDT by Daniel Crowell (UW Madison) on Mar 7, 2011
---+++ Triage
The OSG security team reviewed the report and determined the issue to be a *LOW* risk

The report was also sent to VDT and Zach Miller (UWMadison) was assigned to review report and design remedial plan for Condor.

---+++ Analysis
(Includes inputs from Mine, Dave, Jim, Alain, Brian and many others)

the main problem is summarized in the details as:  A problem with gLExec is that it does not properly clean up child processes  of jobs. So it is the responsibility of whoever executed gLExec to go back and fully clean up the job that gLExec started. GLExec should be doing this cleanup, but at the present it is not.

So malicious processes are able to escape from batch systems and interfere with other jobs using the same UID.  This is a vulnerability, but obviously one risk accepted, well, everywhere there is a batch system.  The condor_procd system is a "best effort" - in fact, OSG-GLEXEC-2011-0001 demonstrates one of several ways to escape the procd (another way is to race with signal handlers).

Observations are:
1) UIDs may be reused for different users. (Not a recommended setting on OSG)
2) Secondary GIDs may be reused for different users.  The risk appears minimized (important files aren't group-readable; inherited group readable/writeable permissions will apply only to the primary GID -- the user would have to go out of their way to share files). (True on OSG) 

(2) applies to OSG. Though there is nothing preventing the process from switching, it is our understanding is that a normal user process would never switch because there is no need to switch. Hence, the files used by the users/experiments are never stored under this secondary gid. A non-malicious user would not even know that his job has this particular secondary gid. If this is the case, that is ok. It is a very low risk that a non-malicious user's job will be tricked into opening a malicious file created under the shared secondary gid privileges.

This is the only true solution we know of that exists in newer linux kernels, is the use of cgroups or PID namespaces: https://condor-wiki.cs.wisc.edu/index.cgi/tktview?tn=1831, but this is not available on Red Hat 5. However, condor does make a good effort to mitigate this issue, and while it's not perfect at present,are there are plans to improve this.

---+++ Disclosure
   * EGI has been notified.
   * Developers of Glexec and other affected parties have also been notified
---+++ Software Update
None?
---+++ Closure
No patch yet. GOC ticket was closed.

-- Main.AnandPadmanabhan - 07 Apr 2011
