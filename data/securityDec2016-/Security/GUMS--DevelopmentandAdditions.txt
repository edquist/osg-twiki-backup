%META:TOPICINFO{author="KyleGross" date="1480625567" format="1.1" reprev="1.6" version="1.6"}%
%META:TOPICPARENT{name="SecurityTeamTeamTeamTeamTeamTeamTeamWorkingArea"}%
---++ GUMS -- Requests, Developments, Modifications

---+++ LIGO request on GUMS interface with LDAP 

Jay finished up the work for LIGO, namely to add more flexibility in the GUMS for the LDAP classes: LdapUserGroup, LdapAccountMapper, GecosLdapAccountMapper, and LdapPersistenceFactory.  
Jay completed this at the end of June.  The flexibility has to do with being able to specify the paths and field names within the LDAP hierarchy rather than making certain assumptions, since, as we found, there doesn't seem to be any real standards.

Scott Koranda with LIGO tried out the GUMS LDAPUserGroup at the beginning of September, and had the problem that this particular class doesn't allow for accessing LDAP through SSL, which is all his LDAP supported.  The reason SSL isn't supported in this class is because it only requires read access to LDAP, so why the SSL overhead?  Jay didn't hear back though as to whether he could allow non-SSL access at his site and if it worked, or if we should consider allowing SSL connections in this class. 

* Scott responded to OSG on 10/14/2008 *

Our production LDAP now does allow read-only non-SSL access, but I have not had time to get back and try the new flexibility again. I hope to do so in the next couple of weeks, but unfortunately I am busy with other aspects of our new security infrastructure and I have not been able to concentrate on the GUMS piece.

---+++ OSG Request on Mapping Management aka Banning Feature 
In 09/2008, OSG security team made a request to implement mapping management feature to GUMS. The request included an ability to quickly remove and restore an existing mapping from GUMS. The removed mapping(s) is based on user DN and/or FQAN (VOMS membership). 

The below list of requirements are sent on 9/19/2008
---++++Requirement 1 : banning based on existing GUMS mappings

A basic banning capability in GUMS that is ONLY dependent on current existing GUMS mappings. In other words, I need a GUMS admin to easily drop an existing mapping, and restore it back. NOTE This is not a full-blown banning tool : it does not do complex banning based on serial numbers, certificate attributes or proxy lifetimes.

GUMS takes a string of inputs DN+VOMS group names. I would like to be able to drop mappings based on DN, or VOMS group names, or DN+VOMS group names

   * Use Case1: if a VO is banned, drop all mappings that starts with that VO name such that /VO/* 
Any one, regardless of their DN, who has a matching VOMS attribute will be mapped into a null account

   * Use case 2: drop an individual user based on only his DN. let's say GUMS has a single mapping (assume user is a member of 
cms/production)
/cms/production    cms1

GUMS should NOT drop the whole cms/production role. GUMS should NOT return any mapping for the banned user who happens to be member of cms
production role. The other members of the cms/production group should continue to be mapped into cms1 account

When a user is banned based on his DN, he should NOT be mapped into anyone his VO memberships. He is site-wide banned regardless of VO. (At
inincident times, we may not know which VOs he exactly is members of. )

   * Use Case 3: A user is members of multiple VOs and we only want to ban him from a single VO membership.

Input to GUMS DN+VOMS group names. The other VO memberships should not be dropped.

---++++Requirement 2: Restoring dropped mappings. 
Any of the three use cases should be easily restored back to original state.

   * Use case 1: restore access to VOMS group
   * Use Case 2: restore access to banned user across all VO memberships.
   * Use Case 3: restore access to DN+VOMS pair.

---++++Requirement 3: User Interface
An easy to use GUI for site admins to manage their mappings described as requirements 1 and 2.

---++++Requirement 4: getting input from a central GOC server

During an incident response, we want to help small sites with no 24*7 response capabilities. We like these sites to sign up with a server in GOC (to be designed). Sites GUMS servers would pull the banned users DN or DN+FQAN from GOC server and drop any matching mappings.


I believe requirement 1 and 2 are achievable. they are desirable for any site admin regardless of incident resonse. I believe admins would want to easily manage their mappings for number of reasons such as performance, running out of available accounts and etc. So these capabilities are useful on many fronts. I think anyone tool which can add something to the database should allow admins to remove that something from the database easily. So req 1 and 2 are fitting to GUMS. Requirements 4 is harder to achieve and needs more thinking. 

---++++Implementation of Request (10/15/2008)

Jay reports the following banning capabilities in GUMS


Please note that first field is for user DN and the second field is for VO attribute. They are separated by a comma. 

   * ban my plain grid proxy only:
//DC=org/DC=doegrids/OU=People/CN=Jay Packard 335585,
   * ban me from any grid or voms proxy:
//DC=org/DC=doegrids/OU=People/CN=Jay Packard 335585, .*
   * ban me from atlas:
///DC=org/DC=doegrids/OU=People/CN=Jay Packard 335585, //atlas/.*
   * ban me from usatlas:
///DC=org/DC=doegrids/OU=People/CN=Jay Packard 335585, //atlas/usatlas/.*
   * ban me from usatlas production role:
///DC=org/DC=doegrids/OU=People/CN=Jay Packard 335585, //atlas/usatlas/Role=production.*
   * all users from atlas:
.*, /atlas/.* 

there is a use case: when a user has a VO membership , but uses his plain grid proxy (with no voms proxy). Let's say GUMS allow mapping with plain grid proxy for VO#1. In this case GUMS admin must ban the user's plain grid proxy to prevent access. 

Please note that if this user has 2 VO memberships and only banned  from the first VO, the user in practice lost his access to the second VO as well because his plain grid proxy is banned. However, If the user brings his voms-proxy from the second VO then he will gain access.
 

 
-- Main.MineAltunay - 15 Oct 2008
