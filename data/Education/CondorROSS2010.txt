%META:TOPICINFO{author="AlainRoy" date="1278705890" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="CondorMorningOSS2010"}%
---+ Running a job with R

*Objective:* In this exercise, you'll learn how to run a program that depends on a larger run-time environment that isn't available on your cluster.

---++ The Problem

Sometimes you want to run a program that depends on a larger run-time environment. For example, perhaps you wrote your program in Perl, but there is no Perl installed on the cluster. (That's an unlikely example, just to give you feel.) This is a common problem distributed computing users encounter. For example, many people like to use [[http://www.mathworks.com/][Matlab]] (or it's open-source cousin, [[http://www.gnu.org/software/octave/][Octave]]) or [[http://www.r-project.org/][R]] for doing calculations. These require a fair amount of run-time environment to run the programs you write. What do you do if they aren't installed?

There are at least two possibilities:

   1. Ask your kindly system administrator to install it for you on all of the computers you might run on. 
   1. Bring the environment (Such as Octave or R) along with your job. 

Before you read any further, please step for a moment, and think about the tradeoffs between these two methodologies. They both have benefits and drawbacks. Why would you choose each of them? Why not? 

Here are some of my answers...

%TWISTY{
showlink="Show..."
hidelink="Hide"
}%

---+++ Pros and cons of having your sysadmin do it for you


---+++ Pros and cons of bringing it along


%ENDTWISTY%

R is in: =/opt/r.tar.gz=

[[][R Project Web Page]]

demo.r:

<pre style="margin-left:4em" class="screen">
len <- 100
fibvals <- numeric(len)
fibvals[1] <- 1
fibvals[2] <- 1
for (i in 3:len) { 
   fibvals[i] <- fibvals[i-1]+fibvals[i-2]
} 
print("First 100 Fibonacci numbers:")
for (i in 1:len) { 
    print(fibvals[i], digits = 21)
}
print("Number of possible combinations of cards in a 52 card deck:")
comb <- factorial(52)
print(comb, digits = 21)
</pre>

submit:

<pre style="margin-left:4em" class="screen">
Universe        = vanilla
Executable      = run-r.sh
Arguments       = demo.r
Output          = demo.out
Error           = demo.error
Log             = demo.log
transfer_input_files = /opt/r.tar.gz, demo.r
ShouldTransferFiles = Yes
WhenToTransferOutput = ON_EXIT
queue 
</pre>

run-r.sh
<pre style="margin-left:4em" class="screen">
#!/bin/sh -x

if [ $# -ne 1 ]; then
    echo "Usage: run-r <r-script>"
    exit 1
fi

tar xzf r.tar.gz
export LD_LIBRARY_PATH=`pwd`/r/lib/R/lib
export R_HOME=`pwd`/r/lib/R
r/lib/R/bin/exec/R --slave --vanilla < $1
</pre>
