%META:TOPICINFO{author="BenClifford" date="1181146602" format="1.1" reprev="1.1" version="1.1"}%
<link rel="stylesheet" type="text/css" href="%PUBURL%/%WEB%/WorkshopTutorialModules/exercises.css">

---+!! %SPACEOUT{ "%TOPIC%" }%

%TOC%

%STARTINCLUDE%
%EDITTHIS%

Now, if everything is set correctly, you should be able to run "Grid jobs" on the hosts in the lab Grid. And of course, one's first Grid job must always be this:

<pre class="screen">
%LOGINHOSTSHORT%$ <userinput>globusrun-ws -submit -s -job-command /bin/echo Hello World</userinput>
Delegating user credentials...Done.
Submitting job...Done.
Job ID: uuid:c9eae254-1111-11dc-b480-001558a1e39c
Termination time: 06/03/2007 14:01 GMT
Current job state: Active
Current job state: CleanUp-Hold
Hello World
Current job state: CleanUp
Current job state: Done
Destroying job...Done.
Cleaning up any delegated credentials...Done.
</pre>

You've just submitted a "job" (the Linux command "echo") to run on %LOGINHOST%! Trivial, perhaps, but a building block to more powerful capabilities. 

The globusrun-ws utility runs commands on remote sites, but it expects them to be "fully qualified" path names (i.e., they must start with a "/"). Lets say we want to run the Linux command =hostname= on the remote site to verify that we're talking to the resource we think we are.

   1. Run it locally to make sure you are invoking it correctly. 

   1. Use the command =which= to discover the location of the version of =hostname= that you are using. It will return a fully-qualified path name.

<pre class="screen">
%LOGINHOSTSHORT%$ <userinput>hostname</userinput>
%LOGINHOST%
%LOGINHOSTSHORT%$ <userinput>which hostname</userinput>
/bin/hostname
</pre>

This tells you that to run =hostname=  via globus-job-run, use =/bin/hostname=.  

Use =which= to discover the location of the following commands on the system:
   * =id=
   * =env=
   * =ps=
   * =uptime=  

Now run =hostname= remotely, on %OTHERHOST%, to verify that you really are reaching a remote system:

<pre class="screen">
%LOGINHOSTSHORT%$ globusrun-ws -submit -F %OTHERHOST% -s -job-command /bin/hostname
</pre>

Next, see what else can you learn about the remote system with this approach.  
   1. Discover what user ID your job ran under using =id=.  
   1. Discover what environment variables are set using =env=.
   1. Discover the load on the remote Grid server using =uptime=
   1. Discover the default working directory in which your remote job will run using =pwd=. 
      1. Do an =ls= of this working directory.  
      1. Use =df= to discover how much storage space exists in this working directory.
   1. Use =df= to discover how much storage space exists in the remote =/tmp= directory.  
      * Can you create a file on the remote system?  
      * Can you remove it?


<!-- ***  Comments plugin to create comments table for section   ***    -->

<span style="text-align:center; font-weight:bold; font-size:1.2em;">ADD A COMMENT</span>
%STARTMore%

%TABLE{ }%
|  *COMMENT*  |  *NAME*  |  *DATE*  |
%COMMENT{ type="tableappend" }%

%ENDMore%
<!-- ***  End Comment                                            ***    -->




%STOPINCLUDE%

<!--                                                                            
      * Set LOGINHOST = workshop2.lac.uic.edu
      * Set LOGINHOSTSHORT = workshop1
      * Set LOGINIP = 131.193.181.56
      * Set GRIDHOST = tg-login.sdsc.teragrid.org
      * Set OTHERHOST = workshop2.lac.uic.edu
      * Set OTHERHOSTSHORT = workshop2
      * Set CERTSUBJECT = /O=Grid/OU=OSG/CN=Training User 99
      * Set LOGINNAME = train99
      * Set HOMEDIR = /home/%LOGINNAME%
--> 

%BOTTOMMATTER%
-- Main.ForrestChristian - 29 Jan 2007: edited from original
-- benc - copied from non-WS version
