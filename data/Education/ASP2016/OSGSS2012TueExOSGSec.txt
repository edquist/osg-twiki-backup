%META:TOPICINFO{author="KyleGross" date="1480625594" format="1.1" version="1.3"}%
%META:TOPICPARENT{name="UserSchool12Materials"}%
---+ Tue Afternoon Exercise - Using OSG SecurityTeam Tools

---++ Introduction
In this session you will learn how to use the OSG security tools.

---++ Your certificate

On <pre>
osg-ss-glidein.chtc.wisc.edu
</pre>
you should have you certificate in:<pre>
~/.globus/
</pre>

The certificate can be in one of the two formats:
   * =usercert.p12= - This is the format Web browsers usually rely on. It contains both the public and the private part of your certificate.
   * =usercert.pem= + =userkey.pem= - This is the preferred format for the Grid environment.<br>The first file contains only the public part, while the second one contains only the private key.

*Note:* Make sure any file containing the private key is only readable by you.

You can convert between them by using:
   * p12 to pem <pre class="screen">
cd ~/.globus
touch usercert.pem userkey.pem
chmod go-rwx userkey.pem
chmod go-wx usercert.pem
# Will ask for the passwd
openssl pkcs12 -clcerts -nokeys -in usercert.p12 -out usercert.pem
# Will ask for the passwd, and will ask for a 2nd passwd for the key file... use the same
openssl pkcs12 -nocerts -in usercert.p12 -out userkey.pem
</pre>
   * pem to p12 <pre class="screen">
cd ~/.globus
touch usercert.p12
chmod go-rwx usercert.p12
openssl pkcs12 -export -in usercert.pem -inkey userkey.pem -out usercert.p12
</pre>

---++ Looking into the certificate

You can peek at the content of the certificate, using [[http://www.openssl.org/docs/apps/x509.html][openssl]]. 
It is installed on most Linux systems by default.

Try it out.<pre class="screen">
openssl x509 -text -in ~/.globus/usercert.pem -noout
</pre>
What do you see?

PS: We used the =-text= flag to get the complete output, but there are many useful ones as well.
I particularly like =-subject=; it prints out just your name, as encoded in the certificate.

Note: I have also used the =-noout= flag; this tells openssl to stick to the human readable output.

%TWISTY{
showlink="Advanced"
hidelink="Hide advanced"
start="hide"
mode="div"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
One of the things you can see, is that the cert was issued by DOEGrids CA.

The CA public certificates are pre-installed in =/etc/grid-security/certificates/=.<br>
Each CA has a set of files, with *.0 being the certificate.

The files are encoded using a SSL-internal scheme. You can find the right name under the your certificate "CRL Distribution" section.

Run openssl against the DOEGrids certificate.

%TWISTY{
showlink="For the lazy"
hidelink="Hide lazy section"
start="hide"
mode="div"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="screen">
openssl x509 -text -in /etc/grid-security/certificates/1c3f2ca8.0  -noout
</pre>
%ENDTWISTY% 
<br>

What do you see?
%ENDTWISTY% 
<br>

---++ Creating a proxy

As mentioned in the lecture, you will often need a proxy.

To create a proxy, use =grid-proxy-init=<pre class="screen">
cd ~/.globus
# either one will work
grid-proxy-init -cert ~/.globus/usercert.p12 -key ~/.globus/usercert.p12 -out ~/.globus/userproxy.pem -valid 12:0
grid-proxy-init -cert ~/.globus/usercert.pem -key ~/.globus/userkey.pem -out ~/.globus/userproxy.pem -valid 12:0
</pre>

Now look into it with openssl.
%TWISTY{
showlink="For the lazy"
hidelink="Hide lazy section"
start="hide"
mode="div"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="screen">
openssl x509 -text -in ~/.globus/userproxy.pem  -noout
</pre>
%ENDTWISTY% 
<br>
What do you see?

Another tool you can use to look at a proxy is =grid-proxy-info=<pre class="screen">
grid-proxy-info -file ~/.globus/userproxy.pem
</pre>
Try it out.

%TWISTY{
showlink="Advanced"
hidelink="Hide advanced"
start="hide"
mode="div"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%

One obvious thing to change is the proxy lifetime. Try the changing the =-valid= option.

You can also change the location of the proxy. We have been using the explicit =-out= option in =grid-proxy-init= and the =-file= opetion in =grid-proxy-info=.
You can set the =X509_USER_PROXY= variable instead.<br>
Try deleting your proxy (*not the certificate*) and recreating it with a different name.
%ENDTWISTY% 
<br>

---++ Creating a VOMS-extended proxy

As explained during the lecture, OSG requires VOMS attributes to authorize you at Grid sites.

Creating a VOMS-extended proxy is very similar to creating a regular proxy; you just must use a different tool.

The tool to use is =voms-proxy-init=. You will also need to tell the tool what VO are you from (i.e. =osgedu=)<pre class="screen">
cd ~/.globus
# either one will work
voms-proxy-init -cert ~/.globus/usercert.p12 -key ~/.globus/usercert.p12 -voms osgedu -out ~/.globus/userproxy.pem -valid 12:0 -hours 12
voms-proxy-init -cert ~/.globus/usercert.pem -key ~/.globus/userkey.pem -voms osgedu -out ~/.globus/userproxy.pem -valid 12:0 -hours 12
</pre>

Try it out and look at the result with openssl.

What do you see?

Now try it with the VOMS-specific tool; =voms-proxy-info=<pre class="screen">
voms-proxy-info -file ~/.globus/userproxy.pem -file
</pre>

%TWISTY{
showlink="Advanced"
hidelink="Hide advanced"
start="hide"
mode="div"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
You may have noticed I have added also the =-hours= option; this sets the validity of the VOMS attributes. The attributes lifetime and the proxy lifetime are indeed completely independent.

Try also the =-chain= option.<br>
What do you see?
%ENDTWISTY% 
<br>

---++ Submitting a Grid job

While you will likely never need to submit Grid jobs yourselves, it is still a good idea to know how to do it.

The 5 OSG sites you have access to are:
   * the local pool (Wisconsin) - =osg-ss-ce.chtc.wisc.edu:2119/jobmanager-condor=
   * UNL - =red.unl.edu:2119/jobmanager-condor=
   * UCSD - =osg-gw-2.t2.ucsd.edu:2119/jobmanager-condor=
   * Chicago - =uct2-gk.mwt2.org:2119/jobmanager-condor=
   * Oklahoma - =osgitb1.nhn.ou.edu:2119/jobmanager-condor=

Let's run as simple job:<pre class="screen">
export X509_USER_PROXY=~/.globus/userproxy.pem
globus-job-run osg-gw-2.t2.ucsd.edu:2119/jobmanager-condor /usr/bin/id
</pre>

Try another site, too.

*Note:* =globus-job-run= is a very primitive tool, and you should use it for testing only. It will not scale past a few jobs.

-- Main.IgorSfiligoi - 25 Jun 2012