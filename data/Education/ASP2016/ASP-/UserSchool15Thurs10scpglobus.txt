%META:TOPICINFO{author="RobGardner" date="1437757589" format="1.1" reprev="1.6" version="1.6"}%
%META:TOPICPARENT{name="UserSchool15Materials"}%
<style type="text/css">
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
</style>

---+!! Thursday Exercise 1.0: Transferring data 

%TOC%

The material so far has covered ways to do computation on various resources. This section covers how to get data and results to and from the servers where you are submitting jobs.   Although there are a variety of ways to do this,
we'll cover three methods (scp, rsync, and globus) that should cover most of the situations that'll you'll encounter.  

---++ SCP
You have previously used =ssh= to securely login to remote systems.  There is a counterpart to the =ssh= command called =scp= that allows you to transfer files and directories to and from remote servers.   =scp= uses the same authentication and authorization methods as =ssh= to transfer files and directories between systems.  This part of the exercise will go through using =scp= to transfer files and directories to and from the OSG submit machine and OSG Connect.  

   1. Log in to the CHTC submit node (=osg-ss-submit.chtc.wisc.edu=).  
   2. Copy the following line into a file called =hello_world_ss= \
\
<pre class="file">
hello world from osg-ss-submit
</pre>
   3. Now copy the file to the OSG Connect node (=login.osgconnect.net=) replacing username in the command with your OSG Connect username: \
\
<pre class="screen">
%UCL_PROMPT_SHORT%  scp hello_world_ss username@login.osgconnect.net:~/
</pre>
   4. The =~/= part of the command, indicates that you are copying the file to your home directory, it can be replaced by a path if you want to copy the file elsewhere
   5. Log in to the OSG Connect login node (=login.osgconnect.net=) and check the file: \
\
<pre class="screen">
%UCL_PROMPT_SHORT%  cat hello_world_ss 
</pre>

Now we'll copy a directory using =scp=.  

   1. Log in to the OSG Connect login node (=login.osgconnect.net=)
   2. Create a directory called =scp_transfer= \
\
<pre class="screen">
%UCL_PROMPT_SHORT%  mkdir scp_transfer
</pre>
   2. Copy the following line into a file called =hello_world_connect= \
\
<pre class="file">
hello world from osg-connect
</pre>
   3. Now log in to the CHTC submit node (=osg-ss-submit.chtc.wisc.edu=).  
   4. Copy the  =scp_transfer= dirctory using scp, note the =-r= option that tells scp to recursively\
\
<pre class="screen">
%UCL_PROMPT_SHORT%  scp -r username@login.osgconnect.net:~/scp_transfer .
</pre>
  5. Now verify that the file has been copied correctly: \
\
<pre class="screen">
%UCL_PROMPT_SHORT%  cat scp_transfer/hello_world_connect
</pre>


---++ rsync
You've now transferred files and directories using =scp=.  However there are a few drawbacks to using =scp=.  First, you need to specify each directory and/or file that you want to transfer.  This can get tedious if you have a lot of files or directories to transfer.  Second, scp will copy every file even if it's present resulting in more time and bandwidth being used than necessary.  =rsync= is a program that avoids this by checking on the files between the source and destination and then only copying the directories and files that have changed.    We'll use rsync to sync a directory as follows:

   1. Log in to the CHTC submit node (=osg-ss-submit.chtc.wisc.edu=).  
   2. Remove the =scp_transfer= directory. \
\
<pre class="screen">
%UCL_PROMPT_SHORT%  rm -fr scp_transfer
</pre>
   3. Now, we'll use =rsync= to transfer the directory from the OSG Connect login node. \
\
<pre class="screen">
%UCL_PROMPT_SHORT%  rsync -r -v -e ssh username@login.osgconnect.net:~/scp_transfer/ .
</pre>
   4. Now try running the rsync again.  You'll notice that it doesn't copy any files this time. \
\
<pre class="screen">
%UCL_PROMPT_SHORT%  rsync -r -v -e ssh username@login.osgconnect.net:~/scp_transfer/ .
</pre>


---++ Globus (optional)
The final transfer method uses a cloud-based service called Globus (http://www.globus.org).  Globus allows users to schedule "third-party" data transfers between storage endpoints using a web interface.  After launching a transfer request, Globus manages the transfers and verifies the copied files, re-transferring any files that have been copied incorrectly.  Using [[https://www.globus.org/globus-connect-personal][Globus Connect Personal]], you can set your desktop or laptop hard drive as a storage endpoint, allowing you to transfer data to and from your computer.  Quite a few university campuses and OSG resources have storage endpoints, as do most national-scale HPC centers, making Globus a convenient way of getting data between places.

This part of the exercise go through setting up a Globus Connect personal endpoint on your laptop and transferring some files from OSG Connect to your laptop.

   1. First go to the [[Globus download][https://www.globus.org/globus-connect-personal]] page
   2. Click on the appropriate download link and install the application
   3. The download link will have instructions on setting up your endpoint
   4. Once installed and running, go to globus connect application icon (in your system tray or on toolbar at the top of the screen) and select 'Web: Transfer Files'
   5. Globus Connect will open a web page like this: \
<img src="%ATTACHURLPATH%/Screen_Shot_2015-07-23_at_2.11.59_PM.png" alt="Screen_Shot_2015-07-23_at_2.11.59_PM.png" width='1049' height='794' />    
   6. Select a file from the osgconnect#stash side and copy it to your using the arrow button.  \
<img src="%ATTACHURLPATH%/Screen_Shot_2015-07-23_at_2.58.33_PM.png" alt="Screen_Shot_2015-07-23_at_2.58.33_PM.png" width='1049' height='794' />    
   7. Click on the Activity link near the top of the page to track your transfer

-- Main.SuchandraThapa - 22 Jul 2015

     

%META:FILEATTACHMENT{name="Screen_Shot_2015-07-23_at_2.11.59_PM.png" attachment="Screen_Shot_2015-07-23_at_2.11.59_PM.png" attr="" comment="" date="1437681842" path="Screen Shot 2015-07-23 at 2.11.59 PM.png" size="189465" stream="Screen Shot 2015-07-23 at 2.11.59 PM.png" tmpFilename="/usr/tmp/CGItemp6394" user="SuchandraThapa" version="1"}%
%META:FILEATTACHMENT{name="Screen_Shot_2015-07-23_at_2.58.33_PM.png" attachment="Screen_Shot_2015-07-23_at_2.58.33_PM.png" attr="" comment="" date="1437681860" path="Screen Shot 2015-07-23 at 2.58.33 PM.png" size="186333" stream="Screen Shot 2015-07-23 at 2.58.33 PM.png" tmpFilename="/usr/tmp/CGItemp6547" user="SuchandraThapa" version="1"}%
