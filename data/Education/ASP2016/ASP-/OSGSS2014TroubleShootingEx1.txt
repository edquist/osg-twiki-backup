%META:TOPICINFO{author="LincolnBryant" date="1404851499" format="1.1" reprev="1.3" version="1.3"}%
---+!!Troubleshooting Exercises 
%TOC{depth="3"}%

---+ Introduction
In the second part of our exercises we will continue to work with BLAST application, now adding storage into the picture.

---+ Customize this Document

<!-- OSG Summer School 2011 Defaults
   * Local VO= %URLPARAM{"INPUT_VO" encode="quote" default="osgedu"}%
   * Local UCL_HOST = %URLPARAM{"INPUT_HOST" encode="quote" default="osg-ss-submit"}%
   * Local UCL_USER = %URLPARAM{"INPUT_USER" encode="quote" default="user"}%
   * Local UCL_DOMAIN = %URLPARAM{"INPUT_DOMAIN" encode="quote" default="chtc.wisc.edu"}%
   * Local GATEKEEPER = %URLPARAM{"INPUT_GATEKEEPER" encode="quote" default="red.unl.edu"}%
   * Local UCL_CWD= %URLPARAM{"INPUT_CWD" encode="quote" default="~/trouble_part1"}%
   * Local WORKING_DIR= %URLPARAM{"INPUT_WORKING_DIR" encode="quote" default="~/trouble_part1"}%
   * Local BATCH_SYSTEM = %URLPARAM{"BATCH_SYSTEM" encode="quote" default="condor"}%
   * Local REMOTE_ROOT = %URLPARAM{"INPUT_REMOTE_ROOT" encode="quote" default="/mnt/hadoop/user"}%
   * Local REMOTE_SRM = %URLPARAM{"INPUT_SRM" encode="quote" default="red-srm1.unl.edu:8443"}%
   * Local REMOTE_GRIDFTP= %URLPARAM{"INPUT_GRIDFTP" encode="quote" default="red-gridftp.unl.edu"}%
   * Local SURL = srm://%REMOTE_SRM%/srm/v2/server?SFN=%REMOTE_ROOT%
   * Local TURL= gsiftp://%REMOTE_GRIDFTP%/%REMOTE_ROOT%
   * Local OSG_DATA=%URLPARAM{"INPUT_OSG_DATA" encode="quote" default="/osg/data"}%
   * Local BLAST_DB_SUBMIT=%URLPARAM{"INPUT_BLAST_DB_SUBMIT" encode="quote" default="/share/blast"}%
   * Local VDT_LOCATION=/opt/osg-client
-->

%ICON{"warning"}% %RED% Please change your user name and click on the Customize button!%ENDCOLOR%
<form action="%SCRIPTURLPATH{"view"}%/%WEB%/%TOPIC%">
<table>
  <tr>
    <td>
      %RED%Login Name%ENDCOLOR%
    </td>
    <td>
      <input size=100 type="text" name="INPUT_USER" value="%UCL_USER%"/>
    </td>
  </tr>
  <tr>
    <td>
      VO
    </td>
    <td>
      <input size=100 type="text" name="INPUT_VO" value="%VO%"/>
    </td>
  <tr>
    <td>
      Host Name
    </td>
    <td>
      <input size=100 type="text" name="INPUT_HOST" value="%UCL_HOST%"/>
    </td>
  </tr>
  <tr>
    <td>
      Domain Name
    </td>
    <td>
      <input size=100 type="text" name="INPUT_DOMAIN" value="%UCL_DOMAIN%"/>
    </td>
  </tr>
    <td>
      Exercise Path
    </td>
    <td>
      <input size=100 type="text" name="INPUT_WORKING_DIR" value="%WORKING_DIR%"/>
    </td>
  </tr>
  <tr>
    <td>
     &nbsp;
     <input type="submit" class="twikiSubmit" value="Customize" />
    </td>
  </tr>
</table>
</form>

---+ Exercises 
---++ Prerequisite 

   * Login on submission node <pre class="screen">
ssh %UCL_USER%@%UCL_HOST%.%UCL_DOMAIN%
</pre>
   * Make a directory for this exercise<pre class="screen">
mkdir -p %UCL_CWD%
cd %UCL_CWD%
</pre>

For these exercises, we'll submit a job that needs access to the CHTC's Gluster filesystem. We won't actually do anything with Gluster, other than verify that it is there.

Copy and paste the following as a script called "gluster.sh": 
<pre>
GLUSTER_LOCATION=/mnt/gluster

echo "I am a short job running on node" `hostname`

stat $GLUSTER_LOCATION > /dev/null

if [ $? -eq '0' ]; then
  echo "Gluster is mounted at $GLUSTER_LOCATION!"
else
  echo "Could not find Gluster :("
fi
</pre>

Make sure to =chmod +x gluster.sh=. 

Create an HTCondor submit file to go with it and include the following requirements line:

<pre>
Requirements = (Has_Gluster =?= True)
</pre>

---++ Exercise 1: Fix a stuck job

Once you've created the submit file, go ahead and submit your job. 

Will this job ever run? After submitting, analyze the job with =condor_q -better-analyze [Job ID]=.

%TWISTY{
showlink="Click to see expected output"
hidelink="Hide"
mode="div"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="file">
The Requirements expression for your job reduces to these conditions:

         Slots
Step    Matched  Condition
-----  --------  ---------
[0]           0  Has_Gluster is true
</pre>
%ENDTWISTY%

We can also see how many nodes match our requirement with =condor_status=:
<pre>
condor_status -constraint Has_Gluster
</pre> 

Does =condor_status= show any slots that match Has_Gluster? No -- I have led you astray and given you a bad requirements line :)

The actual ClassAd that we want is named *HasGluster* not _Has_Gluster_. At this point, we can either remove our old job and resubmit, or we can edit the job in queue with =condor_qedit=. 

<pre>
condor_qedit [Job ID] Requirements 'HasGluster =?= True'
</pre> 

Try to run =condor_q -better [Job ID]= again. Has the output changed?

---++ Exercise 2: Investigate why a job is held

Did the job in the previous exercise finish? It should have eventually started after fixing the requirements line, but you may now see it in H state (Held). Why? Try investigating with =condor_q -hold [Job ID]=

%TWISTY{
showlink="Click to see expected output"
hidelink="Hide"
mode="div"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="file">
Error from slot1@e233.chtc.wisc.edu: Failed to execute '/var/lib/condor/execute/slot1/dir_27964/condor_exec.exe': (errno=8: 'Exec format error')
</pre>
%ENDTWISTY%

The reason for this error is not obvious. _Hint: Go back and look at the shell script again_

%TWISTY{
showlink="Click to see the answer" 
hidelink="Hide"
mode="div"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
The shell script is missing the interpeter line, =#!/bin/bash=. Without it, HTCondor will fail to run the job.
%ENDTWISTY%

---++ Exercise 3: Try condor_ssh_to_job
This exercise is a bit more open-ended. Try to create a submit file that runs the "sleep" command. Sleep takes integer seconds as an argument, so try to have your job do something like "sleep 3600".

Submit the job, and once it's running, use "condor_ssh_to_job [Job ID]" to SSH to the remote execution host.

Try to answer the following questions: 

What is =condor_exec.exe=? What do =_condor_stderr= and =_condor_stdout= correspond to?
