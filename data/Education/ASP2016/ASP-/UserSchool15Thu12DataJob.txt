%META:TOPICINFO{author="RobGardner" date="1437759759" format="1.1" version="1.6"}%
%META:TOPICPARENT{name="UserSchool15Materials"}%
<style type="text/css">
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
</style>

---+ Using HTCondor file transfer 

In this example, we focus on how to transfer the input files from the submit node to workers. 

<pre class="screen">
%UCL_PROMPT_SHORT% <strong>cd ~/namd/namd-ct-local </strong>
%UCL_PROMPT_SHORT% <strong>ls </strong>
</pre>

<pre class="file">
namd_run.sh    # Job wrapper script to execute NAMD job
namd_run.submit    # Condor job description file
par_all27_prot_lipid.inp  #  Parameter file: required by NAMD
ubq_gbis_eq.conf    # NAMD input configuration file
ubq.pdb    # Protein structure file: required by NAMD
ubq.psf     # Protein topology file: required by NAMD
</pre>

To load the NAMD program, we use the OSG Distributed Environment Modules on login.osgconnect.net. Here is our job wrapper script:
<pre class="file">
#!/bin/bash
source /cvmfs/oasis.opensciencegrid.org/osg/modules/lmod/current/init/bash    # sets up the module environment
module load namd/2.9    # Loads the NAMD module version 2.9
namd2 ubq_gbis_eq.conf > ubq_gbis_eq.log    # executes NAMD simulation 
</pre> 


In the ==namd_run.submit== job description file, we need to tell HTCondor that the files ==par_all27_prot_lipid.inp==, ==ubq_gbis_eq.conf==, ==ubq.pdb==, and ==ubq.psf==  are required by our NAMD simulation for execution on the remote worker.

<pre class="file">
Universe = vanilla
Executable = namd_run.sh
transfer_input_files = -------------------------------------
output  = job.out
error = job.error
log = job.log
requirements = (HAS_CVMFS_oasis_opensciencegrid_org =?= TRUE)
Queue 1
</pre>
and fill the missing values. 


Now submit the job
<pre class="screen">
%UCL_PROMPT_SHORT% <strong>condor_submit namd_run.submit </strong>
</pre>

Once the job finished (may take 3-5 minutes  run time) you will see bunch of output files (trajectory, log file with energy, velocity and so on).


---++ On your own

Sometimes when you have a lot of input files it makes more sense to compress them before sending them with a job. For this exercise, we want to compress our four NAMD input files and send them to the remote worker node. 

For this part of the exercise, you will need to:

1. Compress the input files using the =tar= command

2. Modify =transfer_input_files= in the file =namd_run.submit= to transfer your compressed file

3. Edit =namd_run.sh= and add a line to decompress the input files.

HINT: Compressing files
<pre class="screen">
%UCL_PROMPT_SHORT% <strong> tar -cvzf [compressed filename] [list of files] </strong>
</pre>

Replace =-c= with =-x= to decompress. Refer to the slides if you get confused.

%BR%
-- Main.BalamuruganDesinghu - 23 Jul 2015