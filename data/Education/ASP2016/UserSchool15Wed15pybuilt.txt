%META:TOPICINFO{author="ChristinaKoch" date="1437084558" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="UserSchool15Materials"}%
<style type="text/css">
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
</style>

---+ Wednesday Exercise 1.6: Using python, pre-built

Alternative way to handle python - still using a shell script, but instead of installing fresh, pre-build and untar

---++ Interactive job for pre-building

Create =build.submit= file 

<pre class="file">
universe = vanilla

output = build.out
error = build.err
log = build.log

should_transfer_files = YES
when_to_transfer_output = ON_EXIT

transfer_input_files = Python-2.7.10.tgz

queue
</pre>

<pre class="screen">
%UCL_PROMPT_SHORT% <strong>condor_submit -i build.submit</strong>
</pre>

Run through same installation steps as before: suggestion: install to new directory in order to make tar step easier.  

<pre class="screen">
%UCL_PROMPT_SHORT% <strong>mkdir python</strong>
%UCL_PROMPT_SHORT% <strong>tar xzf Python-2.7.10.tgz</strong>
%UCL_PROMPT_SHORT% <strong>cd Python-2.7.10</strong>
%UCL_PROMPT_SHORT% <strong>./configure --prefix=$(pwd)/../python</strong>
%UCL_PROMPT_SHORT% <strong>make</strong>
%UCL_PROMPT_SHORT% <strong>make install</strong>
%UCL_PROMPT_SHORT% <strong>cd ..</strong>
</pre>

Now we have a good python installation in the =python= subdirectory of our working directory.  Just tar it up!
<pre class="screen">
%UCL_PROMPT_SHORT% <strong>tar czf built_python.tar.gz python/</strong>
%UCL_PROMPT_SHORT% <strong>exit</strong>
</pre>

Pre-built tar package will return with us.  

---++ Wrapper script

Our wrapper script this time will much simpler.  Since we've already done all the installation steps and tarred results, 
just need to untar.  Access installation using the same two methods of previous exercise.  

---++ Submit file

Make copy of previous submit file (=python.submit=), named =python.submit=.  Which lines to change?  

* executable =run_fib.sh=
* transfer_input_files =fibonacci.py=, python source

think about how much space you need!  

submit job

<pre class="screen">
%UCL_PROMPT_SHORT% <strong>condor_submit matlab.submit</strong>
</pre>

Check =.out= file to see if job completed.  
