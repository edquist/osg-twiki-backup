%META:TOPICINFO{author="AlainRoy" date="1279462361" format="1.1" reprev="1.4" version="1.4"}%
%META:TOPICPARENT{name="CondorExercisesOSS2010"}%
---+ A few tips and tricks

<div style="margin-left: 1em; margin-right: 1em; border: 1px solid black; padding: 0.5em;">
---+++ Objective of this exercise
This exercise will teach you a few nifty commands to help you use Condor more easily.
</div>

---++ Tips for condor_q

You're been using =condor_q=, but it shows the jobs of everyone who submitted from the computer you are running the command on. If you want to see just your jobs, try this: 

<pre style="margin-left:4em" class="screen">
% condor_q -sub %RED%YOUR-LOGIN-NAME%ENDCOLOR%
</pre>

Curious where your jobs are running? Use the =-run= option to see where jobs are running. (Idle jobs are not shown.) 
<pre style="margin-left:4em" class="screen">
% condor_q -run
-- Submitter: vdt-itb.cs.wisc.edu : <198.51.254.90:39927> : vdt-itb.cs.wisc.edu
 ID      OWNER            SUBMITTED     RUN_TIME HOST(S)         
60283.0   roy             7/7  18:23   0+00:00:04 slot1@miniosg-c01.cs.wisc.edu
60283.1   roy             7/7  18:23   0+00:00:04 slot2@miniosg-c01.cs.wisc.edu
60283.2   roy             7/7  18:23   0+00:00:04 slot3@miniosg-c01.cs.wisc.edu
</pre>

=condor_q= can also show you your job !ClassAd. Recall back to the lecture and the discussion of !ClassAds. For instance, you can look at the !ClassAd for a single job:

<pre style="margin-left:4em" class="screen">
% condor_q -l 64049

-- Submitter: vdt-itb.cs.wisc.edu : <198.51.254.90:53928> : vdt-itb.cs.wisc.edu
ClusterId = 64049
QDate = 1279461306
CompletionDate = 0
Owner = "roy"
RemoteWallClockTime = 0.000000
LocalUserCpu = 0.000000
LocalSysCpu = 0.000000
RemoteUserCpu = 0.000000
RemoteSysCpu = 0.000000
ExitStatus = 0
... output trimmed ... 
</pre>

There are some interesting parts you can check out. For instance, where is the job running? 

<pre style="margin-left:4em" class="screen">
% condor_q -l 64049 | grep RemoteHost
RemoteHost = "slot1@miniosg-c02.cs.wisc.edu"
</pre>

How many times has this job run? (It might be more than one if there were recoverable errors.)

<pre style="margin-left:4em" class="screen">
% condor_q -l 64049 | grep JobRunCount
JobRunCount = 1
</pre>

Where is the user log for this job? This is helpful when you assist someone else in debugging and they're not sure.

<pre style="margin-left:4em" class="screen">
% condor_q -l 64049 | grep UserLog
UserLog = "/home/roy/test-blast/run-blast.log"
</pre>

What the job's requirements? Condor automatically fills some in for you, to make sure your job runs on a reasonable computer in our cluster, but you can override any of these. I've broken the output into multiple lines to explain it to you.

<pre style="margin-left:4em" class="screen">
% condor_q -l 64049 | grep Requirements
Requirements = ((Arch =!= ""))  # %RED% Make sure you run on a reasonable architecture. We hacked this for technical reasons, ask Alain if you're curious. %ENDCOLOR%
    && (OpSys == "LINUX") # %RED% Make sure you run on Linux %ENDCOLOR%
    && (Disk >= DiskUsage) # %RED% Make sure the default disk Condor is on has enough disk space for your executable. Question: What is DiskUsage? %ENDCOLOR%
    && (((Memory * 1024) >= ImageSize)  # %RED% Make sure there is enough memory for your executable. Question: What is ImageSize? %ENDCOLOR%
    && ((RequestMemory * 1024) >= ImageSize))  # %RED% An extra complication, similar to the previous one. Question: What is RequestMemory? %ENDCOLOR%
    && (HasFileTransfer) # %RED% Only run on a computer that can accept your files. %ENDCOLOR%
</pre>

---++ Tips for condor_status

Curious about what jobs are being run right now? 

<pre style="margin-left:4em" class="screen">
% condor_status -claimed

Name          OpSys       Arch   LoadAv RemoteUser           ClientMachine  

slot1@miniosg LINUX       INTEL  0.000  roy@vdt-itb.cs.wisc. vdt-itb-interna
slot2@miniosg LINUX       INTEL  0.000  roy@vdt-itb.cs.wisc. vdt-itb-interna
                     Machines         MIPS       KFLOPS   AvgLoadAvg

         INTEL/LINUX        2         9486      2885154   0.000

               Total        2         9486      2885154   0.000
</pre>

Curious about who has submitted jobs? Note that you see =osg-edu.cs.wisc.edu= in the output. That's another computer in our Condor pool. You'll be using it later. It has a separate queue from the one on =vdt-itb=.

<pre style="margin-left:4em" class="screen">
% condor_status -submitters

Name                 Machine      Running IdleJobs HeldJobs

osgedu@cs.wisc.edu   osg-edu.cs         0        0        0
bbockelm@vdt-itb.cs. vdt-itb.cs         0        1        0
roy@vdt-itb.cs.wisc. vdt-itb.cs         3        0        0
                           RunningJobs           IdleJobs           HeldJobs

bbockelm@vdt-itb.cs.                 0                  1                  0
  osgedu@cs.wisc.edu                 0                  0                  0
roy@vdt-itb.cs.wisc.                 3                  0                  0

               Total                 3                  1                  0
</pre>

Or perhaps you want to know all the machines from which you can submit jobs: 

<pre style="margin-left:4em" class="screen">
% condor_status -schedd

Name                 Machine    TotalRunningJobs TotalIdleJobs TotalHeldJobs 

osg-edu.cs.wisc.edu  osg-edu.cs                0             0              0
vdt-itb.cs.wisc.edu  vdt-itb.cs                3             1              0
                      TotalRunningJobs      TotalIdleJobs      TotalHeldJobs

                    
               Total                 3                  1                  0
</pre>

Just like we could look at the !ClassAd for a job, we can also look at them for computers. 

<pre style="margin-left:4em" class="screen">
% condor_status -l slot1@miniosg-c01.cs.wisc.edu
MyType = "Machine"
TargetType = "Job"
Name = "slot1@miniosg-c01.cs.wisc.edu"
Rank = 0.000000
CpuBusy = ((LoadAvg - CondorLoadAvg) >= 0.500000)
SlotWeight = Cpus
Unhibernate = MY.MachineLastMatchTime =!= UNDEFINED
MyCurrentTime = 1279461870
Machine = "miniosg-c01.cs.wisc.edu"
... output trimmed ...
</pre>

Some features of interest:

<pre style="margin-left:4em" class="screen">
%RED%# The computer's name %ENDCOLOR%
% condor_status -l slot1@miniosg-c01.cs.wisc.edu | grep -i Name
Name = "slot1@miniosg-c01.cs.wisc.edu"

%RED%# The computer's other name. %ENDCOLOR%
% condor_status -l slot1@miniosg-c01.cs.wisc.edu | grep -i ^Machine
Machine = "miniosg-c01.cs.wisc.edu"

%RED%# The state of the computer? %ENDCOLOR%
% condor_status -l slot1@miniosg-c01.cs.wisc.edu | grep -i ^State
State = "Unclaimed"

%RED%# The version of Condor this computer is running. %ENDCOLOR%
% condor_status -l slot1@miniosg-c01.cs.wisc.edu | grep CondorVersion
CondorVersion = "$CondorVersion: 7.4.2 Mar 29 2010 BuildID: 227044 $"

%RED%# When this computer will start jobs. %ENDCOLOR%
% condor_status -l slot1@miniosg-c01.cs.wisc.edu | grep -E "(^Start |Requirements)"
Start = ((KeyboardIdle > 15 * 60) && (((LoadAvg - CondorLoadAvg) <= 0.300000) || (State != "Unclaimed" && State != "Owner")))
Requirements = (START) && (IsValidCheckpointPlatform)

%RED%# How many CPUs this computer has %ENDCOLOR%
% condor_status -l slot1@miniosg-c01.cs.wisc.edu | grep  TotalCpus
TotalCpus = 8
</pre>

What else can you find that's interesting in the !ClassAd?

---++ Removing jobs

If you submit a job that you realize has a problem, you can remove it with =condor_rm=. For example: 

<pre style="margin-left:4em" class="screen">
% condor_q
-- Submitter: vdt-itb.cs.wisc.edu : <198.51.254.90:39927> : vdt-itb.cs.wisc.edu
 ID      OWNER            SUBMITTED     RUN_TIME ST PRI SIZE CMD               
60286.0   roy             7/7  18:28   0+00:00:01 R  0   0.7  simple 20 10      

1 jobs; 0 idle, 1 running, 0 held

% condor_rm 60286
Cluster 60286 has been marked for removal.

 % condor_q
-- Submitter: vdt-itb.cs.wisc.edu : <198.51.254.90:39927> : vdt-itb.cs.wisc.edu
 ID      OWNER            SUBMITTED     RUN_TIME ST PRI SIZE CMD               

0 jobs; 0 idle, 0 running, 0 held
</pre>

A few tips:

   * You can remove all of your jobs with the -all option.
   * You can't remove other users jobs.
   * There are [[http://www.cs.wisc.edu/condor/manual/v7.4/condor_rm.html][fancy options to condor_rm]].  

---++ Historical information
You can see information about jobs that completed and are no longer in the queue with the =condor_history_ command. It's rare that you want to see *all* the jobs, so try looking at jobs for just you:

<pre style="margin-left:4em" class="screen">
condor_history %RED%USERNAME%ENDCOLOR%
</pre>

For example:
<pre style="margin-left:4em" class="screen">
 % condor_history roy
 ID      OWNER            SUBMITTED     RUN_TIME ST   COMPLETED CMD            
60244.0   roy             6/24 17:25   0+00:00:00 X   ???        /home/roy/test/
60244.1   roy             6/24 17:25   0+00:00:00 X   ???        /home/roy/test/
60244.2   roy             6/24 17:25   0+00:00:00 X   ???        /home/roy/test/
60244.3   roy             6/24 17:25   0+00:00:00 X   ???        /home/roy/test/
60244.4   roy             6/24 17:25   0+00:00:00 X   ???        /home/roy/test/
60244.5   roy             6/24 17:25   0+00:00:00 X   ???        /home/roy/test/
60246.0   roy             6/25 09:12   0+00:00:00 X   ???        /home/roy/test/
60246.1   roy             6/25 09:12   0+00:00:00 X   ???        /home/roy/test/
60246.2   roy             6/25 09:12   0+00:00:00 X   ???        /home/roy/test/
60246.3   roy             6/25 09:12   0+00:00:00 X   ???        /home/roy/test/
60246.4   roy             6/25 09:12   0+00:00:00 X   ???        /home/roy/test/
60246.5   roy             6/25 09:12   0+00:00:00 X   ???        /home/roy/test/
60251.0   roy             6/25 17:53   0+00:00:36 C   6/25 17:56 /home/roy/test/
60252.0   roy             6/25 17:57   0+00:00:36 C   6/25 18:06 /home/roy/test/
60253.4   roy             6/25 18:08   0+00:00:01 C   6/25 18:08 /home/roy/test/
60253.1   roy             6/25 18:08   0+00:00:36 C   6/25 18:11 /home/roy/test/
60253.5   roy             6/25 18:08   0+00:00:42 C   6/25 18:11 /home/roy/test/
...
</pre>
