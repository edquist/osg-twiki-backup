%META:TOPICINFO{author="LincolnBryant" date="1438109797" format="1.1" version="1.13"}%
%META:TOPICPARENT{name="UserSchool15Materials"}%
<style type="text/css">
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
</style>

---+ !!Transferring data via HTTP plugin
%TOC%

The goal of this exercise is to use the HTTP protocol to download data from remote web servers. This exercise builds off of the NAMD example from [[UserSchool15Thu31DataJob][Exercise 2.1]], but uses a new method to retrieve the job data.

Finally, we'll write a job that uses OSG's HTTP caches.

---++ Background

Amazon Web Services (AWS) is a "public cloud infrastructure", which is a collection of paid computing services. For this tutorial, we have uploaded the NAMD files to the Amazon's Simple Storage Service (S3) for you. Your task will be to write a job to download the input files from _the cloud_ and run NAMD.

<center>
<img src="%ATTACHURLPATH%/data_tranfer_aws.jpg" alt="data_tranfer_aws.jpg" width='400' height='300'/>
</center>

---++ Setup
First, we'll need our NAMD script from previous exercises. You can either copy the =namd_run.sh= script from [[UserSchool15Thu31DataJob][Exercise 2.1]], or from =/stash/public/userschool2015/namd= on OSG Connect. 

We'll want to create a submit file and transfer the input data from AWS. 

The input files you need for this exercise are located here:
| http://s3-us-west-2.amazonaws.com/osg-user-school/namd/par_all27_prot_lipid.inp |
| http://s3-us-west-2.amazonaws.com/osg-user-school/namd/ubq_gbis_eq.conf |
| http://s3-us-west-2.amazonaws.com/osg-user-school/namd/ubq.pdb |
| http://s3-us-west-2.amazonaws.com/osg-user-school/namd/ubq.psf |

As in the previous exercise, we need to tell HTCondor where to find the input files. HTCondor makes this very simple to do: just create a comma-separated list of HTTP links after =transfer_input_files=.

You can get started using the template below:

<pre class="file">
universe = vanilla
executable = namd_run.sh
transfer_input_files = 
output =
error = 
log = 
requirements = (HAS_CVMFS_oasis_opensciencegrid_org =?= TRUE)
queue
</pre>

Remember that the =requirements= line is needed to tell HTCondor to only match against job slots that have the OASIS software library available. Don't forget to specify the =output=, =error=, and =log=!

Once done, submit the job. We called ours =namd_run.submit=:
<pre class="screen">
%UCL_PROMPT_SHORT% condor_submit namd_run.submit
</pre>

Again, the job should run 5 minutes or so. If the job was successful, you should see a bunch of output files in the directory you submitted from. You can verify that the input files were downloaded by looking at the =output= file you created in your job. To dot his, just =grep= for the output as before:

<pre class="screen">
%UCL_PROMPT_SHORT% grep "Files in the current directory" job.out
Files in the current directory: _condor_stderr _condor_stdout condor_exec.exe par_all27_prot_lipid.inp ubq.pdb ubq.psf ubq_gbis_eq.conf
</pre>

---++ Copying data from Stash

Stash is OSG Connect's data service. Copying data from Stash (stash.osgconnect.net) is much the same as copying data from any other HTTP server. For this example, we'd like you to copy data to a worker node from your public directory on OSG Connect.

<center>
<img src="%ATTACHURLPATH%/data_tranfer_stash.jpg" alt="data_tranfer_stash.jpg" width='400' height='300'/>
</center>

The example files are located under the directory ==namd-ct-stash==.

<pre class="screen">
%UCL_PROMPT_SHORT% <strong>cd ~/namd/namd-ct-stash </strong>
%UCL_PROMPT_SHORT% <strong>ls </strong>
namd_run.sh    # Job wrapper script to execute namd job
</pre>

As before, we have our namd_run.sh and our input files. For this exercise, first copy the input data files to =~/public=. (Recall that =~= is an alias for =/home/your_username=), and create a job submit script that transfers the files from =http://stash.osgconnect.net/+your_username/path/to/files=



-- Main.BalamuruganDesinghu - 23 Jul 2015

%META:FILEATTACHMENT{name="data_tranfer_aws.jpg" attachment="data_tranfer_aws.jpg" attr="" comment="Data transfer from AWS server" date="1437761750" path="data_tranfer_aws.jpg" size="38912" stream="data_tranfer_aws.jpg" tmpFilename="/usr/tmp/CGItemp9882" user="BalamuruganDesinghu" version="1"}%
%META:FILEATTACHMENT{name="data_tranfer_stash.jpg" attachment="data_tranfer_stash.jpg" attr="" comment="" date="1437768432" path="data_tranfer_stash.jpg" size="40123" stream="data_tranfer_stash.jpg" tmpFilename="/usr/tmp/CGItemp6502" user="LincolnBryant" version="1"}%
