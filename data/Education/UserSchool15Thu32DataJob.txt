%META:TOPICINFO{author="SuchandraThapa" date="1437756620" format="1.1" version="1.5"}%
%META:TOPICPARENT{name="UserSchool15Materials"}%
<style type="text/css">
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
</style>


----+ AWS server to worker node

Now, we'll look at running jobs that get their input from a web server.  For example, jobs may download reference data from the protein databank (PDB) or some reference data from NIST.  In this example, we'll download NAMD input data from a AWS server.

<pre class="screen">
%UCL_PROMPT_SHORT% <strong>cd namd-condor/namd-ct-web </strong>
%UCL_PROMPT_SHORT% <strong>ls </strong>
</pre>

<pre class="file">
namd_run.sh    # Job wrapper script to execute namd job
namd_run.submit    # Condor job description file
</pre>
We see only two files.  Input files are located at http://s3-us-west-2.amazonaws.com/osg-user-school/namd in AWS server. As we did in the previous exercise,  we need to tell condor that ==par_all27_prot_lipid.inp==, ==ubq_gbis_eq.conf==, ==ubq.pdb==, and ==ubq.psf==  files are required by NAMD simulation for execution on remote worker machine.


<pre class="file">
Universe = vanilla
Executable = namd_run.sh
transfer_input_files =  ----------------------------
should_transfer_files = yes
output        = job.out
error         = job.error
log           = job.log
requirements = (HAS_CVMFS_oasis_opensciencegrid_org =?= TRUE)
Queue 1
</pre>

To see how it works
<pre class="screen">
%UCL_PROMPT_SHORT% <strong>condor_submit namd_run.submit </strong>
</pre>

After the completion of job, run

<pre class="screen">
%UCL_PROMPT_SHORT% <strong> tail -n 2 ubq_gbis_eq.log   </strong>
</pre>

and if you see the following two lines
<pre>
WallClock: 95.105576  CPUTime: 95.105576  Memory: 57.796875 MB
Program finished.
</pre> 
your job is successful. 


-- Main.BalamuruganDesinghu - 23 Jul 2015