%META:TOPICINFO{author="RachanaAnanthakrishnan" date="1150838239" format="1.0" version="1.5"}%
%META:TOPICPARENT{name="SummerGridSyllabus2006"}%
<html>

<head>
<title>Grid Summer School Lab Exercise 2: Security</title>
<style>
.transcript
{
	 background-color: #FFFFBA;
	 border: thin solid #02007F;
	 padding: 3pt;
	 width: auto;
}

  .in {color:#0000FF; }
  .out {color:#006600;}
</style>

</head>

<body>

<h1> Grid Summer School Lab Exercise 2: Security </h1>

<h2> Introduction </h2>

<p> FILL ME: What is the goal of this exercise, what does it cover. </p>

<p>These notes have been written to lead the students through
the exercises on their own and provide command to type, expected
output and notes highlighting the key aspects of a particular
step. </p>

<p> The exercise notes was prepared by running as user <i>ranantha</i>. Replace that with your username in all command line parameters.</p>

<p>Also, you will see two styles of machine text here:</p>
<pre class="in transcript">Text like this is input that you should type.</pre>
<pre class="out transcript">Text like this is the output you should get.</pre>

<p>For example:</p>

<p class="transcript">
<code><span class="out">$</span> <span class="in">date</span><br />
<span class="out">Wed May 31 11:54:58 BST 2006</span></code>
</p>

<ol>

<li> <h3> Basic steps</h3>

<ol>
<li> <h4> Logging on to remote machine </h4>

<p> From local laptop ssh into remote machine. FILLME: details on infrastructire ? What is that cluster called </p>

<p class="transcript">
<code>
<span class="out">@:~></span>
<span class="in">
ssh gridlab1.phys.utb.edu
</span><br>
<span class="out">
Enter passphrase for key '/homes/ranantha/.ssh/id_rsa':<br> 
Last login: Tue Jun 20 12:04:39 2006 from 140.221.9.72<br>
[ranantha@gridlab1 ~]$ 
</span></code>
</p>
</li>

<li> <h4> Check GLOBUS_LOCATION setup  </h4>

The machine is set up with Globus Toolkit install and an
environment variable GLOBUS_LOCATION pointing to the install should be
set up.

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">echo $GLOBUS_LOCATION</span>
<span class="out">/opt/globus
[ranantha@gridlab1 ~]$ 
</span>
</pre>

<p> The command like client that are installed as part of Globus Toolkit have already been added to your PATH.</p>
</li>
</ol>

<li> <h3> Certificates </h3>

<ol>
<li> <h4> Default Credential Location </h4>

<p> By default the user certificate and user key are installed in
<code>~/.globus</code>. Unless overriden explicitly on command line,
the clients use these credentials. </p>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">ls -lt ~/.globus/</span>
<span class="out">total 8
-rw-------  1 ranantha ranantha 963 Jun 20 10:04 userkey.pem
-rw-r--r--  1 ranantha ranantha 814 Jun 20 10:04 usercert.pem
[ranantha@gridlab1 ~]$ </span>
</pre>

<p><b>Notes:</b>
<ul>

<li> The userkey.pem is the file containing encrypted private key. The
permissions on that file are restrictive, such that only the owner can
read or write to that file.
<li> The usercert.pem is the certificate, containting the public
key. This file is not encrypted and can be distributed freely.
</ul>
</p>
</li>

<li> <h4> Certificate Contents </h4>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-cert-info</span>
<span class="out">Certificate:
	 Data:
		  Version: 3 (0x2)
		  Serial Number: 2373 (0x945)
		  Signature Algorithm: md5WithRSAEncryption
		  Issuer: C=US, O=Globus Alliance, CN=Globus Certificate Service
		  Validity
				Not Before: Jan  6 19:20:39 2005 GMT
				Not After : Jan  4 19:25:39 2015 GMT
		  Subject: C=US, O=Globus Alliance, OU=User, CN=101497d3dcd.3dcd5aef
		  Subject Public Key Info:
				Public Key Algorithm: rsaEncryption
				RSA Public Key: (1024 bit)
					 Modulus (1024 bit):
						  00:ba:3c:28:bb:0c:8b:a8:d9:8f:95:47:e8:40:13:
						  f4:71:54:8b:2a:24:47:0b:d1:1c:15:20:ed:b7:6b:
						  df:d6:d3:05:7e:90:bc:52:14:0c:db:cf:4b:ca:21:
						  ef:75:be:da:5f:d4:24:cf:34:7f:3e:29:c3:e1:2d:
						  63:9c:91:f2:3e:41:de:90:15:d5:be:b7:5c:87:bb:
						  2a:3e:b2:19:a4:66:fc:24:2f:ac:a7:e1:4a:6c:c2:
						  ed:07:a2:46:a3:73:db:da:83:6f:9b:36:83:17:1a:
						  8d:58:5a:e6:9c:54:fe:6b:63:77:ea:f6:f8:cb:a7:
						  1d:36:06:1b:e5:8a:c7:6b:bb
					 Exponent: 65537 (0x10001)
		  X509v3 extensions:
				Netscape Cert Type: 
					 SSL Client, SSL Server
	 Signature Algorithm: md5WithRSAEncryption
		  36:dc:ed:e0:6a:50:68:84:de:27:0c:2c:11:85:cb:59:80:4c:
		  2c:49:0c:d0:4a:5a:04:89:6b:57:56:5c:a2:6b:3a:fa:c4:45:
		  cb:b1:66:dd:8b:c3:f4:31:23:7c:50:23:28:ee:27:ff:82:27:
		  57:cb:b9:14:64:e9:06:70:d7:07:43:e9:2a:86:80:65:57:87:
		  3c:01:e0:c6:dd:e8:5a:4b:c8:be:40:7f:d7:a8:91:77:54:1d:
		  93:93:fd:38:54:4e:55:1a:1f:6d:03:a7:44:c4:9f:ba:47:85:
		  e7:e2:81:67:f4:56:84:c9:4f:c6:57:f8:53:75:ab:b9:26:63:
		  a0:79
[ranantha@gridlab1 ~]$ 
</span></pre>

<p> <b> Notes:</b>
  <ul>
	 <li> Since no parameters were specified on command line, the
	 default credentials were used. Try the same command with
	 <code>-help</code> to look at other options. We will use some
	 later in the exercise.

	 <li> Issuer DN is the DN of the Certificate Authority who issues
	 the certificate.

	 <li> Note that the certificate has validity that determines valid
	 from and valid till.

	 <li> The <i>Subject:</i> is the Distinguished Name that this
	 certificate is bound to.

	 <li> The Key information is the public key

	 <li> The CA generates a digest of the key and other binding
	 information (validity, DN and so on) and signs it. The signature
	 is included at the end of the cerificate.

	 <li> The algorithm used to generate digest and sign is important
		  information, since the same algorithms should be applied at
		  verification.
  </ul>
</p>
</li>

<li> <h4> Using certificates to transfer file </h4>

<p>The client <i>globus-url-copy</i> can be used to transfer files on the grid. It uses the GridFTP server to transfer the files. This requires that the client who is requesting transfer have valid credentials and be authorized to the transfer. We will go into authorization step later, for now you are already authorized, so lets try the  client.</p>

<ol>
<li> In case you already have a proxy, run the following. If not, proceed to next step.

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-proxy-destroy </span>
<span class="out">[ranantha@gridlab1 ~]$ </span>
</pre>

<p> If the above returns an error, like following, ignore and proceed to next step.

<pre class="transcript"/>
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-proxy-destroy </span>
<span class="out">ERROR: Proxy file doesn't exist or has bad permissions
Use -debug for further information.
[ranantha@gridlab1 ~]$ </span>
</pre>
</li>

<li> Set environment variables so that certificate and key are used, since by default <i>globus-url-copy</i> uses proxy certificates.

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">export X509_USER_CERT=.globus/usercert.pem</span>
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">export X509_USER_KEY=.globus/userkey.pem</span>
<span class="out">[ranantha@gridlab1 ~]$ </span>
</pre>

<li> Create a temporary file to move using <i>globus-url-copy</i>.

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">more tempFile
</span><span class="out">Temporary file for testing globus-url-copy
[ranantha@gridlab1 ~]$ </span>
</pre>
</li>

<li> Use <i>globus-url-copy</i> to move the file. 

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">globus-url-copy gsiftp://localhost:2811/home/ranantha/tempFile gsiftp://loclahost:2811/home/ranantha/destFile</span>
<span class="out">
error: globus_xio: Unable to connect to loclahost:2811
globus_xio: globus_libc_getaddrinfo failed.
globus_common: Name or service not known
[ranantha@gridlab1 ~]$ globus-url-copy gsiftp://localhost:2811/home/ranantha/tempFile gsiftp://localhost:2811/home/ranantha/destFile

error: globus_ftp_control: gss_init_sec_context failed
globus_gsi_gssapi: Error with gss credential handle
globus_credential: Valid credentials could not be found in any of the possible locations specified by the credential search order.
Valid credentials could not be found in any of the possible locations specified by the credential search order.

Attempt 1

globus_credential: Error reading host credential
globus_sysconfig: Error with certificate filename
globus_sysconfig: Error with certificate filename
globus_sysconfig: File is not owned by current user: /etc/grid-security/hostcert.pem is not owned by current user

Attempt 2

globus_credential: Error reading proxy credential
globus_sysconfig: Could not find a valid proxy certificate file location
globus_sysconfig: Error with key filename
globus_sysconfig: File does not exist: /tmp/x509up_u502 is not a valid file

Attempt 3

globus_credential: Error reading user credential
globus_credential: Key is password protected: GSI does not currently support password protected private keys.
OpenSSL Error: pem_lib.c:401: in library: PEM routines, function PEM_do_header: bad password read

[ranantha@gridlab1 ~]$ </span>
</pre>

</li>


<p><b>Notes:</b>
<ul>
<li> The command attempts to use host credentials (FILLME), then proxy
(that does not exist) and then finally attempts to use user
credentials.
<li> The command failed since the private key is encrypted.
<li> A warm body will be required each time to enter the
passphrase. To alleviate the problems ssociated with this, that is to
sign on once and run numerous time, we use proxies.  </ul>
</p>

<li> Unset variables to use default locations
<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">unset X509_USER_CERT</span>
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">unset X509_USER_KEY</span>
<span class="out">[ranantha@gridlab1 ~]$ </span>
</pre>


</ol>
</li>
</ol>

<li> <h3>Proxy certificates</h3>
<ol>
<li> <h4>Creating proxy certificate</h4>

<p> The command <i>grid-proxy-init</i> is used to create proxies.</p>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-proxy-init</span>
<span class="out">Your identity: /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef
Enter GRID pass phrase for this identity:
Creating proxy .......................................... Done
Your proxy is valid until: Tue Jun 20 22:59:16 2006
[ranantha@gridlab1 ~]$ </span>
</pre>

<p><b>Notes:</b>
<ul>
<li> The proxy is created using the user certificate and the key.
<li> The passphrase entered is used to decrypt the private key file.
</ul>
</p>
</li>

<li> <h4>Contents of proxy</h4>


<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-proxy-info -all</span>
<span class="out">subject  : /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef/CN=1910646236
issuer	: /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef
identity : /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef
type	  : Proxy draft (pre-RFC) compliant impersonation proxy
strength : 512 bits
path	  : /tmp/x509up_u502
timeleft : 10:54:19
[ranantha@gridlab1 ~]$ </span>
</pre>

<p><b>Notes:</b>
<ul>
<li> The subject of the proxy certificate is the distingushed name from certificate appended with a uniqe string of numbers.
<li> The issuer of the proxy is the user certificate itself. So there is a chain of trust from CA to user certificate to proxy certificate.
<li> The path indicates where the proxy is stored. That is the default location for uid 502.
<li> Time left indicates the validity of the proxy from current time.  
</ul>
</p>
</li>

<p> The proxy certificate contains the private key generated for proxy, correspnding public key and is signed like a certificate by the user certificate. So we can run <i>grid-cert-info</i> on the proxy certificate to see its contents.</p>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-cert-info -file /tmp/x509up_u502</span>
<span class="out">Certificate:
	 Data:
		  Version: 3 (0x2)
		  Serial Number: 1756593594 (0x68b37dba)
		  Signature Algorithm: md5WithRSAEncryption
		  Issuer: C=US, O=Globus Alliance, OU=User, CN=101497d3dcd.3dcd5aef
		  Validity
				Not Before: Jun 20 17:02:31 2006 GMT
				Not After : Jun 20 17:08:31 2006 GMT
		  Subject: C=US, O=Globus Alliance, OU=User, CN=101497d3dcd.3dcd5aef, CN=1756593594
		  Subject Public Key Info:
				Public Key Algorithm: rsaEncryption
				RSA Public Key: (512 bit)
					 Modulus (512 bit):
						  00:d7:32:f5:3e:69:48:cc:ea:35:35:9d:e6:ae:47:
						  57:eb:70:ef:21:89:6a:e2:57:cd:3d:12:88:6b:43:
						  ed:db:7e:c1:1f:18:2c:85:a5:d6:07:01:a8:57:0e:
						  d5:eb:b0:cc:81:ff:ae:fe:88:7d:b4:d3:1d:8f:c7:
						  30:10:04:c1:45
					 Exponent: 65537 (0x10001)
		  X509v3 extensions:
				1.3.6.1.4.1.3536.1.222: critical
					 0.0
..+.......
	 Signature Algorithm: md5WithRSAEncryption
		  26:e2:2d:6d:c1:31:34:a2:85:0e:72:31:d8:90:e2:a9:ce:80:
		  be:08:5f:f9:7b:d4:9d:d5:d2:e6:57:d2:20:21:ea:8e:ba:64:
		  89:e9:7b:ec:83:ec:89:d2:c7:dd:21:f0:a0:2f:69:a0:88:a5:
		  b5:0c:e4:41:7f:b9:b3:1d:c1:75:7e:65:c9:ab:1c:bb:c7:36:
		  41:8e:09:b8:99:b2:61:0c:c1:23:cc:9d:d2:bd:b0:14:95:8d:
		  e3:75`:41:dc:0c:42:ab:5c:4c:13:f8:9f:32:2d:72:83:5f:26:
		  4f:62:ff:5d:bf:cd:bc:8a:c9:58:82:ba:09:b8:65:c9:68:83:
		  35:43
[ranantha@gridlab1 ~]$ </span>
</pre>

<p><b>Notes:</b>
<ul>
<li> This is useful when we want to see the exact valid from and valid till of the proxy certificate.
<li> The contents are similar to the certificate, but the issuer is the user certificate DN.
</ul>
</p>

<li> <h4>Using Proxy Certificate to transfer file</h4>

<p> 

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">globus-url-copy gsiftp://localhost:2811/home/ranantha/tempFile gsiftp://localhost:2811/home/ranantha/destFile</span><span class="out">
[ranantha@gridlab1 ~]$ </span><span class="in">ls -lt destFile</span><span class="out">
-rw-r--r--  1 ranantha ranantha 52 Jun 20 10:59 destFile</span><span class="out">
[ranantha@gridlab1 ~]$ </span><span class="in">more destFile</span>
<span class="out">Temporary file for testing globus-url-copy
[ranantha@gridlab1 ~]$ </span>
</pre>

<p><b>Notes:</b>
<ul>
<li> <i>globus-url-copy</i> picks up the proxy from default location and uses that to authenticate with the GridFTP server.
</ul>
</p>
</li>

<li> <h4>Proxy lifetime implications</h4>

<p>By default proxy valid for 12 hours is created, but the validity of proxy can be specified on command line.</p>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">date</span>
<span class="out">Tue Jun 20 12:07:14 CDT 2006
[ranantha@gridlab1 ~]$</span>
</pre>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in"> grid-proxy-init -valid 0:1</span>
<span class="out">Your identity: /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef
Enter GRID pass phrase for this identity:
Creating proxy ............................. Done
Your proxy is valid until: Tue Jun 20 12:08:31 2006
[ranantha@gridlab1 ~]$ </span>
</pre>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-proxy-info</span>
<span class="out">subject  : /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef/CN=1756593594
issuer	: /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef
identity : /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef
type	  : Proxy draft (pre-RFC) compliant impersonation proxy
strength : 512 bits
path	  : /tmp/x509up_u502
timeleft : 0:00:50
[ranantha@gridlab1 ~]$</span>
</pre>

<p><b>Notes:</b>
<ul>
<li> The proxy requested was for 1 minute and <i>grid-proxy-info</i> shows the valid time left.
<li> The proxy lifetime cannot be greater than the certificate that issues it.
</ul>
</p>
</li>

<li> <h4>Attempt to use expired proxy</h4>

<p> Wait for a minute after the previous <i>grid-proxy-init</i> run before you try this step. The proxy file will exist, but would have expired.</p>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">date</span>
<span class="out">Tue Jun 20 12:08:44 CDT 2006
[ranantha@gridlab1 ~]$ </span>
</pre>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-proxy-info</span>
<span class="out">subject  : /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef/CN=1756593594
issuer	: /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef
identity : /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef
type	  : Proxy draft (pre-RFC) compliant impersonation proxy
strength : 512 bits
path	  : /tmp/x509up_u502
timeleft : 0:00:00
[ranantha@gridlab1 ~]$ </span>
</pre>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">globus-url-copy gsiftp://localhost:2811/home/ranantha/tempFile gsiftp://localhost:2811/home/ranantha/expiredTest</span>
<span class="out">error: globus_ftp_control: gss_init_sec_context failed
globus_gsi_gssapi: Error with GSI credential
globus_gsi_gssapi: Error with gss credential handle
globus_credential: Error with credential: The proxy credential: /tmp/x509up_u502
		with subject: /C=US/O=Globus Alliance/OU=User/CN=101497d3dcd.3dcd5aef/CN=1756593594
		expired 0 minutes ago.
[ranantha@gridlab1 ~]$ </span>
</pre>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in"> ls -lt expiredTest</span>
<span class="out">ls: expiredTest: No such file or directory
[ranantha@gridlab1 ~]$ </span>
</pre>

<p><b>Notes:</b>
<ul>
<li> The error indicates that the proxy file has expired. So the client was not able to successfully authenticate with server and the file was not transfered.
</ul>
</p>
</li>
</ol>

<li> <h3> Obtaining a new certificate </h3>
 
<p>A valid certificate was already installed for you and configuration
was set up to use it. In this step we will attempt to get a new
certificate from Globus Certificate Service. Globus Certificate
Service(GCS) is a web-based CA service that issues certificates. </p>

<p>These are not secure certificates since anyone can obtain
certificates from this CA and are used here for testing. But since an
infrastructure needs to trust a CA for anyone to use the certificate
issued by the CA, issuing such certificates doesn't pose any security
threat. For instance the certificates you obtain from this CA can be
used to submit jobs or transfer files on the server running on your
local machine, but will fail if you submit jobs on your remote
cluster, since the cluster does not trust GCS CA.</p>

<ol>
<li><p> The first step is to create a certificate request. </p>
<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-cert-request -dir testCerts</span>
<span class="out">A certificate request and private key is being created.
You will be asked to enter a PEM pass phrase.
This pass phrase is akin to your account password, 
and is used to protect your key file.
If you forget your pass phrase, you will need to
obtain a new certificate.

Generating a 1024 bit RSA private key
.............++++++
...++++++
writing new private key to '/home/ranantha/testCerts/userkey.pem'
Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:
...
[ranantha@gridlab1 ~]$ </span>
</pre>

<p><b>Notes:</b>
<ul>
<li> The command will ask for a pass phrase and this is used to encrypt the provate key.
<li> The <constant>-dir</constant> option stores the created certificates in the specified directory. This is so that we don't overwrite the certificates in the default directory
</ul> 
</p>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">ls -lt testCerts/</span><span class="out">total 8
-rw-r--r--  1 ranantha ranantha 1352 Jun 20 15:35 usercert_request.pem
-r--------  1 ranantha ranantha  963 Jun 20 15:35 userkey.pem
-rw-r--r--  1 ranantha ranantha	 0 Jun 20 15:35 usercert.pem
[ranantha@gridlab1 ~]$ </span>
</pre>

<p><b>Notes:</b>
<ul>
<li> The <constant>testCerts</constant> directory has three files. The usercert_request.pem is the request that the CA needs to sign.
<li> The userkey.pem is the file with encrypted private key. Note the permissions on the file.
<li> The usercert.pem is a place holder for the signed certificate obtained from the CA. That file has size zero for now.
</ul>
</p>
</li>

<li> <p>Now the request needs to be signed by the CA. In our case the GCS.The GCS allows for the certificate request to be pasted on to their webpage. In your browser open <a href="http://gcs.globus.org:8080/gcs/index.html">Globus Certificate Service</a></p>
</li>
<li> <p>Click on Acquiring User Certificate under the section
<i>Available Services</i></p>

<li> <p>The steps 1 and 2 have already been completed and the CA
certificate has been installed on your machine.</li></p>

<li> <p>Choose the second option (<i>Paste the certificate request text
in the box below). </i></p>

<li> <p>Open <constant>testCerts/usercert_request.pem</constant> and paste the
complete contents in the text box.</p>

<li><p> The service returns the signed certificate. Copy the contents from <i>----BEGIN CERTIFICATE----</i> to <i>----END CERTIFICATE----</i> into <constant>testCerts/usercert.pem</constant></p>

<li> <h4>Proxy certificate using GCS Certificates</h4>

<p> First we need to ensure the GCS certificates have been installed correctly and a proxy can be generated.</p>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-proxy-init -cert testCerts/usercert.pem -key testCerts/userkey.pem -out gcsProxy -verify
</span><span class="out">Your identity: /C=US/O=Globus Alliance/OU=User/CN=10bf234e01a.ac286cfa
Enter GRID pass phrase for this identity:
Creating proxy .............................. Done
Proxy Verify OK
Your proxy is valid until: Wed Jun 21 03:49:18 2006
[ranantha@gridlab1 ~]$ </span>
</pre>

<p><b>Notes:</b>
<ul>
<li> <constant>-cert</constant> and <constant>-key</constant> options allow for specifying non-default certificate and key file locations.
<li> <constant>-out</constant> allows for non-default proxy file location.
<li> <constant>-verify</constant> ensure that the certificates used to
create proxy and the CA are installed correctly and valid.
</ul>

<p> The contents of this proxy can be viewed using the <i>grid-proxy-info</i>
</p>

<pre class="transcript">
<span class="out">[ranantha@gridlab1 ~]$ </span><span class="in">grid-proxy-info -file gcsProxy </span>
<span class="out">subject  : /C=US/O=Globus Alliance/OU=User/CN=10bf234e01a.ac286cfa/CN=627196307
issuer	: /C=US/O=Globus Alliance/OU=User/CN=10bf234e01a.ac286cfa
identity : /C=US/O=Globus Alliance/OU=User/CN=10bf234e01a.ac286cfa
type	  : Proxy draft (pre-RFC) compliant impersonation proxy
strength : 512 bits
path	  : gcsProxy
timeleft : 11:54:14
[ranantha@gridlab1 ~]$ </span>
</pre>

<p><b>Notes:</b>
<ul>
<li> <constant>-file</constant> allows for non-default proxy file location.
<li> Note that the issuer of the proxy is the DN from your GCS certificate.
</ul>
</p>

</p>
</li>
</ol>

<li> <h3> Using GCS credentials</h3>

<ol>
<li> <h4> Using GCS credentials to submit job to remote server</h4>
<!-- globusrun-ws whoami 

Fails because CA is not trusted 

-->
</li>

<li> <h4> Using GCS credentials to submit job to local server</h4>

<!-- 
globusrun-ws whoami 

Authorization error, since not present in gridmap file. 

-->

</li>

<li> <h4> Using gx-gridmap to add GCS certificate DN to gridmap</h4>

</li>

<li> <h4> Using GCS trusted credentials to submit job to local server</h4>

<!--  credentials to subject job to local server 
-->
</li>

<li> <h4> Submit job to run globus-url-copy on remote machine</h4>
<!--

globusrun-ws g-u-c
-->
</li>

<li> <h4> Submit job with delegation to run globus-url-copy on remote machine</h4>
</li>
</ol>
</li>

<li> <h3> Using MyProxy</h3>

<!-- load proxy 
myproxy-init 

Get copy to local machine 

delete localcopy 

run client that uses my proxy to get credential and submits job 

swap machine with a friend and test a) you can run job client that uses myproxy (whoami, to see it is your login) b) run without myproxy (whoami, friend's login). 

delete from my proxy 

do (19) on your machine to see it fail. 

to top


-->
</li>

</ol>

</li>
</body>

