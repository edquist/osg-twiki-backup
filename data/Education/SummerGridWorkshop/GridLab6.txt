%META:TOPICINFO{author="LaukikChitnis" date="1151179632" format="1.0" version="1.2"}%
%META:TOPICPARENT{name="SummerGridSyllabus2006"}%
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>
<title>Exercises for Lecture 5 - Building, Packaging and Running Applications
on a real Grid</title>
<meta http-equiv="Content-Type" content=" text/html; charset=iso-8859-1">
<!-- style sheet developed by Alain Roy -->
<style type="text/css"><!--
body {
	background-color: white;
	color: black;
}
pre {
	margin-left: 1em;
	padding: 0.5em;
	background-color: #f0f0f0;
	border: 1px solid black;
}
h1 {
	text-align: center;
}
h2 {
	padding-top: 0.5em;
	margin-top: 4em;
	border-top: 2px solid black;
}
h3 {
	padding-top: 0.5em;
	margin-top: 4em;
	border-top: 1px solid #AAAAAA;
}
--></style>
</head>

<body bgcolor="ffffff">
<h1>
Exercises for Lecture 6 - Building, Packaging and Running Applications
on a real Grid</h1>
<!--
The handout is also available online at <A HREF="http://www.cise.ufl.edu/~lchitnis/grid/summer-grid/Exercises5.htm">http://www.cise.ufl.edu/~lchitnis/grid/summer-grid/Exercises5.htm</A>.
-->

<h2>Objectives</h2>
<ul>
<li>Write and Gridify an application
<li>Access OSG/TeraGrid and run simple applications
<li>Monitor the status of OSG/TeraGrid sites
<li>Understand the issues involved in distributing an application
<li>Package the application
</ul>

<h2>Table of Contents</h2>
<ul>
<li><a href="#write">Writing the Application</a>
<li><a href="#gridify">Gridifying the Application</a>
	<ul>
	<li><a href="#run">Running a job on OSG/TeraGrid sites under OSGEDU sites</a>
	</ul>
<li><a href="#condor-g">Using Condor-G to submit jobs</a>
	<ul>
	<li><a href="#ajob">Submit a single job</a>
	<li><a href="#multiple">Submit multiple jobs to multiple sites</a>

	</ul>
<li><a href="#together">Putting it all together</a> 
<li><a href="#packaging">Packaging your appliction</a>
	<ul>
	<li><a href="#download">Download and Install Pacman</a>
	<li><a href="#caches">Pacman Caches</a>
	</ul>
<li><a href="#ref">References</a>

</ul>

<a name="write"></a>
<h2>Writing the application</h2>
<ul>
	 <li>Write a simple application to find whether a number is a prime or not.
	 Sample code is available at <a href="http://www.cise.ufl.edu/~lchitnis/grid/summer-grid/prime.c.html">http://www.cise.ufl.edu/~lchitnis/grid/summer-grid/prime.c.html</a>. The program takes 
three inputs.
	<ol>
		<li>The Number in question
		  <li>Starting factor (&gt;1)
		  <li>Ending factor 
	</ol>

and outputs YES if the number is a prime and NO if it is not.

<li>Login to <code>gridlab1.phys.utb.edu</code>. 
<pre>
<b>
[johndoe@trainingXX ~]$ ssh gridlab1.phys.utb.edu</b>
<b>[johndoe@gridlab1 ~]$ </b> 
	 </pre>



<li>Write (read 'copy-paste') the program and save it as "<code>prime.c</code>" . Compile and execute it locally (on the laptop / gridlab machine)

<pre>
[johndoe@gridlab1 ~]gcc -o prime prime.c
.
(you may ignore any compilation warnings for now as long as there are no errors)
.
[johndoe@gridlab1 ~]./prime 1000 2 1000
</pre>
You should see the following output
<pre>
NO
</pre>
</ul>

<a name="gridify"></a>
<h2>Gridifying the application</h2>
We know that it takes long time to divide the number with all the factors.
So, we will distribute the application to various sites. Each site will 
divide the number with different range of factors. This is equivalent to running
<pre>
./prime 1000 2 250
./prime 1000 251 500
./prime 1000 501 750
./prime 1000 751 1000
</pre>
on a single machine. 


<a name="run"></a>
<h3>Running a job on summer-grid</h3>
<ul>
<!--	 <li>If you didn't follow the instructions for 'preparing to run on Grid3'
	 yesterday, please do so. The instructions are at <a href="http://www-unix.mcs.anl.gov/~wilde/summer-grid/Exercises/7_prep_Exercise.v2.htm">http://www-unix.mcs.anl.gov/~wilde/summer-grid/Exercises/7_prep_Exercise.v2.htm</a>
	 <li>Login to <code>terminable.uchicago.edu</code> or <code>evitable.uchicago.edu</code>. You do not have to enter a password
-->
	 <li>Copy your credentials to <code>evitable.uchicago.edu</code>. You might have to enter a passphrase. The passphrase is the same as your training account usernames (e.g. training24)
<pre>
<b>
[johndoe@gridlab1 ~]$ scp -r ~/.globus/ evitable.uchicago.edu:~/
Enter passphrase for key '/home/trainingXX/.ssh/id_dsa': 
[johndoe@gridlab1 ~]$ </b> 
	 </pre>
	 

	 <li>Login to <code>evitable.uchicago.edu</code> from another terminal. You might have to enter a passphrase. The passphrase is the same as your training account usernames (e.g. training24)

<pre>
<b>
[johndoe@trainingXX ~]$ ssh gridlab1.phys.utb.edu
[johndoe@gridlab1 ~]$ ssh evitable.uchicago.edu
Enter passphrase for key '/home/trainingXX/.ssh/id_dsa': 
[johndoe@evitable ~]$ </b> 
	 </pre>
	 

	 <li> Verify that you have the .pem files in the right place on this machine and have "proper" permissions (Lecture 2). 

	 
	 <li>Initialize your proxy
<pre>
<b>[johndoe@evitable ~]$ grid-proxy-init -cert</b> ~/.globus/usercert.pem <b> -key </b>~/.globus/userkey.pem
Your identity: /DC=org/DC=doegrids/OU=People/CN=John Doe 876747
Enter GRID pass phrase for this identity:
Creating proxy ....................................................... Done
Your proxy is valid until: Mon Jul 11 01:00:53 2005
</pre>

<li>Find a site: <a href="http://www.ivdgl.org/gridcat/home/">GridCat</a> (Grid Catalog) 
can be used to get a good view of your Grid. Open a browser and go to
<A HREF="http://butternut.ucs.indiana.edu:8080/">http://butternut.ucs.indiana.edu:8080/</A>
<p>
<img src="gridcat.png" />
<p>
For this exercise, you can use the following sites
<pre>
<strike>ouhep0.nhn.ou.edu</strike>
ufloridaPG.phys.ufl.edu
<strike>cmsgrid.hep.wisc.edu</strike>
<strike>ll03.alliance.unm.edu</strike>

<strike>agridgk01.usatlas.bnl.gov</strike>
grid3.ampath.net
</pre>
<li>Let's test a site
<pre>
<b>[johndoe@evitable ~]$ globus-job-run ufloridapg.phys.ufl.edu /bin/date</b>
Sun Jul 10 23:25:25 CDT 2005
</pre>
<li>Copy your application to the site. <font color="red">Wait !</font> You don't know where to copy the files.
Is there any temporary directory available? But, how do you find it?
Go to the <a href="http://butternut.ucs.indiana.edu:8080/">GridCat</a>
page again. Choose 'Grid Environment' instead of 'Summary' in the drop down
table. Look for the APP variable. This is the place where you should copy
your applications (preferably after making a directory).

<pre>
globus-job-run SITE /bin/mkdir APPDIR/YOURUSERNAME
globus-url-copy file://`pwd`/prime gsiftp://SITE/APPDIR/YOURUSERNAME/prime
globus-job-run SITE /bin/chmod +x APPDIR/YOURUSERNAME/prime
(replace SITE, APPDIR, YOURUSERNAME appropriately)
</pre>
<li>Run the job on the site
<pre>
<b>[johndoe@evitable ~]$ globus-job-run SITE APPDIR/YOURUSERNAME/prime 200 2 200</b>
NO
</pre>
<li>Distribute the application. Write a small program that calculates
the number of jobs required and divides them equally among the three sites. <font color="green"> Extra Credit! </font>
<pre>
root = <font color="#2e8b57"><b>int</b></font>(sqrt(num));
inc = <font color="#ff00ff">10</font>;
njobs = <font color="#2e8b57"><b>int</b></font>((root - <font color="#ff00ff">2</font>)/inc) + <font color="#ff00ff">1</font>;

start = <font color="#ff00ff">2</font>;


<font color="#853e26"><b>for</b></font>(i = <font color="#ff00ff">0</font>;i &lt; njobs; ++i) {
		  end = start + inc;
		  <font color="#5151fb">/*</font><font color="#5151fb"> choose a site </font><font color="#5151fb">*/</font>
		  <font color="#5151fb">/*</font><font color="#5151fb"> run the job on the site with globus-job-run with appropriate</font>
<font color="#5151fb">			  arguments </font>

<font color="#5151fb">			  globus-job-run $site $num $start $end</font>
<font color="#5151fb">			  </font><font color="#5151fb">*/</font>
		  start = end + <font color="#ff00ff">1</font>;
}
</pre>

You may want to try this out later if it is taking too much time. Go on ahead and complete the easy parts first! <br>

</ul>

<a name="condor-g" />
<h2>Using Condor-G to submit jobs to OSG/TeraGrid</h2>
By now, you should have faimiliarity with Condor tools. Condor-G
allows one to use Condor tools to submit jobs to Globus resources.
You can think of it as a sophisticated <code>globus-job-run</code>. One
of the useful features is the ability to submit and monitor multiple jobs
to grid resources.

<a name="ajob" />
<h3>Submitting a single job using Condor-G</h3>
In the Condor world, one has to write a submission file that describes
the application your are submitting. A sample submission file is below.
<pre>
<font color="#5151fb">########################################
#							  
#  A sample condor submission file
#													 
########################################</font>
													  
executable =  prime
universe = <b>vanilla</b>

output  = prime.out					 
error	= prime.error				 
log	  = prime.log																	 

queue
</pre>
Note the universe variable. The condor on <b>evitable.uchicago.edu</b> is NOT configured to run jobs locally. If you want to run a job in vanilla universe, try running it on <b>gridlab1.phys.utb.edu</b>. (But is gridlab1 configured to run jobs locally??)
<br><br>
To submit jobs to a Globus resource, the
universe should be set to <b>globus</b>. Let's see a submission file for
globus universe.

<pre>
<font color="#5151fb">########################################
#							  
#  A sample Condor-G submission file
#													 
########################################</font>

executable = <b>APPDIR/YOURUSERNAME/prime</b>

transfer_executable = false
universe		 = <b>globus</b>
globusscheduler = <b>SITE/jobmanager</b>
log				= prime.log
arguments		= 100 2 100
output = prime.out

queue
</pre>
Submit your prime application using this submission file to a site. You can
monitor your application using <code>condor_q</code>

<pre>
<b>[johndoe@evitable ~]$ condor_submit example.sub</b>
Submitting job(s).
Logging submit event(s).
1 job(s) submitted to cluster 33.

<b>[johndoe@evitable ~]$ condor_q</b>

-- Submitter: evitable.uchicago.edu : &lt;206.76.233.104:36236&gt; : evitable.uchicago.edu
 ID		OWNER				SUBMITTED	  RUN_TIME ST PRI SIZE CMD					
	9.0	training24		7/10 23:39	0+00:00:00 I  0	0.0  prime				 

1 jobs; 1 idle, 0 running, 0 held

</pre>

You can try various options like <code>-long</code> and <code>-globus</code>
with <code>condor_q</code> to see more details.


<p>
Now, check the output file <code>prime.out</code>.

<a name="multiple" />
<h3>Submitting multiple jobs to multiple sites using Condor-G</h3>
There are various ways of doing this. We can
<ul>
	<li>Write multiple submission files and changes attributes
	manually or using a script - <b>Clumsy and Difficult to Manage</b>
	<li>Write a single common submission file and dynamically change
	only the attributes that need to be changed
</ul>
First, we have to identify the attributes that need to be changed for
different instantiations of the application. Those are

<ul>
	<li>range of divisors
	<li>site names
	<li>application directories
	<li>output file names
</ul>
So, how do we do this? By passing parameters to <code>condor_submit</code>
<pre>
condor_submit -a "arguments = $num $start $end" 
	 -a "globusscheduler = $site/jobmanager" ...
</pre>
The strings that you specify with <code>-a</code> option get added to
the submission file you specify.

<p>
Write a common submission file and submit three instantiations of your
prime application to three sites. Note that you have to use different
output file names for each instantiation. 
<ul>
	 <li>Create a submission file named <code>example.sub</code> with following contents
	 <pre>
####################
#
# Submission file for prime number finder
#
####################

transfer_executable = false
universe		 = globus
log				= prime.log
queue
</pre>
	 Note that we are not specifying the site and arguments.
	 <li>Create a directory for the output files
	<pre>
<b>[johndoe@evitable dprime]$ mkdir output</b>

	 </pre>
	 <li>Submit a job using the submission file by passing arguments to 
	 <code>condor_submit</code>
	 <pre>
<b>[johndoe@evitable dprime]$ condor_submit -a "arguments = 1000 2 1000" -a 
"output = output/1.out" -a "globusscheduler = ufloridapg.phys.ufl.edu/jobmanager" 
-a "executable = APPDIR/YOURUSERNAME/prime" example.sub</b>
	 </pre>
	 <li>Submit multiple jobs to multiple sites. Note that you have to copy
	 your executables to the site, if it doesn't have it already. Use GridCat
	 to find the APP variables.
</ul>

<h3>Inspecting the output</h3>

A simple grep through all your output files should tell whether the number
is a prime or not.
<pre>
<b>grep NO output/*</b>
</pre>


<a name="together" />
	 <h3>Putting it all together (Optional)</h3>
	 Write a script to submit jobs to multiple sites automatically. 
	 I have created a small application package that has
all the required tools. It contains
<ul>
	<li>A Makefile to compile your application
	<li>A script for distributing the jobs
	<pre>

[johndoe@evitable ~]$ ./script.pl
Usage: ./script.pl &lt;task number&gt;
	 1 - Make dir
	2 - Copy exes
	3 - Run prime jobs
	 4 - Grep output
	 5 - Remove dir
	</pre>
	 <li>A Condor-G submission file
</ul>

The package can be downloaded from
<a href="http://www.cise.ufl.edu/~lchitnis/grid/summer-grid/dprime.tar.gz">http://www.cise.ufl.edu/~lchitnis/grid/summer-grid/dprime.tar.gz</a>. You can
modify the script to fit your needs.

<br>
<font color="red">Note:</font> You need to tailor some variables in the file script.pl

<ol>
	 <li> Change the value of the $me variable to your username <font color="red">"MUST DO"</font>
	 <li> You may change the number you want to test for primality ($num variable) (not mandatory)
</ol>
 
<a name="packaging" />
<h2>Packaging your application</h2>
We will use <a href="http://physics.bu.edu/pacman/">pacman</a>(Package
Manager) for this part of the exercise. It's a handy packaging tool
that has many useful features including fetching, installing and updating
software packages with simple commands.


<a name="download" />
<h3>Download and Install Pacman</h3>
<pre>
<b>[johndoe@evitable ~]$ wget http://physics.bu.edu/pacman/sample_cache/tarballs/pacman-latest.tar.gz</b>
--13:51:27--  http://physics.bu.edu/pacman/sample_cache/tarballs/pacman-latest.tar.gz
			  =&gt; `pacman-latest.tar.gz'
Resolving physics.bu.edu... done.
Connecting to physics.bu.edu[128.197.41.42]:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 77,154 [application/x-gzip]
																										  
100%[====================================&gt;] 77,154		 159.97K/s	 ETA 00:00
																										  
13:51:28 (159.97 KB/s) - `pacman-latest.tar.gz' saved [77154/77154]

<b>[johndoe@evitable ~]$ tar zxvf pacman-latest.tar.gz</b>
pacman-3.12.1/
pacman-3.12.1/caches_starter
pacman-3.12.1/CVS/
pacman-3.12.1/CVS/Entries
pacman-3.12.1/CVS/Repository
pacman-3.12.1/CVS/Root
pacman-3.12.1/doc/
.
.
.

<b>[johndoe@evitable pacman-3.12.1]$ cd pacman-3.12.1/</b>
<b>[johndoe@evitable pacman-3.12.1]$ export PATH=`pwd`/bin:${PATH}</b>

<b>[johndoe@evitable pacman-3.12.1]$ source setup.sh</b>
<b>[johndoe@evitable ~]$ pacman -version</b>
Pacman version:  3.12.1
Python version:  2.2.2 (#1, Feb 24 2003, 19:13:11) 
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-4)]
Your platform [RedHat-9] satisfies { *, linux, Linux, linux-redhat-8, linux-redhat-9, redhat, Redhat, RedHat, RedHat-6, Redhat-6, RedHat-7, Redhat-7, RedHat-8, Redhat-8, RedHat-9, Redhat-9, unix, Unix }

</pre>

After these steps, pacman is ready to use. You can download the whole
VDT package with a single command
<pre>
pacman -get VDT:VDT (it takes a long time to install VDT, DO 
			  NOT start the installation now)
</pre>

<a name="caches" />
<h3>Pacman caches</h3>
<p>
From pacman documentation

<p>
<i>
A Pacman cache is a just a URL or location in a local file system containing 
files with the .pacman extension. Each such file defines how a package is 
fetched, installed and set up</i>
<p>
An example pacman file
<pre>
description = 'Text Editor'
url = 'http://www.nedit.org/'
download = {'*': 'nedit-5.1.1-linux-glibc.tar.gz' }
paths = [['PATH','']]
</pre> 
<p>
In this part of the exercise, we will create a localcache and package our
application with pacman. Then, we will install the application in a seperate
directory using this cache.
<p>
Create a directory for the cache and temporary directory for installing
your dprime application.
<pre>
<b>[johndoe@evitable ~]$ mkdir localcache
[johndoe@evitable ~]$ mkdir installs</b>
</pre>

<p>
Create a directory for your application and copy prime.c to the directory
<pre>
<b>[johndoe@evitable ~] mkdir dprime
[johndoe@evitable ~] cp prime.c dprime</b>
</pre>
<p>
Create a Makefile in the application directory to compile your application. You can use the following Makefile. Copy it to the dprime directory.
<pre>
CC=gcc
EXES=prime
all: $(EXES)

prime: prime.c
	gcc -o $@ $&lt;

clean:
	rm -f $(EXES)
</pre>
tar, gzip the files and copy the zipped file to localcache directory
<pre>
<b>[johndoe@evitable ~]$ tar zcvf dprime.tar.gz dprime/prime.c dprime/Makefile</b>

<b>[johndoe@evitable ~]$ mv dprime.tar.gz localcache/</b>
<b>[johndoe@evitable ~]$ cd localcache</b>
<b>[johndoe@evitable localcache]$ </b>
</pre>
<p>
Create a file named dprime.pacman in the localcache directory
<pre>
# Descprtion of the package
description = 'Prime Number Finder'
# What to download?
download	 = {'unix' : 'dprime.tar.gz'}
# How to install
install	  = {'*':['make']}
</pre>
Go to installs directory and run pacman
<pre>
<b>[johndoe@evitable localcache]$ cd ../installs</b>
<b>[johndoe@evitable installs]$ pacman -get ../localcache:dprime</b>

Do you want to add [../localcache] to [trusted.caches]? (y or n): y
Package [dprime] found in [../localcache]...
Downloading [dprime.tar.gz] from [localcache]...
Untarring [dprime.tar.gz]...
gcc -o prime prime.c 

</pre>
<!--
You can look the information about the packages using the following command
<pre>
<b>[johndoe@evitable installs]$ pacman -info</b>
</pre>
<img src="pacman-info.png" />
<p>
-->

You can make changes to the dprime.pacman file (may be you can just change the description) and update the software with
<pre>
<b>[johndoe@evitable installs]$ pacman -update-check</b>
Package [dprime] found in [../localcache]...
Update of [../localcache:dprime] found...

<b>[johndoe@evitable installs]$ pacman -l</b>
[*] dprime, in cache [/home/training24/test-lab6/installs] ==> UPDATE AVAILABLE 

<b>[johndoe@evitable installs]$  pacman -d src ups 0 -l</b>
.
.
<b>[johndoe@evitable installs]$  pacman -update</b>

</pre>

<a name="ref" />
<h2>References</h2>
<ul>
	<li>Prime number <a href="http://www.utm.edu/research/primes/">info</a>.
	<li><a href="http://www.ivdgl.org/gridcat/home/">GridCat</a>
	 <!--	<li><a href="http://monalisa.cacr.caltech.edu">MonALISA</a> -->
	<li><a href="http://www.cs.wisc.edu/condor/manual/v6.6.5/index.html">Condor Manual</a>
	<li><a href="http://physics.bu.edu/pacman/htmls">Pacman Documentation</a>
</ul>

<h2>Credits</h2>
<ul>
	 <li>Powerpoint presentation by <a href="http://www.phys.ufl.edu/~jorge">Jorge L. Rodriguez</a>
	 <li>Exercises staged by <a href="http://www.cise.ufl.edu/~lchitnis">Laukik Chitnis</a>
	<li>The entire staff of Grid Summer Workshop 2006 for getting the infrastructure up.
</ul>

</body>

