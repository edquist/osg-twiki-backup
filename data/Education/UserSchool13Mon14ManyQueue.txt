%META:TOPICINFO{author="TimCartwright" date="1371933445" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="UserSchool13Materials"}%
<style type="text/css">
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
</style>

---+ Monday Exercise 2.4: Submit With Many queue Statements

The goal of this exercise is to submit many jobs with a single submit file by using multiple =queue= statements. With this change, it is important to understand how HTCondor carries over values from previous =queue= statements unless overridden.


---++ Submitting Many Jobs With One Submit File

<pre class="file">
#!/usr/bin/env python

import sys
if len(sys.argv) != 2:
    print 'Usage: %s MAXIMUM' % (os.path.basename(sys.argv[0]))
    sys.exit(1)
maximum = int(sys.argv[1])
n1 = n2 = 1
while n2 &lt;= maximum:
    n1, n2 = n2, n1 + n2
print 'The greatest Fibonacci number up to %d is %d' % (maximum, n1)
</pre>

<pre class="file">
universe = vanilla
executable = fibonacci.py
log = fibonacci.log
should_transfer_files = YES
when_to_transfer_output = ON_EXIT

arguments = "100"
output = fibonacci-100.out
error  = fibonacci-100.err
<em>queue</em>

arguments = "1000"
output = fibonacci-1000.out
error  = fibonacci-1000.err
<em>queue</em>

arguments = "10000"
output = fibonacci-10000.out
error  = fibonacci-10000.err
<em>queue</em>
</pre>


---+++ Extra Challenge 1

Change the name of the log file for each job.


---+++ Extra Challenge 2

Define output, error, and log just once, before the first queue statement. Thus, just arguments vary. What happens? May need to submit a few times to figure it out.


---+++ Extra Challenge 3

*Note:* This challenge requires basic programming skills. If you are not a programmer, that is OK, skip ahead to the next exercise.

Write a program that outputs an HTCondor submit file to run a set of Fibonacci jobs, one for each power of ten up to some number. For example, if your program is given the argument =3=, it should run one Fibonacci job for each of the following arguments: =1=, =10=, =100=, and =1000=.
