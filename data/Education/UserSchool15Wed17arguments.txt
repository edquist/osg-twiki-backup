%META:TOPICINFO{author="ChristinaKoch" date="1437691517" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="UserSchool15Materials"}%
<style type="text/css">
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
</style>

---+ Bonus: Passing Arguments Through the Wrapper Script

In this exercise, you will submit multiple Python jobs using the materials from Exercises 1.5 and 1.6.  This exercise should take 5 minutes.  

---++ Background

So far, the exercises from this morning have focused on software portability methods that are applicable to DHTC.  In an attempt to focus on this software aspect, we have been running single jobs instead of large job batches.  However, the end goal would be to run many jobs that use these software portability techniques.  This exercise will show one way to use arguments with a wrapper script to differentiate jobs.  

---++ Submitting Multiple Fibonacci Jobs

Our script =fib.py= produces [[https://oeis.org/A000045][Fibonacci numbers]], based on the input argument.  Let's suppose that we want to run multiple jobs using our script =fib.py=, where each job produces a single Fibonacci number.  In the previous examples we hard-coded the argument to =fib.py= in the wrapper script as a single number.  How can we change that argument so that it is different for each job?  

   1. Make a copy of the wrapper script and submit file from [[UserSchool15Wed14prebuilt][Exercise 1.4]].  
   1. Edit the submit file by adding an =arguments= line.  We will use =$(Process)= as our argument for this example.  This means that the arguments for the different jobs will start at 0 and increase by 1 for each job.  
   1. Change the =queue= statement so that the submit file will submit 10 jobs.  
   1. The argument from the submit file will be passed to the wrapper script.  How can we use it _within_ the wrapper script?  The answer is to use bash's arguments notation.  The first argument passed to a bash script can be used inside the script as =$1=.  So if we want the =$(Process)= argument to be passed to =fib.py= within the wrapper script, we need to change our wrapper script line from: \
   <pre class="file">python fib.py 5</pre> \
to this: \
   <pre class="file">python fib.py $1</pre>
   1. Once these changes are made, submit your jobs with =condor_submit=.  
