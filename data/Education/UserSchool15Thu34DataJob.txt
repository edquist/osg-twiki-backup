%META:TOPICINFO{author="SuchandraThapa" date="1438015541" format="1.1" reprev="1.3" version="1.3"}%
%META:TOPICPARENT{name="UserSchool15Materials"}%
<style type="text/css">
pre em { font-style: normal; background-color: yellow; }
pre strong { font-style: normal; font-weight: bold; color: #008; }
</style>

----+  Getting output from your jobs

%TOC%

---++ Goals

   * After running jobs, ideally you'd like to get the results back; this tutorial will cover two different ways to do this.
   * In this tutorial we will learn how to specify output files to HTCondor and have HTCondor transfer files for each job.
   * In addition, this tutorial will show you how to get output from your application as it is running

---++ Transferring output  using HTCondor


---++ Transferring output while your job is running
The HTCondor file transfer mechanism transfers only transfer files when a job is completed or while it is being evicted.  Sometimes, it's useful to get files from a running job while it's still running (e.g. checkpoint files).  This part of the tutorial will show how to transfer files while your job is still running.

HTCondor integrates with a set of tools called [[www.cse.nd.edu/~ccl/software/parrot/][Parrot and Chirp]] that allows your job to transfer files back to the the submit node while the job is still running.  In order to do this, your submit files need to change slightly and you'll need to do a few more things in your job.  

   1. First, you'll need to add the following to your submit file: \
\
<pre class="file">
+WantIOProxy = True
</pre>
   2. Second, you'll need to transfer the =parrot_run=  binary with your file, you can do this by using a transfer_input_files command \
\
<pre class="file">
transfer_input_files = /usr/bin/parrot_run
</pre>
   3. Finally, you'll need to make sure that you have a process or script that periodically runs the following: \
\
<pre class="screen">
./parrot_run cp <output_file> /chirp/CONDOR/path
</pre>


---++ Further information
   * [[http://research.cs.wisc.edu/htcondor/manual/v8.2/2_5Submitting_Job.html#SECTION00354200000000000000][Specifying files to transfer]]
   * [[https://htcondor-wiki.cs.wisc.edu/index.cgi/wiki?p=HowToChirpRemoteIo][Using Condor with Parrot/Chirp]]
   * [[http://research.cs.wisc.edu/htcondor/manual/v8.2/condor_chirp.html#65779][Manual for condor_chirp]]


In the previous example (Exercise 2.3), a remote collaborator shared the data for you. The basic idea is sharing the data to establish the collaborative work. Now pair up with your next person and try the data sharing by yourself. On OSG connect (login.osgconnect.net), create the a data sharing directory and put the NAMD input files. Tell your friend the location of data. Get the location of your friend's uploaded data. Run NAMD simulation with your friend's uploaded data. 

<pre>
1. Create a directory "data-share"  under the directory ~/public
2. Copy  NAMD input files to ~/public/data-share
3. See the files show up at http://stash.osgconnect.net/+username/data-share (username is your login ID on OSG Connect)
4. Tell your friend about the location of NAMD input files
5. Get the location of your friends data-share directory
6. Write condor job description with the location provided by your friend and write a job wrapper script
7. Submit the job and check the outputs after job completion
</pre> 

-- Main.BalamuruganDesinghu - 24 Jul 2015
