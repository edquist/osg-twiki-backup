%META:TOPICINFO{author="JenyTeheran" date="1446481873" format="1.1" version="1.80"}%
%META:TOPICPARENT{name="Documentation.PoliciesProcedures"}%
%TOC%
---+ Creating CA Distributions


This page documents the OSG Security Team process for creating new Certificate Authority packages for distribution to OSG sites. Note that you must follow the process through to the end to notify GOC of the new distribution.

<b>Updated 27,28 April 2010</b> to reflect building a CA package based on the new IGTF layout that makes symlinks from CA files to names including both the new and old hash name forms for openssl 1.0.

Please refer to the separate procedure on [[AddRemoveCA][adding or removing CAs]] before making a new [[Documentation.CaDistribution][CA distribution]].

---++ Release Procedure
After discussion with Mine it was decided (on Friday Oct 28, 2011) that all routine (non-urgent) production releases will henceforth be made first to the ITB and then released to production a week later if no problems are being reported by ITB. This is a change from our original procedure which did not require ITB release for just releasing new content from IGTF.

---++ Setup
   1 Get a user certificate+key in pkcs12 format from the DOEGrids CA. See ReleaseDocumentation.CertificateUserGet for instructions.
   1 Ask the OSG software team for permissions to access the https://vdt.cs.wisc.edu/svn/certs svn repository. 
   1 Verify that rpmbuild is installed. The =rpmbuild= command is required for making the rpm, so it's best to use a !RedHat machine (any flavor) for this process.
   1 Verify that dpkg-deb, fakeroot, dpkg-scanpackages and debsigs  are in your $PATH:<br /><tt>which dpkg-deb fakeroot dpkg-scanpackages debsigs </tt>
      * If any of the tools are not installed on your system you may use build-debian-tools to download and install them <br/> =./build-debian-tools=
      * source the =setup.sh= file from the installed debian tools directory
   1 Install an =svn= client. Version 1.4.x is strongly recommended. Don't use a version 1.5.x client. See http://subversion.tigris.org/getting.html and/or http://www.collab.net/downloads/subversion/svn1.4.html.
   1 Verify that you have a version of openssl 1.x installed, to be used by mk-index.pl below.
   1 Checkout a copy of the https://vdt.cs.wisc.edu/svn/certs svn repository:<br /> <tt>svn co https://vdt.cs.wisc.edu/svn/certs</tt>
   1 Setup [[http://www.gnupg.org][GPG]] with the security@opensciencegrid.org private key (see [[Security.SecureEmailKeyManagement]]) for signing the distribution.
   1 Install [[http://vdt.cs.wisc.edu/components/fetch-crl.html][fetch-crl]].
   1 Define variable for OSG Security PGP key<br> =export OSGSECKEYID=7FD42669= <br><it>Note that you should verify the key id value with </it><br/><tt>gpg --list-keys</tt>
   1 Download, import, and verify the IGTF signing key (for example, by verifying the signature):<tt><br/>gpg --recv-key 3CDBBC71<br/>gpg --check-sigs 3CDBBC71<br/> gpg --default-key $OSGSECKEYID --lsign-key 3CDBBC71</tt>

<!--   1 Configure =svn= to use your pkcs12 certificate+key for authentication by adding the following to =~/.subversion/servers= , changing the path to your pkcs12 file as appropriate:<br /> =[groups]= <br /> =iu = *.indiana.edu= <br /> =[iu]= <br /> =ssl-client-cert-file = /home/username/.globus/usercred.p12= -->
---++ Preparing For Multiple Caches
Since we now have 4 caches OLD, IGTFOLD, NEW, and IGTFNEW in both production and ITB all the steps below (till the announcement step) will have to be repeated for creating a release for each cache.

Note: As of Mar. 31 2014 we have stopped creating production release in the old format.

---++ Updating to a new IGTF distribution
   1 Create a jira ticket under OSG_software (https://jira.opensciencegrid.org/) using following information
       Subject: Update CA certificates to IGTF 1.x
       Body: IGTF 1.X (http://dist.eugridpma.info/distribution/igtf/current/) was released on DATE. Please prepare the osg-ca-certs 1.Y release an OSG release for version 3.1.A and 3.2.B.
       (Note: Coordinate the release with OSG Software team. You will find the next release dates on https://twiki.grid.iu.edu/bin/view/SoftwareTeam/WebHome. Add Tim T and Tim C as watchers and coordinate testing using ticket. e.g. https://jira.opensciencegrid.org/browse/SOFTWARE-1712. Set components to security.)
   1 Change to an empty working directory and set $CAWORKDIR to the path:<br/><tt>cd `mktemp -d`<br/>export CAWORKDIR=`pwd` </tt>
   1 Set $IGTF_CERTS_VERSION:<br/><tt>export IGTF_CERTS_VERSION=1.39</tt>
   1 Checkout or update the OSG svn directories<br/><tt>cd ~/svn/certs/trunk/cadist/CA-Certificates-Base<br/>svn update<br/>export CABASEDIR=`pwd`</tt>
   1 Set the OSG version (Note that a version for the ITB should have an ITB following the release number).<br/><tt>export OUR_CERTS_VERSION=1.20ITB</tt> (Convension is to use n.xITBNEW,n.xITBIGTFNEW for ITB cache and n.xNEW, and n.xIGTFNEW for production cache) (Note we have stopped old format release)
   1 Create the new distribution directory for the release<br/><tt>cd $CABASEDIR<br/>mkdir -p $OUR_CERTS_VERSION/certificates<br/>export CADIST=$CABASEDIR/$OUR_CERTS_VERSION/certificates</tt>
   1 Download the new IGTF distribution tarball (and PGP signature) from http://dist.eugridpma.info/distribution/igtf/current/:<br>Note that to get the new symlink layout you may need to download http://dist.eugridpma.info/distribution/igtf/$IGTF_CERTS_VERION-new/:<br/><tt>cd $CAWORKDIR<br/>wget http://dist.eugridpma.info/distribution/igtf/current/igtf-policy-installation-bundle-$IGTF_CERTS_VERSION.tar.gz<br/>wget http://dist.eugridpma.info/distribution/igtf/current/igtf-policy-installation-bundle-$IGTF_CERTS_VERSION.tar.gz.asc</tt>
   1 Verify the PGP signature on the tarball:<br/><tt>gpg --verify igtf-policy-installation-bundle-$IGTF_CERTS_VERSION.tar.gz.asc</tt>
   1 Unpack the certificates:<br/><tt>tar xzf igtf-policy-installation-bundle-$IGTF_CERTS_VERSION.tar.gz</tt>
   1 Select the CAs and install to temporary location<br/><tt>cd igtf-policy-installation-bundle-$IGTF_CERTS_VERSION<br/>./configure --prefix=$CADIST --with-profile=classic --with-profile=mics --with-profile=slcs --with-profile=iota<br/>make install</tt>
   1 (Currently no OSG only CAs are being added) Install the non-IGTF CAs. (Donot do this step when creating an IGTF distribution) Refer to the procedure on [[AddRemoveCA][adding or removing CAs]]<br/><tt>cd $CABASEDIR/non-igtf-certificates</tt><br/>for each CA to install, %BLUE% alias %ENDCOLOR% = alias name of the CA<br/><tt>./alias.install $CADIST $OUR_CERTS_VERSION [old]</tt><br/> *Note* that the 3rd argument (old) is required to install the old (non-symlinked) IGTF layout, without a 3rd argument you get the new layout, with symlinks.
   1 compare differences to previous version:<br/><tt>cd $CADIST<br/>for ca in * ; do  echo $ca; diff $ca $CABASEDIR/%RED%previous%ENDCOLOR%/certificates; done <br/>for ca in $CABASEDIR/%RED%previous%ENDCOLOR%/certificates/* ; do  echo $ca; diff $ca . ; done</tt>
      * make sure appropriate extra CA files from $CABASEDIR/non-igtf-certificates are included or removed from the distribution directory, $CADIST
   1 Generate the index files (requires openssl 1.x)<br/><tt>cd $CABASEDIR<br/>./mk-index.pl --version $OUR_CERTS_VERSION --dir $CADIST --out $CADIST/INDEX --ssl1 %RED%~/svn/openssl1/bin/openssl%ENDCOLOR% -format 1 --style new</tt><br/>FOR OLD Style:<tt>cd $CABASEDIR<br/>./mk-index.pl --version $OUR_CERTS_VERSION --dir $CADIST --out $CADIST/INDEX --ssl1 %RED%~/svn/openssl1/bin/openssl%ENDCOLOR% --style old</tt>
   1 Verify that $CADIST/INDEX.html[.txt] contains the right number of CAs:<br/><tt>ls $CADIST/*.pem | wc  # should agree with the number of CAs listed in $CADIST/INDEX.html and $CADIST/INDEX.txt</tt>
   1 Make the MD5 checksums:<br/><tt>cd $CABASEDIR/$OUR_CERTS_VERSION<br/>( cd $CADIST; md5sum *.0 *.pem ) > cacerts_md5sum.txt<br/>cp cacerts_md5sum.txt $CADIST</tt>
   1 Update the $CADIST/CHANGES file. <br/><tt>cp $CABASEDIR/%RED%previous%ENDCOLOR%/certificates/CHANGES $CADIST</tt><br/>edit $CADIST/CHANGES and remove any temporary editer files like =#CHANGES#= or =CHANGES~=.
   1 Add new distribution to repository<br/><tt>cd $CADIST; chmod 644 *  # make sure permissions are OK<br/>remove any editing temp files<br/>cd $CABASEDIR<br/>svn add $OUR_CERTS_VERSION</tt><br/>Commit all changes:<br /><tt>svn commit -m "Updated to IGTF version $IGTF_CERTS_VERSION, OSG version $OUR_CERTS_VERSION"</tt>

---++ Check the CA certificates and CRLs

   1 Run fetch-crl and investigate any error messages:<br/><tt>pushd $CADIST<br/>$VDT_LOCATION/fetch-crl/sbin/fetch-crl --loc `pwd` --out `pwd`</tt>
   1 Check for expired or near-expired CRLs:<br/><tt>$CABASEDIR/[[%ATTACHURL%/check-crl-expiry.pl.txt][check-crl-expiry.pl]] *.r0</tt>
   1 Check for expired or near-expired CAs:<br/><tt>$CABASEDIR/[[%ATTACHURL%/check-ca-expiry.pl.txt][check-ca-expiry.pl]] *.pem</tt>
   1 Cleanup:<br/><tt>rm *.r0<br/>popd</tt>

---++ Make the CA tarball distribution
   1 Make sure the $CABASEDIR directory in your svn workspace is up-to-date and contains no local modifications:<br/><tt>cd $CABASEDIR<br/>svn status</tt> 
   1 Create the tarball:<br/><tt>cd $CABASEDIR/$OUR_CERTS_VERSION<br/>tar cvfz osg-certificates-$OUR_CERTS_VERSION.tar.gz --exclude .svn certificates</tt> 
   1 Sign it with the security@opensciencegrid.org PGP key:<br/><tt>gpg --default-key $OSGSECKEYID -b osg-certificates-$OUR_CERTS_VERSION.tar.gz</tt> 
<!--   1 Tag the SVN repository: (NOTE: You could skip the tagging step as this tends to create a lot of tags in svn ansd slows down the commit and checkout)<br/><tt>svn copy https://osg-svn.rtinfo.indiana.edu/cadist/trunk \<br /> https://osg-svn.rtinfo.indiana.edu/cadist/tags/osg-certificates-$OUR_CERTS_VERSION-igtf-$IGTF_CERTS_VERSION \<br /> -m "Tagging OSG certificates distribution $OUR_CERTS_VERSION containing IGTF version $IGTF_CERTS_VERSION" </tt>
-->
---++ Make the RPM 

<div style="background-color: #FF0000;">[This step is to be DEPRECATED after May 31st!!]</div>

   1 Verify that $OUR_CERTS_VERSION and $IGTF_CERTS_VERSION are set correctly:<br/><tt>echo $OUR_CERTS_VERSION $IGTF_CERTS_VERSION</tt>
   1 Verify that rpmbuild is in your $PATH:<br/><tt>which rpmbuild</tt>
   1 Make sure CWD is correct<br/><tt>cd $CABASEDIR/$OUR_CERTS_VERSION</tt>
   1 Run the make-rpm script:<br/><tt>../make-rpm</tt>

---++ Make the DEB
   1 Verify that $OUR_CERTS_VERSION and $IGTF_CERTS_VERSION are set correctly:<br/><tt>echo $OUR_CERTS_VERSION $IGTF_CERTS_VERSION</tt>
   1 Make sure CWD is correct<br/><tt>cd $CABASEDIR/$OUR_CERTS_VERSION</tt>
   1 Run the make-deb script:<br/><tt>../make-deb</tt>

---++ Make manifest and save the distribution files in SVN

   1 <tt>cd $CABASEDIR/$OUR_CERTS_VERSION</tt>
   1 Make the manifest:<br/><tt>../make-manifest  [--itb]</tt> <br/> Optionally specify --itb for a release to ITB that is intended to be copied to production.
   1 Visually inspect the manifest file (ca-certs-version).
   1 Set the svn release directory
      * For production OSG: <tt>export SVNDIR=$CABASEDIR/../release</tt>
      * For an ITB release:  <tt>export SVNDIR=$CABASEDIR/../release-itb</tt>
   1 Copy the files to the svn release directory:<br/><tt>cd $CABASEDIR/$OUR_CERTS_VERSION<br/>cp osg-certificates-$OUR_CERTS_VERSION.tar.gz osg-certificates-$OUR_CERTS_VERSION.tar.gz.sig \<br/> osg-ca-certs-$OUR_CERTS_VERSION-0.deb \<br/> $SVNDIR<br/>cp ca-certs-version $SVNDIR/ca-certs-version-$OUR_CERTS_VERSION <br/> cp  cacerts_md5sum.txt $SVNDIR/cacerts_md5sum-$OUR_CERTS_VERSION.txt</tt>
   1 Change to the svn release directory:<br/><tt>cd  $SVNDIR</tt>
   1 Commit the files:<br/><tt>svn add osg-certificates-$OUR_CERTS_VERSION.tar.gz osg-certificates-$OUR_CERTS_VERSION.tar.gz.sig \<br/> osg-ca-certs-$OUR_CERTS_VERSION-0.deb ca-certs-version-$OUR_CERTS_VERSION cacerts_md5sum-$OUR_CERTS_VERSION.txt; <br/>svn commit -m "OSG certificates distribution $OUR_CERTS_VERSION"</tt>
<!--   
---++ Update symlinks (After you create all the caches)
Create appropriate symlinks for ca-certs-version, cacerts_md5sum.txt and ca-certs-version-new, cacerts_md5sum-new.txt
   1 Unlink ca-certs-version and cacerts_md5sum.txt <br/><tt>cd $SVNDIR; unlink  ca-certs-version; unlink cacerts_md5sum.txt; unlink ca-certs-version-new; unlink cacerts_md5sum-new.txt</tt>
   1 Update with appropriate link <br/><tt>cd $SVNDIR <br/> ln -s cacerts_md5sum-%RED%n.nn%ENDCOLOR%ITB.txt cacerts_md5sum.txt <br/>  ln -s ca-certs-version-%RED%n.nn%ENDCOLOR%ITB ca-certs-version<br/> ln -s cacerts_md5sum-%RED%n.nn%ENDCOLOR%ITBNEW.txt cacerts_md5sum-new.txt <br/>  ln -s ca-certs-version-%RED%n.nn%ENDCOLOR%ITB ca-certs-version-new</tt>
   1 Commit symlinks <br/>svn commit -m "Commit necessary symlinks for old and new release"</tt>
   -->
---++ Update the web site

Update [[Documentation.CaDistribution]] if there are any significant changes to the contents of the distribution (beyond regular IGTF distribution updates).

---++ Creating a Release using Koji
---+++ Setup/Preperation
    You need an environment where osg-build is installed and access to OSG development svn to get started. 
   * [[SoftwareTeam.RPMDevelopmentGuide#Subversion_Access][Information about SVN Access]]
   * References: 
      * [[Security.SecurityRPMPackageCreation]]
      * [[SoftwareTeam.OSGBuildTools][OSG Build tools documentation]]
      * [[SoftwareTeam.RPMDevelopmentGuide][RPM development guide]] provides a extensive technical guidelines and details about RPM development for the OSG Software Stack.
---+++ Building RPM Packages
These steps assume that you have a working OSG RPM development environment and have access to the OSG development SVN.
   1 Copy the tar balls to VDT upsteam machine 
      * On VDT machine (library.cs.wisc.edu) do: <br/><tt>ssh library.cs.wisc.edu; <br/> mkdir /p/vdt/public/html/upstream/osg-ca-certs/%RED%n.nn%ENDCOLOR%/; <br/> mkdir /p/vdt/public/html/upstream/igtf-ca-certs/%RED%m.mm%ENDCOLOR%; </tt><br/>
      * On the machine where you build the packages do: <br/> <tt> cd $SVNDIR; <br/> scp osg-certificates-%RED%n.nn%ENDCOLOR%.tar.gz library.cs.wisc.edu:/p/vdt/public/html/upstream/osg-ca-certs/%RED%n.nn%ENDCOLOR%/; <br/> scp osg-certificates-%RED%n.nn%ENDCOLOR%NEW.tar.gz library.cs.wisc.edu:/p/vdt/public/html/upstream/osg-ca-certs/%RED%n.nn%ENDCOLOR%/; <br/> scp osg-certificates-%RED%n.nn%ENDCOLOR%IGTF*.tar.gz library.cs.wisc.edu:/p/vdt/public/html/upstream/igtf-ca-certs/%RED%m.mm%ENDCOLOR%/</tt> 
   1 Do svn update (On a machine where osg build tools are installed). <br/><tt>cd ~/osg_rpm_svn/vdt-native/redhat/trunk/; <br/> svn update;</tt>
   1 Edit the spec and upstream files for all the four rpm packages we produce to point to new release. The rpms to be updated include osg-ca-certs, osg-ca-certs-compat, igtf-ca-certs, igtf-ca-certs-compat. For spec file you need to update Version:, Release:, Source0: and add comment in change log. For upstream file you need to update the tarball location,
      * For osg-ca-certs: <br/><tt>cd osg-ca-certs; <br/>vi upstream/osg-certificates-NEW.source; <br/> %RED%Update location to osg-ca-certs/n.nn/osg-certificates-n.nnNEW.tar.gz%ENDCOLOR%; <br/> vi osg/osg-ca-certs.spec <br/>%RED%Edit Version to n.nn, edit Release Number; edit Source0 to osg-certificates-n.nnNEW.tar.gz; Add appropriate entry to changelog%ENDCOLOR%<br/> </tt> 
      * Create a test build on local environment and Koji <br/><tt>osg-build rpmbuild .; <br/> osg-build --scratch koji .</tt> 
      * Repeat steps for osg-ca-certs-compat, igtf-ca-certs, igtf-ca-certs-compat. NOTE: Note that the name of upsteam and spec file will be different in each case and so will the content. 
   1 Check in the changes to SVN  <br/><tt>cd ~/osg_rpm_svn/vdt-native/redhat/trunk/;<br/> svn commit -m "OSG certificates distribution $OUR_CERTS_VERSION. (Jira Ticket: SOFTWARE-NNNN)"<br/></tt>
   1 Create an official build on Koji for EL5 and EL6 <br/><tt>cd ~/osg_rpm_svn/vdt-native/redhat/trunk/;<br/> osg-build koji --el5 osg-ca-certs; osg-build koji --el5 osg-ca-certs-compat; osg-build koji --el5 igtf-ca-certs; osg-build koji --el5 igtf-ca-certs-compat;<br/> osg-build koji --el6 osg-ca-certs; osg-build koji --el6 osg-ca-certs-compat; osg-build koji --el6 igtf-ca-certs; osg-build koji --el6 igtf-ca-certs-compat;<br/></tt> Please see https://jira.opensciencegrid.org/browse/SOFTWARE-1440 for updated way to  promoting to testing repository.
  1 If there is an older supported branch (e.g 3.1.x when current release is 3.2.x), you may have to do something like <br/><tt>svn merge -c %RED%19057%ENDCOLOR% '^/native/redhat/trunk/igtf-ca-certs' igtf-ca-certs<br/>svn merge -c %RED%19057%ENDCOLOR% '^/native/redhat/trunk/osg-ca-certs' osg-ca-certs</tt><br/>
   1 After you commit the changes with <br/><tt>svn commit -m "OSG certificates distribution $OUR_CERTS_VERSION. (Jira Ticket: SOFTWARE-NNNN)"<br/></tt> run <br/><tt>osg-build koji --repo=3.1 osg-ca-certs igtf-ca-certs</tt> to build it on appropriate koji repository.
   1 %RED% *If* the produced CA certificate tarball is not based on a current IGTF release - or is not meant to be eventually promoted to production - send an email to the osg-software mailing list.  Give a general description of the contents of the CA tarball, how it differs from a standard IGTF one, any expected side-effects, the last "known good" version of the CA RPM, and the repositories where you plan to distribute this RPM. %ENDCOLOR%.
   1 Once the build is successful you might promote it to osg-testing repository if it is to be released to the ITB testers.
      * Mark the JIRA ticket as Ready for testing
      * Inform the software coordinator (currently Tim) and get his approval
      * Edit the [[SoftwareTeam.PreReleaseNotes][Pre release Notes]] and record the packages that are being released.
      * Release EL5 and EL6 builds for testing (cd to appropriate directory first)
         * Run: <br/><tt>osg-promote osg-ca-certs igtf-ca-certs<br/> osg-promote -r 3.1-testing osg-ca-certs igtf-ca-certs</tt>
      * Notify ITB coordinator (currently Suchandra) so he can coordinate the testing 

---++ Announce the new distribution
*Pay attention to the -0* portion of the version for RPM and DEB.  Also note that
if the RPM or DEB metadata changes but not the contents of the certificates directory
then the -0 should be incremented to -1 (or more if necessary).

---+++ For a routine production OSG release
Notify the GOC that a new release is available, typically on a Monday since GOC will do the release
on a Tuesday for it's normal update schedule.
The GOC will publish and announce the release.

Open a ticket at [[https://ticket.grid.iu.edu/goc/software]]
Create ticket according to the following template:
<pre>
Subject: Request for routine deployment of  NEW OSG CA DISTRIBUTION RELEASE n.x

From https://osg-svn.rtinfo.indiana.edu/cadist/release

Tarball Version: n.x
RPM Version: n.x-0
DEB Version n.x-0

This is a routine update of the CA package and should be deployed in the next scheduled update period.
</pre>
The email message must be signed by your DOEGrids certificate.

---+++ For a URGENT production OSG release
Notify the GOC that an URGENT release is available to be deployed immediately.
The GOC will publish and announce the release.
Open a ticket at [[https://ticket.grid.iu.edu/goc/software]]
Create ticket according to the following template:
<pre>
Subject: Request for URGENT deployment of  NEW OSG CA DISTRIBUTION RELEASE n.x

From https://osg-svn.rtinfo.indiana.edu/cadist/release

Tarball Version: n.x
RPM Version: n.x-0
DEB Version n.x-0

This release is for an URGENT security issue and requires immediate deployment.
</pre>
The email message must be signed by your DOEGrids certificate.

---+++ For an ITB release
Notify the GOC that a new release is available.
The GOC will publish and announce the release - or perhaps you should just send a notice to osg-int
after being informed by GOC that it is published.
Open a ticket at [[https://ticket.grid.iu.edu/goc/software]]
Create ticket according to the following template:
<pre>
Subject: Request to immediately deploy NEW OSG-ITB CA DISTRIBUTION RELEASE n.xITBOLD, n.xITBIGTFOLD, n.xITBNEW, n.xITBIGTFNEW

Dear OSG GOC,

From https://osg-svn.rtinfo.indiana.edu/cadist/release-itb

Tarball Version: n.xITBOLD, n.xITBIGTFOLD, n.xITBNEW, n.xITBIGTFNEW
RPM Version: n.xITBOLD-0, n.xITBIGTFOLD-0, n.xITBNEW-0, n.xITBIGTFNEW-0
DEB Version: n.xITBOLD-0, n.xITBIGTFOLD-0, n.xITBNEW-0, n.xITBIGTFNEW-0

SVN revision: zzzz

Previous SVN revision for roll-back: yyyy
Previous OSG version: n.w

Some additional descriptive text referring to ITB.
Also since it is ITB please deploy it as soon as possible.
</pre>
The email message must be signed by your DOEGrids certificate.

---+++ Announcing to OSG/ITB sites
Once the ticket is opened at GOC, send a notification email to site/ITB list for production/ITB release.

---++ Minor Debian revision
For a revision that changes only the debian package but not the other files (like a change to the debian metadata)
one should cd to the releases directory , run the make-deb script with the next revision number (R), check the new file into
svn and inform the GOC to update the apt repository with the new file.
   1 <tt>cd $SVNDIR</tt>
   1 <tt>$CABASEDIR/make-deb --revision R</tt>
   1 <tt>svn add osg-ca-certs-$OUR_CERTS_VERSION-R.deb</tt>
   1 <tt>svn commit -m "revised debian revision for some reason" \<br/>            osg-ca-certs-$OUR_CERTS_VERSION-R.deb</tt>
   1 Send signed email to GOC explaining the update and specifying which file to update in the apt repository.

---++ To copy a release from ITB to production
In order to copy a package released to the ITB where the contents of the tarball, rpm and deb files
have not changed,
set up all environment variables as shown above,
and complete the procedure starting with the "Make manifest step".

---++ Release and Build Notes
For releases earlier than those below see the CHANGES file in the distributions.

Viewing the links below requires login to the twiki.
   * [[CaRelOsg116][OSG 1.16, IGTF 1.37 current]]
   * [[CaRelOsg116ITB][OSG 1.16ITB, IGTF 1.37 new layout + CILogon Basic, Silver]]

---++ References
   * TestingCADistributions
   * [[http://vdt.cs.wisc.edu/internal/igtf-updates.html][VDT Distribution Process]] 
   * [[http://svnbook.red-bean.com/en/1.4/][Subversion Manual]] and [[http://svnbook.red-bean.com/en/1.4/svn.ref.html][Subversion Reference]] 
   * [[https://osg-svn.rtinfo.indiana.edu/cadist/][OSG WebSVN -- CA distribution repo]] 
   * [[http://software.grid.iu.edu/pacman/cadist/][OSG CA Certificates Distribution hosted by the GOC]]
   * [[http://software.grid.iu.edu/][OSG GOC Yum and Apt Repositories]]
   * [[http://dist.eugridpma.info/distribution/igtf/current/][IGTF Distribution]] 
   * [[http://security.teragrid.org/TG-CAs.html][TeraGrid CAs]] 
   * [[http://www.tacar.org/][TERENA Academic CA Repository]]
   * [[http://goc.grid.sinica.edu.tw/gocwiki/Procedure_for_new_CA_release][EGEE Procedure]]

%META:FILEATTACHMENT{name="check-ca-expiry.pl.txt" attachment="check-ca-expiry.pl.txt" attr="" comment="a script to check for expired and expiring CA certificates" date="1249503840" path="check-ca-expiry.pl" size="419" stream="check-ca-expiry.pl" tmpFilename="/usr/tmp/CGItemp14259" user="JimBasney" version="1"}%
%META:FILEATTACHMENT{name="check-crl-expiry.pl.txt" attachment="check-crl-expiry.pl.txt" attr="" comment="a script to check for expired and expiring CRLs" date="1249503914" path="check-crl-expiry.pl" size="771" stream="check-crl-expiry.pl" tmpFilename="/usr/tmp/CGItemp14332" user="JimBasney" version="1"}%
