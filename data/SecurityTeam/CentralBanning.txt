%META:TOPICINFO{author="DaveDykstra" date="1481310599" format="1.1" reprev="1.7" version="1.7"}%
%META:TOPICPARENT{name="SecurityTeamWorkingArea"}%
---++ A central banning tool for OSG-wide user banning 

%TOC%

---+++ Short term Requirements

   1. Mechanism to securely inform sites about banned users and take action to ban those users from the site without site admin intervention.
   1. The sites can choose to subscribe or not to this central banning list.
   1. The sites banned user list should be distinct from the central list. (i.e. The central list should not overwrite any banned user lists maintained by the site)
   1. A white list for the sites if they choose to un-ban a centrally banned user. This will provide site admins with a finner grain of control.
   1. Security team will have a separate backup list offline that will be used as a "master copy" containing all banned users. Only the security team is authorized to add ban a user.
   1. Send notification to the osg security team and the site security contacts and the security contact of affected VO or VOs when a user is banned.
   1. For sites that do not have 24/7 support this tool will potentially enable quick response during a security incident. This is a good tool for mitigation and currently is the only mitigation strategy available other than sending secure emails.


---+++ Long term requirements:

   1. In the long term we would be interested in banning proxies based on serial number so that the certificate does not need to be revoked/banned in case of just a proxy being stolen.


---+++ Design

   1. The central list will sync up with its client side equivalent list, but it will leave the list of banned users from the site admin untouched.
        %ATTACHURL%/banningTool.png
   2. This service will have a service certificate from an CA in the OSG distribution.
   3. The service address will be distributed through the VO package. Though the service address is provided the site will have to turn on the service using vdt-control option.
   4. This will be a pull service from the site, since a push will require more ports open and we will have to maintain a list of sites to push to. Further more with a pull service a site can decide not to pull at anytime of their choosing without the central OSG security team being notified or getting involved. This is consistent with general OSG principle of site autonomy.
   5. We can maintain this list as a voms service or have it as a plain test file. If it is a voms server then gums and edg will have to add new code path to understand a deny (remove DNs) voms server. Another way of implementing this would be to provide a wrapper that will create a file that contains the client side copy of the central list.
      1. The remove DN option in voms server is too specific of an option that will potentially be only used by this service. So it may not be appropriate to add new code path to GUMS and edg-mkgridmap just for this purpose. Will need more discussion before implementation
      2. Another advantage of the text file would be that the md5sum can be calculated and it can be signed with the security teams key.
      3. The location of public key of the security team will also be distributed  in the VO package, so that the signature can be verified.
      4. In case of compromise of either the security team's key or the central list, the signature wont match and no sync action will be taken.
      5. If both central list and key is compromised the sites will get a potentially bad information from the central list.
   6. This tool will automatically runs every 6 hours to match other update mechanisms like crl updates etc.
   7. To implement the rollback mechanism in instances of a compromise we use the master list that is kept offline by the security team.


---+++ Risk assessment of this service:

   1. There is a residual risk of a DOS attack or removing a banned user if this service gets compromised. This service is intended mainly for sites without 24/7 support. We will only encourage sites without 24/7 support to enable this service.
   1. The residual risk is if both central list and key is compromised the sites will get a potentially bad information from the central list.
   1. If this central banning service gets compromised or malfunctions there needs to be a mechanism to rollback to the previous state or instantiate a clean new service in short order.
   1. Security team makes a mistake when banning a user DN.

---+++ Implementation Considerations 
   1. For the short term the plan is to new service that pull a secure banned list of users (DNs/FQANs) from the central server. 
      * This service will then invoke a wrapper script that will add the banned user list to GUMS or edg-mkgrid map in formats they understand. 
      * Distribute the default gums template with the banned user group already configured.
   1. For the long term we need to investigate EGEE Authz service. The EGEE AuthZ service claims to ALSO provide support for central banning.

-- Main.AnandPadmanabhan - 05 May 2009

%META:FILEATTACHMENT{name="banningTool.png" attachment="banningTool.png" attr="h" comment="" date="1241709841" path="banningTool.png" size="16943" stream="banningTool.png" tmpFilename="/usr/tmp/CGItemp11208" user="AnandPadmanabhan" version="2"}%
