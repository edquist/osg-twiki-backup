%META:TOPICINFO{author="KyleGross" date="1481047955" format="1.1" version="1.5"}%
%META:TOPICPARENT{name="SecurityTeamWorkingArea"}%
%TOC%
---++ VO Package Project
   * Motivation: review and if necessary modify the contents of the VO Package; devise a mechanism for site admins to merge a new VO Package into the existing site configuration with ease. 


---+++VO package from the OSG GOC point of view: 

The VO package should contain three classes of information: 
   1) list of VOs that OSG has a trust relationship with 
   2) for each VO, the list of VOMS URIs for the VO 

 Is there any particular order to this?
   3) For each VO, the list of roles/role patterns that the VO would like to treat as separate entities.

How to match certificates for each group/role pattern and which group/role pattern to try first.  For example, if I come in with a FQAN "/atlas/usaltas/Role=software", should I be matched against the pattern "/atlas/usatlas" or skip this one and try the next pattern?  Which one should I try next? Is the pattern matching really under VO purview or site purview? 


The GOC would prefer not to manage any other information in the VO package. 

The above information is used for two purposes: <br>
   a) The vomses file, used on the client side for voms-proxy-init 
   This file can be fully specified by GOC, although some users may want to augment it. 

*Altunay*: what augmentation? Why? <br>
*Igor*: Sites may have trust relationships with VOs that are not part of OSG. So the vomses file could contain those VOs, too. We should support this use case.

   b) The edg-gridmap and GUMS templates, used on the server side 
   These files cannot be fully defined by GOC. The site admins must provide local mapping rules and optionally 
decide to support only a subset of VOs. 

*Remaining questions:* 
   1) Should above list include VO preference on users using grid proxy vs. voms proxy?
   2) Which groups and roles should be able to write and delete other members data and/or control other members processes. Currently, these VO preferences are defined or hinted at via the groupToAccountMapping elements in a GUMS configuration.  There may be a better way to present them.  But somehow an administrator ought to have access to this information and be able to choose these preferences at their site if they like. 
   3) Another point is that currently there are some site specific things in the OSG GUMS template configuration such as account names and persistence factories.  I think we all agree these should be removed and I should allow GUMS to not require them, but instead use what the admin has specified. 

Also, one other point is that the GUMS configuration, which is in an XML format, separates the three classes of information quite well. It also is rich enough to encode the VO preference information I mentioned.  Assuming we can remove all site specific information, we should consider keeping the GUMS configuration (or a modified version) and having vomses and edg-gridmap parse out the information that they need from the GUMS configuration.  In other words, XML is as good a format as any to encode and separate information so let's make use of what we have. 

*Altunay*: what are the three classes of information in GUMS configuration. <br>

---+++Revised VO package from the OSG GOC point of view:

The VO package should contain three classes of information:<br>
1) List of VOs that OSG has a trust relationship with.

2) For each VO, the list of VOMS URIs for the VO.
   The list should be ordered.

3) Optionally, for each VO, the list of roles/role patterns
   that the VO would like to treat as separate entities.

   Authentication without a VOMS FQAN could be treated as a NULL role.

*Altunay*: is returning a NULL address equivalent to denying access with plain proxies. Another VO may allow plain proxies and the user can be mapped into another account if he has multiple VO memberships. I do not want the NULL value to prevent user from being mapped into the second VO’s account. <br>
*Igor*: Jay may explain better, but to the best of my knowledge, the NULL role by itself does not mean a DENY. It just means that GUMS can treat all proxties as if they all had a FQAN attached to them. Everything else is then policy expressed in the GUMS config.

   The list should be ordered, and the first match wins.

*Altunay*: why the first match? It could be an exact match, or last match or first match if exact match fails, etc? <br>
*Igor*: This is how both gridmap and GUMS currently work.

   If there is at least one element in the list, a default deny is implied at the end.

*Altunay*: this means if no account matches a deny will be returned? <br>
*Igor*: Yes.
 
4) Optionally, for each VO role as per (3), the preferred mapping type:
   group, pool, either

*Altunay*: how does a VO admin can express that a privileged VO admin account will have r+w access over pool accounts? if either is selected, it means it is left up to the site? <br>
*Igor*: Yes, that kind of detail is out of scope for the VO package. The SVOPME project is supposed to address that.

The GOC would prefer not to manage any other information in the VO package.

The above information is used for two purposes:<br>
a) The vomses file, used on the client side for voms-proxy-init
   This file can be fully specified by GOC, although some users may want
to augment it.

b) The edg-gridmap and GUMS templates, used on the server side
   These files cannot be fully defined by GOC.
   The site admins must provide local mapping rules and optionally
decide to support only a subset of VOs.

---+++GUMS proposal on the VO package content

   * The GOC will remove persistence factories and hostToGroupMappings from their GUMS template since they are purely site specific. GUMS will be modified to allow this. 
   * The GOC will provide a 1.2 format GUMS config since this separates the VO from site information through different XML sections (there 
    is no need to split it into different files).  Whether a 1.1 is still offered is up to the GOC. 
   * Each element will have a "source" field.  This will be set to "OSG" in the OSG template.  When the admin merges a configuration from the OSG, only elements with the source set to "OSG" will be replaced. 

*Altunay*: what happens if there is a new OSG-sourced element in GOC template yet there is no such element yet at the site (This is a newly added element from OSG. ) Would all OSG-sourced elements be downloaded by default and existing OSG-sourced element values will be replaced. 

*Altunay*: can an admin change the source type? The admin may not want the value to be changed by OSG. 

   * No mapping is changed when merging a configuration unless the admin specifically selects the mapping (a groupToAccountMapper element) in the list of possible mappings and associates that mapping to a specific gatekeeper or set of gatekeepers.  The next merge will remember his choices by default though he can change them.
*Altunay*: I do not get the above point. 
 
   * The OSG template should have default mappings (even though this is a site element) and give the admin the choice if he/she wants to 
    import these default mappings (either as a starting point or to keep by creating the default unix accounts).  Otherwise, you'll have unhappy admins who have to add 30 or so groupToAccountMappers by hand.  This also preserves some VO preferences concerning order and file sharing preferences. 
   * We will give the option of automatic periodic updates of VomsServer and UserGroup elements. 

*Altunay*:why do we need this? each time VOMS server or usergroup elements change, we advertise a new VO package. Then the site can do the automated merging. What does this periodic updates do that we cannot achieve via new VO package advertises. 
 
We leave it up to the GOC as to how the gums template is generated as well as the edg-gridmap file and vomses files.  We may be able to help with GUMS conversion tools if needed.
  
---+++Updated GUMS proposal on the VO package content

   * The GOC will remove persistence factories and hostToGroupMappings from their GUMS template since they are purely site specific. GUMS will be modified to allow this during the merge process. 
   * The GOC will provide a 1.4 format GUMS config since this separates the VO from site information through different XML sections.<BR>
      GOC plans to provide 1.1 for the foreseeable future, too. May switch to 1.2 when GUMS 1.1 is not use anymore by the OSG sites. 
   * Each element will have a "source" field.  This will be set to "OSG" in the OSG template.  When the admin merges a configuration from the OSG, only elements with the source set to "OSG" will be replaced. 

We leave it up to the GOC as to how the gums template is generated.
We will provide conversion tools from GUMS 1.4 template to other versions of GUMS (v1.1 initially) as well as to the edg-gridmap template.<br>
The vomses file will also be generated independently by the GOC. 


---+++Barebone GUMS configuration file: 

<gums version=1.3"> 
   <vomsServers> 
       <vomsServer 
           name='atlas' 
           description='' 
           baseUrl='https://voms.cern.ch:8443/voms/atlas/services/VOMSAdmin'/> 
          ... 
   </vomsServers> 

   <vomsUserGroups> 
       <vomsUserGroup> 
           name='atlas' 
           description='' 
           vomsServer='atlas' 
           matchFQAN='vo' 
           acceptProxyWithoutFQAN='true' 
           voGroup='/atlas'/> 
            ... 
   </vomsUserGroups> 


optional for admins to import: 
<verbatim>
   <groupToAccountMappings> 
       <groupToAccountMapping 
           name='atlas' 
           description='' 
           accountingVoSubgroup='usatlas' 
           accountingVo='ATLAS' 
           userGroups='atlas' 
           accountMappers='atlas'/> 
            ... 
   </groupToAccountMappings> 

   <accountMappers> 
       <groupAccountMapper 
           name='atlas' 
           description='' 
           accountName='usatlas4'/> 
           ... 
   </accountMappers> 
</gums>
</verbatim>


-- Main.MineAltunay - 06 May 2009