%META:TOPICINFO{author="KyleGross" date="1480625575" format="1.1" version="1.11"}%
%META:TOPICPARENT{name="SecurityTeamControlsAssessment2014"}%
<!--
   * Set QS = <span style="color: #F60;">
   * Set QE = </span>
-->

---+ OSG SecurityTeam Controls Survey


---++ DATA Integrity 

%QS%1. Which core service or asset are you reporting for?%QE%

The OSG Software and Release teams own data in the following systems:

   * Yum repositories, hosted at University of Wisconsin–Madison (UW) and Indiana University (IU)
   * Subversion repository, hosted at UW
   * Koji service, which we use to build our RPM-based software and manage our yum repositories, hosted at UW
   * (Unsupported but still existent) Pacman caches and VDT website (vdt.cs.wisc.edu), hosted at UW

%QS%2. Have you read the OSG SecurityTeam Plan, Data Integrity section 2.3.3 within the past 12 months and understand your responsibilities for the proper handling of Sensitive Personal Data, Restricted Data, Limited Distribution Data and Public Data. This document can be found at the OSG DocDB website:  https://osg-docdb.opensciencegrid.org:440/cgi-bin/ShowDocument?docid=389%QE%

No.

%QS%3. If your service does not store, process, transmit any data, you may indicate it here and conclude the survey.%QE%

We store, process, and transmit data.

%QS%4. Are you the owner of the data? The data owner is responsible for collection, storage, and treatment of the data. Although you own the core service/process, there may be another person who owns the data. If so, please provide his/her name below, and answer the following questions with that person.%QE%

Yes, the OSG Software manager (Tim Cartwright) owns the data.

%QS%5. Please enter data name you own along with a very brief description and the data type. The data types are explained in Section 2.3.3  https://osg-docdb.opensciencegrid.org:440/cgi-bin/ShowDocument?docid=389.	%QE%

%QS%5A. Name%QE%

   1. OSG Software Yum repositories
   2. OSG Software Subversion repository
   3. OSG Software Koji service data
   4. VDT Pacman caches and website

%QS%5B. Description%QE%

   1. The public distribution point for OSG Software RPMs
   2. The source data for software, packaging, and other OSG Technology area tools
   3. The build system’s package and build metadata, and historical build logs and related data
   4. The public distribution point for the now-unsupported OSG Software Pacman packages and VDT documentation

%QS%5C. Type%QE%

All data are public, except for a very few individual files (see section 10 below).

%QS%6. What is your data backup policy (e.g., weekly full, daily differential, etc.) ?%QE%

   1. Yum repositories – UW: daily to another UW machine, then weekly offsite copies; IU: as determined by the GOC
   2. Subversion repository – daily to UW Computer Sciences (UWCS) AFS, which in turn is daily
   3. Koji data – daily to another UW machine, then weekly offsite copies
   4. VDT site – on UWCS AFS, so daily

%QS%7. Backups%QE%

%QS%7A. How long do you retain the back-ups?%QE%

   1. Yum repositories – UW: monthly snapshots for up to a year; IU: unknown
   2. Subversion repository – UWCS AFS: 30–60 days
   3. Koji data – UW: monthly snapshots for up to a year; IU: unknown
   4. VDT site – UWCS AFS: 30–60 days

%QS%7B. How do you ensure that your data back-ups are stored correctly, protected and restorable?%QE%

For some backups, we receive email notification when they occur, along with notification of any failures; others, there is nothing. And generally speaking, we have not had the effort available to test restorations.

%QS%8. Please list your on-call support email address and/or phone number in case of emergencies, such as unexpected power loss, security attacks or natural disasters.%QE%

We do not maintain on on-call presence. Possible contact points are:

   * Tim Cartwright <cat@cs.wisc.edu>, (608) 262-4002
   * The Software team (and interested other people) in general: OSG Software <osg-software@opensciencegrid.org>
   * The UW Computer Systems Lab (in the CS department): <lab@cs.wisc.edu> (also not on call)

%QS%9. Are you aware of any attacks against the data? What do you think is the biggest threat against the data?%QE%

I am not aware of any attacks. The biggest threats are accidental loss or corruption.

%QS%10. If you own Restricted Data please answer the following questions.%QE%

To date, we identified the following individual files that contain restricted data on our systems:

   * Keys for signing RPMs (one for OSG, one for the Holland Computing Center at UNL)
   * The database password for Koji
   * Host keys for a variety of OSG-related hosts, including Koji and ITB hosts

%QS%10A. Who are the authorized people who can access this data? How do you determine this list of people?%QE%

   * The Koji RPM keys are accessible to OSG Software staff and UW system administrators who maintain the Koji service; the administrators establish access for their staff
   * The Koji database password has the same access controls as the Koji RPM keys
   * The host keys are on AFS and hence accessible to UW CHTC staff and, when installed on hosts, by OSG Software staff and UW system administrators who have host access

Generally, we try to limit access to restricted data by need. For instance, not all OSG Software team members have access to the Koji servers, because only a few staff at UW need such access. The UW system administrators determine who can access their restricted data.

%QS%10B. Do you inform the authorized people about how they should treat restricted data?%QE%

No, but we assume that all people who have access understand security.

%QS%10C. Which access control mechanisms applies to this data?%QE%

Access to hosts are controlled by ssh, and access to files is controlled by filesystem permissions.

%QS%10D. Do you keep a log of accesses to the data?%QE%

Probably not. Presumably, there are logs of ssh logins, but probably none on filesystem access.

%QS%10 E. And if so, how long do you keep the log files?%QE%

Unknown.

%QS%10F. What information is recorded in the log files?%QE%

Unknown.

%QS%10G. How do you terminate rights of authorized recipients? Which mechanisms are used to achieve this?%QE%

We rely on system administrators and do not know how they handle this task.

%QS%11. If you do not own any limited data, skip to Question 12. If you have multiple data under restricted category and each one has different answers for the following questions, please answer the questions for each data separately	%QE%

We have not identified any limited data.

%QS%11A. Who is authorized to access the data? How do you determine this list of people?%QE%

%QS%11B. How do you communicate the security requirements to the data to authorized recipients ? Do the recipients agree to the requirements? Do you keep record of such communications in a way that can be audited?	%QE%

%QS%11C. Which access control mechanisms applies to this data?%QE%

%QS%11D. Do you keep logs of access to the data?%QE%

%QS%11E. And if so, how long do you keep the log files?%QE%

%QS%11F. What information is recorded in the log files?%QE%

%QS%11G.  How do you terminate rights of authorized recipients? Which mechanisms are used to achieve this?%QE%

%QS%12. If you have any public data, please answer the following questions%QE%

%QS%12A. What are the, if there are any, access control mechanisms applied to your Public data to maintain its integrity? (An example would be a list of the authorized people who can modify the data.)%QE%

   1. Yum repositories – available for public reading via HTTP; the GOC controls write access, and we do not know how they do that
   2. Subversion repository –
      * Stored on UWCS AFS with an AFS group and AFS ACLs to control access
      * Accessible via the Subversion-over-HTTPS method, write access is controlled by a text-based ACL
      * Public read-only access via a repoview service on the web
   3. Koji data – web and command-line access are protected by X.509 authentication and Koji’s own internal authorization system
   4. VDT site – stored on UWCS AFS with an AFS group and AFS ACLs to control access; public read-only access via HTTP



---++ Configuration Management  

%QS%1. Which core service or asset are you reporting for?%QE%

   1. OSG Software Yum repositories
   2. OSG Software Subversion repository
   3. OSG Software Koji service data
   4. VDT Pacman caches and website
   5. UW ITB instance (still under construction)

%QS%2. Please indicate if you have read the OSG SecurityTeam Plan, Configuration Management section 2.4.4 within the past 12 months and understand your responsibilities for Monitoring, Version Control and SecurityTeam Review of the OSG Core resources under your control. This document can be found at the OSG !DocDB website:  https://osg-docdb.opensciencegrid.org:440/cgi-bin/ShowDocument?docid=389 *%QE%

No.

%QS%3. How do you ensure that your service's configuration variables are not modified by unauthorized parties? How can you detect if unauthorized changes are made?%QE%

For our systems, there are typically two tiers of configuration management:
   * System administrators (OSG GOC or UW CHTC), primarily for lower-level services and configuration (e.g., operating system, network, firewalls, Apache HTTPD, AFS), and
   * OSG Software staff, primarily for higher-level configuration.

Insofar as we know, configuration of higher-level OSG services is managed and protected as follows:
   1. Yum repositories – managed at the GOC
   2. OSG Software Subversion repository – managed by the OSG Software team and protected by filesystem ACLs
   3. OSG Software Koji service data – managed by the OSG Software team and protected by filesystem ACLs
   4. VDT Pacman caches and website – managed by the OSG Software team and protected by filesystem ACLs
   5. UW ITB instance (still under construction) – managed by the OSG Software team and protected by filesystem ACLs

I am not aware of system or service configuration outside the control of those groups, but I have not actively surveyed to be sure.

%QS%4. Please indicate the version control system you employ for tracking changes to your service configuration. For example, do you maintain a change log that could be used to track and rollback any changes to configuration?%QE%

   * For configuration by the GOC or by UW CHTC infrastructure staff, we do not know how they track changes, although we believe that the CHTC infrastructure team uses Puppet for many systems.
   * For configuration settings managed by the OSG Software team, we try to use Subversion and/or Puppet to manage systems.
   * I am not aware of a comprehensive survey of all configuration, though, so some configuration may not be tracked.

%QS%5. Please indicate the process of approving configuration changes for your core OSG service. Specifically what steps are taken to review the security implication of the proposed changes?%QE%

   * For configuration by the GOC or by UW CHTC infrastructure staff, we do not know their internal processes; typically, we interact with those groups via email or ticket systems.
   * For configuration settings managed by the OSG Software team, we have a very informal process, mostly consisting of checking with each other before making a change.
   * For more significant changes (such as when we introduced new repositories), we make a deployment plan including backup and rollback options.
   * I am not aware of any formal mechanisms for reviewing changes for security implications, so we rely on the sensibilities of the staff who are involved.



---++ Vulnerability Management

%QS%1. Which core service or asset are you reporting for?%QE%

   1. OSG Software Yum repositories
   2. OSG Software Subversion repository
   3. OSG Software Koji service data
   4. VDT Pacman caches and website
   5. UW ITB instance (still under construction)

%QS%2. What system do you use to report and track vulnerabilities of your core service. For example, do you maintain vulnerability logs?%QE%

We rely on system administrators for this task and do not know how they handle it.

%QS%3. What steps do you employ to mitigate vulnerability to your core services. For example, what types of vulnerability scanning are being done? Do you have regular scheduled updates/maintenance schedule to fix known vulnerabilities?%QE%

We rely on system administrators for this task and do not know how they handle it.



---++ Physical/Console Access Control 

%QS%1. Which core service or asset are you reporting for?%QE%

   1. OSG Software Yum repositories
   2. OSG Software Subversion repository
   3. OSG Software Koji service data
   4. VDT Pacman caches and website
   5. UW ITB instance (still under construction)

%QS%2. Please indicate if you have read the OSG SecurityTeam Plan, Physical Access Control and Site Management section 2.4.6 within the past 12 months and understand your responsibilities for the OSG Core resources under your control. This document can be found at the OSG DocDB website:  https://osg-docdb.opensciencegrid.org:440/cgi-bin/ShowDocument?docid=389 *%QE%

No.

%QS%3. Physical access to all production core OSG systems must be controlled &ndash; with a lock, key, etc. Verify that your core OSG resources comply with this requirement and are indeed in an access controlled area, as defined above.%QE%

   * Access to all relevant UW–Madison machines is restricted with physical locks (mechanical or electronic). Access to keys is provided by local facility management.
   * Access to GOC resources is managed by the GOC and we do not know how they handle it.

%QS%4. Who among your team currently has root and sudo access on the OSG systems providing core services and what is the policy of granting such access?%QE%

   * UW system administrators have root/sudo access to all their machines.
   * UW Software team staff have root/sudo access to some relevant machines.
   * The policy for administrators to grant staff access to UW resources is unknown, but in-person requests usually seem to work.
   * OSG Software staff generally do not have root/sudo access to machines at the GOC or elsewhere, except as granted by the administrators of those machines.

What does “sudo” have to do with physical access?

%QS%5. According to the OSG SecurityTeam Plan, network login or command line access to a production core OSG system shall be permitted only from a client via secure authorization and authentication mechanisms. Describe which authorization and authentication mechanisms you are using for secure network login or command line access by privileged staff versus unprivileged users.%QE%

We use ssh with passwords or public/private key pairs.

%QS%6. All production core OSG systems shall run the absolute minimum set of network services required for their functions. Have you verified in the past year that your core OSG resource systems are running only those network services necessary for system operation? Also list the network services running that are deemed NOT necessary.%QE%

We rely on system administrators to manage network services, and so I have not verified them personally.

%QS%7. All production core OSG service providers must have a plan describing redundancy or other mechanisms used to maintain service availability in case of operational disruption or emergencies. Please describe the redundancy plans that would be deployed for your core service to ensure availability in case of unplanned disruption or emergency.%QE%

There is no SLA for our services, and so there are no redundant systems in place except for ones provided by local system administrators (such as the inherent redundancy in AFS). Our data is backed up as described above, and our most critical backups are copied offsite to the GOC.

%QS%8. On each production core OSG system, a copy of the system and service logs shall be saved on line for at least 30 days. Have you verified within the past year that this requirement is being met?%QE%

We rely on system administrators to manage low-level systems, and so I have not verified the state of logging personally.



---++ Authentication Control 

%QS%1. Which core service or asset are you reporting for?%QE%

   1. OSG Software Yum repositories
   2. OSG Software Subversion repository
   3. OSG Software Koji service data
   4. VDT Pacman caches and website
   5. UW ITB instance (still under construction)

%QS%2. Indicate that you have read the OSG SecurityTeam Plan, Access Control section 2.5.2 Scanning section 2.5.3 within the past 12 months and understand your corresponding responsibilities for the OSG Core resources under your control. This document can be found at the OSG !DocDB website:   https://osg-docdb.opensciencegrid.org:440/cgi-bin/ShowDocument?docid=389 *%QE%

No.

%QS%3. What authentication mechanism is employed for privileged access to core resources%QE%

   1. Yum repositories – host login access is managed by GOC; web access is mostly public, but there may be authenticated access to some areas via Apache
   2. OSG Software Subversion repository – filesystem and direct access is authorized via AFS; web access is over HTTPS and authenticated by Apache using a username/password file
   3. OSG Software Koji service – filesystem access is authorized via filesystem permissions; command-line and web access is authorized by a whitelist of X.509 user certificates
   4. VDT site – host login access via SSH; web access is mostly public, but there may be authenticated access to non-OSG areas via Apache
   5. UW ITB instance (still under construction) – host login access is by ssh; filesystem access is by filesystem ACLs; many configuration files are saved in Subversion (see above); OSG services are specific to each service

%QS%4.  How is privileged access to core resource granted and what authorization technique is used?%QE%

How is the granting of privileged access different than authentication? Generally, authentication and authorization methods are combined, as described above.

%QS%5. What is the authentication and authorization techniques used for non-privileged user access?%QE%

Public access is mentioned above.

%QS%6. At what frequency are you scanning web services for vulnerabilities and what types of vulnerability scanning are being done?%QE%

We rely on system administrators to support our systems, and I am not aware of the details.

%QS%7. What remedial procedures are followed when vulnerabilities are detected?%QE%

We rely on system administrators to support our systems, and I am not aware of the details.

%QS%8. What steps are being taken to scan for local vulnerabilities/intrusion detection and how often?%QE%

We rely on system administrators to support our systems, and I am not aware of the details.



<!--
Accessible by security team only:
   * Set ALLOWTOPICVIEW = Main.SecurityTeamTeamGroup, Main.TimCartwright, Main.TimTheisen
   * Set ALLOWTOPICCHANGE = Main.SecurityTeamTeamGroup, Main.TimCartwright, Main.TimTheisen
   * Set DENYTOPICVIEW = Main.TwikiGuest
-->