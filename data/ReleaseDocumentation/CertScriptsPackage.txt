%META:TOPICINFO{author="JamesBarlow" date="1276205343" format="1.1" version="1.23"}%
%META:TOPICPARENT{name="Security.OsgRaOperations"}%
%DOC_STATUS_TABLE%

%TOC%

---++ Certificate Scripts package
This the home page for documenting the cert-scripts package that provides a command-line
interface to the DOEGrids CA website and some additional utilities for dealing with
X509 certificates.  This package was developed originally by the PPDG project and is
now maintained by the OSG RA.

As an alternative to the web browser interface, these scripts are contributed to the DOEGrids PKI to allow a command-line interface to the certificate authority for submitting certificate requests, retrieving signed certificates, renewing certificates, directory lookup of existing certificates, and checking the remaining lifetime of certificates and certificate revocation lists. They work directly with the PEM format files used by Globus. These are perl scripts and bash shell scripts (some awk), depend upon openssl, ldapsearch and the perl LWP:: module with [[http://search.cpan.org/src/GAAS/libwww-perl-5.803/README.SSL][SSL support]]. Click on the File link below for the usage description of the script, or to download the tar file package containing the scripts. These scripts have been tested for work with VDT 1.1.2 and 1.3.1. They are included with [[http://vdt.cs.wisc.edu][VDT]], starting with 1.3.1.

Release notes are included in the README file linked below.

---+++ Man Pages

| *File* | *Description*  |
| [[Security.CSReadMe][README]]  | describes the package, includes release notes  |
| [[Security.CSReadMe#cert_check_time][cert-check-time]]  | checks lifetime of certificates and revocation lists  |
| [[Security.CSReadMe#cert_gridadmin][cert-gridadmin]]  | immediate issuance of service certificates for authorized requestors  |
| [[Security.CSReadMe#cert_lookup][cert-lookup]]  | queries directory based on DN of certificates  |
| [[Security.CSReadMe#cert_request][cert-request]]  | generates and submits a certificate signing request  |
| [[Security.CSReadMe#cert_retrieve][cert-retrieve]]  | retrieves signed certificate previously requested  |
| [[Security.CSReadMe#cert_renew][cert-renew]]  | renews existing person certificate (not host or service)  |
| [[Security.CSReadMe#multi_cert_gridadmin][multi-cert-gridadmin]] | immediate issuance of multiple service certificates for authorized administrators (new with V2-3) |
| [[Security.CSReadMe#InstallationNotes_txt][InstallationNotes.txt]] | extra installation requirements for multi-cert-gridadmin (new with V2-3) |

---+++ Examples
---++++ get http service certificate with cert-gridadmin
This example uses the gridadmin authorized certificate and key files in the default Globus location of
~/.globus/usercert.pem and ~/.globus/userkey.pem,
and generates the service certificate files as <tt>http-myhostcert.pem</tt> and <tt>http-myhostkey.pem</tt> in the current working directory.
<verbatim>
$ cert-gridadmin --host dlolson.lbl.gov --service http --email dlolson@lbl.gov \
   --affiliation osg --vo osg --prefix http-myhost
checking CertLib version, V2-7,  This is the latest version, released 18 May 2009.
Generating a 2048 bit RSA private key
......+++
........+++
writing new private key to './http-myhostkey.pem'
-----
osg
OSG
OSG:OSG
The next prompt should be for the passphrase for your
personal certificate which has been authorized to access the
gridadmin interface for this CA.
Enter PEM pass phrase:
Your new certificate and key files are ./http-myhostcert.pem ./http-myhostkey.pem
move and rename them as you wish but be sure to protect the
key since it is not encrypted and password protected.

$ ls -l
total 16
-rw-rw-rw- 1 user  group 1497 Aug  3 17:23 http-myhostcert.pem
-rw------- 1 user  group 1675 Aug  3 17:23 http-myhostkey.pem

$ openssl x509 -in http-myhostcert.pem -noout -subject -issuer -dates -serial
subject= /DC=org/DC=doegrids/OU=Services/CN=http/dlolson.lbl.gov
issuer= /DC=org/DC=DOEGrids/OU=Certificate Authorities/CN=DOEGrids CA 1
notBefore=Aug  4 00:23:41 2009 GMT
notAfter=Aug  4 00:23:41 2010 GMT
serial=87E2


</verbatim>


---++++ name certificate files by service/hostname
wrapper for cert-gridadmin to name generated certificate files according to the specified service/hostname.
<pre>
$ cat example-service-request.txt
#!/bin/sh
#
# example for V1-8 of cert-scripts package.
#
# Location of request script (point to your prefered local copy)
CGA=./cert-gridadmin
# Owner of certificates (add your email address)
email=
if [ $# -eq 2 ]; then
   service="-service $2"
        tag="$2"
elif [ $# -eq 1 ]; then
        tag="host"
else
    echo "usage: $0  <fully.qualified.domain.name> [ <service > ]"
    echo "    calls cert-gridadmin and generates cert/key files named"
    echo "       fully.qualified.domain.name-servicekey.pem"
    echo "       fully.qualified.domain.name-servicecert.pem"
    echo "  edit $0 for your context"
    exit
fi
$CGA -host $1 $service \ 
        -prefix "$1-$tag" \ 
        -ca test \ 
        -affiliation <your RA here> \ 
        -vo <your VO here, for OSG> \ 
        -show \ 
        -email $email
</pre>

---++++ generating many certificates

The example below shows use of the cert-gridadmin script, which requires an authentication
for each individual certificate.  See also the information on multi-cert-gridadmin.

<verbatim>
#!/bin/sh
#
# example for generating many host certificates with V1-9 of cert-scripts package. 
#
# 1. Create a file $hostfile which contains a list of host's FQDN, one per line
# 2. Run this script 
# Note: You will be prompted for your PEM passphrase for each host :(
#
#
# Some script parameters. To be filled in by user
#
CGA=$VDT_LOCATION/bin/cert-gridadmin    # Location of cert scripts
CA=doegrids                             # Name of CA to use, either 'test' or (default) 'doegrids'
Affiliation=osg                         # Name of your RA to process this request
VO=<your VO here>                       # Name of primary virtual organization, only for the OSG RA
email=your-email@address.domain         # Your email, as the owner of the requested certificate
hostfile=./hosts.txt                    # A text file with a list of hosts
#
# if you want some service shown, such as ldap then set service variable like
# service="-service ldap"

# Check whether there is a user certificates are installed in ~/.globus
if [ ! -f $HOME/.globus/userkey.pem -o ! -f $HOME/.globus/usercert.pem ]; then 
    echo "You need to have your userkey.pem and usercert.pem files in $HOME/.globus"
    echo "Exiting please try again"
    exit
fi
listohosts=`cat $hostfile`
aff=`echo $Affiliation | tr 'A-Z' 'a-z'`
vo=`echo $VO | tr 'A-Z' 'a-z'`
for i in $listohosts
do 
  $CGA -host $i $service -prefix "$i-host" ca $CA -affiliation $aff -vo $vo -show -email $email
done
</verbatim>
---+++ Source

Distributed in VDT as pacman package PPDG-Cert-Scripts. Install with

<pre>
pacman -get VDT::PPDG-Cert-Scripts
or
pacman -update PPDG-Cert-Scripts
</pre>
If you look at the [[http://vdt.cs.wisc.edu/releases/][releases]] documentation for VDT you can find which version of the scripts
are included in a particular VDT release.

Or, download [[%ATTACHURL%/cert-scripts-V2-7-rev59.tgz][cert-scripts-V2-7-rev59.tgz]]  and untar into the location you want. Note that these scripts require some perl extensions that are included with VDT but not necessarily installed in other environments.  New with V2-4 is the multi-cert-gridadmin script which has additional installation requirements.
In a typical VDT or OSG installation you can manually install it from the tar file as

<pre>
$ cd $VDT_LOCATION
$ tar -zxvf cert-scripts-V2-7-rev59.tgz
</pre>

Previous release:  [[%ATTACHURL%/cert-scripts-V2-6.rev50.tgz][cert-scripts-V2-6.rev50.tgz]]

---+++ FAQ
---++++ web proxy variables at BNL
These environment variables are necessary at the RCF/ACF at BNL (on 19 Mar 2007).
   * http_proxy=http://192.168.1.3:3128
   * https_proxy=http://squid.sec.bnl.local:3128


<hr>

-- Main.DougOlson - 30 Jun 2006

-- Main.DougOlson - 20 Jul 2006 - for V1-8a

-- Main.DougOlson - 20 Nov 2006 - for V2-1

-- Main.DougOlson - 20 Mar 2007 - V2-2  (time must be in UTC)

-- Main.DougOlson - 29 May 2007 - V2-3

-- Main.DougOlson - 06 Jul 2007 - V2-4

-- Main.DougOlson - 23 Aug 2007 - V2-5

-- Main.DougOlson - 13 Feb 2008 - V2-6

-- Main.DougOlson - 18 May 2009 - V2-7

<!-- CONTENT MANAGEMENT PROJECT

   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = DougOlson

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Security

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (Scientist|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Knowledge
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = JamesBarlow
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %NO%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = AnandPadmanabhan
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
 
-->

%META:FILEATTACHMENT{name="cert-scripts.V1-8a.tar" attr="" autoattached="1" comment="V1-8a. revision to V1-8, requires -name in cert-request" date="1153430985" path="cert-scripts.V1-8a.tar" size="112640" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts.V1-9.tar" attr="" autoattached="1" comment="V1-9 source" date="1157572831" path="cert-scripts.V1-9.tar" size="122880" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts-V2-5.rev44.tgz" attr="" autoattached="1" comment="V2-5, bug fixes to multi-cert-gridadmin, add p12 export" date="1187904652" path="cert-scripts-V2-5.rev44.tgz" size="438219" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts.V1-8.tar" attr="" autoattached="1" comment="V1-8 source - update README" date="1152122053" path="cert-scripts.V1-8.tar" size="112640" user="DougOlson" version="1.2"}%
%META:FILEATTACHMENT{name="cert-scripts.V2-2.tar" attr="" autoattached="1" comment="V2-2 source, add http_proxy to all scripts" date="1174349327" path="cert-scripts.V2-2.tar" size="122880" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts-V2-3-rev22.tgz" attr="" autoattached="1" comment="V2-3, include multi-cert-gridadmin" date="1180424066" path="cert-scripts-V2-3-rev22.tgz" size="448828" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts.V2-0.tar" attr="" autoattached="1" comment="V2-0, now with live RA/VO information" date="1160088590" path="cert-scripts.V2-0.tar" size="122880" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts-V2-4.rev40.tgz" attr="" autoattached="1" comment="V2-4, matches DOEGrids RHCS7.1 released 5 July 2007" date="1183747422" path="cert-scripts-V2-4.rev40.tgz" size="432012" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts.V2-1.tar" attr="" autoattached="1" comment="V2-1 source, fixes for SSL_Server usage bit" date="1164057868" path="cert-scripts.V2-1.tar" size="122880" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts-V2-6.rev50.tgz" attr="" autoattached="1" comment="V2-6, fixes NSCertType SSL Server bug in cert-gridadmin" date="1202945199" path="cert-scripts-V2-6.rev50.tgz" size="468352" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts-V2-7-rev59.tgz" attachment="cert-scripts-V2-7-rev59.tgz" attr="" comment="V2-7, changes VO list from VORS to OIM, adds file input for commandline parameters" date="1242684076" path="cert-scripts-V2-7-rev59.tgz" size="472338" stream="cert-scripts-V2-7-rev59.tgz" tmpFilename="/usr/tmp/CGItemp3567" user="DougOlson" version="1"}%
%META:TOPICMOVED{by="JamesBarlow" date="1274285257" from="Security.CertScriptsPackage" to="ReleaseDocumentation.CertScriptsPackage"}%
