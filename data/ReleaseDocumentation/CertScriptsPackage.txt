%META:TOPICINFO{author="DougOlson" date="1152122053" format="1.0" version="1.3"}%
%META:TOPICPARENT{name="OsgRaOperations"}%
%TOC%

---++ Certificate Scripts package
This the home page for documenting the cert-scripts package that provides a command-line
interface to the DOEGrids CA website and some additional utilities for dealing with
X509 certificates.  This package was developed originally by the PPDG project and is
now maintained by the OSG RA.

As an alternative to the web browser interface, these scripts are contributed to the DOEGrids PKI to allow a command-line interface to the certificate authority for submitting certificate requests, retrieving signed certificates, renewing certificates, directory lookup of existing certificates, and checking the remaining lifetime of certificates and certificate revocation lists. They work directly with the PEM format files used by Globus. These are perl scripts and bash shell scripts (some awk), depend upon openssl, ldapsearch and the perl LWP:: module with [[http://search.cpan.org/src/GAAS/libwww-perl-5.803/README.SSL][SSL support]]. Click on the File link below for the usage description of the script, or to download the tar file package containing the scripts. These scripts hae been tested for work with VDT 1.1.2 and 1.3.1. They are included with [[http://vdt.cs.wisc.edu][VDT]], starting with 1.3.1.

---+++ Man Pages

| *File* | *Description*  |
| [[CSReadMe][README]]  | describes the package, includes release notes  |
| [[CSReadMe#cert_check_time][cert-check-time]]  | checks lifetime of certificates and revocation lists  |
| [[CSReadMe#cert_gridadmin][cert-gridadmin]]  | immediate issuance of service certificates for authorized requestors  |
| [[CSReadMe#cert_lookup][cert-lookup]]  | queries directory based on DN of certificates  |
| [[CSReadMe#cert_request][cert-request]]  | generates and submits a certificate signing request  |
| [[CSReadMe#cert_retrieve][cert-retrieve]]  | retrieves signed certificate previously requested  |
| [[CSReadMe#cert_renew][cert-renew]]  | renews existing person certificate (not host or service)  |

---+++ Examples
	* wrapper for cert-gridadmin to name generated certificate files according to the specified service/hostname.
<pre>
$ cat example-service-request.txt
#!/bin/sh
#
# example for V1-8 of cert-scripts package.
#
# Location of request script (point to your prefered local copy)
CGA=./cert-gridadmin
a37 1
# Owner of certificates (add your email address)
email=
if [ $# -eq 2 ]; then
   service="-service $2"
	service="-service $2"
		  tag="$2"
        tag="host"
		  tag="host"
    echo "usage: $0  <fully.qualified.domain.name> [ <service > ]"
	 echo "usage: $0  <fully.qualified.domain.name> [ <service > ]"
	 echo "	 calls cert-gridadmin and generates cert/key files named"
	 echo "		 fully.qualified.domain.name-servicekey.pem"
	 echo "		 fully.qualified.domain.name-servicecert.pem"
	 echo "  edit $0 for your context"
	 exit
d59 38
$CGA -host $1 $service \ 
        -prefix "$1-$tag" \ 
		  -prefix "$1-$tag" \ 
		  -ca test \ 
		  -affiliation <your RA here> \ 
		  -vo <your VO here, for OSG> \ 
		  -show \ 
		  -email $email

   * example for generating many host certificates
<verbatim>
#!/bin/sh
#
# example for generating many host certificates with V1-9 of cert-scripts package. 
#
# Note: You will be prompted for your PEM passphrase for each host :(
# Some script parameters. To be filled in by user
Or, download [[%ATTACHURL%/cert-scripts.V1-8.tar][cert-scripts.V1-8.tar]] and untar into the location you want. Note that these scripts require some perl extensions that are included with VDT but not necessarily installed in other environments.
CA=doegrids                                      # Name of CA to use, either 'test' or (default) 'doegrids'
fi
listohosts=`cat $hostfile`
%META:FILEATTACHMENT{name="cert-scripts.V1-8.tar" attr="" comment="V1-8 source - update README" date="1152122053" path="cert-scripts.V1-8.tar" size="112640" user="DougOlson" version="1.2"}%
---+++ Source

Distributed in VDT as pacman package PPDG-Cert-Scripts. Install with

<pre>
pacman -get VDT::PPDG-Cert-Scripts
or
pacman -update VDT::PPDG-Cert-Scripts
</pre>
If you look at the [[http://vdt.cs.wisc.edu/releases/][releases]] documentation for VDT you can find which version of the scripts
are included in a particular VDT release.

Or, download [[%ATTACHURL%/cert-scripts.V1-9.tar][cert-scripts.V1-9.tar]] and untar into the location you want. Note that these scripts require some perl extensions that are included with VDT but not necessarily installed in other environments.
In a typical VDT or OSG installation you can manually install it from the tar file as

<pre>
$ cd $VDT_LOCATION
$ tar xvf cert-scripts.V1-9.tar
</pre>

---+++ FAQ
---++++ web proxy variables at BNL
These environment variables are necessary at the RCF/ACF at BNL.
   * http_proxy=http://squid1.sec.bnl.local:3128/
   * https_proxy=http://squid.sec.bnl.local:3128 

<hr>

-- Main.DougOlson - 30 Jun 2006

-- Main.DougOlson - 20 Jul 2006 - for V1-8a


d135 1
%META:FILEATTACHMENT{name="cert-scripts.V1-8a.tar" attr="" autoattached="1" comment="V1-8a. revision to V1-8, requires -name in cert-request" date="1153430985" path="cert-scripts.V1-8a.tar" size="112640" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts.V1-9.tar" attr="" autoattached="1" comment="V1-9 source" date="1157572831" path="cert-scripts.V1-9.tar" size="122880" user="Main.DougOlson" version="1"}%
%META:FILEATTACHMENT{name="cert-scripts.V1-8.tar" attr="" autoattached="1" comment="V1-8 source - update README" date="1152122053" path="cert-scripts.V1-8.tar" size="112640" user="DougOlson" version="1.2"}%
%META:FILEATTACHMENT{name="cert-scripts.V2-0.tar" attr="" autoattached="1" comment="V2-0, now with live RA/VO information" date="1160088590" path="cert-scripts.V2-0.tar" size="122880" user="Main.DougOlson" version="1"}%
