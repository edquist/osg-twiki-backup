%META:TOPICINFO{author="JohnWeigand" date="1194389957" format="1.1" reprev="1.14" version="1.14"}%
%META:TOPICPARENT{name="ComputeElementAuthorization"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

---++ PRIMA, GUMS, and your CE services
The  _Full Privilege_ scenario implements the PRIMA authorization module with a GUMS service and does not use a grid-mapfile.  The gatekeeper  uses a callout to PRIMA such that upon receipt of each request, PRIMA forwards the request to a GUMS service which performs the dynamic mapping of the user's certificate to a local Unix account. PRIMA can process FQAN (Fully Qualified Attribute Names), thus enabling mappings based on VO groups and roles as defined in a VOMS server.   This removes the need for maintaining grid-mapfiles on each gatekeeper and/or gridftp server.   

Obviously, your site must run a GUMS server in order to run in Full Privilege Mode. 

---++ Full Privilege Requirements
Here are a list of the requirements to implement the "Full Privilege" authorization mode:
   * A GUMS service. See the [[InstallConfigureAndManageGUMS][Install Configure And Manage GUMS]] topic of the %CACHE% documentation for information on installing GUMS.

   * If you have multiple account domains, you will need a GUMS server for each domain.   A site only needs a single GUMS server if there were a global uid assignment (eg. a single NIS domain).   Note that  each account domain can cover any number of CE hosts, storage elements, etc, so  as long as all systems have a consistent set of POSIX Users|UIDs|Groups|GIDs. 

   * Globus must be configured so that the PRIMA callout is activated and points to your GUMS service.

   * The GUMS Client software, which is installed as a part of the %CACHE% CE software, must be configured to point to your GUMS service.

   * A cron process, =gums-host-cron= , must be activated to periodically update the =osg-user-vo-map.txt= file used by Gratia, <nop>MonaALISA and GIP.
  
   * Local accounts must be created on the CE and worker nodes for all potential accounts that will be assigned by your GUMS service.  Your local GUMS administrator can identify these for you.  

Alternatively, once you have configure Globus, your GUMS client and run the =gums-host-cron=, there are two files created that can be reviewed to verify  you can get the list from the =$VDT_LOCATION/monitoring/osg-user-vo-map.txt= when the =gums-host-cron= service is run .  A listing of those local accounts that do not exist, but can be assigned by your GUMS service, can be seen in the =$VDT_LOCATION/monitoring/osg-undefined-accounts.txt= file which is also generated by the =gums-host-cron= script.



---++ Configure Globus to use the PRIMA callout
Templates for the necessary configuration files, =prima-authz.conf= and =gsi-authz.conf=,  are located in the =$VDT_LOCATION/post-install=.  Both files must be copied into =/etc/grid-security/=.

For web services, there are additional configuration files that must be set.

---+++!! gsi-authz.conf
This presence of this file in =/etc/grid-security/= tells the Globus gatekeeper and gsiftp services to use PRIMA.  It does not need to be edited, just copied over to =/etc/grid-security/=.  *Note:* =gsi-authz.conf= is the key to the callout being invoked.  If you remove this file from =/etc/grid-security/= (or if you comment out the line for the PRIMA callout),  the Globus services will revert to local grid-mapfile mode.

---+++!! prima-authz.conf
This file identifies the GUMS service.  The appropriate line comes pre-configured with the CE hostname in the =imsContact= string.  For example, say one installed a *%CACHE% %VERSION%* CE on host =osg-ce.domain.org=, but the GUMS service was on host =gums.domain.org=.  Then one would change the line
<pre>
     imsContact <nop>https://osg-ce.domain.org:8443/gums/services/GUMSAuthorizationServicePort
</pre>
to
<pre>
     imsContact <nop>https://gums.domain.org:8443/gums/services/GUMSAuthorizationServicePort
</pre>
and copy this file to =/etc/grid-security/=.   

By default, the installation has the =prima-authz.conf= file's log file verbosity set to 'debug'.  You may want to change the =logLevel= attribute  to 'info'.

---+++!! Web services configuration files
The default authorization mode for web services is Local or Compatibility.  It uses the =/etc/gird-security/grid-mapfile=.  The execution of =configuration-osg.sh= script checks for the alternative =privileged= authorization mode via the existence of the file,

   * <pre class="screen"> /etc/grid-security/prima-authz.conf </pre>

If that file exists, the script extracts <i>Your-GUMS-Server</i> information from the file and executes the command:

   * <pre class="screen"> $VDT_LOCATION/vdt/setup/configure_prima_gt4 --enable -gums-server <i>Your-GUMS-Server</i> </pre>

which modifies the necessary configuration files for activating WS-GRAM prima-callout functionality for the =Privilege= authorization mode. Otherwise the default =grid-mapfile= mode will remain configured.


---++ Configuring the GUMS client on the CE  
The GUMS-Client package came with your %CACHE% %VERSION% CE install and is included to facilitate a number of interactions between the CE a GUMS service.  The essential configuration files are located in the =$VDT_LOCATION/gums= directory.

---+++!! Check gums-client.properties
Edit the =$VDT_LOCATION/gums/config/gums-client.properties= configuration file to point to the appropriate GUMS server.  (This will have been pre-configured for you if you set =$VDT_GUMS_HOST= before installing the CE.)  The file should look something like (GUMS server is gums.domain.org):

<pre class="programlisting">
 gums.location=https://gums.domain.org:8443/gums/services/GUMSAdmin
 gums.authz=https://gums.domain.org:8443/gums/services/GUMSAuthorizationServicePort
</pre>

The =gums.authz= entry is only used if you wish to use the client tool to test specific mappings from this host.  Documentation of this can be found on the GUMS web site.  This same functionality can be executed using the GUMS web UI.

---+++!! Test osg-user-vo-map generation
To test =osg-user-vo-map= file generation, you need to run the below sequence (as root).  Note this also uses the CE's host certificate.
<pre class="screen">
 $ <b>source $VDT_LOCATION/setup.sh </b>
 $ <b>cd $VDT_LOCATION/gums/scripts </b>
 $ <b>./gums-host generateGrid3UserVoMap</b>   <em>(output goes  to stdout. To get a
                                        file: either redirect stdout or use 
                                        '--file file_name')</em>
    <em>...output  should look similar to the following dependent on you GUMS 
    server mappings..</em>
  #User-VO map
  # #comment line, format of each regular line line: account VO
  # Next 2 lines with VO names, same order, all lowercase, with case (lines starting with #voi, #VOc)
  #voi xxx test3
  #VOc OSG TEST3
  #---- accounts for vo: osg ----#
  osg01 xxx
  #---- accounts for vo: Test3userGroup ----#
  osg01account test3
    <em>.... and so on</em>
</pre>

If it fails, an error  similar to "<i>No map was found for the host xyz.dhcp.fnal.gov</i>" will occur.  Contact your GUMS administrator(s).  The problem is likely in the GUMS server's gums.config file:
   * GUMS 1.1 syntax: your host is not in the <i>cn</i> attribute of the <i>hostGroup</i> element.
   * GUMS 1.2 syntax: your host is not in the <i>cn</i> attribute of the <i>hostToGroupMapping</i> element.

---+++!! Enable gums-host-cron
To keep the =grid-mapfile= (if used) and =osg-user-vo-map.txt= files up to date, a cron file and script were installed but need to be activated.  This is discussed in the [[GumsHostCron][Gums Host Cron]] topic of the %CACHE% documentation..

---++ Testing Full Privilege Configuration
Once the gatekeeper is up, testing the full privilege mode is done by simply removing the grid-mapfile from /etc/grid-secruity/ (if it exists) and attempting to authenticate.  Run the =$VDT_LOCATION/verify/site_verify.pl= script as a regular user.   To check which ID you get mapped to, run (using your fully-qualified gatekeeper host in the command and your own certificate):
<pre class="screen">
 $ <b>source $VDT_LOCATION/setup.sh </b>   <em>OR $VDT_LOCATION/setup.<b>csh</b> </em>
 $ <b>grid-proxy-init </b>
    <em>(enter your passphrase)</em>
 $ <b>globus-job-run <em>your-gatekeeper-host</em>:2119/jobmanager-fork /usr/bin/id </b>
</pre>

%NOTE% Some sites may require VO-qualified proxies.  If so, replace grid-proxy-init with voms-proxy-init in the step above.

When  authorizing in full privilege mode, you will see the following extra entry in your =$VDT_LOCATION/globus/var/globus-gatekeeper.log= file when jobs are submitted:

<pre class="programlisting">
 PID: 20269 -- PRIMA INFO  Mapping service "https://fermigrid3.fnal.gov:8443/gums/services/GUMSAuthorizationServicePort" returned local user "uscms112" for globus user "/DC=org/DC=doegrids/OU=People/CN=John Weigand 458491" 
</pre>

%NOTE% In RHEL4/SL4/Rocks 4, PRIMA requires a shared library =/usr/lib/libcom_err.so.3.0.0= which is not part of most default Redhat-like installations.  It's provided by the rpm package =compat-libcom_err=.



---+++!! Prima authorization
See also PrimaauthzConfAndVerifyACBehavior.


%BR%
<!-- 
Main.JohnWeigand - 06 Nov 2007 - removed section on monitoring gums.  It is in the ComputeElementAuthorization twiki%BR%
-->
%COMPLETE2% %BR%
%RESPONSIBLE% Main.JohnWeigand - 17 Oct 2007 %BR%
%REVIEW%

%META:TOPICMOVED{by="AnneHeavey" date="1192818627" from="Integration/ITB_0_7.OsgCEAuthFullPriv" to="Integration/ITB_0_7.FullPrivilegeAuthorization"}%
