%META:TOPICINFO{author="JimBasney" date="1248987895" format="1.1" version="1.6"}%
%META:TOPICPARENT{name="WebHome"}%
%TOC%

---+ Secure Email in OSG

Official announcements from the OSG security team are digitally signed. We encourage you to verify the digital signatures on OSG security announcements. When sending sensitive information to the OSG security team, we encourage you to encrypt your messages.

---++ News

   * 2009-04-14: The OSG security team has updated the PGP key for security@opensciencegrid.org. [[[http://listserv.fnal.gov/scripts/wa.exe?A2=ind0904&L=tg-security&T=0&X=37A54C7402655FD759&P=172][announcement]]]

---++ OSG Security PGP key

<verbatim>
User ID: Open Science Grid Security <security@opensciencegrid.org>
Key ID: 9189F2C2
Expires: 2010-05-09 
Fingerprint: 8E4F 07FE 8D67 A912 B537  F8A5 FE8A FB72 9189 F2C2
</verbatim>

PGP software is available from: [[http://www.gnupg.org/][GnuPG]]

---++ Verifying a PGP signature

1. Install [[http://www.gnupg.org/][GnuPG]] if it is not already installed on your computer.

2. Save [[%ATTACHURL%/osg-security-pubkey-2009.asc][osg-security-pubkey-2009.asc]] to a file on your computer.

3. Import the security@opensciencegrid.org public key:
<verbatim>
$ gpg --import <osg-security-pubkey-2009.asc 
gpg: key 9189F2C2: public key "Open Science Grid Security <security@opensciencegrid.org>" imported
gpg: Total number processed: 1
gpg:               imported: 1
</verbatim>

4. Save the message you want to verify to a file on your system (for example: [[%ATTACHURL%/signed-message.txt][signed-message.txt]]).

5. Verify the message:
<verbatim>
$ gpg --verify <signed-message.txt 
gpg: Signature made Tue Apr 14 13:18:26 2009 CDT using DSA key ID 9189F2C2
gpg: Good signature from "Open Science Grid Security <security@opensciencegrid.org>"
</verbatim>

To verify additional messages, only steps 4-5 are required.

When the security@opensciencegrid.org public key expires, you will need to perform steps 2-3 again for the new public key.

---++ Encrypting a PGP message

1. Install [[http://www.gnupg.org/][GnuPG]] if it is not already installed on your computer.

2. Save [[%ATTACHURL%/osg-security-pubkey-2009.asc][osg-security-pubkey-2009.asc]] to a file on your computer.

3. Import the security@opensciencegrid.org public key:
<verbatim>
$ gpg --import <osg-security-pubkey-2009.asc 
gpg: key 9189F2C2: public key "Open Science Grid Security <security@opensciencegrid.org>" imported
gpg: Total number processed: 1
gpg:               imported: 1
</verbatim>

4. Save the message you want to encrypt to a file on your system named message.txt.

5. Encrypt the message:
<verbatim>
$ gpg --recipient security@opensciencegrid.org -a --encrypt <message.txt >encrypted-message.txt
</verbatim>

6. Send the encrypted-message.txt file in email to security@opensciencegrid.org.

To encrypt additional messages, only steps 4-6 are required.

When the security@opensciencegrid.org public key expires, you will need to perform steps 2-3 again for the new public key.

---++ Other PGP Clients
---+++ Enigmail !OpenPGP plugin for Thunderbird
The !OpenPGP plugin for [[http://www.mozillamessaging.com/en-US/thunderbird/][Thunderbird]] provides a well integrated user interface for key management
and email signing and verification that uses !GnuPG underneath.

---++ Signing an S/MIME message with your certificate

<verbatim>
$ openssl smime -sign -signer ~/.globus/usercert.pem -inkey ~/.globus/userkey.pem            
         -in message.txt | mail -s "email subject" person@example.com
</verbatim>

   * message.txt - body of the email message 
   * ~/.globus/usercert.pem, userkey.pem - your personal grid certificate 
   * person@example.com - address where email is to be sent 

Alternatively, you can send <tt>message.txt</tt> as an attachment with nearly any email client.  
It generally works better to send the signed file as an attachment rather than copying it into the body of
the message because various email clients and particularly web interfaces to email often
modify the message body and therefore break the digital signature.

---++ Verifying an S/MIME signed message

<verbatim>
$ openssl smime -verify -in message.txt -CApath $X509_CERT_DIR -signer sendercert.pem
$ openssl x509 -in sendercert.pem -noout -subject -email -serial -dates
</verbatim>

   * message.txt - body of email message received 
      * note that the line beginning "Content-Type" and including 'boundary="---' must be a single line and not get broken or wrapped. 
   * sendercert.pem - the certificate used by the sender to sign the message, is extracted with the openssl smime command 
   * openssl x509 command above will display the subject, email address, serial number and validity dates of the signer's certificate 

%META:FILEATTACHMENT{name="osg-security-pubkey-2008.asc" attachment="osg-security-pubkey-2008.asc" attr="h" comment="PGP public key for security@opensciencegrid.org (0x66F456CC)" date="1217341199" path="osg-security-pubkey-2008.asc" size="1727" stream="osg-security-pubkey-2008.asc" tmpFilename="/usr/tmp/CGItemp11416" user="JimBasney" version="1"}%
%META:FILEATTACHMENT{name="signed-message.txt" attachment="signed-message.txt" attr="" comment="example signed message (using 0x9189F2C2 key)" date="1239733247" path="signed-message.txt" size="265" stream="signed-message.txt" tmpFilename="/usr/tmp/CGItemp30388" user="JimBasney" version="2"}%
%META:FILEATTACHMENT{name="osg-security-pubkey-2009.asc" attachment="osg-security-pubkey-2009.asc" attr="" comment="PGP public key for security@opensciencegrid.org (0x9189F2C2)" date="1239733203" path="osg-security-pubkey-2009.asc" size="1727" stream="osg-security-pubkey-2009.asc" tmpFilename="/usr/tmp/CGItemp26491" user="JimBasney" version="1"}%
