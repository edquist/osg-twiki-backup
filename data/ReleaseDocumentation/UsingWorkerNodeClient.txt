%META:TOPICINFO{author="RobertEngel" date="1287691090" format="1.1" version="1.21"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%DOC_STATUS_TABLE%
%TOC%

---++ Introduction

The Worker Node Client is a collection of useful software components that is guaranteed to be on every OSG worker node. In addition, a job running on a worker node can access a handful of environment variables that your job can use to locate the Worker Node Client software and other handy resources.

This page describes how to initialize the environment of your job to correctly access the execution and data areas from the worker node.

The OSG provides no scientific software dependencies or software build tools on the worker node; you are expected to bring along all application-level dependencies yourself. Sites are not required to provide any specific tools (gcc, svn, lapack, blas, etc.) beyond the ones in the OSG worker node client. 


---++ Setting Up Environment

All OSG sites should be configured so that the =$OSG_GRID= environment variable is already defined when your job starts running. The first command that a job should execute after it is started in a batch slot at an OSG site is:

<pre class="screen">
$ <userinput>. $OSG_GRID/setup.sh</userinput>
</pre>

=setup.sh= sets several environment variables and configures the worker node client tools.
The following is output from a test run of a job with the scripts configured correctly:

%TWISTY{
mode="div"
showlink="Show..."
hidelink="Hide"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="screen">
<userinput>$ globus-job-run fgitb-gk/jobmanager-condor /usr/bin/printenv</userinput>
_CONDOR_ANCESTOR_28668=28669:1190819791:495265920
_CONDOR_ANCESTOR_28669=25909:1195590358:2044699779
_CONDOR_ANCESTOR_25909=25915:1195590361:2072113792
HOME=/grid/home/fnalgrid
OSG_WN_TMP=/local/stage1
OSG_DATA=/grid/data
LD_LIBRARY_PATH=/usr/local/vdt-1.8.1/apache/lib:/usr/local/vdt-1.8.1/MonaLisa/Service/VDTFarm/pgsql/lib:/usr/local/vdt-1.8.1/glite/lib:/usr/local/vdt-1.8.1/prima/lib:/usr/local/vdt-1.8.1/mysql/lib/mysql:/usr/local/vdt-1.8.1/jdk1.5/jre/lib/i386:/usr/local/vdt-1.8.1/jdk1.5/jre/lib/i386/server:/usr/local/vdt-1.8.1/jdk1.5/jre/lib/i386/client:/usr/local/vdt-1.8.1/berkeley-db/lib:/usr/local/vdt-1.8.1/expat/lib:/usr/local/vdt-1.8.1/globus/lib:
GRID3_SITE_NAME=FNAL_FERMIGRID_ITB
GRID3_TMP_WN_DIR=/local/stage1
GRID3_TMP_DIR=/grid/data
OSG_LOCATION=/usr/local/vdt-1.8.1
OSG_HOSTNAME=fgitb-gk.fnal.gov
OSG_STORAGE_ELEMENT=y
OSG_JOB_CONTACT=fgitb-gk.fnal.gov/jobmanager-condor
OSG_APP=/grid/app
GRID3_DATA_DIR=/grid/data
GRID3_BASE_DIR=/usr/local/vdt-1.8.1
OSG_DEFAULT_SE=FNAL_FAPL_ITB_SE
OSG_GRID=/usr/local/grid
LOGNAME=fnalgrid
OSG_SQUID_LOCATION=fermigrid4.fnal.gov
GLOBUS_GRAM_JOB_CONTACT=https://fgitb-gk.fnal.gov:49005/11503/1195590354/
GLOBUS_LOCATION=/usr/local/grid/globus
OSG_SITE_NAME=FNAL_FERMIGRID_ITB
GLOBUS_GRAM_MYJOB_CONTACT=URLx-nexus://fgitb-gk.fnal.gov:49006/
OSG_SITE_WRITE=srm://fapl032.fnal.gov:8443
GRID3_APP_DIR=/grid/app
X509_USER_PROXY=/grid/home/fnalgrid/.globus/job/fgitb-gk.fnal.gov/11503.1195590354/x509_up
OSG_SITE_READ=dcap://fapl035.fnal.gov:24525
_CONDOR_SCRATCH_DIR=/local/stage1/condor/execute/dir_25909
_CONDOR_SLOT=1
_CONDOR_HIGHPORT=65535
_CONDOR_LOWPORT=61440
</pre>
%ENDTWISTY%



---++ Common software available on worker nodes.

The OSG worker node client (called the =wn-client= package) contains the following software:

   %TWISTY{
mode="div"
showlink="Click to show software"
hidelink="Click to hide software"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%

   * The site's supported set of CA certificates (located in $X509_CERT_DIR after the environment is set up)
   * Basic VDT underlying infrastructure
   * Proxy management tools:
      * Create proxies: =voms-proxy-init= and =grid-proxy-init=
      * Show proxy info: =voms-proxy-info= and =grid-proxy-info=
      * Destroy the current proxy: =voms-proxy-destroy= and =grid-proxy-destroy=
   * Data transfer tools:
      * HTTP/plain FTP protocol tools:
         * =wget= and =curl=: standard tools for downloading files with HTTP and FTP
      * SRM clients
         * LCG SRM Client (=lcg-cp= and others)
         * LBNL SRM Client (=srm-copy= and others)
         * FNAL SRM Client (=srmcp= and others)
      * !GridFTP client
         * Globus !GridFTP client (=globus-url-copy=)
         * !UberFTP, another command-line client for !GridFTP; covers a wider variety of the !GridFTP protocol than just copying
      * Site-specific protocols
         * DCache client: =dccp=, a client specifically for sites running !dCache, about 5–10 of the 80 OSG sites
   * The Pegasus worker node software
   * !MyProxy client tools

Advanced users can read the Pacman source code to see what’s in the =wn-client= package for this release, OSG-%VERSION%:
   * http://software.grid.iu.edu/pacman/wn-client.pacman
%ENDTWISTY%

---++ Directories in the Worker Node Environment

The following table outlines the various important directories for the worker node environment. A job running on an OSG worker node can refer to each directory using the corresponding environment variable.

%EDITTABLE{ header="| *Environment Variable* | *Purpose of a directory* | *Notes* |" format="| text | textarea, 2x30 | textarea, 2x30 |" changerows="on" }%
| *Environment Variable* | *Purpose of a directory* | *Notes* |
| =$OSG_APP= | Location for users to install software. | This directory is used by VO's to install software that will be used when running on the cluster.  For example, a VO may install the BLAST executable here.  The VO would submit jobs that executed the blast executable.  Access to this area varies from site-to-site.  Most sites allow software installation only from the head node (jobmanager-fork), while others require you to access it via a special job description of VOMS role. |
| =$OSG_DATA= | Data files that are accessible via NFS from all batch slots, read-write. | %RED% Not all OSG sites have deployed this area %ENDCOLOR%  You can test for existance by comparing the environment variable =$OSG_DATA= to =UNAVAILABLE=.  If true, then the directory is not available. |
| =$OSG_GRID= | Contains the Worker Node Client software tools |  |
| =$OSG_WN_TMP= | Temporary storage area in which your job(s) run | Local to each batch slot.  Create a directory under this as your work area.  See NOTE below. |

%NOTE% Be careful with using =$OSG_WN_TMP=, this  directory might be shared with other VOs.  We recommend the following code (suppose =gpn= is your VO's name):

<pre class="screen">
mkdir -p $OSG_WN_TMP/gpn
export mydir=`mktemp -d -t gpn`
cd $mydir
# Run the rest of your application
rm -rf $mydir
</pre>

A significant number of sites use the batch system to make an independent directory for each user job, and change =$OSG_WN_TMP= on the fly to point to this directory.

There is no way to know in advance how much scratch disk space any given worker node has available, as OSG information systems don't advertise this.  Most of the times, it is shared among a number of job slots.

<!--
---++ Input and Output Files Specified Via Condor-G

Condor-G has the following attributes related to file transfers and your jobs:

| =executable= | one file |
| =output= | one file - stdout | 
| =error= | one file - stderr |
| =transfer_input_files= | comma separated list of files |
| =transfer_output_files= | comma separated list of files |

Do not use =transfer_input_files= or =transfer_output_files= to transfer more than a few megabytes: These files are transfered via the CE headnode and can cause serious loads, which can bring down the cluster.  Space on the headnode also tends to be limited, especially because some sites place a very small quota on your home directory. To transfer large files, we recommend pre-staging as covered by [[Storage/WebHome#Storage_for_the_End_User][the OSG-Storage documentation]].

-->

<!--
---++ Finding your way around

%NOTE% A definition of the concepts used in this document can be found in [[LocalStorageConfiguration][Local Storage Configuration]], including a section describing minimal requirements and some sample configurations.

Here we describe how to find the various storage locations. We start by describing how to find things after your job starts, and then complete the discussion by describing what you can determine from the outside, before you submit a job to the site. We deliberately do not describe what these various storage implementations are. That is done in the [[LocalStorageConfiguration][Local Storage Configuration]] document.




<br/>

See the [[ComputeElementInstall][CE Install Guide]] and [[LocalStorageConfiguration][Local Storage Configuration]] for more information. 

---+++ !!Getting information about CE storage before you submit a job

You can retrieve the storage information for some sites by querying the OSG information services. We do not recommend using this method — instead, have the job discover the correct directory through its environment. This will not work reliably at all sites.

We will illustrate this below using !ReSS.

%TWISTY{
mode="div"
showlink="Show unrecommended query method..."
hidelink="Hide queries"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
The following query looks for storage directories for sites that support CMS (change "VO:cms" with the name of your VO):
<pre class="screen">
<userinput>condor_status -pool osg-ress-1.fnal.gov -const 'stringListIMember("VO:cms", GlueCEAccessControlBaseRule)' -format 'CE: %s ' GlueCEUniqueID -format 'OSG_WN_SCRATCH: %s ' GlueSubClusterWNTmpDir -format 'OSG_DATA: %s ' GlueCEInfoDataDir -format 'OSG_APP: %s\n' GlueCEInfoApplicationDir | sort | uniq</userinput>
</pre>
The reason the query is so long is due to the extensive format strings.  The above query shows the scratch, app, and data directories - one line per CE.  Here's a few lines of output:
<pre class="screen">
CE: antaeus.hpcc.ttu.edu:2119/jobmanager-sge-cms Scratch: /state/partition1 OSG_DATA: /lustre/hep/osg OSG_APP: /lustre/home/antaeus/apps
CE: antaeus.hpcc.ttu.edu:2119/jobmanager-sge-serial Scratch: /state/partition1 OSG_DATA: /lustre/hep/osg OSG_APP: /lustre/home/antaeus/apps
CE: belhaven-1.renci.org:2119/jobmanager-condor-default Scratch: /condor/osg_wn_tmp OSG_DATA: /nfs/osg-data OSG_APP: /nfs/osg-app
CE: ce01.cmsaf.mit.edu:2119/jobmanager-condor-group_cmshi Scratch: /osg/tmp OSG_DATA: /osg/data OSG_APP: /osg/app
CE: ce01.cmsaf.mit.edu:2119/jobmanager-condor-group_cmsprod Scratch: /osg/tmp OSG_DATA: /osg/data OSG_APP: /osg/app
CE: ce01.cmsaf.mit.edu:2119/jobmanager-condor-group_cmsuser Scratch: /osg/tmp OSG_DATA: /osg/data OSG_APP: /osg/app
CE: ce01.cmsaf.mit.edu:2119/jobmanager-condor-group_monitor Scratch: /osg/tmp OSG_DATA: /osg/data OSG_APP: /osg/app
CE: cit-gatekeeper2.ultralight.org:2119/jobmanager-condor-cms_monitor Scratch: /wntmp OSG_DATA: /raid2/osg-data OSG_APP: /raid1/osg-app
CE: cit-gatekeeper2.ultralight.org:2119/jobmanager-condor-cms_priority Scratch: /wntmp OSG_DATA: /raid2/osg-data OSG_APP: /raid1/osg-app
CE: cit-gatekeeper2.ultralight.org:2119/jobmanager-condor-cms_production Scratch: /wntmp OSG_DATA: /raid2/osg-data OSG_APP: /raid1/osg-app
CE: cit-gatekeeper2.ultralight.org:2119/jobmanager-condor-cms_user Scratch: /wntmp OSG_DATA: /raid2/osg-data OSG_APP: /raid1/osg-app
CE: cit-gatekeeper.ultralight.org:2119/jobmanager-condor-cms_monitor Scratch: /wntmp OSG_DATA: /raid2/osg-data OSG_APP: /raid1/osg-app
CE: cit-gatekeeper.ultralight.org:2119/jobmanager-condor-cms_priority Scratch: /wntmp OSG_DATA: /raid2/osg-data OSG_APP: /raid1/osg-app
CE: cit-gatekeeper.ultralight.org:2119/jobmanager-condor-cms_production Scratch: /wntmp OSG_DATA: /raid2/osg-data OSG_APP: /raid1/osg-app
CE: cit-gatekeeper.ultralight.org:2119/jobmanager-condor-cms_user Scratch: /wntmp OSG_DATA: /raid2/osg-data OSG_APP: /raid1/osg-app
CE: cms-0.mps.ohio-state.edu:2119/jobmanager-condor-default Scratch: /hadoop/tmp OSG_DATA: /data/se/osg OSG_APP: /sharesoft/osg/app
</pre>

%ENDTWISTY%
-->
%BR%

---++!! *Comments*
| Overall comments: It seems like this page has no single purpose. It seems to start off being about the Worker Node Client package, but then wanders off into other worker node use cases and tidbits. What is the purpose of this page? Should it really be called “Using an OSG Worker Node”? Anyway, lots of detailed comments below.&#60;br /&#62;&#60;br /&#62;INTRODUCTION&#60;br /&#62;&#60;br /&#62;The Introduction section left me baffled. If the title of the page is “Using Worker Node Client”, then I expect the first sentence of the Introduction to start with something like, “The Worker Node Client is…”. It is very important to nail the introduction, because this is the place a user is like to look to see whether they have landed on the right page to begin with. Ask yourself: What is this page fundamentally about?&#60;br /&#62;&#60;br /&#62;For example, how about starting the introduction like this? “The Worker Node Client is a collection of useful software components that is guaranteed to be on every OSG worker node. In addition, a job running on a worker node can access a handful of environment variables that your job can use to locate the Worker Node Client software and other handy resources.”&#60;br /&#62;&#60;br /&#62;I didn’t really understand the last sentence of the Introduction: “Specific VOs which own their own resources may require their sites to install additional software, but opportunistic VOs cannot do this as a rule.” — particularly the opportunistic VOs part. Just throwing information at the user is confusing. What should the user do? Is there a decision to make? Is this statement really a recommendation?&#60;br /&#62;&#60;br /&#62;COMMON SOFTWARE&#60;br /&#62;&#60;br /&#62;The list of common software is fine, but… so what? Is the user expected to know what to do with this information? For example, I see that my job will have access to “Basic VDT underlying infrastructure”. Can I use it? Should I use it? If the user is expected to know this stuff, then at least say so, so that the user who DOESN’T understand can skip the section.&#60;br /&#62;&#60;br /&#62;DIRECTORIES&#60;br /&#62;&#60;br /&#62;Many of the same questions for the table. The list of environment variable names is good and seems important. But then reading through the second and third columns, I am utterly confused. Maybe the second column should be called “Purpose of Directory” or something like that. And then let’s clarify all of the content. Fundamentally, what does a user need to do with this information?&#60;br /&#62;&#60;br /&#62;$OSG_APP: Contains application-specific software? Can you give an example? How does the software get there? Reading the current content, it sounds like I probably can’t count on putting my own software there, or if so, via some unspecified mechanism involving the CE. As a user, am I mostly expected to just read from this directory?&#60;br /&#62;&#60;br /&#62;$OSG_DATA: Sounds great, except it may not be there? Can I know in advance? If it’s not there, where should I put data? And is a batch slot the same thing as a worker node?&#60;br /&#62;&#60;br /&#62;$OSG_GRID: Purpose = contains the Worker Node Client software tools. No need to spread this information out over two table cells.&#60;br /&#62;&#60;br /&#62;$OSG_WN_TMP: I was fine with this until I got to the note below the table, and then I lost it. “This is the top-level directory, …” — “the” directory? Of what? Of the machine? Of my job? If it’s the top-level directory for my job, then why is it shared? Again, I don’t really want information, I want instructions. Tell me what to do. Should I use $OSG_WN_TMP? Or not? If there are different ways that it can be set up, how does my job tell the difference, and what should it do in each case?&#60;br /&#62;&#60;br /&#62;INPUT AND OUTPUT FILES&#60;br /&#62;&#60;br /&#62;Why is this section in this document? How does it relate to the Worker Node Client package? The information seems OK, but seems like it belongs on a storage or data page.&#60;br /&#62;&#60;br /&#62;FINDING YOUR WAY AROUND&#60;br /&#62;&#60;br /&#62;This section seems to contain a jumble of unrelated information, including the absolutely critical part about sourcing a setup file. I am not sure why such a vital instruction is buried so far down on the page. | Main.TimCartwright | 24 Jun 2010 - 20:27 |
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = BrianBockelman

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = User

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = Scientist

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Training
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = TimCartwright
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %NO%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = TimCartwright
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->