%META:TOPICINFO{author="RobertEngel" date="1277412224" format="1.1" reprev="1.61" version="1.61"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%DOC_STATUS_TABLE%
%TOC{depth="3"}%

%TWISTY{%TWISTY_OPTS_REVIEW%}%
Applies to the entire document:
* link to the Glossary for terms that you use, see my e-mail on the topic
* include a help page for every tool you introduce, let me know which tools you use and that I haven't define yet ( see my e-mail on the topic )
* avoid using () in sentences. Delete or use separate sentence instead
* branch the instructions in root and non-root installation
* put verification at the end
* link to CESimpleTest instead of duplicating work here
* write simpler sentences
* ask yourself about each section what you want the user to do or understand. Pretend you are a first time user reading. What questions might that user have? Explain those!
%ENDTWISTY%

---++ About this Document

%ICON{hand}% This document is for grid users and system administrators. It covers the installation of the OSG Client Tools Package. This package is required on every host used by grid users to submit jobs or transfer data on the OSG. It is also mandatory to be installed by grid resource administrators on a %LINK_GLOSSARY_CE%, %LINK_GLOSSARY_SE% and every %LINK_GLOSSARY_WN%.  

The OSG Cient Tools Package includes:

   * the %LINK_GLOBUS_TOOLKIT% providing client tools for authorization, data transfer and job submission.
   * a list of [[Documentation/GlossaryC#DefsCA][CA]] [[Documentation/GlossaryC#DefsCertificate][Certificates]] trusted by the OSG.
   * the [[Documentation/GlossaryC#DefsCRL][Certificate Revocation List]] and tools to keep it current.
   * %LINK_GLOSSARY_CONDOR% client tools for job submission and workflow management.
   * client tools to access a %LINK_GLOSSARY_SRM% provided by a %LINK_GLOSSARY_SE%.

%NOTE%This document does not cover the usage of the client tools, which can be found [[Documentation/UsingTheGrid][here]].

---++!! Engineering Considerations.

We recommend to install the OSG Client Tools on a dedicated job submission host for large scale job submissions to production resources on the OSG. Grid users may install the package as _non-privileged_ users into their home directories. If the client tools are to be shared among grid users, the installation should be performed by the _root_ user.

Grid resource administrators installing the OSG Client Tools package on a set of [[Documentation/GlossaryW#DefsWorkerNode][worker nodes]] with mixed architecture should consider _forcing_ the installation of the %RED%i386%ENDCOLOR% version if one installation is shared among all worker nodes.

<!-- this should go into the instructions below
The install directory must be accessible for all users: if root installs into a directory that is not world-readable, the install process will fail.
If you are interested, then check the [[#Install_32bit_on_64bit_OS_Full_3][section below on forcing 32 bit software]] before starting the installation.
   1 *WARNING* If you already have an OSG-Client installed, its presence in the installation directory or in the environment might corrupt this installation attempt.  Verify that you are installing into an empty directory and the $VDT_LOCATION environment variable isn't already set; you may have to log in to a fresh shell or remove something from your shell's profile. 
      * If $VDT_LOCATION is already set, you may receive indecipherable errors while attempting this install.  Or you may get no errors at all, but end up with an unusable software stack.
      * It is OK to have other installation of OSG-Client on your disks but should be in different directories and the setup file should not have been sourced.
  
      * If you do a non-root install, make sure that you own your =$HOME/.globus= directory and its permissions are 755.  
-->

---++!! Getting Help!

To get assistance please use [[InstallHelpProcedure][this page]].

---++ Requirements

   1 verify that your operating system is [[http://vdt.cs.wisc.edu/releases/2.0.0/requirements.html][supported]].
   1 a %LINK_PACMAN% installation of version %PACMAN_VERSION%.
   1 except for worker node installations a valid [[ReleaseDocumentation/GetGridCertificates][grid host certificate]] is required.
   1 to test and use the installation a valid [[ReleaseDocumentation/CertificateGet][grid user certificate]] is required.
   1 unset the environment variable *VDT_LOCATION* in case it has previously been set.

---++ Installation Procedure

The installation procedure consists of the following steps:

   1 create an empty installation directory
   1 use %LINK_PACMAN% to install the OSG Client Tools Package
   1 install the [[Documentation/GlossaryC#DefsCA][CA Certificates]] and the %LINK_GLOSSARY_CRL%
   1 configure logfile rotation and automatic updates of [[Documentation/GlossaryC#DefsCA][CA Certificates]] and the %LINK_GLOSSARY_CRL%

---+++ Create the Installation Directory

<!-- define Twiki variable for use on this document
   * Local INSTALL_DIR = /opt/osg-ctp
-->

Create an empty installation directory and change into it. Make sure the directory is world readable if the installation is to be shared by grid users: 

<pre class="screen">
[root@osg-se ~]# mkdir -p %INSTALL_DIR%
[root@osg-se ~]# cd %INSTALL_DIR%
</pre>

Make sure to %RED%unset%ENDCOLOR% the *VDT_LOCATION* environment variable in case it is set.

<pre class="screen">
[root@osg-se osg-ctp]# echo $VDT_LOCATION 
/usr/local/ITB-BeStMan
root@osg-se osg-ctp]# unset VDT_LOCATION
</pre>

---+++ Use Pacman to install the OSG Client Tools Package

In the next step we will use the =pacman= command line tool to install the package from the OSG software cache. %LINK_PACMAN% will ask whether you want to _trust the cache_ and _accept the license_, answer =yall= and =y= if you want to do so.

<pre class="screen">
[root@osg-se osg-ctp]# pacman -get http://software.grid.iu.edu/osg-1.2:client
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): %RED%yall%ENDCOLOR%
...
</pre>

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
<pre class="screen">
[root@osg-se osg-ctp]# pacman -get http://software.grid.iu.edu/osg-1.2:client
Do you want to add [http://software.grid.iu.edu/osg-1.2] to [trusted.caches]? (y/n/yall): %RED%yall%ENDCOLOR%

Beginning VDT prerequisite checking script vdt-common/vdt-prereq-check...       

All prerequisite checks are satisfied.
                                                             
========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.

INFO: The Globus-Base-Info-Client package is not supported on this platform
The VDT version 2.0.0 has been installed.
The OSG Client package OSG version 1.2.10 has been installed.
</pre>
%ENDTWISTY%

The installation logfile can be found in =%INSTALL_DIR%/vdt-install.log=. To complete the installation update your environment and run the post installation script:

<pre class="screen">
[root@osg-se osg-ctp]# source setup.sh
[root@osg-se osg-ctp]# vdt-post-install 
Starting...
Done.
</pre>

Optionally you may use the =vdt-version= command to display information about all software packages that have been installed:

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
<pre class="screen">
[root@osg-se osg-ctp]# vdt-version

You have installed a subset of VDT version 2.0.0p17:

Software                                                 Status              
--------                                                 ------              
Bandwidth Test Controller 1.3                            OK                  
vdt-ca-manage 1.2                                        OK                  
vdt-update-certs 2.5                                     OK                  
CGSI-gSOAP 1.2.1.2                                       OK                  
Condor/Condor-G 7.2.5                                    OK                  
cURL 7.18.2                                              OK                  
Fetch CRL 2.6.6                                          OK                  
Grid File Access Library (GFAL) 1.11.9-1                 OK                  
Globus Toolkit, pre web-services, client 4.0.8           OK                  
Globus Toolkit, web-services, client 4.0.8               OK                  
GPT 3.2-4.0.8p1                                          OK                  
GSI-Enabled OpenSSH 5.1                                  OK                  
Java 5 SDK 1.5.0_22                                      OK                  
lcg-info 1.11.4-1                                        OK                  
lcg-infosites 2.6-2                                      OK                  
LCG Utils 1.7.6-1                                        OK                  
LCG File Catalog Client 1.7.2-4                          OK                  
Logrotate 3.7                                            OK                  
MyProxy Client 5.1                                       OK                  
Network Diagnostic Tool 3.5.0                            OK                  
Network Path and Application Diagnosis Client 1.5.5      OK                  
OSG Discovery Tools 1.0.4                                OK                  
One-Way Active Measurement Protocol (One-Way Ping) 3.1   OK                  
Pegasus 2.4.1                                            OK                  
PPDG Cert Scripts 2.7                                    OK                  
PyGlobus URL Copy 1.1.2.11                               OK                  
SRM Fermi Client 1.9.5-3                                 OK                  
SRM Berkeley Client 2.2.1.3.12                           OK                  
UberFTP 2.4                                              OK                  
VOMS Client 1.8.8-2p1                                    OK                  
Wget 1.12                                                OK                  


Status legend:
OK: Software is up to date with the latest release in VDT version 2.0.0
- : Not enough information to determine if updates are available.
Type 'man vdt-version' for more information.
</pre>
%ENDTWISTY%

---+++ Install the CA Certificates and the CRL

The OSG distributes a number of root certificates of [[Documentation/GlossaryC#DefsCA][Certificate Authorities]] that issue certificates to their members. By installing these certificates you establish a chain of trust with each of the certificate authorities and allow their members to access your resource. The %LINK_GLOSSARY_CRL% is used to inform your resource about individual certificates that have been revoked.

We will use the =vdt-ca-manage= command to download the CA Certificates and the Certificate Revocation List. The command line option =--location local= copies the CA certificates into the subdirectory =%INSTALL_DIR%/globus/share/certificates=. 

<pre class="screen">
[root@osg-se osg-ctp]# vdt-ca-manage setupca --url %RED%osg%ENDCOLOR% --location %RED%local%ENDCOLOR%
Setting CA Certificates for VDT installation at '/opt/osg-ctp'

Setup completed successfully.
</pre>

---+++ Configure Logfile Rotation and Automatic Updates

To keep your [[Documentation/GlossaryC#DefsCA][CA Certificates]] and the %LINK_GLOSSARY_CRL% current we will add an entry to =cron= requesting periodic updates. We also recommend to setup logfile rotation using =vdt-control= at the command line:

<pre class="screen">
[root@osg-se osg-ctp]# vdt-control --enable %RED%fetch-crl vdt-update-certs vdt-rotate-logs%ENDCOLOR% 
running 'vdt-register-service --name fetch-crl --enable'... %GREEN%ok%ENDCOLOR%
running 'vdt-register-service --name vdt-update-certs --enable'... %GREEN%ok%ENDCOLOR%
running 'vdt-register-service --name vdt-rotate-logs --enable'... %GREEN%ok%ENDCOLOR%
</pre>

=vdt-control= will only _register the services_ requested to be run by =cron=. To see a list of services registered use:

<pre class="screen">
[root@osg-se osg-ctp]# vdt-control %RED%-list%ENDCOLOR%
Service                 | Type   | Desired State
------------------------+--------+--------------
fetch-crl               | cron   | %GREEN%enable%ENDCOLOR%
vdt-rotate-logs         | cron   | %GREEN%enable%ENDCOLOR%
vdt-update-certs        | cron   | %GREEN%enable%ENDCOLOR%
condor                  | init   | do not enable
globus-ws               | init   | do not enable
</pre>

Finally add the necessary entries to =cron= by executing =vdt-control=:

<pre class="screen">
[root@osg-se osg-ctp]# vdt-control %RED%-on%ENDCOLOR%
enabling cron service fetch-crl... %GREEN%ok%ENDCOLOR%
enabling cron service vdt-rotate-logs... %GREEN%ok%ENDCOLOR%
enabling cron service vdt-update-certs... %GREEN%ok%ENDCOLOR%
skipping init service 'condor' -- marked as disabled
skipping init service 'globus-ws' -- marked as disabled
</pre>

You may use =crontab= to verify that the necessary entries have been add to cron. The times are _randomized_ in order to avoid all grid resources contacting the server at the same time.

%TWISTY{%TWISTY_OPTS_OUTPUT%}%
<pre class="screen">
[root@osg-se osg-ctp]# crontab -l
59 3,9,15,21 * * * /opt/osg-ctp/fetch-crl/share/doc/fetch-crl-2.6.6/fetch-crl.cron
0 0 * * * /opt/osg-ctp/vdt/bin/vdt-rotate-logs
14 * * * * /opt/osg-ctp/vdt/sbin/vdt-update-certs-wrapper --vdt-install /opt/osg-ctp --called-from-cron
</pre>
%ENDTWISTY%

When necessary use =vdt-control= to remove all registered entries from =cron=:

<pre class="screen">
[root@osg-se osg-ctp]# vdt-control %RED%-off%ENDCOLOR%
disabling init service globus-ws... ok
disabling init service condor... ok
disabling cron service vdt-update-certs... %GREEN%ok%ENDCOLOR%
disabling cron service vdt-rotate-logs... %GREEN%ok%ENDCOLOR%
disabling cron service fetch-crl... %GREEN%ok%ENDCOLOR%
</pre>

---+++ Enable Condor to support Condor-G Job Submissions

There are more optional services available: for Condor-G submissions =condor= is needed. Never run or enable =globus-ws=: it is an legacy artifact of the VDT install process. <pre class="screen">vdt-control --enable condor
</pre>
To start the the service as regular user:<pre class="screen">vdt-control --non-root --on
</pre>
or as root:<pre class="screen">vdt-control --on
</pre>

This gives you self-contained installation with standard OSG certificates with services to maintain all updated. 

CA certificates and CRL are necessary to verify the validity of your certificate as explained in CertificateWhatIs.
CA certificates need to be maintained because CRLs expire frequently (with expired CAs or CRLs your authentications will fail). 
Services are not mandatory, you could disable them, anyway no running services is fine for testing and local casual, but the certificates will not be automatically updated. You can update them manually by re-invoking =vdt-ca-manage= or by running =vdt-update-certs=, but requires labor and is not reliable because you may forget. 
Therefore the services above are recommended. 

For more options on the type and location of the certificates (e.g. to install the certificates in the system directory =/etc/grid-security=) see the 
[[#Alternatives_for_CA_certificates][section on alternatives for CA and CRLs]] below.

%TWISTY{%TWISTY_OPTS_REVIEW%}%
   * DONE
   * * remind me what a CA certificate is and why this is important
* the vdt-ca-manage command needs a help page. An explaining would also be nice about what it does.
%ENDTWISTY%

%TWISTY{%TWISTY_OPTS_REVIEW%}%
   * NA - moved below as requested
   * * how do I know that it works? Validation?
%ENDTWISTY%


---++ Advanced installation options
These sections present special configurations, explain concepts in detail or describe special use case.

---+++ Alternatives for CA certificates and CRLs
=vdt-ca-manage= allows to pick the desired CA certificates and install them in an arbitrary location, private or shared with other grid softwares.
The default installation above is self contained. This section covers two other common options to install the OSG CA certificates and a third option showing the flexibility of =vdt-ca-manage=. You can use one of these instead of the CA installation in the  instructions above.
A complete reference on available certificate sets and where to put the certificates, including an arbitrary location, is available [[http://vdt.cs.wisc.edu/releases/2.0.0/man/vdt-ca-manage.html][on the VDT site]].

---++++!! Install in /etc/grid-security/certificates
You must install as root to use this system directory:<pre class="screen">source /opt/wlcg-client/setup.sh
vdt-ca-manage setupca --location root --url osg
</pre>
This installation by default enables the periodic update of certificates and CRLs.

---++++!! Link an existing CA installation
You can use an existing CA installation (owned by an other package) on the host or mounted in a shared directory, e.g. via NSF. 
If several grid softwares share the same CA installation it is important that one is the owner and runs the services to update it and all the other only link to it without changing the content.
Let's assume that  =$CACERTDIR= contains the path of the certificate directory, e.g. =/your/cacertdir= or =/etc/grid-security/certificates=.
To link to the existing CA installation keeping all update services disabled:<pre class="screen">source $INSTALL_DIR/setup.sh
vdt-ca-manage setupca --location $CACERTDIR --no-update 
<!-- actions taken by vdt-ca-manage: 
ln -s  $VDT_LOCATION/globus/TRUSTED_CA
ln -s $CACERTDIR $VDT_LOCATION/globus/share/certificates
-->
</pre>

---++++!! Install arbitrary certificates on an arbitrary location
You must have write privilege in the chosen directory (=/full/path/to/your/desired/CAinstallation =) and the URL must point to a valid CA distribution:<pre class="screen">source $INSTALL_DIR/setup.sh
vdt-ca-manage setupca --location /full/path/to//CAinstallation --url http://server/path/of_CA_distribution
</pre>
This installation by default enables the periodic update of certificates and CRLs.


---+++  Firewall Considerations
Some Grid job initiation and management operations require call backs to the client machine, accordingly *any* firewall on the host (or an external firewall affecting the host) can possibly break an installation.  *If you have a firewall, read this section*; otherwise, ignore it.

   * If your client host is behind a firewall and not registered in DNS, assign your client's ip-address to the =GLOBUS_HOSTNAME= variable: 
      * <pre class="screen">  export GLOBUS_HOSTNAME=<i>your-ip-address</i> </pre>
   * If your client is behind a firewall blocking ephemeral ports, an ephemeral port range should be set aside for use and opened for incoming connections.  Opening the port range may depend on your firewall implementation. If you are doing a personal non-root installation, check with your administrator to determine which ports are open for you to use.  Then, identifying the port range in the client tools is done in two places (numbers shown here are just examples):
      * Specify the GLOBUS_TCP_PORT_RANGE and GLOBUS_TCP_SOURCE_RANGE  variables (to set the inbound and outbound available port ranges, see ComputeElementFirewalls for more information) in the $VDT_LOCATION/vdt/etc/vdt-local-setup.sh (and vdt-local-setup.csh) script: <pre class="screen">
GLOBUS_TCP_PORT_RANGE=20000,22000
export GLOBUS_TCP_PORT_RANGE
GLOBUS_TCP_SOURCE_RANGE=23000,25000 
export GLOBUS_TCP_SOURCE_RANGE
</pre>
      * Specify range in for use by Condor-g in the $CONDOR_CONFIG file ( *Note:* condor must be restarted):  <pre class="screen">
HIGHPORT = 22000 
LOWPORT  = 20000
</pre>

---+++ Install 32bit on 64bit OS (Full 32bit installation and Python 32bit)
This section explains how to prepare a 32 bit installation that could work in a mixed 32/64 bit environment.

Some software in OSG-Client is architecture dependent: compiled binaries, libraries including python compiled libraries.
In mixed environments:
   * A 64 bit OS can support both 64 and 32 bit applications and libraries
   * A 32 bit OS supports only 32 bit applications and libraries
   * Python compiled libraries, e.g. LFC binding included in OSG client, have to match the interpreter. I.e. 64bit Python requires 64bit bindings, 32bit Python requires 32bit bindings (therefore 32bit OSG client).
If one of the above is violated you get errors often difficult to identify. 

The simplest way to have a general installation is to install everything 32 bit.
Follow these step to change the installation procedure described in the page:
   * You need to install 32bit compatibility libraries on all your 64bit OSes.
   * During each Pacman installation add the option =-pretend-arch i686=, e.g. ==pacman -pretend-arch i686 -get !http://software.grid.iu.edu/osg-1.2:client==. Pacman is actually caching this setting, so it is important you use =-pretend-arch i686= the first time you install something in that directory (Pacman cache). [[http://vdt.cs.wisc.edu/releases/2.0.0/installation_advanced.html#pretend_32][Here]] is VDT documentation about -pretend-arch i686.
   * NOTE: the environment variable =export VDT_PRETEND_32=1= that one was set before the VDT installation is not working anymore.
   * If you need Python 32 bit you can install on your own or use: ==pacman -get !http://www.mwt2.org/caches/:Python32bit==. The Python delivered is Python 2.4 (C API 1012, required by _lfc.so) and it is compiled on a SL4.7. The Pacman installation can be in its own directory or on top of OSG-Client (recommended if you installed it 32 bit and you will need Python 32 bit only for it). If you wonder no -pretend-arch i686 is needed because this package is only 32 bit, anyway it is fine if you added the option.


---++ Service Startup/Shutdown

%TWISTY{%TWISTY_OPTS_REVIEW%}%
   * DONE
   * * this section must move up before the verification
%ENDTWISTY%

This section applies only to clients installed as root.

Even though this is the client package, some services remain, such as:
   * Hourly CRL updates
   * Hourly log rotation
   * Nightly CA updates
   * Condor daemons for workflow management (only for root installations)
The tool for starting and stopping the services is =vdt-control=.  To run these services, login as root and source the setup script:


To startt/stop the services as root: <pre class="screen">source $INSTALL_DIR/setup.sh
vdt-control --on
vdt-control --off
</pre>

To startt/stop the services as non root user you must own the installation and add the =--non-root= option: <pre class="screen">source $INSTALL_DIR/setup.sh
vdt-control --non-root --on
vdt-control --non-root --off
</pre>

You can determine which services are configured by running =vdt-control --list=. 
%TWISTY{
mode="div"
showlink="Show vdt-control --list output..."
hidelink="Hide screen output"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="screen">
# vdt-control --list
Service            | Type   | Desired State
-------------------+--------+--------------
fetch-crl          | cron   | enable
vdt-rotate-logs    | cron   | do not enable
vdt-update-certs   | cron   | enable
condor             | init   | enable
globus-ws          | init   | do not enable

</pre>
%ENDTWISTY%

For a more detailed review of turning VDT services on and off, consult [[http://vdt.cs.wisc.edu/releases/2.0.0/man/vdt-control.html][vdt-control]].  


---++ Testing the Client
Follow the instructions and examples in Documentation.UsingTheGrid to use the commands in OSG client and test them. 

In short you can follow these steps:
   * have your grid user certificate certificate ready
   * =source $INSTALL_DIR/setup.sh= to set the OSG client environment 
   * create a LINK_GLOSSARY_GRID_PROXY to test that your certificate is valid
   * create a LINK_GLOSSARY_VOMS_PROXY: this requires a VOMS server that you can use and will test other libraries and also your correct syncronization
   * authenticate to a running LINK_GLOSSARY_CE that you are authorized to use, e.g.: =globusrun -a -r cmsosgce3.fnal.gov=
   * transfer a file from a working LINK_GLOSSARY_SE  that you are authorized to use, e.g.: =globus-url-copy =
A series of validation tests of the client tools can be found in the ValidateClients documentation. These basic tests include querying services, submitting jobs, and transfering files.

%TWISTY{%TWISTY_OPTS_REVIEW%}%
   * NA - changed a lot - CESimpleTest is testing CE
   * * again, link to the appropriate section CESimpleTest
%ENDTWISTY%

%TWISTY{%TWISTY_OPTS_REVIEW%}%
   * NA - changed a lot - CESimpleTest is testing CE
   * * the explaination is misleading. The software is already configured. 
* point the user to CESimpleTest that does the same thing as you are trying, we don't need to duplicate the content
%ENDTWISTY%

---++ Debugging Information
If you encounter any problems, review the *vdt-install.log* file for obvious error messages; you will be asked to send that file to experts as the first step for almost any debugging.

You can view what has been installed by running ==vdt-version==.  
%TWISTY{
mode="div"
showlink="Click to see how the output looks like."
hidelink="Hide output"
showimgleft="%ICONURLPATH{toggleopen-small}%"
hideimgleft="%ICONURLPATH{toggleclose-small}%"
}%
<pre class="screen">
> source <i>your-osg-client-dir</i>/setup.(c)sh
> vdt-version

You have installed a subset of VDT version 2.0.0p5:

Software                                                 Status              
--------                                                 ------              
Bandwidth Test Controller 1.3                            OK                  
vdt-ca-manage 1.0                                        OK                  
vdt-update-certs 2.4                                     OK                  
CA Certificates 1.8 (includes IGTF 1.30 CAs)             -                   
CGSI-gSOAP 1.2.1.2                                       OK                  
Condor/Condor-G 7.2.4                                    OK                  
cURL 7.18.2                                              OK                  
Fetch CRL 2.6.6                                          OK                  
Globus Toolkit, pre web-services, client 4.0.8           OK                  
Globus Toolkit, web-services, client 4.0.8               OK                  
GPT 3.2-4.0.8p1                                          OK                  
GSI-Enabled OpenSSH 4.6                                  OK                  
Java 5 SDK 1.5.0_18                                      OK                  
lcg-info 1.11.4-1                                        OK                  
lcg-infosites 2.6-2                                      OK                  
LCG-Utils 1.6.11-1p1 (includes GFAL 1.10.11-1) 1.6.11-1p1 OK                  
LCG File Catalog Client 1.6.11.4                         OK                  
Logrotate 3.7                                            OK                  
MyProxy Client 4.7                                       OK                  
NDT 3.5.0                                                OK                  
Network Path and Application Diagnosis Client 1.5.5      OK                  
One-Way Active Measurement Protocol (One-Way Ping) 3.1   OK                  
Pegasus 2.3.0                                            OK                  
PPDG Cert Scripts 2.7                                    OK                  
pyGlobus gt4.0.1-1.13                                    OK                  
PyGlobus URL Copy 1.1.2.11                               OK                  
SRM Fermi Client 1.9.2-4                                 OK                  
SRM Berkeley Client 2.2.1.2.i7.p1                        OK                  
UberFTP 2.4                                              OK                  
VOMS Client 1.8.8-2p1                                    OK                  
Wget 1.11.4                                              OK                  


Status legend:
OK: Software is up to date with the latest release in VDT version 2.0.0
- : Not enough information to determine if updates are available.
See man page for more information.
</pre>
%ENDTWISTY%

---++ Updating the Client
%WARNING% These instructions refer *ONLY TO THE UPDATE OF THE CLIENT*.  Do not use them for other packages like CE and SE.

%NOTE% Client installation and configuration is relatively straightforward; it may be easier and faster to remove your old install and do a fresh installation.

To update OSG Client you must first update the VDT packages with the VDT updater, then you can use Pacman for the rest:
   * Turn off the services (in clients they are normally already off). You have to be root to use =vdt-control=; if this is a personal installation ignore the vdt-control statements <pre class="screen">cd $VDT_LOCATION
source setup.sh
vdt-control --off
</pre>
   * Get the latest updater:<pre class="screen">
pacman -update VDT-Updater
</pre> 
   * NOTE: if you don't have the VDT-Updater, run the following command to get it:<pre class="screen">pacman -get http://vdt.cs.wisc.edu/vdt_200_cache:VDT-Updater
</pre>
   * Run the updater: <pre class="screen">vdt/update/vdt-updater      --skip-backup-check
</pre>
      * Answer yes when asked to accept the updates
      * Answer no if asked to modify the certificate management
   * Update the rest (OSG-Client):<pre class="screen">pacman -update 
</pre>
   * Finish the update: <pre class="screen">vdt-post-install   # probably it will tell you that nothing needs to be fixed
vdt-control --on  #  (if desired to restart cron jobs) probably this is not necessary
</pre>


%BR%
---++ *Comments*
%COMMENT{type="tableappend"}%

<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = MarcoMambelli

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = User

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager|Documenter)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = RobertEngel
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %NO%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = RobertEngel
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->

%META:TOPICMOVED{by="ForrestChristian" date="1166046231" from="Integration.ClientInstallationGuide050" to="Integration/ITB_0_5.ClientInstallationGuide"}%
