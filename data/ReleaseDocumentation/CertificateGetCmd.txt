%META:TOPICINFO{author="DougOlson" date="1274303036" format="1.1" reprev="1.6" version="1.6"}%
%META:TOPICPARENT{name="ReleaseDocumentation.CertificateGet"}%
%LINKCSS%

<!-- This is the default OSG documentation template. Please modify it in -->
<!-- the sections indicated to create your topic.                        --> 

<!-- By default the title is the WikiWord used to create this topic. If  -->
<!-- you want to modify it to something more meaningful, just replace    -->
<!-- %TOPIC% below with i.e "My Topic".                                  -->

---+ Get or renew a certificate with the command line interface

%DOC_STATUS_TABLE%

%TOC%

---++ Preparation

%NOTE% If you're going to request a certificate via your web browser, skip this section and jump to the [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/CertificateGetWeb][Web browser based instructions]].

Instructions below describe using the cert-scripts package in VDT to request, retrieve and renew a certificate. To check that these are available, execute the following commands
<verbatim>
For sh shell variants:
$ source $VDT_LOCATION/setup.sh

For csh shell variants:
$ source $VDT_LOCATION/setup.csh

$ cert-request -V
checking CertLib version, V2-7,  This is the latest version, released 18 May 2009.
  cert-request version: V2-7
  CertLib version: V2-7
</verbatim>

If this succeeds then proceed with the script based instructions below. If you get an error, first follow the instructions to install the cert-scripts package.

---+++ Install cert-scripts package
 Follow the instructions for installing the cert-scripts package into a temporary location in the subsection shown at [[ReleaseDocumentation.GetGridCertificates#Certificate_scripts_package][Certificate scripts package]] and then return here to continue with requesting your personal user certificate.

---+++ Before you get your DOEGrids personal certificate
 Before starting, determine which affiliation to choose (this corresponds to a Registration Authority, RA). If you are a member of OSG, choose OSG as your RA. See the list of RAs on the right side of the [[http://www.doegrids.org/][DOEGrids home page]], or type =cert-request -list=.

You'll also need to list a sponsor, an individual known to the RA who has met you in person and can vouch for your identity. Your VO can help you identify the appropriate sponsor. If you have trouble identifying a known sponsor then use your supervisor as your sponsor and be sure to mention the name of your home institution in the =-reason= message of the =cert-request= script (or "Comments" field of the web form).

Think of a unique passphrase.

Note that a DOEGrids certificate is valid for one year. You will receive email notices from DOEGrids prior to certificate expiration so that you can renew it in time to avoid an interruption in service. These notices are sent to the email address you provide when you request the certificate. If your email address changes before the certificate expires you are required to revoke that certificate, and most probably you should request a new certificate with the new email address (before you revoke the old one ;) ).

---++ Script based instructions
 The instructions here are based on using the default assumptions which includes storing your personal certificate (usercert.pem) and private key (userkey.pem) files in ~/.globus. There are additional options and capabilities available described in the [[Security.CSReadMe][full man pages]].

---+++ Requirements
 See the Preparation section above.

---+++ Obtain a certificate via scripts

---++++ cert-request

<verbatim>
$ cert-request -ou p -agree -name "Firstname Lastname" -email your@email.address  -phone 123456789 
     -reason "to use OSG for my VO VVVV, my home institute is Wonderful University"             
     -affiliation osg -vo VVVV   -sponsor_name "My Sponsor" -sponsor_email my.sponsor@wonderful.edu 
     -sponsor_phone 987654321  -label req1
checking CertLib version, V2-5,  This is latest version, released 24 Aug 2007. 
Processing OU=People request. 
you will be  prompted for a passphrase to encyrpt the private key that is being generated. 
Generating a 2048 bit RSA private key 
....+++ ................................+++ 
writing new private key to '~/.globus/req1key.pem' 
Enter PEM pass phrase: 
Verifying - Enter PEM pass phrase: 
----- 
osg OSG OSG:OSG  
Your Certificate Request has been successfully submitted 
Your Certificate Request id: 99999          
You will receive a notification email from the CA when your certificate         
has been issued. Please disregard the instructions to download your         
certificate though a web browser and use the cert-retrieve script instead.
</verbatim>

This example shows all parameters and command line arguments. Notice that multi-word arguments are enclosed in double quotes(") , as is usual for unix commands. The script will prompt you for any required arguments which are omitted. The meaning of these arguments is

   * =-ou p= - *p* means a personal certificate, *s* means a [[ReleaseDocumentation/GetGridCertificates][host/service certificate]]. 
   * =-agree= - means you agree to the subscriber obligation in the [[http://www.doegrids.org/Docs/CP-CPS.pdf][DOEGrids CP/CPS]]. 
   * =-name= - your full name 
   * =-email= - your email address, preferably from your home institution 
   * =-phone= - your office phone number 
   * =-reason= - a short description of why you need the certificate, and include the name of your home institution 
   * =-affiliation osg= - *osg* is the name of the registration authority to handle this request. These scripts can be used for the other RAs working with DOEGrids. 
   * =-vo VVVV= - *VVVV* should be the name of your virtual organization as registered with OSG, like LIGO, CMS, USATLAS, STAR, etc.<br />If you are working with OSG but your VO is not yet registered with OSG then you can specify the VO as =OSG=. 
   * =-sponsor_name= - the name of your sponsor. 
   * =-sponsor_email= - the email address of your sponsor 
   * =-sponsor_phone= - the phone number of your sponsor 
   * =-label= - a label to use for this request, which is used to name some temporary files that must be available at the time you download the issued certificate with the =cert-retrieve= command. 

---+++ Notification of issuance
 If your request is rejected you should receive some kind of email notice from the RA or an Agent explaining why. After your certificate request is processed and a certificate is issued you will receive an email like:

<verbatim>Subject: DOEGrids CA Certificate Request 
Date: Fri, 30 Nov 2007 14:55:56 -0800 (PST) 
From: DOEGrids-CA-1@doegrids.org 
To: your@email.address  
Your Personal certificate request has been processed successfully. 
SubjectDN= CN=Firstname Lastname 999999,OU=People,DC=doegrids,DC=org 
notAfter= Nov 29, 2008 2:55:51 PM 
notBefore= Nov 30, 2007 2:55:51 PM 
Serial Number= 0xNNNN   
Complete details can be found here: 
https://pki1.doegrids.org:443/displayBySerial?op=displayBySerial&serialNumber=DDDDD  
Your certificate requested using the script interface, 
request id: 99999, has been approved and is available for download.  
To retrieve your certificate, execute the command below using the same 
working directory from which the request was made.  
# cert-retrieve -serialnum DDDDD  
If you requested the certificate with optional parameters specifying labelling 
or a non-standard directory for storing your certificate see the cert-retrieve 
and cert-request man pages for additional explanation. 
# cert-retrieve -help
# cert-request -help
</verbatim>

In the example above =0xNNNN= and =DDDDD= is the certificate serial number in hexadecimal and decimal notation, respectively. =99999= is the same request ID that was shown for the result of =cert-request=.

---++++ cert-retrieve

<verbatim>
$ cert-retrieve -serialnum 0xNNNN -label req1 -p12 mycert.p12
checking CertLib version, V2-5,  This is latest version, released 24 Aug 2007.  
using CA doegrids Using URL 
https://pki1.doegrids.org/displayBySerial?op=displayBySerial&serialNumber=0xNNNN 
Checking that the usercert and ~/.globus/req1key.pem match 
Enter pass phrase for /home/olson/.globus/req1key.pem: 
writing RSA key 
~/.globus/usercert.pem and ~/.globus/userkey.pem now contain your Globus credential 
Enter pass phrase for ~/.globus/userkey.pem: 
Enter Export Password: 
Verifying - Enter Export Password: 
Your PKCS12 file mycert.p12 credential with your certificate and private key was generated.  
For information on how to import it into your favorite browser or email application   
Google  import certificate  
and you will get lots of examples.
</verbatim>

The arguments are:

   * =-serialnum 0xNNNN= - the certificate serial number, 0xNNNN is the hexadecimal form, one can use the decimal form, DDDDD. 
   * =-label= - this label matches that used for the =cert-request= command 
   * =-p12= - optional generation of a PKCS12 format file which can be used to import the certificate into web/email applications. Without the =-p12= flag you will have a single prompt for your *passphrase*, and it must match what you used with the =cert-request= command. If you use the =-p12= flag you a receive another prompt for this same *passphrase* because there is another execution of openssl to produce the PKCS12 file after the certificate is already downloaded. Then you receive a prompt and verification for the *Export Password* which encrypts the PKCS12 file ( =mycert.p12= ). This file is in the format that can be imported into your web browser and email client, and you will use the same *Export Password* so your browser/email can unencrypt it during the import process. 

---+++ Renew an existing personal certificate
You can renew your personal certificate (before it expires) with the <tt>cert-renew</tt> command.  This command will
authenticate to the DOEGrids CA using your existing certificate and you will be issued a new certificate immediately. 
After your certificate expires
you need to request a new certificate as described above.
The default parameter values of the <tt>cert-renew</tt> command will obtain a new certificate for the one
stored in your <tt>~/.globus/usercert.pem, ~/.globus/userkey.pem</tt> files.  The command will prompt you for any required parameters
not supplied on the command line.
If you want to renew a personal certificate stored in different
files then check the full description of the command with <tt>cert-renew --help</tt>.
Also shown in the example below is the creation of the PKCS12 format file (.p12) that holds both the new certificate and private key.
This is the file format usually need to import your certificate into your web browser.

---++++ cert-renew


An example of use is shown below:
<verbatim>
$ cert-renew --agree --p12 my-new-cert.p12
checking CertLib version, V2-7,  This is the latest version, released 18 May 2009.
you will be  prompted for a passphrase to encyrpt the private key that is being generated         .
 using CA doegrids
Generating a 2048 bit RSA private key
.................................+++
......+++
writing new private key to '/home/user/.globus/newkey.pem'
Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:
-----
Connecting to the CA. You will be prompted for the passphrase
for /home/user/.globus/userkey.pem.
Enter PEM pass phrase:
your renewed certificate is in /home/user/.globus/newcert.pem
You can move it to /home/user/.globus/usercert.pem to replace your
current one
Your new key is in /home/user/.globus/newkey.pem and should be moved to
/home/user/.globus/userkey.pem

Please ignore the mail that you will receive from the CA. It
only applies to certificate requests that were made via a web browser

Now creating PKCS12 file my-new-cert.p12.
First you will enter your passphrase for your new private key,
then you will enter the passphrase to encrypt the .p12 file.
Enter pass phrase for /home/user/.globus/newkey.pem:
Enter Export Password:
Verifying - Enter Export Password:
Your PKCS12 file my-new-cert.p12 credential with your certificate and
private key was generated.  For information on how to import it
into your favorite browser or email application
  Google  import certificate <application name>
and you will get lots of examples.

$ ls -ltr ~/.globus
-rw-r--r-- 1 user group   28 Apr 15 15:13 usercert.pem
-rw------- 1 user group   27 Apr 15 15:13 userkey.pem
-rw------- 1 user group 1743 May 19 12:21 newkey.pem
-rw-r--r-- 1 user group 1498 May 19 12:21 newcert.pem

$ ls -ltr *.p12
-rw------- 1 user group 2661 May 19 12:21 my-new-cert.p12

</verbatim>

In this example you see that you enter your password/passphrase several times.  These are for your
old private key, the new private key, and also the encryption passphrase for the PKCS12 file (.p12).
If you use the same password or passphrase for each of these files then you can just enter
the same one each time.

The CA will send you a notification email as shown above under *Notification* but you
can ignore it (as mentioned in the command output) since you have already
downloaded your new certificate.

<!-- CONTENT MANAGEMENT PROJECT

   DEAR DOCUMENT OWNER
   ===================

   Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER          = JamesBarlow

   Please define the document area, choose one of the defined areas from the next line
   DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Security

   define the primary role the document serves, choose one of the defined roles from the next line
   DOC_ROLE = (Scientist|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

   Please define the document type, choose one of the defined types from the next line
   DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Knowledge
   
   Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

   Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %YES%

   change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

   change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %YES%

   change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


   DEAR DOCUMENT REVIEWER
   ======================

   Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = MineAltunay
  
   Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %YES%


   DEAR DOCUMENT TESTER
   ====================

   Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = AnandPadmanabhan
  
   Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
 
-->

%META:TOPICMOVED{by="JamesBarlow" date="1273172310" from="Documentation.CertificateGetCmd" to="ReleaseDocumentation.CertificateGetCmd"}%
