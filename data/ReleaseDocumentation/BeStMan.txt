%META:TOPICINFO{author="TanyaLevshina" date="1267552649" format="1.1" reprev="1.39" version="1.39"}%
%META:TOPICPARENT{name="WebHome"}%
---+!! <nop>Berkley Storage Manager (!BeStMan) 
%DOC_STATUS_TABLE%
%TOC{depth="2"}%
%STARTINCLUDE%
%BR%

---++ Introduction
The purpose of this document is to provide [[http://sdm.lbl.gov/bestman][BeStMan]] based SE administrators the information on how to prepare, install and validate the SE.

For general information on storage software architecture, implementations and use, please read [[https://twiki.grid.iu.edu/bin/view/Storage/StorageInfrastructureSoftware][StorageInfrastractureSoftware]]. For information on planning, installing and validating storage software, please follow this link to [[https://twiki.grid.iu.edu/bin/view/Storage/StorageSiteAdministrator][StorageSiteAdministrator]].

---+++!! Applicable Versions
The applicable software versions for this document are 
%RED%
%OSG_VERSION% 
%ENDCOLOR%
(or higher) and 
%RED%
*vdt-version  2.0*
%ENDCOLOR%
(or higher).

---+++!!Engineering Considerations
!BeStMan  could be installed on one node and the installation cache consists of the following components: 
   * !BeStMan is an implementation of SRM v2.2 for essential interfaces to disk based storage systems - [[http://datagrid.lbl.gov/bestman][BeStMan Home Page]] 
   * !GridFTP server  provides a high-performance, secure, reliable data transfer [[http://www.globus.org/toolkit/docs/3.2/gridftp][GridFTP documentation]]. 
   * POSIX-compliant file system
   * optional package
      * Gratia gridftp transfer probe - cron job that reports all the file transfers to [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GratiaSiteCollector Gratia collector]]
      *  [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS][GUMS server]] - authentication and authorization service

The following questions should be answered before you can proceed with installation and 
configuration of !BeStMan-Gateway storage solution: 
 
   $ Q. _What authorization mechanism do you prefer?_ : You need to decide if you want to use grid-mapfile or !GUMS server for users’ authentication and authorization. More details about !GUMS could be found at [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/InstallConfigureAndManageGUMS GUMS Installation Guide]]. %BR% %BR% We currently recommend using GUMS as it provides superior flexibility and allows a site to manage all of its mappings in one central location; most large sites use GUMS.
   $ Q. _Do you kind of storage you would like to provide to your users? You may choose volatile cache(files are stored in storage for a fixed period of time), custodial cache (files are stored until explicitly deleted) or both. You can also allow users to write to specified areas that are outside !BeStMan managed cache. For details see....
   $ Q. _How many !GridFTP servers you will need? You can choose to run multiple !GridFTP servers to achieve load balance and better performance. 
   $ Q. _Do you want to enable Gratia gridftp-transfer probes?_ : Yes!  The Gratia gridftp-transfer probes provide much-desired statistics that OSG uses for accounting, much like the Gratia job accounting.  More details can be found at [[https://twiki.grid.iu.edu/bin/view/Accounting/WebHome  Gratia Home Page]]. The reported information will include the source and destination of transfer, certificate subject of transfer initiator, size and status of the transferred file. %BR% %BR% This probe captures transfer statistics, hence it needs to be installed on your !GridFTP server.  If you do not run your !GridFTP server and !BeStMan server out of the same VDT installation, you will want to additionally install this probe on your other !GridFTP servers.

---+++!!Help!
If a problem occurs during installation or verification of the service, see [[#DebugInfo][Debugging Information]].


---++Checklist
   1. [[ReleaseDocumentation/PacmanInstall][pacman]] version >= %PACMAN_VERSION% is required
   1. The server must have a fully qualified domain name and a valid [[ReleaseDocumentation/GetGridCertificates][grid host certificate]] installed in =/etc/grid-security/=
   1. !BeStMan server needs to have a valid host certificate installed in =/etc/grid-security/bestmancert=. The certificate should be own by a user that is running !BeStMan server. The right permission (600) should be set on those files. %ICON{warning}%  !BeStMan should be configured with host certificate in order to be able to handle requests from !LCG-Utils tools. This is mandatory for at least all !BeStMan servers that support ATLAS experiment. Normally the OSG !BeStMan implementation uses a service certificate, not a host certificate. This causes lcg-cp to fail because the certificate name (which looks like http/hostname instead of just hostname) doesn't match the hostname. 
   1. The firewall must allow incoming connections to the !GridFTP port (default 2811). Outgoing connections must be allowed from high ports ( typically in range 32769-65535 ). We recommend to consult the [[ReleaseDocumentation/ComputeElementFirewalls][Firewall Guide]] if you install the !GridFTP server for the first time.
   1. A working GUMS server or a gridmap-file are needed for authorization using grid certificates.

---++ !BeStMan Installation Procedure
Login as root and check if pacman version >=%PACMAN_VERSION% is installed:
<pre class="screen">
su root
pacman -version
</pre>

Next,  create an installation directory and change this directory. This directory will later be used to get the !BeStMan package  from the %CACHE% cache.

<pre class="screen">
mkdir -p /opt/osg_%OSG_VERSION%-bestman/
cd /opt/osg_%OSG_VERSION%-bestman/
</pre>

If you are using GUMS authorization method you will need to setup _VDT_GUMS_HOST_ environment variable, if you are using  gridmap-file ,please, proceed to the next step.
<pre class="screen"> 
cd &lt;VDT_LOCATION&gt;
export VDT_GUMS_HOST=&lt;GUMS hostname&gt;  
</pre>

Finally, execute pacman to get the !BeStMan package from the %CACHE% cache. Pacman will ask whether you want to trust the cache (=yall=).
<pre class="screen">
cd &lt;VDT_LOCATION&gt;
pacman -get %CACHE%:Bestman
</pre>
The install procedure will print out a warning:
<verbatim>
========== IMPORTANT ==========
Most of the software installed by the VDT *will not work* until you install
certificates.  To complete your CA certificate installation, see the notes
in the post-install/README file.
</verbatim>

The information provided in the README is out of date. Please setup the CA certificates in the following way instead:
<pre class="screen">
source setup.sh
$VDT_LOCATION/vdt/bin/vdt-ca-manage setupca --location local -url osg
</pre>
This command will download certificates distributed by the OSG to =$VDT_LOCATION/globus/share/certificates= and create a symlink from =$VDT_LOCATION/globus/TRUSTED_CA= to that location. [[VDTCAManage][Other options]] are also available.

To reflect the changes update the environment and run the post installation script:
<pre class="screen">
vdt-post-install
</pre>

You can verify that the version installed is the version you expected by executing =vdt-version=. To see all services available use =vdt-control -list=
<pre class="screen">
vdt-version
vdt-control --list
</pre>
This completes the installation of the !BeStMan server. Move to the [[#!BeStMan Configuration][this step]] to configure the !BeStMan and !GridFTP servers. You may also chose to configure Gratia transfer probe at this time.
If you want to install additional !GridFTP servers on the different nodes, please, follow [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GsiFtpStandAlone][this document]]


---++ !BeStMan Configuration
You will need to configure !BeStMan first in order to enable it as a service. The full review of !BeStMan configuration options are provided in the [[http://sdm.lbl.gov/bestman/docs/bestman-guide.html][Bestman Administrative Guide]]. The process is controlled by a !BeStMan-specific configuration script ( =$VDT_LOCATION/bestman/setup/configure= ) with command line arguments to define such items as cache directories, CA cert and CRL locations, service ports, logging information ..

If you are using gridmap-file then the simplest configuratio command n for your !BeStMan installation  is shown below:
<pre class="screen">
cd &lt;VDT_LOCATION&gt; 
source setup.sh 
$VDT_LOCATION/vdt/setup/configure_bestman --server y 
</pre>

This command will install !BeStMan that will be 
   * running  by user _"daemon"_,
   * using certificate  /etc/grid-security/http/httpcert.pem and certificate key /etc/grid-security/http/httpkey.pem
   * listening on secure port 10443 and public port 10080
   * utilizing  gridftp server running on the same host on 2811 port
   * using gridmap-file for authorization

 If you want to use GUMS for authorization the simplest configuration  command will be:
<pre class="screen">
<verbatim>
cd &lt;VDT_LOCATION&gt; 
source setup.sh 
$VDT_LOCATION/vdt/setup/configure_bestman --server y\
        --cert <bestman service cert>\
        --key  <bestman service key>\
        --gums-host <GUMS hostname>\
        --gums-port <GUMS port number>\
</verbatim>
</pre>

Where 
   * _<bestman service cert>_  path to service certificate 
   * _<bestman service key>_  path to service certificate private key</br> 

%ICON{"warning"}% *the certificate file and key  should belong to the user* - Please, see [[#Checklist][Checklist]]. 

%ICON{warning}%  !BeStMan should be configured with host certificate in order to be able to handle requests from !LCG-Utils tools. This is mandatory for at least all !BeStMan servers that support ATLAS experiment. Normally the OSG !BeStMan implementation uses a service certificate, not a host certificate. This causes lcg-cp to fail because the certificate name (which looks like http/hostname instead of just hostname) doesn't match the hostname. 
   * _GUMS hostname_ the name of  !GUMS server, <br/> 
   * _GUMS port number_ the port of !GUMS  server, <br/>   

This command will install !BeStMan that will be 
   * running  by user _"daemon"_,
   * listening on secure port 10443 and public port 10080
   * utilizing  gridftp server running on the same host on 2811 port
 
It is important to notice that --server y should be specified, otherwise the =configure_bestman= script disables the bestman server and then
it needs to be turned on again with the =vdt-control --on bestman=.


More advanced command that allows you to use GUMS authorization, specified non-default ports for !BeStMan and !GridFTP ports range, multiple gridftp servers, etc is shown below:
<pre class="screen">
<verbatim>
#cd <VDT_LOCATION>
# source setup.sh
# vdt/setup/configure_bestman  --server <y,n>\
        --user <bestman user>\
        --cert <bestman service cert>\
        --key  <bestman service key>\
        --http-port <public port number>\
        --https-port <secure port number>\
        --globus-tcp-port-range <low_port,high_port>\
        --volatile-file-lifetime <lifetime in seconds>\
        --cache-size <Cache size in MB>\
        --gums-host <GUMS hostname>\
        --gums-port <GUMS port number>\
        --with-transfer-servers <GridFTP server list>\
</verbatim>
</pre>

Where :
   * _bestman user_ name of the non-privileged user that runs !BeStMan
   * _bestman service cert_ path to service certificate 
   * _bestman service key_ path to service certificate private key</br> 
%ICON{"warning"}% *the certificate file and key  should belong to the user* - Please, see [[#Checklist][Checklist]]. 
   * _public port number_ public port (default : 10080;commonly used port is 8080 unless there is a conflict. 
   * _secure port number_ private port (default: 10443;commonly used port is 8443 unless there is a conflict)</br> 
%ICON{"warning"}% Please, make sure that these two ports are open if  you have firewall on your site.
   * _low_port,high_port_ controls all outbound globus connections for gridftp (see also how to deal with firewall in [[#!GridFTP  Configuration][ in this section]]).
   * _cache_size_ the size of volatile cache area  allocated for storage
   * _lifetime in seconds_ time in seconds that file stored in !BeStMan volatile cache will be available (default is 30minutes)
   * _GUMS hostname_ the name of  !GUMS serve
   * _GUMS port number_the port of !GUMS  server,
   * _GridFTP server list_a list !FQDN of your !GridFTP servers, separated by ; . e.g. 
“gsiftp://host1.domain.tld;gsiftp://host2.domain.tld” 
If not specified the local hostname will be used as a name of !GridFTP server.
  

This command will allow you to configure !BeStMan that will manage a volatile space located under $VDT_LOCATION/vdt-app-data/bestman/cache directory. The size of the area will be controlled by specified  _cache_size_ or by size of the disk partition. The files that are stored at this area will be available during _lifetime in seconds_ period.

If you want to create a custodial storage place where file could be stored unless they are explicitly deleted by user you will need to add the following options to the configuration above:
<verbatim>
        --with-custodial-storage-path <path>
        --with-custodial-storage-size <size>
</verbatim>
where
   * _path_ is the path to custodial storage
   * _size_ is the size of custodial storage 

If you would like also add other areas where people may store the data you can use one of the following options:
<verbatim>
        --with-allowed-paths <List of accessible paths>
</verbatim>
or 
<verbatim>
        --with-blocked-paths <List of non-accessible paths>
</verbatim>

Where:
 * _List of accessible paths_ list of directories, separated by semicolon, accessible to users. If not specified $VDT_LOCATION/vdt-app-data/bestman/cache directory will be used to store volatile data . %ICON{warning}%  Keep in mind that !BeStMan will not be able to manage space in  the areas specified in the list unless it is not also specified as custodial area.

   * _List of non-accessible paths_ list of directories separated by semicolon, non-accessible to users (default are "/;/etc;/var") . One of the  --with-allowed-paths / --with-blocked-paths options should be used


More configuration options could be found with _--help__ option.


---++ !GridFTP  Configuration
!GridFTP server comes with !BeStMan installation. 

If you are using GUMS authorization method, please, copy the following two files from _$VDT_LOCATION/post-install_ to in _/etc/grid-security_, otherwise skip this step: 
 <pre class="screen">
cp $VDT_LOCATION/post-install/prima-authz.conf /etc/grid-security 
cp $VDT_LOCATION/post-install/gsi-authz.conf /etc/grid-security 
</pre>

If you are dealing with firewall the gridftp port range should be properly set. In order to do so you will have to modify _vdt-local-setup.sh_.
<pre class="screen">
#edit $VDT_LOCATION/vdt/etc/vdt-local-setup.sh 
GLOBUS_TCP_SOURCE_RANGE=&lt;low_port,high_port&gt;
GLOBUS_TCP_PORT_RANGE=&lt;low_port,high_port&gt;
export GLOBUS_TCP_SOURCE_RANGE
export GLOBUS_TCP_PORT_RANGE
</pre>

Where _low_port,high_port_ - controls all outbound globus connections for gridftp (e.g GLOBUS_TCP_SOURCE_RANGE=40000,49150)

You can have multiple installation of  !GridFTP servers located on  the nodes you have 
specified in !BeStMan-gateway configuration (see  [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/GsiFtpStandAlone][standalone !GridFTP installation]] if you want to install it as a standalone server).

You will need to make sure that users have write permission in to the storage area.  

---+++ Gratia !GridFTP Transfer Probe Configuration
If you are using !GridFTP server that is installed during the !BeStMan installation you will need  to enable,configure Gratia !GrdFTP transfer probe and perform the actions described in
 [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]]

---++ Enabling the Services
You can use the _vdt-control -list_ command to see all services that are installed as part of the install, and whether or not they are enabled or disabled. 
You will need to enable the following services:
   * fetch-crl   
   * vdt-rotate-logs  
   * vdt-update-certs       
   * gsiftp           
   * gratia-gridftp-transfer  %ICON{warning}% In case you want to run Gratia !GridFTP transfer probe
   * gums-host-cron   %ICON{warning}% In case you want to run Gratia !GridFTP transfer probe and are using !GUMS for authorization
   * edg-mkgridmap     %ICON{warning}% In case you want to use gridmap-file for authorization 

You can execute _vdt-control -enable_ command and list all services you want to enable:
<pre class="screen">
cd &lt;VDT_LOCATION&gt;
source setup.sh
vdt-control -enable fetch-crl vdt-rotate-logs vdt-update-certs
</pre> 

---++ Services Startup/Shutdown 
You have to be root to start/stop each service. You have to start all the components in the 
following order (this is order is optional but seems logical): 
   1. Start !BeStMan  (!GridFtp and Gratia transfer probe). Login on !BeStMan node, then:<pre class="screen">cd  &lt;VDT_LOCATION&gt; 
. setup.sh 
vdt-control –on 
</pre>
   1. Stop !BeStMan (!GridFtp and Gratia transfer probe). Login on !BeStMan node, then: <pre class="screen">cd  &lt;VDT_LOCATION&gt; 
. setup.sh 
vdt-control –off  
</pre> 

---+++ Integration with the information system

Integration of the SE with the central information systems takes place during the Compute Element installation/configuration. See the topic [[ReleaseDocumentation/GenericInformationProviders][Generic Information Providers]]. The SE does not collect or publish information independently.



---++ Validation of Service Operation

---+++ Site registration and daily monitoring
Once you have your SE setup and configured, you can register it with the [[http://datagrid.lbl.gov/sitereg/][LBNL SRM monitoring system]]. This will run daily tests against your SE and the results can be viewed [[http://datagrid.lbl.gov/osg/][here]].

---+++ Self-testing with srm clients
In order to verify that the system is functional you will need to have access to srm client commands, be able to create a proxy certificate (_grid-proxy-init_ or _voms_proxy_init_ command) and have access to your certificate and private key.

There are multiple ways of doing this.

---++++ Preparing to run srm-client command on the !BeStMan node
Running commands on the node you have just installed !BeStMan. 
   * Login on this node as "yourself'
   * Setup location of !BeStMan installation
<pre class="screen">
cd &lt;VDT_LOCATION&gt;
. setup.sh
</pre>
   * Make sure that you have access to your certificate and private key on that node, you will need it to create a proxy certificate. Execute grid-proxy-init:
<pre class="screen">
grid-proxy-init
Your identity: .....
Enter GRID pass phrase for this identity:
</pre>
   * You will need to add the path to all the srm client scripts to your _PATH_ environment variable and create grid proxy certificate. In order to do so you will need to have your certificate 
<pre class="screen">
cd &lt;VDT_LOCATION&gt;
. setup.sh
export PATH=$PATH:$VDT_LOCATION/bestman/bin
</pre>
---++++ Preparing to run srm-client command from the different node

 Install client command on the node where you have your certificate and public key. The detailed instruction is provided in [[https://twiki.grid.iu.edu/bin/view/ReleaseDocumentation/ClientInstallationGuide][in that installation Guide]]. Then generate a proxy certificate by issuing _grid_proxy_init or _voms_proxy_init_:
<pre class="screen">
. &lt;VDT_LOCATION&gt;/setup.sh
grid-proxy-init
Your identity: .....
Enter GRID pass phrase for this identity:
</pre>

or

<pre class="screen">
. &lt;VDT_LOCATION&gt;/setup.sh
voms-proxy-init -voms  &lt;voms_name&gt;
Enter GRID pass phrase for this identity:
</pre>
Where  &lt;VDT_LOCATION&gt is the directory where you installed the client.


---+++ Executing SRM-client commands 
After you manage to get proxy certificate and access to srm commands you may try to verify !BeStMan:

Execute srm-ping: 
<pre class="screen">
 srm-ping srm://&lt;BeStMan_host&gt;:&lt;secured_port_http&gt;/srm/v2/server 
 </pre>

Expected results: 
<verbatim> 

 </verbatim>

If you have reasonable result you may try to srm copy. In order to do so create a file 
_“test1”_ in _/tmp_ directory and execute: 
 
<pre class="screen">
srm-copy   file:////tmp/test1 
srm://&lt;BeStMan_host&gt;:&lt;secured_port_http &gt;/srm/v2/server\?SFN=&lt;BeStMan-cache&gt;/test1 ; 
</pre>
 
You should get back something like that: 

If you turn on Gratia !GridFTP transfer probes you should be able to see the accounting information by accessing your Gratia collector. See details in  [[GratiaTransferProbe][Preparing, Installing and Validating Gratia transfer probe]].

---+++ Self-testing with srm-tester
A series of self-testing can be done with [[Storage.SRMTester][srm-tester]]. Follow instructions and samples on the [[Storage.SRMTester][srm-tester page]].

---++ Debugging Information
---+++!!File Locations
You could find log and configuration files for each of the module in the following location: 

| *Module Name* |  *Configuration files* | *Log files* | 
|!BeStMan | $VDT_LOCATION/bestman/conf/bestman.rc | $VDT_LOCATION/vdt-app-data/bestman/logs/event.srm.log<br/>$VDT_LOCATION/vdt-app-data/bestman/logs/bestman.log | 
|!GridFTP |$VDT_LOCATION/vdt/services/vdt-run-gsiftp.sh.env| $VDT_LOCATION/globus/var/log/gridftp.log<br/> $VDT_LOCATION/globus/var/log/gridftp-auth.log |

---+++!!Open Ports
The following ports are opened for the installed services
|*Module Name*|*Port Number*| *Protocol*|
|!BeStMan| 8080 (default 10080)| tcp|
||8443 (default 10443)|tcp|
|!GridFTP|2811|tcp|
||lowPort,maxPort if needed to control outbound globus connections|tcp|  

#DebugInfo
---+++!!Debugging Procedure



---++ Reference
   * [[http://datagrid.lbl.gov/bestman][BeStMan official website]].
   * [[ReleaseDocumentation.BestmanGateway][OSG BeStMan Gateway Mode page]]
   * [[ReleaseDocumentation.BestmanGatewayXrootd][OSG BeStMan Gateway and Xrootd page]]
   * [[ReleaseDocumentation.BestmanOnCE][OSG BeStMan Gateway on CE page]]
   * [[ReleaseDocumentation.GratiaTransferProbe][OSG Gratia Transfer Probe page]]
   * [[http://datagrid.lbl.gov/bestman][BeStMan website at LBNL]] - [[http://datagrid.lbl.gov/bestman/docs/bestman-guide.html][BeStMan User guides]], [[http://datagrid.lbl.gov/bestman/docs/bestman-faq.html][BeStMan FAQ]] and latest downloadable tar files available here. Latest downloadables should be the same version as in VDT.
   * [[Storage.SRMv2Client][SRM v2.2 LBNL client command line examples]]
   * [[Storage.SRMTester][SRM-Tester]]
   * [[http://hep-t3.physics.umd.edu/HowToForAdmins.html#osginstall][UMD !BeStMan Admin Instruction]] - UMD experience on how to admin !BeStMan
   * [[http://t2.unl.edu/documentation/hadoop/bestman-hdfs][UNL !BeStMan Instruction]]
   * [[http://wt2.slac.stanford.edu/xrootdfs/bestman-gateway.html][SLAC !BeStMan Gateway mode Instruction]] - SLAC guide on !BeStMan gateway mode
   * [[http://www.usatlas.bnl.gov/twiki/bin/view/Admins/BestMan][US ATLAS !BeStMan instruction page]]
   * [[http://datagrid.lbl.gov/osg][OSG SRM Daily Testing Results]] - OSG provides SRM v2.2 daily testing. Site registration is needed [[http://datagrid.lbl.gov/sitereg][HERE]]
   * [[http://sdm.lbl.gov/srm-wg][SRM specifications and collaboration]] - from SRM collaboration working group
   * [[http://s-2.sourceforge.net/][S2]] - A SRM v2.2 test suite from CERN. It provides basic functionality tests based on use cases, and cross-copy tests, as part of the certification process and supports file access/transfer protocols: rfio, dcap, gsidcap, gsiftp

---++ Support
   * osg-storage@opensciencegrid.org
   * srm@lbl.gov


%STOPINCLUDE% 
%BR% 
%COMPLETE2% %BR% 
%RESPONSIBLE% Main.AlexSim - 16 March 2009 %BR% 
%REVIEW% Main.TanyaLevshina  - 20 Jul 2009 %BR% 
%REVFLAG% %S% %BR%


---++ *Comments*
| Current version above - isn't this old? | Main.RobGardner | 16 Jul 2009 - 19:52 |
%COMMENT{type="tableappend"}%
<!-- CONTENT MANAGEMENT PROJECT
############################################################################################################
 DEAR DOCUMENT OWNER
 ===================

 Thank you for claiming ownership for this document! Please fill in your FirstLast name here:
   * Local OWNER = TanyaLevshina

 Please define the document area, choose one of the defined areas from the next line
 DOC_AREA = (ComputeElement|Storage|VO|Security|User|Monitoring|General|Integration|Operations|Tier3)
   * Local DOC_AREA       = Storage

 define the primary role the document serves, choose one of the defined roles from the next line
 DOC_ROLE = (EndUser|Student|Developer|SysAdmin|VOManager)
   * Local DOC_ROLE       = SysAdmin

 Please define the document type, choose one of the defined types from the next line
 DOC_TYPE = (Troubleshooting|Training|Installation|HowTo|Planning|Navigation|Knowledge)
   * Local DOC_TYPE       = Installation
  Please define if this document in general needs to be reviewed before release ( %YES% | %NO% )
   * Local INCLUDE_REVIEW = %YES%

 Please define if this document in general needs to be tested before release ( %YES% | %NO% )
   * Local INCLUDE_TEST   = %NO%

 change to %YES% once the document is ready to be reviewed and back to %NO% if that is not the case
   * Local REVIEW_READY   = %YES%

 change to %YES% once the document is ready to be tested and back to %NO% if that is not the case
   * Local TEST_READY     = %NO%

 change to %YES% only if the document has passed the review and the test (if applicable) and is ready for release
   * Local RELEASE_READY  = %NO%


 DEAR DOCUMENT REVIEWER
 ======================

 Thank for reviewing this document! Please fill in your FirstLast name here:
   * Local REVIEWER       = AlexSim
 Please define the review status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local REVIEW_PASSED  = %IN_PROGRESS%


 DEAR DOCUMENT TESTER
 ====================

 Thank for testing this document! Please fill in your FirstLast name here:
   * Local TESTER         = FirstLast
 Please define the test status for this document to be in progress ( %IN_PROGRESS% ), failed ( %NO% ) or passed ( %YES% )
   * Local TEST_PASSED    = %IN_PROGRESS%
############################################################################################################
-->
