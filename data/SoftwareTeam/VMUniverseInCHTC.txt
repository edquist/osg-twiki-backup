%META:TOPICINFO{author="TimCartwright" date="1380640803" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="TestingHome"}%
---+ How to Run a VM Universe Job in CHTC

---++ Overview

This document describes how to prepare and run a job using HTCondor’s VM universe and CHTC’s pre-made VM images.

---++ CHTC Base Operating System VM Images

CHTC provides VM images with basic operating system installations. Each provides the following semantics, regardless of implementation details:

   * The operating system is up-to-date (within 7 calendar days)
   * The system supports installation of other packages from the operating system repositories (nb. RHN)
   * The operating system boots normally into an appropriate runlevel to run a user-supplied payload
   * The system is on a network with outbound access for reasonable, safe Internet activities, including:
      * Fetching and sending files via http, https, ftp, gsiftp
      * Synchronizing the system clock with NTP
   * Inbound network access to the virtual guest is severely limited (only ssh from hypervisor)
   * The system clock is accurately set with date, time, and local time zone (US Central)
   * There is at least 2GB of free disk space under / on the filesystem
   * SELinux is disabled
   * Following a successful boot, the system runs a user-supplied payload:
      * First, it attempts to mount =/dev/vdb= (ext2) at =/mnt/user=
      * If successful, it executes =/mnt/user/run-job= as root
      * All standard output and error from run-job is logged to =/mnt/user/run-job.log=
      * If the mount is successful, but the script cannot be run, informative error messages are logged to =/mnt/user/run-job-failure.log=

---++ Prepare a Job Payload

   1. Prepare your job to run in batch mode, as with any HTCondor job
   1. Select one (or more) base OS images to run your job payload
   1. Prepare an executable, named =run-job=, that prepares the run-time environment of your job and runs it

The latter step is the hard part! The =run-job= executable is responsible for preparing a bare-bones OS install to run your actual job and thus may need to include steps such as:

      * Installing software packages that your job needs; these may come from the OS repositories or other repositories that you set up
      * Configuring the system or other software packages
      * Setting up environment variables
      * Downloading and/or preparing input files, directory structures, etc.

Further, the set-up steps may depend on the particular base OS image that you select.

---++ Prepare an Input-Output Image

---++ Write a Submit File

---++ Submit and Monitor a Run

---++ Extract Outputs
