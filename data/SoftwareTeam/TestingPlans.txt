%META:TOPICINFO{author="TimCartwright" date="1325799144" format="1.1" reprev="1.1" version="1.1"}%
%META:TOPICPARENT{name="TestingHome"}%
<!--
   * Set NOT_STARTED = Not Started
   * Set NOT_RELEASED = Not Released
   * Set ON_TRACK = <div style="background-color: #3366FF; color:white">&nbsp;On Track&nbsp;</div>
   * Set BEHIND = <div style="background-color: #CCFF00;">&nbsp;Behind&nbsp;</div>
   * Set AT_RISK = <div style="background-color: #CC0000; color:white">&nbsp;At risk&nbsp;</div>
   * Set ACHIEVED = <div style="background-color: #00FF66;">&nbsp;Achieved&nbsp;</div>
   * Set RELEASED = <div style="background-color: #00FF66;">&nbsp;Released&nbsp;</div>
-->

---+ Plans for Development of Automated Testing

---++ Basic Architecture

The proposed test framework comes in three parts. The *Driver* is the main script that is invoked to find, run, and report on tests. Ideally, it knows nothing about what the tests do or how they do it; instead, it just knows how to find tests, sequence them, run them, evaluate their outcomes, and report on the results. The *Tests* are intended to be divided into many files (Python modules) and should be small, be relatively independent, and clearly state their requirements. The underlying *Support Library* contains utility functions common to a variety of tests, a means for accessing global state information across tests, and (future work) a means for accessing global test environment information.

<table cellpadding="0" cellspacing="0" style="font-size: 150%;">
  <tr>
    <td>
      <table cellpadding="10" cellspacing="0" style="background-color: #BFB; border: 1px solid black; width: 100%;">
        <tr>
          <td colspan="3" style="text-align: center; font-weight: bold;">Driver</td>
        </tr>
        <tr>
          <td style="text-align: center;">Find&nbsp;Tests</td>
          <td style="text-align: center;">Run&nbsp;Tests</td>
          <td style="text-align: center;">Reporting</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr><td style="height: 10px"></td></tr>
  <tr>
    <td>
      <table cellpadding="10" cellspacing="0" style="background-color: #BFB; border: 1px solid black; width: 100%;">
        <tr>
          <td style="text-align: center; font-weight: bold;">Tests</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr><td style="height: 10px"></td></tr>
  <tr>
    <td>
      <table cellpadding="10" cellspacing="0" style="background-color: #BFB; border: 1px solid black; width: 100%;">
        <tr>
          <td style="text-align: center; font-weight: bold;">Support Library</td>
        </tr>
      </table>
    </td>
  </tr>
</table>

---++ Milestones

First thoughts. Effort estimates are order-of-magnitude only at this time.

%TABLE{ sort="off" valign="top" }%
| *Milestone* | *State* | *Owner* | *Effort* | *Start* | *Target Finish* | *Actual Finish* | *Notes* |
| Separate support library from tests | | Tim |  week  | | | | |
| Add global state to library; separate test files | | Tim |  day  | | | | |
| Test Fest | | Tim |  day  | | | | Doug, Maxim, Neha, Scot |
| Replace nose with simplest possible driver | | Tim |  week  | | | | |
| Add sequence metadata and ordering algorithm | | Tim |  week  | | | | |
| Add state requirements and refactor runtime algorithm | | Tim |  week  | | | | |
| Expand possible test outcomes and reporting | | Tim |  week  | | | | |

---++ Possible Future Features

   * External file to define test environment (e.g., location of services, client user name and cert)
   * Test categories (e.g., client vs. server, light vs. heavy)
   * Support services on external systems (requires test environment, test categories)
