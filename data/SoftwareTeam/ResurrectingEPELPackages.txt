%META:TOPICINFO{author="MatyasSelmeci" date="1439409469" format="1.1" version="1.6"}%
%META:TOPICPARENT{name="InternalDocs"}%
---+ Resurrecting EPEL RPMs

You will need to be a Koji admin to do these steps.
<code>osg-koji --list-permissions --mine</code> will tell you if you're an admin or not.
Current Koji admins are the Madison team and Brian Bockelman.

| !EPEL version | !EPEL Koji tag | Our Koji tag |
| 5 | dist-5E-epel | epelrescue-el5 |
| 6 | dist-6E-epel | epelrescue-el6 |
| 7 | epel7 | epelrescue-el7 |

I haven't been able to access !EPEL's Koji instance from !CSL machines, so you should use a VM for the parts that require accessing their Koji.

On a VM:
   1. Install Koji from !EPEL to get the default configuration that points to their servers:%BR%\
      <code>yum install -y --disablerepo=osg\* koji</code>
   1. Get the NVR of the build:%BR%\
      <code>koji list-tagged --latest <em>EPEL_KOJI_TAG</em> <em>PACKAGE</em></code>%BR%\
      Note: this sometimes does not give you back the build; also try the search using the web interface at koji.fedoraproject.org and compare results.
   1. Download the !RPMs of the build:%BR%\
      <code>koji download-build --debuginfo <em>BUILD</em></code>
   1. Copy !RPMs for the architectures we care about back to an empty directory on your dev machine:%BR%\
      <code>scp *.i?86.rpm *.src.rpm *.noarch.rpm *x86_64.rpm <em>DEV_MACHINE</em>:<em>RPM_DIRECTORY</em></code>

On your development machine:
   1. Verify that all of the RPMs are signed:%BR%\
      <code>rpm -K <em>RPM_DIRECTORY</em>/*.rpm</code> should show the string 'gpg' for each RPM.%BR%\
      If not, STOP and sign them using the OSG RPM key -- talk to Mat
   1. Import the !RPMs themselves into the Koji system%BR%\
      <code>osg-koji import <em>RPM_DIRECTORY</em>/*.rpm</code>%BR%\
      They will not be in any tags at this point
   1. Add the package to the whitelist for our koji tag:%BR%\
      <code>osg-koji add-pkg <em>OUR_KOJI_TAG</em> <em>PACKAGE</em> --owner="<em>YOUR_KOJI_USERNAME</em>"</code>
   1. Actually tag the builds:%BR%\
      <code>osg-koji tag-pkg <em>OUR_KOJI_TAG</em> <em>BUILD</em></code>
   1. Check the Tasks tab in Koji to see if kojira has started regening the repos -- it might take a few minutes to kick in.\
      If it doesn't, do it manually (if you're doing multiple packages, save this step until you're done with all of them):%BR%\
      <verbatim>
for repo in osg-{3.1,3.2,3.3,upcoming}-el5-{build,development,testing,release,prerelease,release-build}; do
   osg-koji regen-repo --nowait $repo
done
</verbatim>
   1. Make a test VM and install the package from minefield to test that it is actually present.


---+ Removing resurrected RPMs

In case the RPM appeared back in EPEL, or we no longer need it, here's how to
remove it from the epelrescue tags so we're not overriding the EPEL version:

   1. Find out the NVR of the build:%BR%\
      <code>osg-koji list-tagged <em>OUR_KOJI_TAG</em> <em>PACKAGE</em></code>
   1. Untag the packages:%BR%\
      <code>osg-koji untag-pkg <em>OUR_KOJI_TAG</em> <em>BUILD</em></code>

---++ Why you should not use block-pkg

EPEL removes their packages by using 'koji block-pkg', which leaves the package
and the builds in the tag, but prevents it from appearing in the repos.  We
cannot do that, because blocks are inherited and this will mess up our build
repos.  This is what happened in one case:

   1. EPEL removed rpmdevtools, which is a necessary package for all builds.\
      I resurrected it into epelrescue-el5.
   1. Later, EPEL put rpmdevtools back into their repos, so it no longer needed to be in epelrescue-el5.
   1. I used block-pkg on rpmdevtools in epelrescue-el5, thinking that the package could remain tagged, but will stay out of our repos, and the EPEL package would be used instead.
   1. The block not only hid our rpmdevtools, it hid EPEL's rpmdevtools as well, preventing us from being able to build.
   1. I unblocked the rpmdevtools, and just untagged the build instead, regenerated our build repos, and we could build again.


-- Main.MatyasSelmeci - 22 Dec 2014