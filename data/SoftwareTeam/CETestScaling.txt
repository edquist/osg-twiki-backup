%META:TOPICINFO{author="EdgarFajardo" date="1415315648" format="1.1" reprev="1.1" version="1.1"}%
%TOC%
---+ Large Scale Testing of a Computing Element

---++ Introduction
==TO BE REVIEWED==
This document is intended as a general overview of the process involving the large scale testing of a Computing Element Software (CE). The examples will be given for the current scaling of the HTCondor CE, however they should be applicable for other CE Software.

---++ Sleeper Pool
==TO BE REVIEWED==
---+++ Objective of a Sleeper Pool
Be able to run "almost " resourceless (CPU, IO) jobs parallel to real production jobs.
---+++ Why a sleeper pool?
When large scale testing a CE one of the objectives is to see if new software can fully utilize all resources (cores) behind it or the bottlenecks preventing it. However to this would normally require to use those production slots. However running resourceless jobs in parallel to production jobs allows for the testing without interfering with real work.
---+++ How to setup a sleeper pool?
A sleeper pool is set up "tricking" a worker node to actually think it has more cores than it physically has. Then a configuration is done so  that jobs marked for a "sleep pool" are routed to those "sleep slots". In HTCondor it is done via tricking the Startd expression, and example of such an expression in a 32 core machien is:

<verbatim>
START = ( \
          (SlotID >= 1) && \
          (SlotID < 33) && \
          (RequiresWholeMachine =!= TRUE ) && \
          (SleepSlot =!= TRUE) && \
          (distro =?= "RHEL6" ) && \
          (CPU_Only == TRUE ) \
          ) || \
          ( (SlotID >= 33) && (distro =?= "RHEL6" ) && (SleepSlot == TRUE) )
</verbatim>

---++ Usual Topology of the tests
TO BE WRITTEN
A brief introduction to the topology involved in the tests

---++ Monitoring tools
TO BE WRITTEN
A description of how Ganglia can be used to monitor these tests in almost ad-hoc way.

---++ Load creator tools
TO BE WRITTEN
A brief description of the existing tools to create load in a CE, where to find them and how to use them.



-- Main.EdgarFajardo - 06 Nov 2014
