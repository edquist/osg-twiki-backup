%META:TOPICINFO{author="MatyasSelmeci" date="1473437625" format="1.1" reprev="1.6" version="1.6"}%
%META:TOPICPARENT{name="InternalDocs"}%
---+ Repository Management

This document attempts to record everything there is to know about repository management for the OSG.

---++ Public Repositories

We host four public-facing repositories at [[http://repo.grid.iu.edu/][repo.grid.iu.edu]]:
   * *development*: This repository is the bleeding edge.  Installing from this repository may cause the host to stop functioning, and we will not assist in undoing any damage.
   * *testing*: This repository contains software ready for testing.  If you install packages from here, they may be buggy, but we will provide limited assistance in providing a migration path to a fixed verison.
   * *release*: This repository contains software that we are willing to support and can be used by the general community.
   * *contrib*: RPMs contributed from outside the OSG.  This is not yet heavily used, so the policies aren't fixed.

Koji maintains internal copies of all the above repositories; Koji is updated immediately when build jobs complete, but the above repositories will only be updated on the schedule outlined below.

---++ Build repositories

%RED% *TODO* This section needs an update. %ENDCOLOR%

   * *Mock*: The =mock= task in =osg-build= uses the following repositories:
      * The public-facing *development* repository.
      * !CentOS, EPEL and !JPackage
      Mock will pull directly from the above repositories.  Mock will install buildsys-build and yum-priorities by default in the buildroot, then resolve !BuildRequires dependencies
   * *Koji*: The =koji= task in =osg-build= uses the [[http://koji.chtc.wisc.edu/koji/taginfo?tagID=2][el5-osg-build]]/[[http://koji.chtc.wisc.edu/koji/taginfo?tagID=14][el6-osg-build]] repo, which is the union of the following repositories:
      * The Koji internal development tag.
      * The dist-el5-build/dist-el6-build tag (consisting of the appropriate macros for %dist).
      * !CentOS, EPEL, and !JPackage
      Koji will work from its internal cache of the above repositories (downloading the packages from the source), and will not update until the build repository is regenerated (see below).  By default, Koji does a groupinstall of the build group, then resolves the !BuildRequires dependencies.

*WARNING*: We strive to keep Koji and mock consistent, but Koji's build repository may differ from mock's!  Koji is considered to be the authoritative build repository.

---++ Creation and Updates of Repositories

%RED% *TODO* This section needs an update. %ENDCOLOR%

The top line tells what we *plan* to do, while the second line tells current status

   * When RPMs are built with Koji, the kojira daemon will re-create the internal Koji development repository each time a new package is built.
   * *development* is updated once every two hours based on the Koji el5-osg-development/el6-osg-development tags.  Any package built will end up here by default.
   * *testing* is updated once every six hours based on the Koji el5-osg-testing/el6-osg-testing tags.  It is a manual action to be promoted from development to testing.
   * *release* is updated only during recognized update windows, based on the Koji el5-osg-release/el6-osg-release tags.  It is a manual action to be promoted from development to testing.

%META:TOPICMOVED{by="AlainRoy" date="1317758384" from="Documentation.RepositoryManagement" to="SoftwareTeam.RepositoryManagement"}%
