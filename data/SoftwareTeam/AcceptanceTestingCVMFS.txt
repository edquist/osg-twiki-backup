%META:TOPICINFO{author="SuchandraThapa" date="1504800451" format="1.1" reprev="1.4" version="1.4"}%
%META:TOPICPARENT{name="AcceptanceTestingHome"}%
---+ Acceptance testing for: !CVMFS

NOTE: This acceptance testing recipe was created when access to a machine with sufficient disk space to make a complete replica of OASIS was not available. 

---++ Creating a CVMFS Repository Server (Stratum 0)
   1. Disable SELinux. 
      * vi /etc/selinux/config
         * SELINUX=disabled 
   2. Check kernel version. 
      * uname -a
   3. CVMFS for EL7 requires OverlayFS (as of kernel version 4.2.x). If default kernel is <=  4.2.x, update kernel.
      * rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
      * rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
      * yum install yum-plugin-fastestmirror
      * yum --enablerepo=elrepo-kernel install kernel-ml
   4. Select updated kernel. 
      * vi /etc/default/grub
         * GRUB_DEFAULT=0
      * grub2-mkconfig -o /boot/grub2/grub.cfg
   5. Reboot system. 
   6. Check kernel version again and make sure SELinux is disabled.
      * uname -a
      * sestatus
   7. If kernel >= 4.2 and SELinux is disabled, then update system and install CVMFS server and client packages. 
      * yum update
      * yum install epel-release
      * yum install yum-plugin-priorities
      * rpm -Uvh https://repo.grid.iu.edu/osg/3.3/osg-3.3-el7-release-latest.rpm
      * yum install cvmfs cvmfs-server
   8. Configure web server and start it up. 
      * vi /etc/httpd/conf.d/cvmfs.conf
         * Listen 8000
         * <verbatim>KeepAlive On</verbatim>
      * chkconfig httpd on
      * service httpd start
   9. Make new repository.
      * cvmfs_server mkfs test.cvmfs-stratum-0.novalocal
   10. Run transaction on new repository to enable write access. 
      * cvmfs_server transaction test.cvmfs-stratum-0.novalocal
   11. Place some sample code in new repository directory and then publish it.
      * cd /cvmfs/test.cvmfs-stratum-0.novalocal
      * vi [[%ATTACHURL%/bash_pi.sh][bash_pi.sh]]
      * chmod +x bash_pi.sh
      * cvmfs_server publish test.cvmfs-stratum-0.novalocal
   12. Check repository status after publication.
      * cvmfs_server check
      * cvmfs_server tag
      * wget -qO- http://localhost:8000/cvmfs/test.cvmfs-stratum-0.novalocal/.cvmfswhitelist|cat -v 
   13. Download a copy of the CVMFS repository's public key. 
      * e.g., /etc/cvmfs/keys/test.cvmfs-stratum-0.novalocal.pub


---++ Creating a CVMFS Replica Server (Stratum 1)

   1. Repeat steps 1 though 8 in the previous section on "Creating a CVMFS Repository Server ". However, now also install mod_wsgi.
      * yum install cvmfs cvmfs-server mod_wsgi
   2. Upload a copy of the CVMFS repository's public key and place in /etc/cvmfs/keys directory. 
   3. Add replica of the repository. 
      * cvmfs_server add-replica -o root http://10.128.3.96:8000/cvmfs/test.cvmfs-stratum-0.novalocal /etc/cvmfs/keys/test.cvmfs-stratum-0.novalocal.pub
   4. Make a snapshot of the repository. 
      * cvmfs_server snapshot test.cvmfs-stratum-0.novalocal

---++ Creating a CVMFS client

   1. Update system and install CVMFS client package. 
      * yum update
      * yum install epel-release
      * yum install yum-plugin-priorities
      * rpm -Uvh https://repo.grid.iu.edu/osg/3.3/osg-3.3-el7-release-latest.rpm
      * yum install cvmfs
   2. Upload a copy of the CVMFS repository's public key and place in /etc/cvmfs/keys directory.
   3. Edit fuse configuration.
      * vi /etc/fuse.conf
         * user_allow_other
   4. Edit autofs configuration and restart service.
      * vi /etc/auto.master
         * /cvmfs /etc/auto.cvmfs
      * service autofs restart
   5. Edit cvmfs configuration to point to replica server. 
      * vi /etc/cvmfs/default.local
         * CVMFS_SERVER_URL="http://10.128.3.97:8000/cvmfs/@fqrn@"
         * CVMFS_REPOSITORIES="test.cvmfs-stratum-0.novalocal"
         * CVMFS_HTTP_PROXY=DIRECT
   6. Remove OSG CVMFS configuration file. 
      * rm /etc/cvmfs/default.d/60-osg.conf
   7. Run CVMFS config probe.
      * cvmfs_config probe test.cvmfs-stratum-0.novalocal
   8. Check CVMFS config status.
      * cvmfs_config stat -v test.cvmfs-stratum-0.novalocal
   9. Execute sample code published to repository from client. 
      * /cvmfs/test.cvmfs-stratum-0.novalocal/bash_pi.sh -b 8 -r 5 -s 10000


---++ Creating an OASIS client

   1. Update system and install CVMFS client package. 
      * yum update
      * yum install epel-release
      * yum install yum-plugin-priorities
      * rpm -Uvh https://repo.grid.iu.edu/osg/3.3/osg-3.3-el7-release-latest.rpm
      * yum install osg-oasis
   2. Verify latest versions of  cvmfs, cvmfs-config-osg, and cvmfs-x509-helper have been installed.
   3. Edit fuse configuration.
      * vi /etc/fuse.conf
         * user_allow_other
   4. Edit cvmfs configuration to point to replica server. 
      * vi /etc/cvmfs/default.local
         * CVMFS_REPOSITORIES="`echo $((echo oasis.opensciencegrid.org;echo cms.cern.ch;ls /cvmfs)|sort -u)|tr ' ' ,`"
         * CVMFS_QUOTA_LIMIT=20000
         * CVMFS_HTTP_PROXY=DIRECT
   5. Edit autofs configuration and restart service.
      * vi /etc/auto.master
         * /cvmfs /etc/auto.cvmfs
      * service autofs restart
   6. Run CVMFS config probe.
      * cvmfs_config probe 
   8. Check CVMFS config status.
      * cvmfs_config stat -v oasis.opensciencegrid.org



---++ Additional Documentation
   * [[https://cvmfs.readthedocs.io/en/stable/][CERN's CVMFS Documentation]]
   * [[https://twiki.grid.iu.edu/bin/view/Documentation/Release3/InstallCvmfsStratum1][OSG's CVMFS Replica Server (Stratum 1) Documentation]]
   * [[https://twiki.grid.iu.edu/bin/view/Documentation/Release3/InstallCvmfs][OSG's CVMFS Client Documentation]]
   * [[https://twiki.grid.iu.edu/bin/view/Documentation/Release3/OasisExternalRepositories][OSG's OASIS Documentation]]


   * [[%ATTACHURL%/bash_pi.sh][bash_pi.sh]]: A bash script that uses a simple Monte Carlo method to estimate the value of Pi

%META:FILEATTACHMENT{name="bash_pi.sh" attachment="bash_pi.sh" attr="" comment="A bash script that uses a simple Monte Carlo method to estimate the value of Pi" date="1491267000" path="bash_pi.sh" size="1756" stream="bash_pi.sh" tmpFilename="/usr/tmp/CGItemp16480" user="MartyKandes" version="1"}%
