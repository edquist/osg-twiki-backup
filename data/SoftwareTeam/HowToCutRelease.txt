%META:TOPICINFO{author="MatyasSelmeci" date="1329253227" format="1.1" reprev="1.15" version="1.15"}%
%META:TOPICPARENT{name="InternalDocs"}%
<!--
   * Set VERSION = %URLPARAM{"version"}%
-->

---+ How to Cut a Release

%RED%<b>This document is a work in progress.</b>%ENDCOLOR%

It's clear that a lot of things can and should be scripts to simplify the process. Right now, it documents the process as we think it should be, and we can script it later when we know the process is correct.

This document doesn't discuss the policy for deciding what goes into a release. [[SoftwareTeam.ReleasePolicy][The release policy is discussed elsewhere]].

---++ Step 0: CA Certificates

If this release involves an update to the CA certificates, please have a UW-Madison team member update the LIGO-specific RPM repository. [[CACertsUpdateForLIGO][Instructions on updating the CA certificates in the LIGO repository]]

---++ Step 1: Pick the version number

This page will help you get the various commands exactly right. To do this, enter the exact version number (such as %RED%3.0.5%ENDCOLOR%) and click submit. If you do not do this, the commands below will be missing essential text.

<form action="https://twiki.grid.iu.edu/bin/view/SoftwareTeam/HowToCutRelease">
Version: <input type="text" name="version" size="10" value="%URLPARAM{"version"}%"/>
<input type="submit"/>
</form>

---++ Step 2: Create two clean VMs

Make two VMs, probably in !FermiCloud, so you can do testing. One of them will be used to test a fresh installation on a clean machine (Step 5 below), while the other will be used to test an update from the current release (Step 6 below).

---++ Step 3: Update the osg-version RPM

Edit the osg-version RPM's spec file to update the version number to %VERSION%. Build it in koji and push it to testing:

<pre class="screen">
osg-build koji osg-version
koji tag-pkg el5-osg-testing osg-version-%VERSION%-1.osg.el5
</pre>

---++ Step 4: Populate the osg-prerelease repository

Make sure that the pre-release is empty:
<pre class="screen">
koji list-tagged --quiet el5-osg-prerelease
</pre>
should print nothing.

Populate the pre-release. This requires you to understand which packages should be in the release. This is a question of [[ReleasePolicy][policy]]. If you do not know which packages should be in the release, talk to the OSG Software Coordinator. 
<pre class="screen">
koji-tag-diff el5-osg-testing el5-osg-release > pkgs-to-release
# %RED%edit%ENDCOLOR% pkgs-to-release to remove packages not intended for this release
xargs -a pkgs-to-release koji tag-pkg el5-osg-prerelease
koji regen-repo el5-osg-prerelease
</pre>

---++ Step 5: Test a fresh install in VM #1 

You will do a fresh installation. The =osg-test= command below will enable the =osg-prerelease= repository, and the =osg= repository will already be enabled. So packages will be taken from the =osg= repository unless there is a newer version in the =osg-prerelease= repository. 

<pre class="screen">
wget --quiet http://vdt.cs.wisc.edu/native/bootstrap-osg-test
chmod 0755 bootstrap-osg-test
./bootstrap-osg-test testing
osg-test -vai osg-ce-condor -r osg-prerelease
</pre>

All tests should pass. If any tests fail, discuss with the OSG Software Coordinator.

---++ Step 6: Test update: in VM #2 

Now you will do an installation just from the =osg= repository, then update it from the =osg-prerelease= repository. This is an important double-check, because we want to know that updates work smoothly. Note that the =osg-test= command skips the installation.

<pre class="screen">
wget --quiet http://vdt.cs.wisc.edu/native/bootstrap-osg-test
chmod 0755 bootstrap-osg-test
./bootstrap-osg-test testing
yum install osg-ce-condor
yum update --enablerepo=osg-prerelease
osg-test -va
</pre>

All tests should pass. If any tests fail, discuss with the OSG Software Coordinator.

---++ Step 7: Wait

Wait for clearance. The OSG Software Coordinator (in consultation with the Software Team and any testers) need to sign off on the update before it is released.

---++ Step 8: Push from pre-release to release: 
<pre class="screen">
koji edit-tag --unlock el5-osg-release
koji list-tagged --quiet el5-osg-prerelease | awk '{print $1}' > move-to-release # Can't pipe to xargs because it prompts you for your certificate passphrase
xargs --arg-file move-to-release koji move-pkg el5-osg-prerelease el5-osg-release
</pre>

---++ Step 9: Create a new repo for the new release.

Create a new repo just for this release. This will normally not be seen by users, but can be used by them if necessary. It can also be used by us for testing purposes. <pre class="screen">
koji clone-tag el5-osg-release el5-osg-release-%VERSION%
</pre>

---++ Step 10: Lock the repositories

Lock repositories so they can't be messed with. We use edit-tag instead of lock-tag because lock-tag doesn't seem to work.

<pre class="screen">
koji edit-tag --lock el5-osg-release
koji edit-tag --lock el5-osg-release-%VERSION%
</pre>

---++ Step 11: Regenerate the repositories

<pre class="screen">
koji regen-repo el5-osg-release-%VERSION% --nowait
koji regen-repo el5-osg-release --nowait
</pre>

---++ Step 12: Write release notes

   1. Come up with a nice table of updated packages that you can copy and paste into the release notes twiki page. <pre class="screen">
awk '{ print "   * [[https://koji-hub.batlab.org/koji/search?match=glob&type=build&terms=" $1 "][" $1 "]]"}'  move-to-release > release-note-packages
</pre>
   1. Come up with the architecture-neutral (i.e. without _i386_, _x86_64, etc in the name) list of updated RPMs so that site administrators know the set of RPMs to "yum update" if they want to do a limited update: <pre class="screen">
xargs --arg-file move-to-release koji buildinfo | fgrep "/mnt" | xargs -n 1 basename | perl -p -e "s/\.(noarch|src|i386|x86_64)\.rpm//" | sort -u > release-note-rpms
</pre>
   1. Write [[Documentation.Release3.ReleaseNotes][release notes]]. Use the package table and RPM list you created in the previous two steps.

---++ Step 13: Update the info we track for the releases

   1. Copy the list of updated packages. Change the user name and host name as appropriate. <pre class="screen">
scp move-to-release %RED%roy@library.cs.wisc.edu%ENDCOLOR%:/p/vdt/public/html/release-info/%VERSION%-updated.txt
</pre>
   1. Find the full list of packages in the new release and copy the list. <pre class="screen">
koji list-tagged --quiet --latest el5-osg-release | awk '{print $1}' > new-packages
scp new-packages %RED%roy@library.cs.wisc.edu%ENDCOLOR%:/p/vdt/public/html/release-info/%VERSION%-packages.txt
</pre>
   1. Find the full list of new RPMs in the new release and copy the list. <pre class="screen">
xargs --arg-file new-packages koji buildinfo | fgrep "/mnt" | xargs -n 1 basename | sort > new-rpms
scp new-rpms %RED%roy@library.cs.wisc.edu%ENDCOLOR%:/p/vdt/public/html/release-info/%VERSION%-rpms.txt
</pre>

---++ Step 14: Announce the release

<ol>
<li>Write an announcement. Here is a sample you can edit:<div style="background: #E0F0E0; border: 1px solid gray; padding-right: 2px; padding-left: 2px; padding-top: .5em; padding-bottom: .5em;">
Subject: OSG Software version %VERSION%

Hello,

I'm pleased to announced OSG Software version %VERSION%. This is the new OSG Software distributed via RPMs for Scientific Linux 5, !CentOS 5, and Red Hat Enterprise Linux 5. The changes in this release include changes that affect the %RED%SET-OF-METAPACKAGES (client, compute element, etc...)%ENDCOLOR%.

   1. Major change 1
   1. Major change 2
   1. Major change 3

Release notes and pointers to documentation can be found at:
https://twiki.grid.iu.edu/bin/view/Documentation/Release3/%RED%Release304%ENDCOLOR%

You can ask support via the usual channels. We look forward to your feedback on this new release. 

-alain
<br>--------------------------------------<br>
Alain Roy<br>
Open Science Grid Software Coordinator<br>
roy@cs.wisc.edu<br>
http://opensciencegrid.org
</div>
<li>Send this announcement to =vdt-discuss@opensciencegrid.org=.
<li>Ask the GOC to distribute this announcement by [[https://ticket.grid.iu.edu/goc/other][opening a ticket]].
</ol>



<!-- vim:ft=twiki
-->
