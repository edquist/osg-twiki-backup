%META:TOPICINFO{author="X509_2fDC_3dorg_2fDC_3ddoegrids_2fOU_3dPeople_2fCN_3dAlain_20Roy_20424511" date="1298065079" format="1.1" reprev="1.3" version="1.3"}%
---+ Alternative Packaging Investigation

---++ Goal of this document

We want to answer the following question: 

<blockquote>
Does it make sense to implement the VDT's native packaging independently of our Pacman packaging and on a limited set of platforms? 
</blockquote>

---++ Background

Today we are implementing native packages as an adjunct to Pacman packaging: we're augmenting our existing builds to produce binary native packages (primarily RPMs). This keeps our Pacman and RPM packaging in sync, but it results in packages that are suboptimal. Not only that, but we're making slow progress--we want to consider if we should be using a different approach. By decoupling our native packaging from our Pacman packaging can we get results done in a similar time frame or faster? Will they be more acceptable to the community?

Part of our reasoning is that we see the writing on the wall in various way:

   * More and more, people are asking for packages that "just work" with their existing systems. 
   * Many of the packages that are in the VDT are either in a community-accepted software repository (Fedora, EPEL, Debian...) or is likely to be there within the next year. 

---++ Outline of approach

Proposal: The VDT should only package software when it is essential to do so. That is, we should package software when one of the following is true:
   1. The software is not already packaged; or 
   1. The software is packaged but needs significant changes to be acceptable to our users. (Different version, extra patches, etc...)

The VDT will maintain a software repository (or set of repositories) that contain the set of software we have to package or repackage. These will depend on existing high-quality software packages maintained in software repositories external to the VDT. For example:

<img src="%ATTACHURLPATH%/packaging1.gif" alt="packaging1.gif" width='431' height='274' />    

In this picture, there are three points to be made:

   1. Much of the software we rely on comes from an external software repository. (Or perhaps multiple repositories, if appropriate). In the diagram, these are Packages 1 to N on the right.
   1. The VDT has created some packages unique to the VDT. In the diagram, these are the "VDT Packages A to C" on the left.
   1. The VDT has re-packaged a couple of packages that come from the external software repository, perhaps due to version or patching differences. The goal is to keep this category as small as possible. 

---++ Implications of this approach

(Needs to be fleshed out. This is a hasty sketch.)

   1. Not in sync with Pacman
   1. VDT team has less control over packaging. (But can we push to external repos?)
   1. VDT team can focus less on packaging and more on configuration, testing, etc. 
   1. More versions of software "in the wild" to deal with. For instance, if Red Hat upgrades to new version of MySQL, what's the implication for us?
   1. Complexity if we support multiple OSes: Fedora/EPEL don't have same external packages as Debian Squeeze. 

---++ Open Questions

(For now, answers can be put here before they are neatly integrated into the rest of the document. 

Q1: What is EMI doing? Alain believes they might be pushing a lot of software to external repositories. <br>

Q2: What might we rely on today in EPEL/Fedora/Squeeze? In the near future? How good are they? <br>

Q3: Can we technically implement this? That is, can we repackage some software and have this scheme work? <br>

Q4: What changes are needed to Globus such that we can stop patching it? <br>

Q5: What OS are sites using? What set of OSes can we reasonably limit ourselves to? If we only supply RHEL, wh's affected?

Q6: How can we implement the repackaging of some RPMs? Yum priorities? Something else?


%META:FILEATTACHMENT{name="packaging1.gif" attachment="packaging1.gif" attr="h" comment="" date="1298061638" path="packaging1.gif" size="11166" stream="packaging1.gif" tmpFilename="/usr/tmp/CGItemp15303" user="X509_2fDC_3dorg_2fDC_3ddoegrids_2fOU_3dPeople_2fCN_3dAlain_20Roy_20424511" version="1"}%
