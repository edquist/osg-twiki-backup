%META:TOPICINFO{author="MatyasSelmeci" date="1378414679" format="1.1" reprev="1.21" version="1.21"}%
---+ Support New OSG Versions — Technical Details

Currently, this page serves as a technical design document for Software team tasks that are part of [[SP021_NewVersions][the project]].


---++ Documentation

The [[Documentation.Release3.WebHome][Release3]] section of the OSG TWiki will continue to be the home for OSG 3.x documentation. When there are differences between release series, they will be described inline when relatively small. For more significant differences, for example between HDFS 0.20 in OSG 3.1 and HDFS 2.0 in OSG 3.2, there will be separate Release3 pages for each version with appropriate labeling on the home page and prominent cross-links between pages.


---++ Tarballs and OASIS

Currently, the client tarballs are organized in directories by full version number (e.g., 3.1.21). With multiple release series, there could be many versions to sort through. So, the plan is to add a layer of directories for major release series.

The old and new directory structures are shown below, starting in the tarball directory of the IU-based repository site, http://repo.grid.iu.edu/tarball-install/

<table>
<tr style="vertical-align: top;"><td>
Old:
<pre class="screen" style="padding: 1ex;">
3.1.19/osg-client-3.1.19-1.el5.i386.tar.gz
3.1.19/osg-client-3.1.19-1.el5.x86_64.tar.gz
3.1.19/osg-client-3.1.19-1.el6.i386.tar.gz
3.1.19/osg-client-3.1.19-1.el6.x86_64.tar.gz
3.1.19/osg-wn-client-3.1.19-1.el5.i386.tar.gz
3.1.19/osg-wn-client-3.1.19-1.el5.x86_64.tar.gz
3.1.19/osg-wn-client-3.1.19-1.el6.i386.tar.gz
3.1.19/osg-wn-client-3.1.19-1.el6.x86_64.tar.gz
3.1.20/*
3.1.21/*
</pre>
</td>
<td style="width: 3em;"></td>
<td>
New:
<pre class="screen" style="padding: 1ex;">
<span style="color: #F60;">3.1/</span>3.1.19/osg-client-3.1.19-1.el5.i386.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-client-3.1.19-1.el5.x86_64.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-client-3.1.19-1.el6.i386.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-client-3.1.19-1.el6.x86_64.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-wn-client-3.1.19-1.el5.i386.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-wn-client-3.1.19-1.el5.x86_64.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-wn-client-3.1.19-1.el6.i386.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-wn-client-3.1.19-1.el6.x86_64.tar.gz
<span style="color: #F60;">3.1/</span>3.1.20/*
<span style="color: #F60;">3.1/</span>3.1.21/*
<span style="color: #12F;">3.2/</span>3.2.0/* (same tarball names)
</pre>
</td></tr></table>

Also, the current top-level directory contains a set of convenience symlinks:

<pre class="screen">
osg-client-latest.el5.i386.tar.gz       -> 3.1.21/osg-client-3.1.21-1.el5.i386.tar.gz
osg-client-latest.el5.x86_64.tar.gz     -> 3.1.21/osg-client-3.1.21-1.el5.x86_64.tar.gz
osg-client-latest.el6.i386.tar.gz       -> 3.1.21/osg-client-3.1.21-1.el6.i386.tar.gz
osg-client-latest.el6.x86_64.tar.gz     -> 3.1.21/osg-client-3.1.21-1.el6.x86_64.tar.gz
osg-wn-client-latest.el5.i386.tar.gz    -> 3.1.21/osg-wn-client-3.1.21-1.el5.i386.tar.gz
osg-wn-client-latest.el5.x86_64.tar.gz  -> 3.1.21/osg-wn-client-3.1.21-1.el5.x86_64.tar.gz
osg-wn-client-latest.el6.i386.tar.gz    -> 3.1.21/osg-wn-client-3.1.21-1.el6.i386.tar.gz
osg-wn-client-latest.el6.x86_64.tar.gz  -> 3.1.21/osg-wn-client-3.1.21-1.el6.x86_64.tar.gz
</pre>

Proposed changes:
   * Deprecate the symlinks but leave them in place (for now), pointing to the correct paths
   * Add a README file to the directory to explain the tarballs, refer to the TWiki, and say that the old links are deprecated
   * Add new convenience symlinks *within* the series directories

The new symlinks will look like this:

<pre class="screen">
<span style="color: #12F;"># In http://repo.grid.iu.edu/tarball-install/</span><span style="color: #F60;">3.1/</span>
osg-client-latest.el5.i386.tar.gz       -> 3.1.21/osg-client-3.1.21-1.el5.i386.tar.gz
osg-client-latest.el5.x86_64.tar.gz     -> 3.1.21/osg-client-3.1.21-1.el5.x86_64.tar.gz
osg-client-latest.el6.i386.tar.gz       -> 3.1.21/osg-client-3.1.21-1.el6.i386.tar.gz
osg-client-latest.el6.x86_64.tar.gz     -> 3.1.21/osg-client-3.1.21-1.el6.x86_64.tar.gz
osg-wn-client-latest.el5.i386.tar.gz    -> 3.1.21/osg-wn-client-3.1.21-1.el5.i386.tar.gz
osg-wn-client-latest.el5.x86_64.tar.gz  -> 3.1.21/osg-wn-client-3.1.21-1.el5.x86_64.tar.gz
osg-wn-client-latest.el6.i386.tar.gz    -> 3.1.21/osg-wn-client-3.1.21-1.el6.i386.tar.gz
osg-wn-client-latest.el6.x86_64.tar.gz  -> 3.1.21/osg-wn-client-3.1.21-1.el6.x86_64.tar.gz

<span style="color: #12F;"># In http://repo.grid.iu.edu/tarball-install/</span><span style="color: #F60;">3.2/</span>
osg-client-latest.el5.i386.tar.gz       -> 3.2.0/osg-client-3.2.0-1.el5.i386.tar.gz
osg-client-latest.el5.x86_64.tar.gz     -> 3.2.0/osg-client-3.2.0-1.el5.x86_64.tar.gz
osg-client-latest.el6.i386.tar.gz       -> 3.2.0/osg-client-3.2.0-1.el6.i386.tar.gz
osg-client-latest.el6.x86_64.tar.gz     -> 3.2.0/osg-client-3.2.0-1.el6.x86_64.tar.gz
osg-wn-client-latest.el5.i386.tar.gz    -> 3.2.0/osg-wn-client-3.2.0-1.el5.i386.tar.gz
osg-wn-client-latest.el5.x86_64.tar.gz  -> 3.2.0/osg-wn-client-3.2.0-1.el5.x86_64.tar.gz
osg-wn-client-latest.el6.i386.tar.gz    -> 3.2.0/osg-wn-client-3.2.0-1.el6.i386.tar.gz
osg-wn-client-latest.el6.x86_64.tar.gz  -> 3.2.0/osg-wn-client-3.2.0-1.el6.x86_64.tar.gz
</pre>

---+++ Implementation: Tarball Downloads

   * Write a script to make the new directory structure and move existing tarballs into it
   * Change the script that creates symlinks in =tarball-install= (script is in /root; we can access it, but need to coordinate with GOC, because it may reside elsewhere)
      * Change existing symlinks to refer to new directory structure
      * Add new set of top-level symlinks per major release

Deployment process (ITB and production):

   1. Run script to make new dirs and move tarballs
   1. Run script to set up symlinks

%RED%TODO: How do new directories get created with future releases and series?%ENDCOLOR%

---+++ Proposed Structure: OASIS Installations

OASIS installations have not been fully implemented yet, so there is no "Old" layout to migrate from. But in [[http://jira.opensciencegrid.org/SOFTWARE-1126][SOFTWARE-1126]], there is a proposed layout that we will modify before the initial release.

<table>
<tr style="vertical-align: top;"><td>
Original Proposal:
<pre class="screen" style="padding: 1ex;">
osg-wn-client/3.1.21/el5-i386/
osg-wn-client/3.1.21/el5-x86_64/
osg-wn-client/3.1.21/el6-i386/
osg-wn-client/3.1.21/el6-x86_64/
osg-wn-client/current -&gt; 3.1.21
</pre>
</td>
<td style="width: 3em;"></td>
<td>
New Proposal:
<pre class="screen" style="padding: 1ex;">
osg-wn-client/<span style="color: #F60;">3.1/</span>3.1.21/el5-i386/
osg-wn-client/<span style="color: #F60;">3.1/</span>3.1.21/el5-x86_64/
osg-wn-client/<span style="color: #F60;">3.1/</span>3.1.21/el6-i386/
osg-wn-client/<span style="color: #F60;">3.1/</span>3.1.21/el6-x86_64/
osg-wn-client/<span style="color: #F60;">3.1/</span>current -&gt; 3.1.21
osg-wn-client/<span style="color: #12F;">3.2/</span>3.2.0/*/
osg-wn-client/<span style="color: #12F;">3.2/</span>current -&gt; 3.2.0
osg-wn-client/<span style="color: #12F;">local/</span> -&gt; $OASIS_WN_CLIENT
</pre>
</td></tr></table>

In the above table, =$OASIS_WN_CLIENT= will be a CVMFS configuration variable.  For the version of oasis-config distributed with OSG version 3.X.Y, this will default to the value of =3.2/current= (this forces the admin to take some minimal explicit action to change between release series).  Having an admin-managed config variable will also allow admins to manage the version cleanly with puppet.

---++ Subversion

Most of our Subversion repository structure will remain as is; only the packaging area must change. The basic plan is to use the trunk for the current release series (e.g., 3.2) and have branches for all other major release series (3.1, upcoming, etc.).

The old and new directory structures are shown below, starting at the Subversion directory for packaging: <pre class="screen">$SVN/native/redhat</pre>

<table>
<tr style="vertical-align: top;"><td>
Old:
<pre class="screen" style="padding: 1ex;">
branches
branches/<em style="color: gray;">developer-branches</em>


tags
trunk
<span style="color: #F60;">upcoming</span>
</pre></td><td style="width: 3em;"></td><td>
New:
<pre class="screen" style="padding: 1ex;">
branches
branches/<em style="color: gray;">developer-branches</em>
<span style="color: #F60;">branches/osg-3.1</span>
<span style="color: #F60;">branches/upcoming</span>
tags
trunk

</pre>
</td></tr></table>

---+++ Implementation

Following a change to the meaning of =trunk=, users can re-base an existing checkout of =trunk= for OLD development by using the =svn switch= command.

Implementation notes:

   * To simplify, we will schedule this work *after* the Java packages have been moved from current =upcoming= back to current =trunk= (i.e., 3.1)
   * We will schedule Subversion changes in advance, to avoid surprises and reduce risk of damaged workspaces
   * Ideally, developers will commit unsaved changes to Subversion before the changes
   * =osg-build= will need some small changes to handle the change in name to =trunk=; see the verify_correct_branch() function in osgbuild/svn.py
   * We will need to update OSG Software developer documentation a little bit


---++ Yum

---+++ Yum Repository Structure

This is a chance to fix the structure of our Yum repository directories, to make them more closely resemble other repositories like Scientific Linux. That is, the structure starts with the name of the repository itself (=osg=) and then the release series (=3.1=, =3.2=, =upcoming=). Within each release series, the structure will remain similar to the current one, with directory layers for operating system (currently =el5= and =el6=) and the repository name (but without the now-redundant =osg-= prefix).

The old and new directory structures are shown below, starting in the tarball directory of the IU-based repository site, http://repo.grid.iu.edu/

<table><tr style="vertical-align: top;"><td>
Old:
<pre class="screen" style="padding: 1ex;">
3.0/
3.0/el5/
3.0/el5/osg-contrib
3.0/el5/osg-development
3.0/el5/osg-release
3.0/el5/osg-testing
<span style="color: #F60;">3.0/el5/osg-upcoming-development
3.0/el5/osg-upcoming-release
3.0/el5/osg-upcoming-testing</span>
3.0/el6/... (same as el5)
</pre></td><td style="width: 3em;"></td><td>
New:
<pre class="screen" style="padding: 1ex;">
osg/3.1/
osg/3.1/el5/
osg/3.1/el5/contrib
osg/3.1/el5/development
osg/3.1/el5/release
osg/3.1/el5/testing
osg/3.1/el6/... (same as el5)
<span style="color: #12F;">osg/3.2/
osg/3.2/el5/
osg/3.2/el5/contrib
osg/3.2/el5/development
osg/3.2/el5/release
osg/3.2/el5/testing
osg/3.2/el6/... (same as el5)</span>
<span style="color: #F60;">osg/upcoming/
osg/upcoming/el5/
osg/upcoming/el5/development
osg/upcoming/el5/release
osg/upcoming/el5/testing
osg/upcoming/el6/... (same as el5)</span>
</pre></td></tr></table>

To ease the transition, we will provide a set of compatibility symlinks from the old structure to the new:

<pre class="screen" style="padding: 1ex;">
3.0/
3.0/el5/
3.0/el5/osg-contrib               -&gt; ../../osg/3.1/el5/contrib
3.0/el5/osg-development           -&gt; ../../osg/3.1/el5/development
3.0/el5/osg-release               -&gt; ../../osg/3.1/el5/release
3.0/el5/osg-testing               -&gt; ../../osg/3.1/el5/testing
3.0/el5/osg-upcoming-development  -&gt; ../../osg/upcoming/el5/development
3.0/el5/osg-upcoming-release      -&gt; ../../osg/upcoming/el5/release
3.0/el5/osg-upcoming-testing      -&gt; ../../osg/upcoming/el5/testing
3.0/el6/... (same as el5)
</pre>

Finally, there are the convenience symlinks that we provide for the latest version of osg-release. Currently, we have:

<pre class="screen" style="padding: 1ex;">
osg-el5-release-latest.rpm -> 3.0/el5/osg-release/x86_64/osg-release-xxxxx.rpm
osg-el6-release-latest.rpm -> 3.0/el6/osg-release/x86_64/osg-release-xxxxx.rpm
</pre>

The proposal is to:
   * Deprecate and preserve the existing symlinks, but use the new paths
   * Add a set of “latest” symlinks to *each* numbered release series directory (e.g., for =3.1= and =3.2= but not =upcoming=)

<pre class="screen" style="padding: 1ex;">
<span style="color: #12F;"># In http://repo.grid.iu.edu/</span>
osg-el5-release-latest.rpm -> <span style="color: #F60;">osg/3.1/el5/release</span>/x86_64/osg-release-xxxxx.rpm
osg-el6-release-latest.rpm -> <span style="color: #F60;">osg/3.1/el6/release</span>/x86_64/osg-release-xxxxx.rpm

<span style="color: #12F;"># In http://repo.grid.iu.edu/</span><span style="color: #F60;">osg/3.1/</span>
osg-3.1-el5-release-latest.rpm -> el5/release/x86_64/osg-release-xxxxx.rpm
osg-3.1-el6-release-latest.rpm -> el6/release/x86_64/osg-release-xxxxx.rpm

<span style="color: #12F;"># In http://repo.grid.iu.edu/</span><span style="color: #F60;">osg/3.2/</span>
osg-3.2-el5-release-latest.rpm -> el5/release/x86_64/osg-release-xxxxx.rpm
osg-3.2-el6-release-latest.rpm -> el6/release/x86_64/osg-release-xxxxx.rpm
</pre>

---+++ Yum Repository Definitions (*.repo)

Mostly, the definitions of the =*.repo= files will remain unchanged for each OSG release series (3.1, 3.2, …), except that the description will be updated to include the release series, and the paths in the =baseurl= and =mirrorlist= attributes will be updated to match the new repository structure.

Importantly, we will *NOT* change the names of the repositories from one release series to the next, in principle making it easier to upgrade from OSG 3.1 to OSG 3.2. The current =osg-release= RPM has all =.repo= files marked as =%config=, so there are two upgrade options we could pursue: (a) have people =rvm -Uvh= on the 3.2 release RPM, then merge in info from =.rpmnew= files as needed (potentially leaving a mix of 3.1 and 3.2 repos), or (b) have people =rpm -e osg-release=, possibly leaving behind =.rpmsave= files, then install the new =osg-release= (3.2) and merge in customizations (the latter sounds better).

For example, here is a fragment from the current =osg-el6.repo= file:

<pre class="screen">
[osg]
<span style="color: #F60;">name=OSG Software for Enterprise Linux 6 - $basearch</span>
<span style="color: #F60;">#baseurl=http://repo.grid.iu.edu/3.0/el6/osg-release/$basearch</span>
<span style="color: #F60;">mirrorlist=http://repo.grid.iu.edu/mirror/3.0/el6/osg-release/$basearch</span>
failovermethod=priority
priority=98
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-OSG
consider_as_osg=yes
</pre>

New:

<pre class="screen">
[osg]
<span style="color: #F60;">name=OSG Software 3.1 for Enterprise Linux 6 - $basearch</span>
<span style="color: #F60;">#baseurl=http://repo.grid.iu.edu/osg/3.1/el6/release/$basearch</span>
<span style="color: #F60;">mirrorlist=http://repo.grid.iu.edu/mirror/osg/3.1/el6/release/$basearch</span>
failovermethod=priority
priority=98
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-OSG
consider_as_osg=yes
</pre>

---+++ Implementation

   * Create a new version of Soichi’s mash system that installs packages from koji into the new repositories
      * The Software team will offer to help with this task
   * Create a script to make and populate the new directories on a =repo*.grid.iu.edu= machine
      a. Create new directory structure
      a. Run mash script to populate new areas (or should this step by done manually?)
   * Create a script to change =3.0= directories to symlinks
      a. Move old =3.0= directory to archival path
      a. Make symlinks at old =3.0= directory paths
   * Create a deployment rollback script, at least for the =3.0= directories (the new stuff should be harmless and easily deleted)
      a. Delete =3.0= directory structure
      a. Move old =3.0= directory back in place

%RED%Need to identify all OSG TWiki documents that will need to change.%ENDCOLOR%

Testing the new repositories:
   * Do lots of manual and automated testing using the new =*.repo= files from osg-release-itb

---+++ Other Consequences

We would like the ability to run automated tests on different release series, so changing the Yum structure implies some eventual changes to osg-test:

   * Make a configuration option to pick OSG version to test (e.g., 3.1 vs. 3.2)
   * Update bootstrap-osg-test to use the correct URLs and to take an OSG version
   * Change reporting to include release series (3.1, 3.2, Upcoming)

Also, we should change OSG Software internal documentation to reflect the new layout.


---++ Koji

At very least, we would need to add koji tags to separate 3.1 from 3.2 builds. Given that, it seems worthwhile to overhaul the tags to parallel the yum repository structure.

---+++ Tags

<table><tr style="vertical-align: top;"><td>
Old:
<pre class="screen" style="padding: 1ex;">
<span style="color: #F60;">el5-osg</span>-contrib
<span style="color: #F60;">el5-osg</span>-development
<span style="color: #F60;">el5-osg</span>-prerelease
<span style="color: #F60;">el5-osg</span>-release
<span style="color: #F60;">el5-osg</span>-testing
<span style="color: #F60;">el6-osg</span>-* (same as el5)



<span style="color: #F60;">el*-osg-upcoming</span>-* (same as el5, no contrib)

<span style="color: #F60;">el*-osg</span>-release-<i>VERSION</i>

<span style="color: #F60;">el*-osg-upcoming</span>-release-<i>VERSION</i>
</pre></td><td style="width: 3em;"></td><td>
New:
<pre class="screen" style="padding: 1ex;">
<span style="color: #F60;">osg-3.1-el5</span>-contrib
<span style="color: #F60;">osg-3.1-el5</span>-development
<span style="color: #F60;">osg-3.1-el5</span>-prerelease
<span style="color: #F60;">osg-3.1-el5</span>-release
<span style="color: #F60;">osg-3.1-el5</span>-testing
<span style="color: #F60;">osg-3.1-el6</span>-* (same as el5)

<span style="color: #12F;">osg-3.2-el*-*</span> (same as 3.1)

<span style="color: #F60;">osg-upcoming-el*</span>-* (same as 3.1, no contrib)

<span style="color: #F60;">osg-3.1-el*</span>-release-<i>VERSION</i>
<span style="color: #12F;">osg-3.2-el*-release-<i>VERSION</i></span>
<span style="color: #F60;">osg-upcoming-el*</span>-release-<i>VERSION</i>
</pre></td></tr></table>

---+++ Build Targets

When requesting a build, osg-build provides (conceptually) a bundle of source code and a build target, where the target associates (1) an internal repository to use to satisfy build dependencies with (2) the Koji tag to apply to the resultant build products. The plan is to expand the set of targets to include series-specific ones, plus the default ones which correspond to trunk builds, and reorder the name components to match the new Koji tags.

<table><tr style="vertical-align: top;"><td>
<h4>Old</h4>
%TABLE{ sort="off" valign="top" }%
| *Target* | *Build Tag* | *Destination Tag* |
| =el5-osg= | =el5-osg-build= | =el5-osg-development= |
| =el6-osg= | =el6-osg-build= | =el6-osg-development= |
| =el5-osg-upcoming= | =el5-osg-upcoming-build= | =el5-osg-upcoming-development= |
| =el6-osg-upcoming= | =el6-osg-upcoming-build= | =el6-osg-upcoming-development= |
</td><td style="width: 3em;"></td><td>
<h4>New</h4>
%TABLE{ sort="off" valign="top" }%
| *Target* | *Build Tag* | *Destination Tag* |
| =osg-el5= | =osg-3.1-el5-build= | =osg-3.1-el5-development= |
| =osg-el6= | =osg-3.1-el6-build= | =osg-3.1-el6-development= |
| =osg-3.1-el5= | =osg-3.1-el5-build= | =osg-3.1-el5-development= |
| =osg-3.1-el6= | =osg-3.1-el6-build= | =osg-3.1-el6-development= |
| =osg-3.2-el5= | =osg-3.2-el5-build= | =osg-3.2-el5-development= |
| =osg-3.2-el6= | =osg-3.2-el6-build= | =osg-3.2-el6-development= |
| =osg-upcoming-el5= | =osg-upcoming-el5-build= | =osg-upcoming-el5-development= |
| =osg-upcoming-el6= | =osg-upcoming-el6-build= | =osg-upcoming-el6-development= |
</td></tr></table>

Long term, the =osg-el*= targets will map to the build and destination tags for the current series (e.g., 3.1 today, 3.2 next, etc.). The process for updating the targets is in the Implementation section below.

---+++ osg-build

The =osg-build= script already has a =--repo= option to select the correct destination repository (family). We will add to the list of accepted values and define the semantics a bit differently to support many release series automatically (i.e., without code changes for each new series). Also, for source-code repository builds =osg-build= will default to the correct setting of the =--repo= option, based on the directory within the source code repository.

<table><tr style="vertical-align: top;"><td>
<h4>Old</h4>
%TABLE{ sort="off" valign="top" }%
| *Repo Option* | *Subversion Path* | *Koji Build Target* |
| _None_ | =trunk= | =el*-osg= |
| =osg= | =trunk= | =el*-osg= |
| =upcoming= | =upcoming= | =el*-osg-upcoming= |
</td><td style="width: 3em;"></td><td>
<h4>New</h4>
%TABLE{ sort="off" valign="top" }%
| *Repo Option* | *Subversion Path* | *Koji Build Target* |
| _None_ | =trunk= | =osg-el*= |
| =osg= | =trunk= | =osg-el*= |
| =osg-3.1= | =branches/osg-3.1= | =osg-3.1-el*= |
| =osg-3.2= | =branches/osg-3.2= | =osg-3.2-el*= |
| =osg-<em>N</em>.<em>M</em>= | =branches/osg-<em>N</em>.<em>M</em>= | =osg-<em>N</em>.<em>M</em>-el*= |
| =upcoming= | =branches/upcoming= | =osg-upcoming-el*= |
</td></tr></table>

---+++ Implementation

The full implementation of the koji changes entails the greatest OSG Software team effort, due to the number of scripts and other systems affected. The list below covers all the known, major changes, but a complete and detailed plan will be worked out later. In particular, we will look into setting up a test instance of koji for experimenting with changes before implementation.

   * Change osg-built, osg-promote, release scripts, etc.
   * Change internal documentation
   * Will affect Soichi’s mash downloader (but we knew that, and we should offer to help)
   * Change koji targets, including some new build tags

When we want to start developing OSG 3.2.*, we do these tasks:


With those changes:

   * =osg-build= (no --repo) still uses =trunk=, applies =osg-el*= targets, and hence builds into 3.2
   * =osg-build --repo=osg-3.1= uses =branches/osg-3.1=, applies =osg-3.1-el*= targets, and builds into 3.1


---++ Deployment

---+++ One-Time Deployment of New System

%TABLE{ sort="off" valign="top" }%
| *Date* | *Owner* | *Change* |
| 2013-08-21 | !TimC | Subversion: Move =upcoming= to =branches/upcoming=; osg-build: Fix path to =branches/upcoming= |
| 2013-09-03 | Mat | Tarballs: Deploy tarball directory changes to ITB host (=repo-itb.grid.iu.edu=) |
| 2013-09-06 | Carl | Koji: Create temporary tags =osg-3.1-el5-*= (<span style="color: #F60;">NOT</span> =-el6-=) to allow testing of mash |
| ^ | Carl | Koji: Add build targets =osg-el5=, =osg-el6=, =osg-3.1-el5= (new tags), =osg-3.1-el6= (old tags) |
| 2013-09-09 | Mat | Tarballs: Update “how to make release” documentation |
| 2013-09-10 | Mat | Tarballs: Deploy tarball directory changes to production host (=repo.grid.iu.edu=) |
| ^ | !TimT | Tarballs: Update external documentation (Documentation.Release3.InstallOSGClientTarball, Documentation.Release3.InstallWNClientTarball) |
| ^ | !TimT | Tarballs: Announce change in structure to sites |
| ^ | !BrianL | Yum: Update =osg-release-itb= package in =osg-testing= repository (pointing to old URLs) |
| 2013-09-17 | Carl | Koji: Finish and test changes to osg-build and osg-promote |
| ^ | !BrianL | Yum: Finish migration scripts and testing in Fermicloud |
| 2013-09-18 | Mat | Mat on vacation |
| 2013-10-01 | !BrianL | Yum: Deploy new directory structure to ITB host (=repo-itb.grid.iu.edu=)<span style="color: #F60;">*</span> |
| ^ | !BrianL | Yum: Update =osg-release= package in =osg-development= repository |
| 2013-10-02 | Mat | Mat returns to work, world-weary and jetlagged |
| 2013-10-08 | Carl | Koji: Remove test tags and targets (must be done before deploying mash) |
| 2013-10-08 | !BrianL | Yum: Deploy new directory structure to production host (=repo.grid.iu.edu=)<span style="color: #F60;">*</span> |
| ^ | !BrianL | Yum: Update =osg-release= package in =osg-release= repository |
| ^ | !BrianL | Yum: Schedule/wait for mirrors to pick up the changes |
| ^ | !TimT | Yum: Update OSG TWiki documentation |
| 2013-10-22 | Carl | Koji: rename old tags and targets to new (coincides with GOC deployment date) |

---++++ * Yum Deployment

   1. Install new mash script(s)
   1. Run the script that creates and populates the new directories
   1. Verify the new contents — same number of packages per dir? same sizes? what?
   1. Run the script that changes the =3.0= structures
   1. Verify symlinks

---+++ Routine Deployment of New Series

---+++# Subversion

The current existing release series is called OLD (e.g., 3.1) and the new release series is called NEW (e.g., 3.2).

   1. Notify users to stop committing until further notice
   1. Copy =trunk= to <code>branches/osg-<em>OLD</em></code>
   1. Merge changes from =branches/upcoming= to =trunk=, as desired
   1. Copy =trunk= to =tags/osg-<em>NEW</em>-start=
   1. Copy =branches/upcoming= to =tags/upcoming-to-<em>NEW</em>=
   1. Delete from =branches/upcoming= everything that was merged above
   1. Delete from =trunk= everything that is no longer needed with commit messages explaining why
   1. Notify users that changes are done

---+++# Koji

   1. Add tags: =osg-<em>N</em>.<em>M</em>-el*-build=, =osg-<em>N</em>.<em>M</em>-el*-development=
   1. Add build targets: =osg-<em>N</em>.<em>M</em>-el*= &rarr; (=osg-<em>N</em>.<em>M</em>-el*-build=, =osg-<em>N</em>.<em>M</em>-el*-development=)
   1. Change existing build targets: =osg-el*= &rarr; (=osg-<em>N</em>.<em>M</em>-el*-build=, =osg-<em>N</em>.<em>M</em>-el*-development=)
   1. Change inheritance of =osg-el*-upcoming-build=: inherit from =osg-<em>N</em>.<em>M</em>-el*-build= instead of the previous series

