%META:TOPICINFO{author="BrianBockelman" date="1376401782" format="1.1" reprev="1.10" version="1.10"}%
---+ Support New OSG Versions — Technical Details

Currently, this page serves as a technical design document for Software team tasks that are part of the project.

---++ Subversion

Most of our Subversion repository structure will remain as is; only the packaging area must change. The basic plan is to make distinct directories for each major release series (3.1, 3.2, etc.) and, while we are there, move some old cruft aside.

The old and new directory structures are shown below, starting at the Subversion directory for packaging: <pre class="screen">$SVN/native/redhat</pre>

<table>
<tr style="vertical-align: top;"><td>
Old:
<pre class="screen" style="padding: 1ex;">
branches
<span style="color: #12F;">tags</span>
<span style="color: #F60;">trunk</span>
upcoming
</pre>
</td>
<td style="width: 3em;"></td>
<td>
New:
<pre class="screen" style="padding: 1ex;">
<span style="color: #12F;">attic</span>
branches
<span style="color: #F60;">osg-3.1</span>
<span style="color: #F60;">osg-3.2</span>
upcoming
</pre>
</td></tr></table>

---+++ Implementation

A rough implementation plan:

   1. Move =tags= to =attic=
   1. Move =trunk= to =osg-3.1=
   1. Copy =osg-3.1= to =osg-3.2=
   1. Remove packages from osg-3.2 as desired (including ones from =upcoming=)
   1. Move remaining packages from =upcoming= to =osg-3.2= (except unified HTCondor)

Notes:

   * To simplify, we will schedule this work *after* the Java packages have been moved from Upcoming back to 3.1
   * We will schedule Subversion changes in advance, to avoid surprises and reduce risk of damaged workspaces
   * Ideally, developers will commit unsaved changes to Subversion before the changes
   * =osg-build= will need some small changes to handle the change in name to =trunk=; see the verify_correct_branch() function in osgbuild/svn.py
   * We will need to update OSG Software developer documentation a little bit
   * If someone has uncommitted changes in, say, =trunk=, after the change, they can run =svn switch osg-3.1= to re-base their working directory.

As a separate and more complex task, we will remove directories (i.e., packages) in =osg-3.2= that we do not want to carry over to OSG 3.2 with a commit message explaining why


---++ Tarballs and OASIS

Currently, the client tarballs are organized in directories by full version number (e.g., 3.1.21). With multiple release series, there could be many versions to sort through. So, the plan is to add a layer of directories for major release series.

The old and new directory structures are shown below, starting in the tarball directory of the IU-based repository site, http://repo.grid.iu.edu/tarball-install/

<table>
<tr style="vertical-align: top;"><td>
Old:
<pre class="screen" style="padding: 1ex;">
3.1.19/osg-client-3.1.19-1.el5.i386.tar.gz
3.1.19/osg-client-3.1.19-1.el5.x86_64.tar.gz
3.1.19/osg-client-3.1.19-1.el6.i386.tar.gz
3.1.19/osg-client-3.1.19-1.el6.x86_64.tar.gz
3.1.19/osg-wn-client-3.1.19-1.el5.i386.tar.gz
3.1.19/osg-wn-client-3.1.19-1.el5.x86_64.tar.gz
3.1.19/osg-wn-client-3.1.19-1.el6.i386.tar.gz
3.1.19/osg-wn-client-3.1.19-1.el6.x86_64.tar.gz
3.1.20/*
3.1.21/*
</pre>
</td>
<td style="width: 3em;"></td>
<td>
New:
<pre class="screen" style="padding: 1ex;">
<span style="color: #F60;">3.1/</span>3.1.19/osg-client-3.1.19-1.el5.i386.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-client-3.1.19-1.el5.x86_64.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-client-3.1.19-1.el6.i386.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-client-3.1.19-1.el6.x86_64.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-wn-client-3.1.19-1.el5.i386.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-wn-client-3.1.19-1.el5.x86_64.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-wn-client-3.1.19-1.el6.i386.tar.gz
<span style="color: #F60;">3.1/</span>3.1.19/osg-wn-client-3.1.19-1.el6.x86_64.tar.gz
<span style="color: #F60;">3.1/</span>3.1.20/*
<span style="color: #F60;">3.1/</span>3.1.21/*
<span style="color: #12F;">3.2/</span>3.2.0/* (same tarball names)
</pre>
</td></tr></table>

Also, the current top-level directory contains a set of convenience symlinks:

<pre class="screen">
osg-client-latest.el5.i386.tar.gz       -> 3.1.21/osg-client-3.1.21-1.el5.i386.tar.gz
osg-client-latest.el5.x86_64.tar.gz     -> 3.1.21/osg-client-3.1.21-1.el5.x86_64.tar.gz
osg-client-latest.el6.i386.tar.gz       -> 3.1.21/osg-client-3.1.21-1.el6.i386.tar.gz
osg-client-latest.el6.x86_64.tar.gz     -> 3.1.21/osg-client-3.1.21-1.el6.x86_64.tar.gz
osg-wn-client-latest.el5.i386.tar.gz    -> 3.1.21/osg-wn-client-3.1.21-1.el5.i386.tar.gz
osg-wn-client-latest.el5.x86_64.tar.gz  -> 3.1.21/osg-wn-client-3.1.21-1.el5.x86_64.tar.gz
osg-wn-client-latest.el6.i386.tar.gz    -> 3.1.21/osg-wn-client-3.1.21-1.el6.i386.tar.gz
osg-wn-client-latest.el6.x86_64.tar.gz  -> 3.1.21/osg-wn-client-3.1.21-1.el6.x86_64.tar.gz
</pre>

Proposed changes:
   * Deprecate the symlinks but leave them in place (for now), pointing to the correct paths
   * Add a README file to the directory to explain the tarballs, refer to the TWiki, and say that the old links are deprecated
   * Add new convenience symlinks *within* the series directories

The new symlinks will look like this:

<pre class="screen">
<span style="color: #12F;"># In http://repo.grid.iu.edu/tarball-install/</span><span style="color: #F60;">3.1/</span>
osg-client-latest.el5.i386.tar.gz       -> 3.1.21/osg-client-3.1.21-1.el5.i386.tar.gz
osg-client-latest.el5.x86_64.tar.gz     -> 3.1.21/osg-client-3.1.21-1.el5.x86_64.tar.gz
osg-client-latest.el6.i386.tar.gz       -> 3.1.21/osg-client-3.1.21-1.el6.i386.tar.gz
osg-client-latest.el6.x86_64.tar.gz     -> 3.1.21/osg-client-3.1.21-1.el6.x86_64.tar.gz
osg-wn-client-latest.el5.i386.tar.gz    -> 3.1.21/osg-wn-client-3.1.21-1.el5.i386.tar.gz
osg-wn-client-latest.el5.x86_64.tar.gz  -> 3.1.21/osg-wn-client-3.1.21-1.el5.x86_64.tar.gz
osg-wn-client-latest.el6.i386.tar.gz    -> 3.1.21/osg-wn-client-3.1.21-1.el6.i386.tar.gz
osg-wn-client-latest.el6.x86_64.tar.gz  -> 3.1.21/osg-wn-client-3.1.21-1.el6.x86_64.tar.gz

<span style="color: #12F;"># In http://repo.grid.iu.edu/tarball-install/</span><span style="color: #F60;">3.2/</span>
osg-client-latest.el5.i386.tar.gz       -> 3.2.0/osg-client-3.2.0-1.el5.i386.tar.gz
osg-client-latest.el5.x86_64.tar.gz     -> 3.2.0/osg-client-3.2.0-1.el5.x86_64.tar.gz
osg-client-latest.el6.i386.tar.gz       -> 3.2.0/osg-client-3.2.0-1.el6.i386.tar.gz
osg-client-latest.el6.x86_64.tar.gz     -> 3.2.0/osg-client-3.2.0-1.el6.x86_64.tar.gz
osg-wn-client-latest.el5.i386.tar.gz    -> 3.2.0/osg-wn-client-3.2.0-1.el5.i386.tar.gz
osg-wn-client-latest.el5.x86_64.tar.gz  -> 3.2.0/osg-wn-client-3.2.0-1.el5.x86_64.tar.gz
osg-wn-client-latest.el6.i386.tar.gz    -> 3.2.0/osg-wn-client-3.2.0-1.el6.i386.tar.gz
osg-wn-client-latest.el6.x86_64.tar.gz  -> 3.2.0/osg-wn-client-3.2.0-1.el6.x86_64.tar.gz
</pre>

---+++ Implementation: Tarball Downloads

   * Script the process to make new directories and copy existing tarballs
   * Change script that creates symlinks in =tarball-install= (script in /root, we can access it, but need to coordinate with GOC, because it may reside elsewhere)
      * Change existing symlinks to use new directory structure
      * Add new set of top-level symlinks per major release
   * Test scripts on ITB instance
   * Move to production:
      * Run script to make new dirs and copy tarballs
      * Run script to set up symlinks
   * Update “how to make release” documentation
   * Update external documentation (Documentation.Release3.InstallOSGClientTarball, Documentation.Release3.InstallWNClientTarball)
   * Announce change in structure to sites

---+++ Proposed Structure: OASIS Installations

OASIS installations have not been fully implemented yet, so there is no "Old" layout to migrate from. But in [[http://jira.opensciencegrid.org/SOFTWARE-1126][SOFTWARE-1126]], there is a proposed layout that we will modify before the initial release.

<table>
<tr style="vertical-align: top;"><td>
Original Proposal:
<pre class="screen" style="padding: 1ex;">
osg-wn-client/3.1.21/el5-i386/
osg-wn-client/3.1.21/el5-x86_64/
osg-wn-client/3.1.21/el6-i386/
osg-wn-client/3.1.21/el6-x86_64/
osg-wn-client/current -&gt; 3.1.21
</pre>
</td>
<td style="width: 3em;"></td>
<td>
New Proposal:
<pre class="screen" style="padding: 1ex;">
osg-wn-client/<span style="color: #F60;">3.1/</span>3.1.21/el5-i386/
osg-wn-client/<span style="color: #F60;">3.1/</span>3.1.21/el5-x86_64/
osg-wn-client/<span style="color: #F60;">3.1/</span>3.1.21/el6-i386/
osg-wn-client/<span style="color: #F60;">3.1/</span>3.1.21/el6-x86_64/
osg-wn-client/<span style="color: #F60;">3.1/</span>current -&gt; 3.1.21
osg-wn-client/<span style="color: #12F;">3.2/</span>3.2.0/*/
osg-wn-client/<span style="color: #12F;">3.2/</span>current -&gt; 3.2.0
osg-wn-client/<span style="color: #12F;">local/</span> -&gt; $OASIS_WN_CLIENT
</pre>
</td></tr></table>

In the above table, =$OASIS_WN_CLIENT= will be a CVMFS configuration variable.  For the version of oasis-config distributed with OSG version 3.X.Y, this will default to the value of =3.2/current= (this forces the admin to take some minimal explicit action to change between release series).  Having an admin-managed config variable will also allow admins to manage the version cleanly with puppet.

---++ Yum

---+++ Yum Repository Structure

This is a chance to fix the structure of our Yum repository directories, to make them more closely resemble other repositories like Scientific Linux. That is, the structure starts with the name of the repository itself (=osg=) and then the release series (=3.1=, =3.2=, =upcoming=). Within each release series, the structure will remain similar to the current one, with directory layers for operating system (currently =el5= and =el6=) and the repository name (but without the now-redundant =osg-= prefix).

The old and new directory structures are shown below, starting in the tarball directory of the IU-based repository site, http://repo.grid.iu.edu/

<table><tr style="vertical-align: top;"><td>
Old:
<pre class="screen" style="padding: 1ex;">
3.0/
3.0/el5/
3.0/el5/osg-contrib
3.0/el5/osg-development
3.0/el5/osg-release
3.0/el5/osg-testing
<span style="color: #F60;">3.0/el5/osg-upcoming-development
3.0/el5/osg-upcoming-release
3.0/el5/osg-upcoming-testing</span>
3.0/el6/... (same as el5)
</pre></td><td style="width: 3em;"></td><td>
New:
<pre class="screen" style="padding: 1ex;">
osg/3.1/
osg/3.1/el5/
osg/3.1/el5/contrib
osg/3.1/el5/development
osg/3.1/el5/release
osg/3.1/el5/testing
osg/3.1/el6/... (same as el5)
<span style="color: #12F;">osg/3.2/
osg/3.2/el5/
osg/3.2/el5/contrib
osg/3.2/el5/development
osg/3.2/el5/release
osg/3.2/el5/testing
osg/3.2/el6/... (same as el5)</span>
<span style="color: #F60;">osg/upcoming/
osg/upcoming/el5/
osg/upcoming/el5/development
osg/upcoming/el5/release
osg/upcoming/el5/testing
osg/upcoming/el6/... (same as el5)</span>
</pre></td></tr></table>

To ease the transition, we will provide a set of compatibility symlinks from the old structure to the new:

<pre class="screen" style="padding: 1ex;">
3.0/
3.0/el5/
3.0/el5/osg-contrib               -&gt; ../../osg/3.1/el5/contrib
3.0/el5/osg-development           -&gt; ../../osg/3.1/el5/development
3.0/el5/osg-release               -&gt; ../../osg/3.1/el5/release
3.0/el5/osg-testing               -&gt; ../../osg/3.1/el5/testing
3.0/el5/osg-upcoming-development  -&gt; ../../osg/upcoming/el5/development
3.0/el5/osg-upcoming-release      -&gt; ../../osg/upcoming/el5/release
3.0/el5/osg-upcoming-testing      -&gt; ../../osg/upcoming/el5/testing
3.0/el6/... (same as el5)
</pre>

Finally, there are the convenience symlinks that we provide for the latest version of osg-release. Currently, we have:

<pre class="screen" style="padding: 1ex;">
osg-el5-release-latest.rpm -> 3.0/el5/osg-release/i386/osg-release-xxxxx.rpm
osg-el6-release-latest.rpm -> 3.0/el6/osg-release/i386/osg-release-xxxxx.rpm
</pre>

The proposal is to:
   * Deprecate and preserve the existing symlinks, but use the new paths
   * Add a set of “latest” symlinks to *each* numbered release series directory (e.g., for =3.1= and =3.2= but not =upcoming=)

<pre class="screen" style="padding: 1ex;">
<span style="color: #12F;"># In http://repo.grid.iu.edu/</span>
osg-el5-release-latest.rpm -> <span style="color: #F60;">osg/3.1/el5/release</span>/i386/osg-release-xxxxx.rpm
osg-el6-release-latest.rpm -> <span style="color: #F60;">osg/3.1/el6/release</span>/i386/osg-release-xxxxx.rpm

<span style="color: #12F;"># In http://repo.grid.iu.edu/</span><span style="color: #F60;">osg/3.1/</span>
osg-3.1-el5-release-latest.rpm -> el5/release/i386/osg-release-xxxxx.rpm
osg-3.1-el6-release-latest.rpm -> el6/release/i386/osg-release-xxxxx.rpm

<span style="color: #12F;"># In http://repo.grid.iu.edu/</span><span style="color: #F60;">osg/3.2/</span>
osg-3.2-el5-release-latest.rpm -> el5/release/i386/osg-release-xxxxx.rpm
osg-3.2-el6-release-latest.rpm -> el6/release/i386/osg-release-xxxxx.rpm
</pre>

---+++ Yum Repository Definitions (*.repo)

Mostly, the definitions of the =*.repo= files will remain unchanged for each OSG release series (3.1, 3.2, …), except that the description will be updated to include the release series, and the paths in the =baseurl= and =mirrorlist= attributes will be updated to match the new repository structure.

Importantly, we will *NOT* change the names of the repositories from one release series to the next, in principle making it easier to upgrade from OSG 3.1 to OSG 3.2. The current =osg-release= RPM has all =.repo= files marked as =%config=, so there are two upgrade options we could pursue: (a) have people =rvm -Uvh= on the 3.2 release RPM, then merge in info from =.rpmnew= files as needed (potentially leaving a mix of 3.1 and 3.2 repos), or (b) have people =rpm -e osg-release=, possibly leaving behind =.rpmsave= files, then install the new =osg-release= (3.2) and merge in customizations (the latter sounds better).

For example, here is a fragment from the current =osg-el6.repo= file:

<pre class="screen">
[osg]
<span style="color: #F60;">name=OSG Software for Enterprise Linux 6 - $basearch</span>
<span style="color: #F60;">#baseurl=http://repo.grid.iu.edu/3.0/el6/osg-release/$basearch</span>
<span style="color: #F60;">mirrorlist=http://repo.grid.iu.edu/mirror/3.0/el6/osg-release/$basearch</span>
failovermethod=priority
priority=98
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-OSG
consider_as_osg=yes
</pre>

New:

<pre class="screen">
[osg]
<span style="color: #F60;">name=OSG Software 3.1 for Enterprise Linux 6 - $basearch</span>
<span style="color: #F60;">#baseurl=http://repo.grid.iu.edu/osg/3.1/el6/release/$basearch</span>
<span style="color: #F60;">mirrorlist=http://repo.grid.iu.edu/mirror/osg/3.1/el6/release/$basearch</span>
failovermethod=priority
priority=98
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-OSG
consider_as_osg=yes
</pre>

---+++ Implementation

Because we will create convenience symlinks from the existing repository paths to the new ones, we can implement the Yum repository changes in distinct stages.

   1. Create a new version of Soichi’s mash script that installs packages from koji into the repositories
      * The Software team will offer to help with this task
   1. Create and populate the new Yum repository structure
      * Create the new directory structure (manually?) on repo.grid.iu.edu down to the individual repository (e.g., development)
      * Leave the existing =3.0= directory structure in place
      * Use the new mash script to populate the OSG 3.1 repositories from existing koji tags
      * Schedule/wait for mirrors to pick up the initial changes
   1. Test the new repositories
      * In testing, update the =*.repo= files to refer to the new repositories
      * Do lots of manual and automated testing using the new =*.repo= files
   1. Cut over to the new repository structure
      * Change the =3.0= directories to be symlinks into the new structure
      * Change the mash script again to stop populating the 3.0 area
      * Schedule/wait for mirrors to pick up the changes again

We would like the ability to run automated tests on different release series, so changing the Yum structure implies some eventual changes to osg-test:

   * Make a configuration option to pick OSG version to test (e.g., 3.1 vs. 3.2)
   * Update bootstrap-osg-test to use the correct URLs and to take an OSG version
   * Change reporting to include release series (3.1, 3.2, Upcoming)

---+++ Other Consequences

   * Change internal documentation to reflect new layout
   * Change external documentation to reflect new names and URLs of the osg-release RPMs


---++ Koji

At very least, we would need to add koji tags to separate 3.1 from 3.2 builds. Given that, it seems worthwhile to overhaul the tags to parallel the yum repository structure.

---+++ Tags

<table><tr style="vertical-align: top;"><td>
Old:
<pre class="screen" style="padding: 1ex;">
<span style="color: #F60;">el5-osg</span>-contrib
<span style="color: #F60;">el5-osg</span>-development
<span style="color: #F60;">el5-osg</span>-prerelease
<span style="color: #F60;">el5-osg</span>-release
<span style="color: #F60;">el5-osg</span>-testing
<span style="color: #F60;">el6-osg</span>-* (same as el5)



<span style="color: #F60;">el*-osg-upcoming</span>-* (same as el5, no contrib)

<span style="color: #F60;">el*-osg</span>-release-<i>VERSION</i>

<span style="color: #F60;">el*-osg-upcoming</span>-release-<i>VERSION</i>
</pre></td><td style="width: 3em;"></td><td>
New:
<pre class="screen" style="padding: 1ex;">
<span style="color: #F60;">osg-3.1-el5</span>-contrib
<span style="color: #F60;">osg-3.1-el5</span>-development
<span style="color: #F60;">osg-3.1-el5</span>-prerelease
<span style="color: #F60;">osg-3.1-el5</span>-release
<span style="color: #F60;">osg-3.1-el5</span>-testing
<span style="color: #F60;">osg-3.1-el6</span>-* (same as el5)

<span style="color: #12F;">osg-3.2-el*-*</span> (same as 3.1)

<span style="color: #F60;">osg-upcoming-el*</span>-* (same as 3.1, no contrib)

<span style="color: #F60;">osg-3.1-el*</span>-release-<i>VERSION</i>
<span style="color: #12F;">osg-3.2-el*-release-<i>VERSION</i></span>
<span style="color: #F60;">osg-upcoming-el*</span>-release-<i>VERSION</i>
</pre></td></tr></table>

---+++ Documentation

We will continue to have the Release3 wiki contain documentation corresponding to the latest release.  When there are differences between major release series, these will be mentioned inline where possible.  When not possible, a separate Release3-web page will be made for the older documentation.

---+++ Implementation

The full implementation of the koji changes entails the greatest OSG Software team effort, due to the number of scripts and other systems affected. The list below covers all the known, major changes, but a complete and detailed plan will be worked out later. In particular, we will look into setting up a test instance of koji for experimenting with changes before implementation.

   * Change osg-built, osg-promote, release scripts, etc.
   * Change internal documentation
   * Will affect Soichi’s mash downloader (but we knew that, and we should offer to help)
   * Change koji targets, including some new build tags
