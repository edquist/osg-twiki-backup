%META:TOPICINFO{author="AbhishekSinghRana" date="1273775656" format="1.1" reprev="1.5" version="1.5"}%
%META:TOPICPARENT{name="WebHome"}%
-- Main.DanFraser - 26 Apr 2010
---++Purpose
This document is being used to create a centralized list of problems encountered by different VOs when they submit jobs to the OSG. The purpose of this document is to use this information in developing a strategic approach for tackling/testing for as many of these problems as is reasonable.

---++ Problems encountered when accessing remote sites
   1 Do sites that advertise access to specific VOs actually allow that VO to run?
   1 Is GRAM working?
   1 Is the Grid-proxy expired?

---++ Problems encountered when trying to deploy software (either on a WN or on a Gatekeeper)
   1 Is !GridFTP up and available to be used to stage-in scripts for building software stacks? (LIGO)
   1 Are outgoing connections available? 
   1 Is $OSG_APP defined, mounted, and provisioned, and does it have the correct permissions set?
   1 Is $OSG_APP mounted read-only on the worker nodes?
   1 Is $OSG_APP over quota? (Is the size reasonable, sometimes it is underestimated?)
   1 Are development tools available (configure, make, C & C++ compilers)? (LIGO)
   1 Are development tools available (configure, make, C & C++ compilers) available only on the head node?

---++ Problems encountered when submitting a job
   1 Does the output location for the job exist and have the correct permissions?
   1 Is the output location over quota?
   1 Is !GridFTP available to stage the job?
   1 Is Condor-G working correctly on the submit host? (Is the configuration correct?)
   1 Is the jobmanager working?
   1 Is the Condor grid_monitor working?

---++ Problems encountered when running a job
   1 Is $OSG_DATA defined, mounted, and provisioned, and does it have the correct permissions set?
   1 Is $OSG_DATA over quota? (again reasonable use is often underestimated)
   1 Is $OSG_WN_TMP defined, mounted, and provisioned, and does it have the correct permissions set?
   1 Is $OSG_WN_TMP over quota?
   1 Is the worker node architecture compatible with the software that was built on the head node?
   1 Are outgoing connections being blocked by a firewall?
   1 Are hostnames being resolved?

---++ Problems encountered when managing persistent data (using SRM)
    1 Which sites on OSG provide opportunistic storage (D0, SBGrid)

---++ How are Job error messages handled?
   1 GridJobStatus: Done; Globus error 8
   1 ...

---++ Strategic thoughts
   1 "The various discussions I had during the AHM and your presentation made me think that the pilot job should do more than just verify the OSG environment. I think the user should be able to configure the pilot in such a way that it verifies whatever requirements the user's application has. The pilots that are started on behalf of the user should also keep a record of errors which in turn could be used to create statistics. Both features are currently present in our E@OSG software." (Robert E., LIGO)

---++ OSGMM Site Verification Checks

Fatal / fork (head node)

   * $HOME disk usage over 30 GB
   * $OSG_APP not defined
   * $OSG_DATA not defined
   * $OSG_WN_TMP not defined

Advertised (non-fatal) / fork (head node)

   * Is $OSG_APP writable?
   * Is $OSG_DATA writable?
   * $GLOBUS_LOCATION path

Fatal / jobmanager (worker node)

   * $OSG_APP not defined
   * $OSG_DATA not defined
   * $OSG_WN_TMP not defined
   * $OSG_GRID not defined

Advertised (non-fatal) / jobmanager (worker node)

   * Is $OSG_APP/$VO_NAME/jobenv.sh sourceable?
   * Is $OSG_GRID/setup.sh sourceable?
   * GB disk free for $OSG_DATA
   * GB disk free for $OSG_APP
   * GB disk free for $OSG_WN_TMP
   * Is globus-url-copy installed?
   * Is wget installed?
   * Does the site allow outbound network traffic?
   * Is $OSG_APP writable?
   * Is $OSG_DATA writable?
   * Is $OSG_WN_TMP writable?
   * $GLOBUS_LOCATION path
   * CPU bitness
   * Number of cores on the node
   * Total memory
   * Memory per core
   * Is the site using pool accounts?
  
The above tests are the standard ones shipped with OSGMM. VOs can add their own. Using Engagement as an example, we use the non-fatal tests for advertising available software (installed by the OSGMM maintenance jobs), and run more functional tests such as verifying that globus-url-copy can copy a file, and by that testing if for example the CRLs are updated correctly on the worker nodes.
