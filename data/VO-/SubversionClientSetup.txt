%META:TOPICINFO{author="UmeshkumarKeswani" date="1177649534" format="1.1" reprev="1.6" version="1.6"}%
%META:TOPICPARENT{name="PandaForCharmm"}%
-- Main.UmeshkumarKeswani - 25 Apr 2007



%STARTINCLUDE%
---++ !!Subversion Client Setup
%TOC%



---+++ What is Subversion?

Subversion (svn) is a version control system. Version control is management of multiple revisions of the same unit of information. It is primarily used in the software industry to track and provide control over changes to the software code and documentation.

Subversion works with a Client/Server architecture. A Subversion server is the machine that actually holds the information which everyone can access . It tracks changes and maintains versions. A Subversion client interacts with this server to get the information (check out) from the server or to put the modified information (commit) back in the server so that the changes made to that information are reflected to everyone accessing it, etc. For details on these and other Subversion client operations, click [[http://svnbook.red-bean.com/nightly/en/svn.ref.html][here]].


---------------
---------------

---+++ About this document

This document describes how to install a Subversion client, including all it dependencies on Linux/Unix/Mac machines.
A Subversion client should only be installed by those, who want to get the information stored in the Subversion server, modify it and commit it back.
If you just want to read the contents of files on the Subversion server, you don't need to install a client. You can do that using a web browser.
 
To access the contents of BNL !AutoPilot Subversion server, click [[https://svn.usatlas.bnl.gov/svn/panda/autopilot/trunk/][here]

If you are logged in as an individual user (not as 'root'), this document will help you install a Subversion client in your home directory. You will be able to use this client anywhere inside your home directory. And no other user would be able to use it.
If many users on the same machine (or server) need to use the Subversion client, then its better that instead of every user installing it individually in their accounts,  your system administrator or you (if you know the password) log-in as 'root' and install it. This would allow all the users on that machine (or server) access to the client.

[[#TOP][Top]]

-----------------
------------------

---+++ Setting up Environment
What we shall do here is create a directory that will hold all the files that need to be compiled (into libraries etc) in order for the Subversion client to work. You can skip creating this directory and directly download these files into your home directory, but, I strongly recommend that you follow this step. What this would do is, keep things much more organized and will hold everything at one place. So, the next time you or someone else needs to install the Subversion client, you know exactly where to find everything that is required.   

<pre>
   mkdir svnsrc
</pre>
I named the directory 'svnsrc'. You can name it anything. Make sure its unique and relevant.



<pre>
   cd svnsrc
</pre>
Now that we inside the directory, lets start installing software(s).

[[#TOP][Top]]

-----------------------------------------------
------------------

#BeforeInstallation

---+++ Subversion Dependencies

Before we download and install Subversion, we will have to install its dependencies.
Subversion has three dependencies. Neon, Apache Portable Runtime (APR) and APR-util libraries.

Neon is a library required by the client to initiate, authenticate and  maintain network connection with the server.

APR and APR-util are libraries that provide a predictable and consistent interface to the underlying platform-specific implementations. Subversion uses these libraries so that it does not have to be aware of all the different types of platform-specific details.


You might have these dependencies already installed.

1) To check if Neon is already installed,
look for the *libneon.la* library in _/User/lib/_ directory.
If this library is present, you can skip the 'Installing Neon' section.

2) To check if APR is already installed,
look for the *libapr-0.la* or the *libapr-1.la* library in  _/User/lib/_ or in _/User/apache/lib/_ directory, if any.
If one of these libraries is present,  you can skip the 'Installing APR' section.

3) To check if APR-util is already installed,
look for the *libaprutil-0.la* or the *libaprutil-1.la* in _/User/lib/_  or in _/User/apache/lib/_ directory, if any.
If one of these libraries is present, you can skip the 'Installing APR-util' section.

You can use commands like *locate* or *find* to help you look for these libraries.

Note: Installing the Subversion client along with its three dependencies takes around 15-20 minutes.

[[#TOP][Top]]

-----------------------------------------------
------------------


---+++ Installing Neon

Make sure you are in the 'svnsrc' directory.

   *Downloading Neon*
<pre>
    wget http://www.webdav.org/neon/neon-0.25.5.tar.gz
</pre>
Getting the compressed code.



*Extracting and Configuring Neon*

<pre>
    tar -xzvf neon-0.25.5.tar.gz
</pre>
Decompressing the code.




<pre>
    cd neon-0.25.5
</pre>

<pre>
    ./configure --prefix=$HOME --with-ssl
</pre>
--prefix=$HOME will configure neon under your $HOME directory. 
    If you want to configure it someplace else,  enter the absolute path to that location here.

--with-ssl will configure neon to support SSL. SSL in required so that client can have secure communication with the server.


output for the above command would be something like,
<pre>
  Install prefix:  /home/umesh
  Compiler:        gcc
  XML Parser:      expat
  SSL library:     SSL support enabled, using OpenSSL (0.9.7 or later)
  zlib support:    zlib support enabled, using -lz
  Build libraries: Shared=no, Static=yes
</pre>


*Making Neon*

<pre>
    make
</pre>
Compiles the neon source code.




<pre>
    make install
</pre>
Installs neon libraries.



To verify successful install, go to the _$HOME/lib/_ directory. Check for *libneon.a* & *libneon.la* libraries and *pkgconfig* directory.

[[#TOP][Top]]

-----------------------------------------------
------------------


---+++ Installing APR

Make sure you are in the 'svnsrc' directory.

*Downloading APR*

<pre>
    wget http://cseweb.uta.edu/~thilagar/files/umesh/apr-0.9.x.tar.gz 
</pre>

*Extracting and Configuring APR*

<pre>
    tar -xzvf apr-0.9.x.tar.gz
</pre>

<pre>
    cd apr-0.9.x
</pre>

<pre>
    ./buildconf
</pre>
Builds the 'configure' file that will be executed next.



<pre>
    ./configure --prefix=$HOME
</pre>
Checks the current system configuration to make sure everything thats required is present. Execution of this command takes some time.

*Making APR*

<pre>
    make
</pre>
Compiles a lot files. 




<pre>
    make install
</pre>


To verify successful install, go to the  _$HOME/lib/_ directory. 
Check for *libapr-0* libraries with extensions *.a* , *.la* , *.so* , *.so.0* & *.so.0.9.14* along with a *apr.exp* file.

[[#TOP][Top]]

-----------------------------------------------
------------------



---+++ Installing APR-util

Make sure you are in the 'svnsrc' directory.

*Downloading APR-util*

<pre>
    wget http://cseweb.uta.edu/~thilagar/files/umesh/aprutil-0.9.x.tar.gz 
</pre>

*Extracting and Configuring APR-util*

<pre>
    tar -xzvf aprutil-0.9.x.tar.gz
</pre>

<pre>
    cd aprutil-0.9.x
</pre>

<pre>
    ./buildconf --with-apr=$HOME/svnsrc/apr-0.9.x
</pre>
--with-apr, APR-util 'buildconf' requires path to the *apr-config* file. Which is in *apr-0.9.x* directory.

*Note:* I have 'svnsrc' in my path to the APR code location. If you named the directory that you just created (as part of 'Setting-up Environment') something other than 'svnsrc' then please write that name in the above path instead of my 'svnsrc'.






<pre>
    ./configure --prefix=$HOME --with-apr=$HOME/svnsrc/apr-0.9.x
</pre>
Take note of 'svnsrc' in the _--with-apr_ option here as well.




*Making APR-util*

<pre>
    make
</pre>

<pre>
    make install
</pre>


To verify successful install, go to the _$HOME/lib/_ directory.
Check for *libaprutil-0* libraries with extensions *.a* , *.la* , *.so* , *.so.0*  & *.so.0.9.14* along with a *aprutil.exp* file.

[[#TOP][Top]]

-----------------------------------------------
------------------


---+++ Installing Subversion

Let me remind you that Subversion has three dependencies. It is absolutely necessary that you have them installed before moving any further.
To know more about these dependencies, click [[#BeforeInstallation][here]].

Make sure you are in the 'svnsrc' directory.

*Downloading Subversion*
 
<pre>
    wget http://cseweb.uta.edu/~thilagar/files/umesh/subversion-1.4.2.tar.gz 
</pre>


*Extracting and Configuring Subversion*

<pre>
    tar -xzvf subversion-1.4.2.tar.gz
</pre>
This is a big file, will take some time to decompress.




<pre>
    cd subversion-1.4.2
</pre>

<pre>
    ./configure --prefix=$HOME --with-ssl --with-zlib --without-berkeley-db --with-apr=$HOME/svnsrc/apr-0.9.x --with-apr-util=$HOME/svnsrc/aprutil-0.9.x
</pre>
--with-apr, path to the *apr-config* file. I named my directory 'svnsrc'. You might have named something else. Make sure you write that in the path instead of 'svnsrc'.

--with-apr-util, path to the *apu-config* file location.



*Note:* If you had APR and/or APR-util dependencies already installed, then you will have to look for *apr-config* (for APR) and/or *apu-config* (APR-util) files and enter those paths with the _--with-apr=_ and the _--with-apr-util=_ options respectively. 




*Making Subversion*

Continuing in the same breath...

If you had Neon already installed (didn't use this document to install it),
   then Mention the path to *libneon.la* library in *NEON_LIBS* variable of 'Makefile' (present in the _subversion-1.4.2_ directory).

If you had APR  already installed,
   then Mention the path to *libapr-0.la* or *libapr-1.la* library in *SVN_APR_LIBS* variable of 'Makefile'.

If you had APR-util already installed, 
   then Mention the path to *libaprutil-0.la* or *libaprutil-1.la* library  in *SVN_APRUTIL_LIBS* variable of 'Makefile'.

then issue the command

<pre>
    make
</pre>
Execution of this command takes the longest...


And finally,

<pre>
    make install
</pre>



Successful install would make lots of libs starting with *libsvn_* in the _$HOME/lib/_ directory.

[[#TOP][Top]]
-----------------------------------------------
-----------------------------------------------

---+++ Testing

To test whether the Subversion client installation was successful or not, issue the following command.

<pre>
    svn --version
</pre>

 Output for the above command would be something like,

<pre>
svn, version 1.4.2 (r22196)
   compiled Apr 18 2007, 14:50:43

Copyright (C) 2000-2006 CollabNet.
Subversion is open source software, see http://subversion.tigris.org/
This product includes software developed by CollabNet (http://www.Collab.Net/).

The following repository access (RA) modules are available:

* ra_dav : Module for accessing a repository via WebDAV (DeltaV) protocol.
  - handles 'http' scheme
  - handles 'https' scheme
* ra_svn : Module for accessing a repository using the svn network protocol.
  - handles 'svn' scheme
* ra_local : Module for accessing a repository on local disk.
  - handles 'file' scheme
</pre>


You are now set. You can use your Subversion client as and when you like. To know more about the different Subversion client operations you can perform,
 click [[http://svnbook.red-bean.com/nightly/en/svn.ref.html][here]].

[[#TOP][Top]]
