%META:TOPICINFO{author="UmeshkumarKeswani" date="1177461347" format="1.1" reprev="1.2" version="1.2"}%
%META:TOPICPARENT{name="PandaForCharmm"}%
-- Main.UmeshkumarKeswani - 24 Apr 2007

%STARTINCLUDE%
---++ !!Subversion Client Setup
%TOC%


---+++ What is Subversion?

Subversion (svn) is a software version control system. Version control is management of multiple revisions of the same unit of information (source code, documentation etc). It is primarily used to track and provide control over changes to software code.

Subversion works with a Client/Server architecture. A svn server is installed on the machine that actually holds the code repository. It tracks changes and maintains versions. A subversion client interacts with this server to get the code (check out) from the repository, put the modified code (commit) back in the repository so that the changes made to the code are reflected to everyone accessing that code, etc. For more information on these and other svn client operations, click [[http://svnbook.red-bean.com/nightly/en/svn.ref.html][here]].


---------------
---------------

---+++ Who should use this document?
This document describes how to install a Subversion client including all it dependencies.
A svn client should be installed by those, who want to modify the code stored in the subversion server and commit it back.
If you just want to read the contents in the svn server, you don't have to install a svn client. You can read the contents of the server using a web browser.
 
To access the contents of BNL !AutoPilot svn server, click [[https://svn.usatlas.bnl.gov/svn/panda/autopilot/trunk/][here]]

---------------
----------------

---+++ Before Installation

This document describes steps to set up a svn client in a user account on a Linux/Unix machine. To be able to execute the commands that are mentioned here
 it is necessary that you have an account on a Linux/Unix server, you are logged-in to that account and currently are in your home directory (On the command prompt type '$HOME', hit enter.  The directory mentioned is your home directory). If there are multiple users on the server that need to use this svn client, you should ask your system administrator to log-in as 'root', follow the steps in this document and set up a svn client.

Before we download and install Subversion, we will have to install its dependencies.
Subversion has three dependencies. Neon, Apache Portable Runtime (APR) and APR-util libraries.

Neon is a library required by the client to initiate, authenticate and  maintain network connection with the server.

APR and APR-util are libraries that provide a predictable and consistent interface to the underlying platform-specific implementations. Subversion uses these libraries so that it does not have to be aware of all the different types of platform-specific details.


You might have these dependencies already installed.

1) To check if Neon is already installed,
Check for "libneon.la" in '/User/lib/' directory, if any.
If this library is present, you can skip installing Neon.

2) To check if APR is already installed,
Check for 'libapr-0.la' or 'libapr-1.la' in '/User/lib/' or '/User/apache/lib' directory, if any.
If one of these libraries are present,  you can skip installing APR.

3) To check if APR-util is already installed,
Check for 'libaprutil-0.la' or 'libaprutil-1.la' in the  'User/lib/'  or '/User/apache/lib' directory, if any.
If one of these libraries are present, you can skip installing APR-util.

Note: There might be a combination of commands that can help you search for these libs. I am looking into it. Till then, please bare with me.
-----------------------------------------------
-----------------------------------------------


---+++ Setting up Environment
We will create a directory that will hold all the files required for a successful svn client setup.

<pre>
   mkdir svnsrc
This command creates a directory named 'svnsrc'. You can name it anything. Make sure its unique and relevant.
</pre>



<pre>
   cd svnsrc
Now we go into the directory, so that we can the download required setup files into it.
</pre>



-----------------------------------------------
-----------------------------------------------



---+++ Installing Neon

Make sure you are in the directory you just created.

   *Downloading Neon*
<pre>
    wget http://www.webdav.org/neon/neon-0.24.7.tar.gz
Getting the compressed code.
</pre>


*Extracting and Configuring Neon*

<pre>
    tar -xzvf neon-0.24.7.tar.gz
De-compresses code.
</pre>


<pre>
    cd neon-0.24.7
</pre>

<pre>
    ./configure --prefix=$HOME --with-ssl
--prefix=$HOME will configure neon under your $HOME directory. 
    If you want to configure it someplace else,  enter the absolute path to that location here.
--with-ssl will configure neon to support SSL.
</pre>
output would be something like,
<pre>
 Install prefix:  /home/umesh
  Compiler:        gcc
  XML Parser:      libxml 2.5.10
  SSL library:     OpenSSL (0.9.7 or later)
  zlib support:    found in -lz
  Build libraries: Shared=no, Static=yes
</pre>


*Making Neon*

<pre>
    make
Compiles neon source code.
</pre>


<pre>
    make install
Installs neon library.
</pre>


To verify successful install, go to $HOME/lib/ . Check for libs 'libneon.a' & 'libneon.la' and a directory 'pkgconfig'.
-----------------------------------------------
-----------------------------------------------



---+++ Installing APR

Make sure you are in the directory you created earlier.

*Downloading APR*

<pre>
    wget http://www.apache.org/dist/apr/apr-0.9.12.tar.gz
</pre>

*Extracting and Configuring APR*

<pre>
    tar -xzvf apr-0.9.12.tar.gz
</pre>

<pre>
    cd apr-0.9.12
</pre>

<pre>
    ./configure --prefix=$HOME
Configures a lot of files, be patient.
</pre>

*Making APR*

<pre>
    make
Compiles a lot files.
</pre>

<pre>
    make install
</pre>

To verify successful install, go to $HOME/lib/ . Check for five 'libapr-0' libs with extensions .a, .la, .so, .so.0, .so.0.9.12 and apr.exp as well .
-----------------------------------------------
-----------------------------------------------




---+++ Installing APR-util

Make sure you are in the directory you created earlier.

*Downloading APR-util*

<pre>
    wget http://www.apache.org/dist/apr/apr-util-0.9.12.tar.gz
</pre>

*Extracting and Configuring APR-util*

<pre>
    tar -xzvf apr-util-0.9.12.tar.gz
</pre>

<pre>
    cd apr-util-0.9.12
</pre>

<pre>
    ./configure --prefix=$HOME --with-apr=$HOME/svnsrc/apr-0.9.12
--with-apr, APR-util configure requires the path to APR code.
</pre>


*Making APR-util*

<pre>
    make
</pre>

<pre>
    make install
</pre>


To verify successful install, go to $HOME/lib/ . Check for five 'libaprutil-0' libs with extensions .a, .la, .so, .so.0, .so.0.9.12  and aprutil.exp.
-----------------------------------------------
-----------------------------------------------



---+++ Installing Subversion

Make sure you are in the directory you  created earlier.

*Downloading Subversion*
 
<pre>
    wget http://subversion.tigris.org/downloads/subversion-1.4.2.tar.gz
</pre>

*Extracting and Configuring Subversion*

<pre>
    tar -xzvf subversion-1.4.2.tar.gz
</pre>

<pre>
    cd subversion-1.4.2
</pre>

<pre>
    ./configure --prefix=$HOME --with-ssl --with-zlib --without-berkeley-db
</pre>

*Making Subversion*

If you had any of the dependencies already installed and didn't follow this document to install them, make sure you mention the path of the already installed libraries correctly in the Subversion 'Makefile'.

<pre>
If Neon already installed,
   Mention the path to libneon.la lib in 'NEON_LIBS' variable of 'Makefile'.

If APR  already installed,
   Mention the path to libapr-0.la or libapr-1.la lib in 'SVN_APR_LIBS' variable of 'Makefile'.

If APR-util already installed, 
   Mention the path to libaprutil-0.la or libaprutil-1.la lib  in 'SVN_APRUTIL_LIBS' variable of 'Makefile'.


    make


and finally,

    make install

</pre>


Successful install would make lots of libs starting with 'libsvn' in $HOME/lib/ directory.
-----------------------------------------------
-----------------------------------------------

---+++ Testing

<pre>
    svn --version
</pre>

Output should be something like,

<pre>
svn, version 1.4.2 (r22196)
   compiled Apr 18 2007, 14:50:43

Copyright (C) 2000-2006 CollabNet.
Subversion is open source software, see http://subversion.tigris.org/
This product includes software developed by CollabNet (http://www.Collab.Net/).

The following repository access (RA) modules are available:

* ra_dav : Module for accessing a repository via WebDAV (DeltaV) protocol.
  - handles 'http' scheme
  - handles 'https' scheme
* ra_svn : Module for accessing a repository using the svn network protocol.
  - handles 'svn' scheme
* ra_local : Module for accessing a repository on local disk.
  - handles 'file' scheme
</pre>
