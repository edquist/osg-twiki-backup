%META:TOPICINFO{author="JohnWeigand" date="1194464056" format="1.1" reprev="1.15" version="1.15"}%
%META:TOPICPARENT{name="ComputeElementAuthorization"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

---++ Introduction
The  Full Privilege mode,  the PRIMA authorization module with a GUMS service is used for all authorizations and does not use a grid-mapfile.  The Globus gatekeeper and WS-GRAM  use a callout to PRIMA such that upon receipt of each request, PRIMA forwards the request to a GUMS service which performs the dynamic mapping of the user's certificate to a local Unix account. PRIMA can process FQAN (Fully Qualified Attribute Names), thus enabling mappings based on VO groups and roles as defined in a VOMS server.   This removes the need for maintaining a =rid-mapfile= on each gatekeeper and/or gridftp server.   

Obviously, your site must run a GUMS server in order to run in Full Privilege mode. 

---++ Full Privilege Requirements
Here is a list of the requirements to implement the Full Privilege authorization mode:
   * A GUMS service. See the [[InstallConfigureAndManageGUMS][Install Configure And Manage GUMS]] topic of the %CACHE% documentation for information on installing GUMS.

   * If you have multiple account domains, you will need a GUMS server for each domain.   A site only needs a single GUMS server if there were a global uid assignment (eg. a single NIS domain).   Note that  each account domain can cover any number of CE hosts, storage elements, etc, so  as long as all systems have a consistent set of POSIX Users|UIDs|Groups|GIDs. 

   * Globus must be configured so that the PRIMA callout is activated and points to your GUMS service.

   * The GUMS Client software, which is installed as a part of the %CACHE% CE software, must be configured to point to your GUMS service.

   * A cron process, =gums-host-cron= , must be activated to periodically update the =osg-user-vo-map.txt= file used by Gratia, <nop>MonaALISA and GIP.
  
   * Local accounts must be created on the CE and worker nodes for all potential accounts that will be assigned by your GUMS service.  Your local GUMS administrator can identify these for you.  

Alternatively, once you have configured Globus, your GUMS client and run the =gums-host-cron=, there are two files created that can be reviewed to verify  you can get the list from the =$VDT_LOCATION/monitoring/osg-user-vo-map.txt= when the =gums-host-cron= service is run .  A listing of those local accounts that do not exist, but can be assigned by your GUMS service, can be seen in the =$VDT_LOCATION/monitoring/osg-undefined-accounts.txt= file which is also generated by the =gums-host-cron= script.



---++ Configure Globus to use the PRIMA callout
Templates for the necessary configuration files, =prima-authz.conf= and =gsi-authz.conf=,  are located in the =$VDT_LOCATION/post-install= directory.  Both files must be copied into =/etc/grid-security/=.  These are critical for both pre-ws and WS-GRAM.

For WS-GRAM, there are additional configuration files that must be set.  

---+++!! gsi-authz.conf
The presence of an  =/etc/grid-security/gsi-authz= file, containing an entry for the PRIMA callout,  tells the Globus gatekeeper and gsiftp services to use PRIMA.  It does not need to be edited, just copied over to =/etc/grid-security/=.  The PRIMA callout is identified by this entry:
<pre>
globus_mapping /usr/local/osg-ce/prima/lib/libprima_authz_module_gcc32dbg globus_gridmap_callout
   <b>OR</b>
globus_mapping /usr/local/osg-ce/prima/lib/libprima_authz_module_gcc64dbg globus_gridmap_callout
</pre>
   *Note:* =gsi-authz.conf= is the key to the callout being invoked.  If you remove this file from =/etc/grid-security/= (or if you comment out the line for the PRIMA callout),  the Globus services will revert to local grid-mapfile mode.

---+++!! prima-authz.conf
This configuration file is used by the PRIMA callout and  identifies the GUMS service.  The appropriate line comes pre-configured with the CE hostname in the =imsContact= string.  For example, say one installed a *%CACHE% %VERSION%* CE on host =osg-ce.domain.org=, but the GUMS service was on host =gums.domain.org=.   Then, one would change the line
<pre>
imsContact <nop>https://osg-ce.domain.org:8443/gums/services/GUMSAuthorizationServicePort
    <b>TO</b>
imsContact <nop>https://gums.domain.org:8443/gums/services/GUMSAuthorizationServicePort
</pre>
and copy this file to =/etc/grid-security/=.   

By default, the installation has the =prima-authz.conf= file's log file verbosity set to 'debug'.  You may want to change the =logLevel= attribute  to 'info'.

If you are configuring for use of Full Privilege mode for the first time and have enabled WS-GRAM, you will need to run the =$VDT_LOCATION/monitoring/configure-osg.sh= to get the web services configuration files updated correctly as described in the next section.

---+++!! Web services configuration files
The default authorization mode for WS_GRAM is Local or Compatibility.  It uses the =/etc/grid-security/grid-mapfile= as the basis for authorization.  

To enable Full Privilege mode you must run the =$VDT_LOCATION/monitoring/configure-osg.sh= script after you have completed the previous configuration steps. During the execution of this script, a check is made to determine if you have already configured your node to use the Full Privilege authorization mode.  It does this by looking for the existence of the =/etc/grid-security/prima-authz.conf= file.

If that file exists, the script extracts <i>Your-GUMS-Server</i> information from the file and executes the command:

   * <pre class="screen"> $VDT_LOCATION/vdt/setup/configure_prima_gt4 --enable -gums-server <i>Your-GUMS-Server</i> </pre>

The script modfies four WS-GRAM security configuration files,  activating the PRIMA callout functionality for the Full Privilege authorization mode, in =$VDT_LOCATION/globus/etc/=:
   * globus_delegation_service/factory-security-config.xml
   * globus_wsrf_core/global_security_descriptor.xml
   * globus_wsrf_rft/factory-security-config.xml
   * gram-service/managed-job-factory-security-config.xml

---++ GUMS client software on the CE
The GUMS-Client package is installed as part of the %CACHE% CE install  The essential configuration files are located in the =$VDT_LOCATION/gums/scripts= directory.

You will need to configure these for Full Privilege authorization mode.

---+++!! gums-client.properties file
You need to edit the =$VDT_LOCATION/gums/config/gums-client.properties= configuration file to point to the appropriate GUMS server.   Upon installation, the file contains two entries both populated with the hostname of the CE node you are configuring, in the following example, the CE node is cmssrv09.  For Full Privilege mode, only the =gums.location= property needs to be changed to the hostname of your GUMS server. 

<pre class="programlisting">
gums.location=https://cmssrv09:8443/gums/services/GUMSAdmin
gums.authz=https://cmssrv09:8443/gums/services/GUMSAuthorizationServicePort
</pre>

The =gums.authz= entry is only used if you wish to use the  client tool to test specific mappings from this host.  Documentation of this client is found at the [[https://www.racf.bnl.gov/Facility/GUMS/1.2/use_test.html][GUMS web site]].  This same functionality can be executed using the GUMS web UI.

---+++ !!gums-host command
In Full Privilege mode, the =$VDT_LOCATION/gums/scripts/gums-host= command is used to generate one essential files:
   * =$VDT_LOCATION/monitoring/osg-user-vo-map.txt=

This command is run  by the =gums-host-cron= cron service, which is addressed in more detail in later a section of this document.

For Full Privilege mode,  you will need to test the generation of this file.

---++++!! Test osg-user-vo-map generation
To test the =osg-user-vo-map= generation, you need to run as <i>root</i>.  This uses the CE host certificate.
<pre class="screen">
 $ <b>source $VDT_LOCATION/setup.sh </b>
 $ <b>cd $VDT_LOCATION/gums/scripts </b>
 $ <b>./gums-host generateGrid3UserVoMap</b>   <em>(output goes  to stdout. To get a
                                        file: either redirect stdout or use 
                                        '--file file_name')</em>
    <em>...output  should look similar to the following dependent on you GUMS 
    server mappings..</em>
  #User-VO map
  # #comment line, format of each regular line line: account VO
  # Next 2 lines with VO names, same order, all lowercase, with case (lines starting with #voi, #VOc)
  #voi xxx test3
  #VOc OSG TEST3
  #---- accounts for vo: osg ----#
  osg01 xxx
  #---- accounts for vo: Test3userGroup ----#
  osg01account test3
    <em>.... and so on</em>
</pre>

If it fails, an error  similar to "<i>No map was found for the host xyz.dhcp.fnal.gov</i>" will occur.  Contact your GUMS administrator(s).  The problem is likely in the GUMS server's gums.config file:
   * GUMS 1.1 syntax: your host is not in the <i>cn</i> attribute of the <i>hostGroup</i> element.
   * GUMS 1.2 syntax: your host is not in the <i>cn</i> attribute of the <i>hostToGroupMapping</i> element.

---++ Enable the gums-host-cron service
To keep the  =osg-user-vo-map.txt= file up to date, a cron file script (=gums-host-cron=) was  installed but not  activated. The activation of this service is *critical* in Full Privilege authorization mode.  This is discussed in the [[GumsHostCron][Gums Host Cron]] topic of the documentation..

---++ Retest the authorization mode using site verify
Run the [[ValidateSiteVerify][Site Verification]] script again locally (as a regular user, not root) and verify that the authorization still works. 

---++ Testing Full Privilege Configuration
Once the gatekeeper is up, testing the Full Privilege mode is done by simply removing the grid-mapfile from /etc/grid-secruity/ (if it exists) and attempting to authenticate.  Run the =$VDT_LOCATION/verify/site_verify.pl= script as a regular user.   To check which ID you get mapped to, run (using your fully-qualified gatekeeper host in the command and your own certificate):
<pre class="screen">
 $ <b>source $VDT_LOCATION/setup.sh </b>   <em>OR $VDT_LOCATION/setup.<b>csh</b> </em>
 $ <b>grid-proxy-init </b>
    <em>(enter your passphrase)</em>
 $ <b>globus-job-run <em>your-gatekeeper-host</em>:2119/jobmanager-fork /usr/bin/id </b>
</pre>

%NOTE% Some sites may require VO-qualified proxies.  If so, replace grid-proxy-init with voms-proxy-init in the step above.

When  authorizing in full privilege mode, you will see the following extra entry in your =$VDT_LOCATION/globus/var/globus-gatekeeper.log= file when jobs are submitted:

<pre class="programlisting">
 PID: 20269 -- PRIMA INFO  Mapping service "https://fermigrid3.fnal.gov:8443/gums/services/GUMSAuthorizationServicePort" returned local user "uscms112" for globus user "/DC=org/DC=doegrids/OU=People/CN=John Weigand 458491" 
</pre>





---++ Important notes on the PRIMA callout
---+++!! RHEL4/SL4/Rocks 4 sites
In RHEL4/SL4/Rocks 4, the PRIMA callout  requires a shared library =/usr/lib/libcom_err.so.3.0.0= which is not part of most default Redhat-like installations.  It's provided by the rpm package =compat-libcom_err=.

---+++!! prima-authz.conf's verifyAC attribute 
This is just a comment about the behavior of the =verifyAC= attribute in the =prima-authz.conf= file that should be addressed in the future.  To avoid any problems, this attribute should never be changed from the installed setting of =false=.

When the =verifyAC= attribute is set to 'true' (the CE installation sets this to 'false'), it checks the directory specified by the =issuerCertDir= attribute (set to  =/etc/grid-security/vomsdir=) for a certificate of trusted VOMSes.

If the submitter's proxy is not from one of the trusted VOMS, it is treated as a grid proxy and the FQAN in the proxy is ignored. The authorization request is still forwarded to the GUMS authorization service. If the submitter exists in a VO that allows grid proxies, the authorization service will return a =PERMIT=.

This behavior is the same for pre-ws (gatekeeper) and WS-GRAM authorizations.

At least one certificate must exist in this directory regardless of the =verifiyAC= setting. Your host cert will make do, but =verifyAC= _must_ be set to =false=. At least this way, VOMS and GRID proxies will be treated correctly. This is the same behavior as with pre-ws prima. The only difference is that pre-ws PRIMA does not require the directory to exist with any certificate in it.  The problem is that both ws and WS-GRAM should function identically when the =verifyAC= is set to false. The ws PRIMA should not require the existence of the directory and any certificate to function properly.

%BR%

%COMPLETE2% %BR%
%RESPONSIBLE% Main.JohnWeigand - 17 Oct 2007 %BR%
Main.JohnWeigand - 06 Nov 2007 - removed section on monitoring gums.  It is in the ComputeElementAuthorization twiki%BR%
Main.JohnWeigand - 07 Nov 2007 - added WS-GRAM and  VerifyAC attribute behavior from WS gram doc.%BR%
%REVIEW%

%META:TOPICMOVED{by="AnneHeavey" date="1192818627" from="Integration/ITB_0_7.OsgCEAuthFullPriv" to="Integration/ITB_0_7.FullPrivilegeAuthorization"}%
