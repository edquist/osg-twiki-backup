%META:TOPICINFO{author="RobGardner" date="1194061709" format="1.1" reprev="1.8" version="1.8"}%
%META:TOPICPARENT{name="ComputeElementInstall"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

---++ PRIMA, GUMS, and your CE services
The  _Full Privilege_ scenario implements the PRIMA authorization module with a GUMS service and does not use a grid-mapfile.  The gatekeeper  uses a callout to PRIMA such that upon receipt of each request, PRIMA forwards the request to a GUMS service which performs the dynamic mapping of the user's certrificate to a local Unix account or Kerberos principal. PRIMA can process FQAN (Fully Qualified Attribute Names), thus enabling mappings based on VO groups and roles as defined in a VOMS server.   This removes the need for maintaining grid-mapfiles on each gatekeeper and/or gridftp server.   Obviously, your site must run a GUMS server in order to run in Full Privilege Mode ([[#GUMSInstallation][GUMS installation instructions]]).

---++ Full Privilege Requirements
Here are a list of requirements to implement the "Full Privilege" authorization mode:
   * A GUMS service. 
   * If you have multiple account domains you will need a GUMS server for each domain.   A site would only need a single GUMS server if there were a global uid assignment (eg. a single NIS domain).   Note that  each account domain can cover any number of CE hosts, storage elements, etc, so  as long as all systems have a consistent set of POSIX Users|UIDs|Groups|GIDs. 
   * The GUMS Client software must be installed on the CE, appropriately configured to point to a GUMS service.  
   * Local accounts on the CE must match those used by the GUMS service.  Your local GUMS administrator can identify these for you, or you can get the list from the =osg-user-vo-map.txt= which is generated in the steps below.
   * Globus must be configured so that the PRIMA callout is activated.  This is done by copying =gsi-authz.conf= to =/etc/grid-security/=, discussed below.
   * A cron process, _gums-host-cron_, must be configured to periodically update the =osg-user-vo-map.txt= file.  See below.

---++ Configure Globus to use the PRIMA callout
Templates for the necessary configuration files, =prima-authz.conf= and =gsi-authz.conf=,  are located in the =$VDT_LOCATION/post-install=.  Both files must be copied into =/etc/grid-security/=.

---+++!! prima-authz.conf
This file identifies the GUMS service.  The appropriate line comes pre-configured with the CE hostname in the =imsContact= string.  For example, say one installed a *%CACHE% %VERSION%* CE on host =ce.domain.org=, but the GUMS service was on host =gums.domain.org=.  Then one would change the line
<pre>
     imsContact <nop>https://ce.domain.org:8443/gums/services/GUMSAuthorizationServicePort
</pre>
to
<pre>
     imsContact <nop>https://gums.domain.org:8443/gums/services/GUMSAuthorizationServicePort
</pre>
and copy this file to =/etc/grid-security/=.   By default, the installation has the log file verbosity set to 'debug'.  You may want to change this to 'info' (see file).

---+++!! gsi-authz.conf
This presence of file in =/etc/grid-security/= tells the Globus gatekeeper and gsiftp services to use PRIMA.  It does not need to be edited, just copied over to =/etc/grid-security/=.  *Note:* =gsi-authz.conf= is the key to the callout being invoked.  If you remove this file from =/etc/grid-security/=, the Globus services will revert to local grid-mapfile mode.

---++ Configuring the GUMS client on the CE  
The GUMS-Client package is installed as part of the OSG CE install.  The essential files are located in the =$VDT_LOCATION/gums= directory.

---+++ !!Full Privilege gums-client.properties
You need to edit the =$VDT_LOCATION/gums/config/gums-client.properties= configuration file to point to the appropriate GUMS server:  Upon installation the file contains 2 entries both populated with the hostname of the CE node you are configuring.  In this example, cmssrv09.   

<pre class="programlisting">
gums.location=https://cmssrv09:8443/gums/services/GUMSAdmin
 gums.authz=https://cmssrv09:8443/gums/services/GUMSAuthorizationServicePort
</pre>

The <i>gums.authz</i> entry is only used if you wish to use the <i>gums</i> client tool to test specific mappings from this host.  Documentation of this can be found on the GUMS web site.  This same functionality can be executed using the GUMS web UI.

---+++ !!Full privilege test osg-user-vo-map generation

To test the =osg-user-vo-map= generation, you need to run as <i>root</i>.  This uses the host certificate.
<pre class="screen">
 > <b>source $VDT_LOCATION/setup.sh </b>
 > <b>cd $VDT_LOCATION/gums/scripts </b>
 > <b>./gums-host generateGrid3UserVoMap</b>   <em>(output goes  to stdout. To get a
                                        file: either redirect stdout or use 
                                        '--file file_name')</em>
    <em>...output  should look similar to the following dependent on you GUMS 
    server mappings..</em>
  #User-VO map
  # #comment line, format of each regular line line: account VO
  # Next 2 lines with VO names, same order, all lowercase, with case (lines starting with #voi, #VOc)
  #voi xxx test3
  #VOc OSG TEST3
  #---- accounts for vo: osg ----#
  osg01 xxx
  #---- accounts for vo: Test3userGroup ----#
  osg01account test3
    <em>.... and so on</em>
</pre>

If it fails, an error  similar to "<i>No map was found for the host xyz.dhcp.fnal.gov</i>" will occur.  Contact your GUMS administrator(s).  The problem is likely in the GUMS server's gums.config file:
   * GUMS 1.1 syntax: your host is not in the <i>cn</i> attribute of the <i>hostGroup</i> element.
   * GUMS 1.2 syntax: your host is not in the <i>cn</i> attribute of the <i>hostToGroupMapping</i> element.


---+++ !!Full privilege mode cron - gums-host-cron
See GumsHostCron.

---++ Retest Full Privilege Configuration
If there is any =/etc/grid-security/grid-mapfile=, move it to another file name. Run the [[ReleaseDocumentation.CEInstallGuide#Site_Verification][Site Verification]] script again locally (as a regular user) and verify that the authorization still works. 

To check which id you get mapped to, run (using your fully-qualified gatekeeper host in the command and your own certificate):
<pre class="screen">
 $ <b>source $VDT_LOCATION/setup.sh </b>   <em>OR $VDT_LOCATION/setup.<b>csh</b> </em>
 $ <b>grid-proxy-init </b>
    <em>(enter your passphrase)</em>
 $ <b>globus-job-run <em>your-gatekeeper-host</em>:2119/jobmanager-fork /usr/bin/id </b>
</pre>

%NOTE% Some sites may require VO-qualified proxies.  If so, replace grid-proxy-init with voms-proxy-init in the step above.

When  authorizing in full privilege mode, you will see the following extra entry in your =$VDT_LOCATION/globus/var/globus-gatekeeper.log= file when jobs are submitted:

<pre class="programlisting">
 PID: 20269 -- PRIMA INFO  Mapping service "https://fermigrid3.fnal.gov:8443/gums/services/GUMSAuthorizationServicePort" returned local user "uscms112" for globus user "/DC=org/DC=doegrids/OU=People/CN=John Weigand 458491" 
</pre>

%NOTE% In RHEL4/SL4/Rocks 4, PRIMA requires a shared library =/usr/lib/libcom_err.so.3.0.0= which is not part of most default Redhat-like installations.  It's provided by the rpm compat-libcom_err.

---++ Enable monitoring of GUMS server
In this configuration, it is recommended to enable monitoring of the GUMS server via DBII. This requires two steps:

   1. Enable the GUMS Monitoring information provider when [[GenericInformationProvider][installing GIP on a CE Node]]. The GIP configuration script asks a direct question about this.  
   1. Ask your GUMS administrator to authorize a mapping for the information provider. This is done automatically when upgrading GUMS to v1.2 or when doing a fresh GUMS v1.2 install. In case of problem, you can look at the manual version of the steps performed to authorize the GIP probe at [[http://vdt.cs.wisc.edu/releases/1.8.1/notes/GUMS.html][VDT]].

%BR%
%COMPLETE3% %BR%
%RESPONSIBLE% Main.JohnWeigand - 17 Oct 2007 %BR%
%REVIEW%

%META:TOPICMOVED{by="AnneHeavey" date="1192818627" from="Integration/ITB_0_7.OsgCEAuthFullPriv" to="Integration/ITB_0_7.FullPrivilegeAuthorization"}%
