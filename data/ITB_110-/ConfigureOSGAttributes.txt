%META:TOPICINFO{author="StevenTimm" date="1211320597" format="1.1" reprev="1.37" version="1.37"}%
%META:TOPICPARENT{name="ComputeElementInstall"}%
---+!! *<nop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

%STARTINCLUDE%
%BR%
---+ _%INCLUDEHEADING%  %SPACEOUT{ "%TOPIC%" }%_
%EDITTHIS%
%BR%

---++ OSG attributes
It is no longer necessary to do a vdt-control --on before executing the configure-osg.sh
or configure_osg.py

---++ Configuration file information
You can get information on the syntax and formatting of the configuration file [[ConfigurationFileFormat][here]].  A detailed explanation of the configuration options can be found [[ConfigurationFileHelp][here]].   The =$VDT_LOCATION/monitoring= directory has two example configuration files that you can use as a basis for configuring your site.  The =$VDT_LOCATION/monitoring/simple-config.ini= file can be used as outlined before to setup a minimal site while the =$VDT_LOCATION/monitoring/full-config.ini= is a configuration file with all the configuration options that can be used to setup more complex sites.

---++ Setting attributes
The attributes are set by executing the =$VDT_LOCATION/monitoring/configure-osg.py= script. This script functions in batch mode and reads a specified ini configuration file and then configures your install provided the options in the ini file appear to be valid :
   * You can extract information from an existing installation using the -e option
   * There is a sample configuration file with detailed instructions and documentation on settings at =$VDT_LOCATION/monitoring/config.ini=
   * Reads all the information described in the [[PrepareForComputeElementConfigure][CE Site Administrator Overview]]. 
   * It configures the optional <nop>MonALISA service using the <i>$VDT_LOCATION/vdt/setup/configure_monalisa</i> script.  
   * If you asked for <nop>MonALISA to be activated, an <i>/etc/init.d/MLD</i> will be added to your systems rc.d services and started.  If you did not wish <nop>MonALISA to be activated, it will still run the <i>configure_monalisa</i> script but without the option to activate it.  
   * On the first execution only, it will copy the =./monitoring/locations/grid3-locations.txt= to =$OSG_APP/etc= with  666 permissions.
   *  If you are running Squid on the same node as the CE (not recommended) it will configure squid using the configure_squid script.
   *  It will configure whatever Gratia probes have been installed.
   * It will configure WSGram if this is enabled.
   * It will write any warnings/messages to the =$VDT_LOCATION/vdt-install.log= file

---++ Usage
The script is located in =$VDT_LOCATION/monitoring/configure-osg.py=.  If VDT_LOCATION and OLD_VDT_LOCATION is setup then configure-osg.py will use default values and directories and files to use are not needed.  The following table shows the basic methods assuming the simplest setup.  

| Invocation | Action |
| =./configure-osg.py  -c= | Executes the script in configure mode using the configuration file at =$VDT_LOCATION/monitoring/config.ini= and writes attribute files to =$VDT_LOCATION/monitoring/= |
| =./configure-osg.py  -v= | Executes the script in verify mode using the configuration file specified by =$VDT_LOCATION/monitoring/config.ini=|
| =./configure-osg.py  -e=   |Extracts configuration from an existing install located at =$OLD_VDT_LOCATION= and writes a configuration file for it at  =./extracted-config.ini=|
              

With each successful execution of the =configure-osg.py= script in configure mode:
   * the =osg-attributes.conf= file is updated   
   * the =osg-job-environment.conf= file is updated   
   * the =osg-local-job-environment.conf= file is updated   
   * the =gip-attributes.conf= file is updated

%NOTE% You can rerun the configure-osg.py script at a later time to reconfigure your settings or if the initial configuration did not complete successfully.

The full set of options that configure-osg.py supports are as follows:

| Option | Explanation|
| -c | This runs configure-osg.py in configure mode, this is mutually exclusive with -v and -e.  Configure mode reads a configuration file , verifies the settings in the file, configures the install, and writes out the various osg attribute files. |
| -v | This runs configure-osg.py in verify mode, this is mutually exclusive with -c and -e.  Verify mode reads a configuration file, verifies the settings and outputs any problems or errors found. |
| -e | This runs configure-osg.py in extract mode, this is mutually exclusive with -c and -v.  Extraction mode reads the attributes file found in a specified directory, and then parses and writes out a configure file to a specified file. |
| -d | This enables debugging output, which increases the verbosity of log messages being written to $VDT_LOCATION/vdt-install.log |
| -f filename | This specifies either the configuration file to read in configure (-c) or verify (-v) mode or the file to write to in extract (-e) mode.  This defaults to =$VDT_LOCATION/monitoring/config.ini= in configure or verify mode and to =./extracted-config.ini= in extract (-e) mode. |
| -D directory| This specifies the directory to write the osg-attributes to in configure (-c) mode or the location of the old install to use in extract mode (-e).   This defaults to =$VDT_LOCATION/monitoring/= in configure mode and =$OLD_VDT_LOCATION= in extract mode. |

---++ Use cases
There are two typical use cases for using the configure-osg.py script.  The first would be upgrading an existing installation, and the second would be configuring a new installation.  The workflow for the first use case would be:
   * Set =$OLD_VDT_LOCATION=
   * Source =setup.sh= from the new installation
   * Extract the old configuration by running =configure-osg.py -e=   
   * Edit the extracted-config.ini to correct any mistakes and to add any missing options
   * Configure the new installation by running =configure-osg.py -c -f ./extracted-config.ini=

The workflow for the second use case would be:
   * Source =setup.sh= from the new installation
   * Create or copy a  =$VDT_LOCATION/monitoring/config.ini= with information that is required for your site 
   * Configure the new installation by running =configure-osg.py -c=


---++ How to configure a basic new site
This section outlines how to set up the configuration for a basic resource (no CE, minimal services, etc.)

   * Source =$VDT_LOCATION/setup.sh=
   * Copy =$VDT_LOCATION/monitoring/simple-config.ini= to =$VDT_LOCATION/monitoring/config.ini=
   * Edit =$VDT_LOCATION/monitoring/config.ini= and do the following:
      * Fill in the =admin_email= and =localhost= settings in the =[Default]= section
      * Go to the =[Site Information]= section and fill in the settings that are listed as needing to be changed
      * Go to the section for your batch manager (e.g. PBS, SGE, LSF, Condor, etc.):
         * Set =enabled= to =True= or =%(enable)s=
         * Set =home= to your home directory location
         * Set =wsgram= to  =True= or =%(enable)s= if you are planning on providing WS-GRAM services
      * In =[Managed Fork]=, set =enabled= to =True= or =%(enable)s= if you are using !ManagedFork and set the =condor_location= and =condor_config= if you haven't set =VDT_CONDOR_LOCATION= or =CONDOR_LOCATION= in your environment
      * In =[Misc Services]=, set the =glexec_location= if using !GLExec and set =use_syslog_ng= to =True= or =%(enabled)s= if you want to use syslog-ng
      * In =[Storage]=, you will need to set the settings that are indicated as needing to be changed
      * In =[GIP]=, you will need to change the following settings:
         * =batch= should be set to the name of your batch manager in lower case (e.g. =pbs=, =sge=, =condor=)
         * =gsiftp_path= should be set to the =osg_data= directory that you specified in the =[Storage]= section
         * the settings for the subcluster should be filled in
      * If you are using RSV, you will need to do the following the in =[RSV]= section:
         * Set =enabled= to =True= or =%(enable)s=
         * Fill in the =rsv_user= if rsv should not run using the =rsvuser= unix account
         * Enable the appropriate probes on your system
         * If you are using a service certificate:
            * Set =use_service_cert= to =True= or =%(enabled)s= 
            * Set =rsv_cert_file=, =rsv_key_file=, =rsv_proxy_file= if the defaults aren't appropriate
         * Otherwise set =proxy_file= to point to the proxy that RSV should use to submit jobs (*This file must exist*)
   * Run =configure-osg.py -v= to see if any errors occur
   * Provided no errors appear in the last step, run =configure-osg.py -c= to configure your system


%STOPINCLUDE%
%BR%
%COMPLETE3% %BR%
%RESPONSIBLE% Main.SuchandraThapa - 16 May 2008 %BR%
%REVIEW% 

%META:TOPICMOVED{by="ForrestChristian" date="1166046785" from="Integration.ConfigureOSGAttributes050" to="Integration/ITB_0_5.ConfigureOSGAttributes"}%
