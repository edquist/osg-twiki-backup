%META:TOPICINFO{author="JohnWeigand" date="1357847865" format="1.1" reprev="1.3" version="1.3"}%
%META:TOPICPARENT{name="JohnWeigand"}%
---+!!<nop>Notes on CMS Certificate Change

<!--

   * Set VIEWTHISTOPIC = <div class="twikiSmall"><a href="%TOPIC%">View this section</a></div> 
 -->

%TOC%

%STARTINCLUDE%

---+ Background
With the deprecation of the DOE CA, CMS users will be requesting new user certificates from the CERN CA.
CMS pool accounts are used for the following proxy FQANs:
   * /cms/Role=cmsuser
   * /cms/uscms/Role=cmsuser
   * /cms   (this also includes those using  grid proxies, if any)

All other FQAN proxies are assigned group accounts and are not an issue at this time.

In GUMS, used for initial authorizations, pool account users are assigned a unix pool account based on their DNs.
If a user uses 2 certificate proxies, GUMS will assign a unique pool account to each.  This works fine unless the
user uses storage. 

The storage system uses unix account (not DN) for its authorization mechanism.  In order to access storage using
either proxy (DN), a manual process is in place to re-map the second proxy DN to the same unix account as the 
first proxy (DN).  

This proposal is to automate that process.


---+ Proposal
The basic concept is to:
   * retrieve a set of DNs from VOMS that for each "user".
   * bounce that against the GUMS MAPPING table to determine if a pool account has been assigned any DN%BR%


---+ Other Issues
This section just documents some other issues related to pacman versus rpm GUMS/VOMS services.

---++ GUMS Issue with allocating pool accounts
---+++ Weigand 1/10/13
We need to look into how GUMS determines when a pool account application is full.  It currently issue
a WARN message when there are all pool accounts are used.  

It is likely making the determination by doing:%BR%
   * select count(*) from MAPPING where MAP = 'blah' and DN IS NOT NULL;
the result will be misleading.

It needs to do:
   * select count(distinct ACCOUNT) from MAPPING where MAP = 'blah' and DN IS NOT NULL;

This is likely a problem area as I think it does the simple case.

Related, sort of, is whether or not GUMS fills in open accounts (gaps so-to-speak) or just does a 'max(ACCOUNT)'
and only assigns from the "end".

---++ pacman GUMS and RPM VOMS for user group updates
When using the pacman version of GUMS and user group updates are performed against an rpm VOMS server,
and a user has multiple certificates as a single user in VOMS, only 1 of the user's certificates (DNs) is retrieved.
The use case that pointed this out was with the DZERO RPM installed VOMS server,  

I (Weigand) originally had a DOE cert defined in VOMS.  In December 2012, I added a !DigiCert certificate using 
the new VOMS capability to add an additional certificate, for me.  VOMS handled that fine.  I could query VOMS, 
via the UI, and see both certificates associated to me (this is a new feature in the RPM VOMS version).

However, when I had a pacman GUMS do a user group update, only the !DigiCert certificate was retrieved.%BR%
On an RPM GUMS, the user group update retrieved both certificates.

An RPM GUMS and a pacman VOMS works fine.

---+ To Do List
   * Tanya L.
      * will create a script that will query VOMRS for users and all certificates associated with them 
      * NOTE: This script must be run by a VOMRS admin
   * Tony
      * Need to run Tanya's script daily and publish the results
      * Need to ask for a public place to publish results
   * John
      * Write a script that merges VOMRS with GUMS data and makes appropriate changes to the GUMS DB


-- Main.JohnWeigand - 08 Jan 2013
