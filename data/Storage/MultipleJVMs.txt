%META:TOPICINFO{author="WillMaier" date="1177437825" format="1.1" version="1.2"}%
%META:TOPICPARENT{name="StorageForum"}%
Due to a bug in dCache, large pools at the Purdue and Wisconsin CMS T2 sites have periodically locked up. dCache developers have developed a resolution for this bug, but a simple configuration change can improve pool availability in the meantime. By running each pool in a separate domain and JVM, admins can more easily restart deadlocked pools without affecting other pools on the same system. At Wisconsin, running multiple JVMs on Xserve RAID systems with four large pools correlated strongly with the disappearance of the deadlock issue.

When =/etc/init.d/dcache-pool= is run, it looks in two places to determine which pool domains to start. First, it looks in the dCache =/config/= directory for a file named =${HOSTNAME}.domains=. If this file exists, the =dcache-pool= script expects to find in it a list of domains which correspond to poollist files in the =/config/= directory. At Wisconsin, a =${HOSTNAME}.domains= file might look like the following:

<verbatim>
   $ cd /opt/d-cache/config
   $ cat s5n01.domains
    s5n01_1
    s5n01_2
    s5n01_3
    s5n01_4
</verbatim>

The corresponding poollist files contain per-pool configuration information:

<verbatim>
   $ cat s5n01_1.poollist
   s5n01_1  /data0/dCache/0/pool  sticky=allowed recover-space recover-control recover-anyway lfs=precious
</verbatim>

Each domain listed in the =${HOSTNAME}.domains= file should have a corresponding poollist file. =/etc/init.d/dcache-pool= will then start each pool in its own domain and JVM.

If =/etc/init.d/dcache-pool= can't find a =${HOSTNAME}.domains= file, it simply looks for a =${HOSTNAME}.poollist= file, which contains lines similar to the domain poollists. With this configuration, all pools will run in one domain and one JVM.

-- Main.WillMaier - 24 Apr 2007