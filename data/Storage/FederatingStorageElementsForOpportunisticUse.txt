%META:TOPICINFO{author="TedHesselroth" date="1274451669" format="1.1" version="1.4"}%
%META:TOPICPARENT{name="OpportunisticStorage"}%
---+*%SPACEOUT{ "%TOPIC%" }%**
%TOC%

The proposal is to allow users to access all opportunistic storage on OSG via a grid centralized storage element. The motivation is to hide from the user the current necessity of making the storage available and to provide the mechanisms of discovery, etc, as a backend service. Technical feasibility of a few software implementations are discussed.

---++IRODS

One of the main drivers of IRODS is the federation of heterogeneous data management technologies. 

It should be noted that federation in IRODS terminology is across Multiple IRODS instances, or zones. Federation allows access to other IRODS instances from an IRODS instance. The IRODS zone hosting the file is the root of the logical path of the file. Therefore federation as defined in IRODS does not in itself make the instances transparent. That may be acceptable, but it seems to defeat the purpose of having logical vs physical names. Furthermore, it would nominally require an IRODS instance at each site, though it is conceivable that a central host could run an IRODS instance for each site.

The logical name does hide the specific storage resource that the file is on. Logical names are mapped to physical names in the iCAT database. An ftp server can be a storage resource, and with SRM support it should be possible to put distributed SRM resources into one zone. So federation of OSG resources would be the creation of an IRODS zone with distributed storage resources. File transfers would be done through the one IRODS server, acting as a cache for files moved to or from the storage resources. It would take several iclient commands to move a file. Alternatively, these might be written in the form of a rule which could be invoked by one client command.  It may be possible to overload some of the existing iclient commands to invoke direct transfer between user and storage resource rather than using the IRODS server as a proxy. At a lower level, the native IRODS transfer mechanism does use direct data channels, but only to and from IRODS servers.
 
That allows flexible file location, though further catalog operations will be necessary to, for example, make sure collections of files are co-located. Support exists in IRODS for the use of custom scripts to execute various file operations, through the Universal Mass Storage System driver. Into these scripts might be placed to perform additional operations as needed.

Another option is to use only the iCAT portion of IRODS, to form a logical namespace and to define collections. Data could then be moved using using the presently-used clients such as globus-url-copy. File transfers would involve additional steps of catalog reading and file registration. Such a use could potentially pose difficulties, since it is not the canonical way of using IRODS. FTS (see below) may be a better fit for this model. 

---+++Directing a collection to a resource

One can use iclient commands to specify the resource to which a file should go. According to the default iCAT schema, a resource may be specified for a file, but not for a collection. Therefore it is not straightforward to have all files in a certain directory go to a particular resource.



---++globus.org

---++FTS

-- Main.TedHesselroth - 19 May 2010