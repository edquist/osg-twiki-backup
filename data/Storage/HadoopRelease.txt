%META:TOPICINFO{author="X509_2fDC_3dorg_2fDC_3ddoegrids_2fOU_3dPeople_2fCN_3dBrian_20Bockelman_20504307" date="1292983787" format="1.1" reprev="1.17" version="1.17"}%
%META:TOPICPARENT{name="Hadoop"}%
---+!! *<noop>%SPACEOUT{ "%TOPIC%" }%*
%TOC%

---+++ Hadoop 0.20 Release

The Hadoop-0.20 OSG release involves a giant overhaul of how we package.  The highlights are:
   1 Switching to the CDH3 distribution.
   1 Switching to source RPMs from EPEL for all Globus components.
   1 Upgrade to bestman2 (which is the remaining non-source RPM).
   1 Using Koji to handle release engineering and mash to auto-create repos.
   1 Adding xrootd as a major component.

---+++ RPMs for Hadoop 0.20
Here are the SRPMs we are using for Hadoop 0.20:
   * GratiaReporting
   * bestman2
   * globus-gridmap-callout-error
   * gratia-probe
   * hadoop-0.20
   * hadoop-0.20-osg
   * lcas
   * lcas-plugins-basic
   * lcmaps
   * lcmaps-plugins-basic
   * lcmaps-plugins-scas-client
   * lcmaps-plugins-verify-proxy
   * saml2-xacml2-c-lib
   * xrootd
   * xrootd-cmstfc
   * xrootd-hdfs
   * xrootd-lcmaps
   * globus-mappings-osg

---+++ Setting up your build environment

   * Email Michael Thomas or Brian Bockelman your certificate's DN.
   * Install koji on your RHEL5 machine from EPEL.
   * Install your certificate into ~/.koji/koji.cert.  Copy the PEM formatted certificate and key into this file.
   * Copy the attached koji.conf to /etc/koji.conf.
   * Copy the DOEGrids and ESNet CA certs into =/etc/pki/tls/certs/ca-bundle.crt=.  Again, copy/paste the CA certs into the file.  You will need to copy the following two files into the bottom of ca-bundle.crt:
      * =/etc/grid-security/certificates/d1b603c3.0=
      * =/etc/grid-security/certificates/1c3f2ca8.0=
   * The build target we use is dist-el5-hadoop20.
   * Edit your rpmmacros file:
      <verbatim>echo > ~/.rpmmacros << EOF
%_topdir $HOME/rpmbuild
%_smp_mflags -j3
EOF
</verbatim>
This sets make to run three parallel build processes at a time; adjust -j3 to fit the capabilities of your computer.
   * Create the necessary directories:
      <verbatim>
mkdir -p ~/rpmbuild/{BUILD,INSTALL,RPMS,SOURCES,SPECS,SRPMS}
</verbatim>

---+++ Building an RPM

Given a SRPM called =foo.srpm=:
   * =rpm -Uhv foo.srpm=  Installs the sources locally
   * =rpmbuild -bs ~/rpmbuild/SPECS/foo.spec=  Recreates the SRPM, verifying everything is self-consistent.
   * If the RPM is not in the repo already, =koji add-pkg --owner "&lt;your certificate CN&gt;" &lt;tag&gt; &lt;pkgname&gt;=  Be sure to leave the version and release off of the package name.
      * Do this *ONLY* the first time you build an RPM.
      * The tag name is the repository you build to.  It's something like =dist-el5-hadoop20=.  Ask if you don't know the appropriate tag.
   * =koji build --scratch &lt;tag&gt; ~/rpmbuild/SRPMS/foo.src.rpm=
   * =koji build &lt;tag&gt; ~/rpmbuild/SRPMS/foo.src.rpm=
      * Do this every time for each new released version.
      * The tag should be the same as above.

---++++ Building an appliance.
Given a kickstart configuration, =kickstart.cfg=:
<verbatim>koji spin-appliance dist-el5 x86_64 ~kickstart.cfg</verbatim>

---+++ Hadoop-0.20 RPM Notes
   * Anytime you update to the latest Cloudera sources, you *must* do a =diff= of the .spec file.  We make the following modifications:
      * Build fixes for forrest on Java 1.6.
      * Install FUSE into =/usr/lib64= on x86_64 and =/usr/lib= on i386.
      * We additionally Obsolete the old =hadoop= RPM from the OSG.
      * We switch the dependencies from Fedora openjdk to Sun's JDK.  Hopefully we won't need this in the RHEL6 timeframe
      * Perhaps something else I've left out of my notes.  Please do check with =diff= or ask Brian for help.
   * It seems impossible to build Hadoop on Koji due to the lack of network access.  We build by hand on a build machine and then upload the results to Koji.  Hoping to fix this soon.
      * Install the hadoop-0.20 RPM: =rpm -Uhv path/to/hadoop-0.20-foo.src.rpm=
         * Make modifications to it as required.
      * Build the RPM on =x86_64= and =noarch=: <verbatim>rpmbuild -ba ~/rpmbuild/SPECS/hadoop.spec</verbatim> <verbatim> rpmbuild -ba --target noarch ~/rpmbuild/SPECS/hadoop.spec </verbatim>
      * Upload the resulting build: <verbatim>koji import dist-el5-hadoop20 --create-build ~/rpmbuild/RPMS/noarch/hadoop-0.20{-,-docs-,-source-}foo.noarch.rpm ~/rpmbuild/RPMS/x86_64/hadoop-0.20-{fuse,libhdfs,native,debuginfo}-foo.x86_64.rpm </verbatim>
      * Tag the package: <verbatim>koji tag-pkg dist-el5-hadoop20 hadoop-0.20-foo</verbatim>

%META:FILEATTACHMENT{name="koji.conf" attachment="koji.conf" attr="" comment="" date="1287200173" path="koji.conf" size="599" stream="koji.conf" tmpFilename="/usr/tmp/CGItemp30619" user="BrianBockelman" version="1"}%
