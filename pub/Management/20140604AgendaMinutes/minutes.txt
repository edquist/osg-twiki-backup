A few notes from today’s meeting.  Please correct/add omissions.  Thanks - Rob


Attending: 
Emelie - UNL
Chander, Marko - FNAL
Suchandra, Lincoln, Rob - UC

- Emelie leads off the meeting to kick around ideas for a base set of libraries for OSG users, and creating a uniform and predictable software environment. 
- Rob gives overview of the distributed environment modules idea for an OSG ‘virtual cluster’.  CVMFS used to export a fully self-contained Linux image with dependencies for all installed applications.  Same modules environment on submit/build host as on OSG worker nodes.
- Lincoln points out R, Octave, and NumPy(?) as starter applications that are of popular interest.
- Suchandra offers a user test case.   
- Discussion about best way to put this into OASIS; discussion of external repositories, and use of the OSG VO area. Chander points out this should be in the main OSG OASIS at the GOC.  Also will provide software management rights for all on the call today.
- Marko cautions about specific build & configuration details for packages requiring domain expertise, such as a physicist for GEANT4.  Definitely will need to work with domain scientists  
- Marko mentioned Nix package manager receiving a lot of attention on the OASIS list, http://nixos.org/nix/, that is similar to the ideas of distributed environment modules.  Lincoln has been looking into it as well, notes it might be a useful tool to shield users from building base applications, and also help us with supporting software packages. 
- More discussion about making the OSG software environment look and feel like a local cluster.  Emelie agrees a modules tool will be familiar to users.
- Lincoln notes there is significant support load maintaining software packages.  E.g. of adding a plugin to Octave.   Rob: indeed this will be a significant task: have to weigh it against the accumulated work users would need to do on their own. 

Action items:

High level task is to build a modest demonstrator system to test the concept. The demonstrator would be defined as:

1) building a self-consistent collection of trial applications (R, Octave, …), installed in OASIS.  Self-consistent means all dependencies are resolved out of CVMFS, with no assumptions on the compute node beyond stock SL6.
2) modules installed on login.osgconnect.net, applications built using ‘module load …’, etc., using mounted OASIS libraries.
3) job wrapper that sets up the modules environment on compute nodes
4) functional validation: local vs distributed

- Emelie: get experience with OASIS by installing NAMD and using from OSG sites. This would be in the OSG VO directory.  
- Lincoln: investigate what is needed in terms of modules software; also explore Nix.
- Marko: investigate the optimal use of OASIS with consultation from Brian; c.f. Brian’s slides at the OSG Retreat describing external repos: https://indico.fnal.gov/getFile.py/access?sessionId=1&resId=0&materialId=1&confId=8100.  Clearly, to get started we will not need an external repo, but there may be functional issues why this might be desirable in the future.
- Suchandra: work with a user has a lightweight application that could server as a first tester of the system. (Can you also work on the job wrapper part?)


Meet again in two weeks:  

  June 17, 2pm Central 
866-740-1260, ID = 8405618#


