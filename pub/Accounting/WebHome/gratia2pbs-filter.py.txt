#!/usr/bin/python
# __author__ = 'marco'

import time
import datetime


gratia_array = [
  'GlobalJobId',
  'JobName',
  'ReportedSiteName',
  'Queue',
  'LocalUserID',
  'ReportableVOName',
  'ProjectName',
  'StartTime',
  'EndTime',
  'StartTime',
  'WallDuration',
  'z_0',
  'NodeCount',
  'CpuSystemDuration_and_CpuUserDuration']

used_val = ['GlobalJobId',
  'JobName'
  'ReportedSiteName',
  'Queue',
  'LocalUserID',
  'ReportableVOName',
  'ProjectName',
  'StartTime',
  'EndTime',
  'WallDuration',
  'z_0',
  'NodeCount',
  'CpuSystemDuration_and_CpuUserDuration']

def get_ts(strtime):
  # Time used in gratia to ts
  print "Converting: %s" % strtime
  ts = time.mktime(time.strptime(strtime, '%Y-%m-%d %H:%M:%S'))
  return ts

def get_HMS(strseconds):
    totsec = int(strseconds)
    hours = int(totsec/3600)
    totsec -= hours*3600
    minutes = int(totsec/60)
    totsec -= minutes*60
    rets = "%02d:%02d:%02d" % (hours, minutes, totsec)
    return rets

def get_host(instr):
    # 'condor.gk@fnpcfg1.fnal.gov#3112478.0#1385244119'
    res = instr.split('@')[1]
    res = res.split('#')[0]
    return res

fp=open('myin')
#fpout=open('myout', 'w')



job_id_counter=5000

for line in fp.readlines():
    tokens = [i.strip() for i in line.split('\t')]

    val_dict = {}
    val_dict['user'] = tokens[gratia_array.index('LocalUserID')]
    val_dict['vo'] = tokens[gratia_array.index('ReportableVOName')]
    val_dict['start'] = get_ts(tokens[gratia_array.index('StartTime')])
    val_dict['end'] = get_ts(tokens[gratia_array.index('EndTime')])
    val_dict['host'] = get_host(tokens[gratia_array.index('JobName')])
    val_dict['walltime'] = get_HMS(tokens[gratia_array.index('WallDuration')])
    val_dict['queue'] = tokens[gratia_array.index('Queue')]
    val_dict['nodes'] = tokens[gratia_array.index('NodeCount')]
    val_dict['cputime'] = get_HMS(tokens[gratia_array.index('CpuSystemDuration_and_CpuUserDuration')])
    #val_dict[''] = tokens[gratia_array.index('')]
    #val_dict[''] = tokens[gratia_array.index('')]

    out = datetime.datetime.fromtimestamp(val_dict['end']).strftime('%m/%d/%Y %H:%M:%S')
    out += ";E;%s.%s;" % (job_id_counter, val_dict['host'])


    out += "user=%(user)s group=%(vo)s jobname=scheduler_gratia_job queue=%(queue)s ctime=%(start)d start=%(start)d owner=%(user)s@%(host)s exec_host=%(host)s/2 end=%(end)d resources_used.cput=%(cputime)s resources_used.walltime=%(walltime)s" % \
           val_dict
    print out
    job_id_counter = job_id_counter+1

fp.close()