
Hi Rob,

   Below is my write up.  Thanks.

Prakashan



The architecture and the web interface for the UC Grid Portal was evolved from our experience as an organization giving extensive consulting help to users who run high performance computing applications.  Some of our observations are

1.      Majority of the CPU time-consuming users are using commercial or precompiled applications such as Gaussian, NWChem, Matlab, Mathematica, R, Q-Chem, Amber etc.

2.      We found while most of the young researchers have extensive backgrounds in browsing and using the web, they lack experience in command line computing interfaces.

3.      They also have to learn basic data management commands such as those that group files into a single tar file, transfer files between their local machine and the cluster(s) they are using, etc.
4.      Different clusters use different job schedulers such as condor, SGE or Torque.  This often confuses users who already don?t know much about Linux or Unix.

5.      Some of our researchers do collaborative research with researchers at other UC campuses and/or with other university campus researchers. So there is a need to authenticate them within their campus as well as outside their campus.

6.      There are a lot of idle resources on many of the clusters and the cluster owners are hesitant to share those resources to others due to lack of secure transfer of those resources to unknown users.

7.      License fee for some of the commercial applications are very expensive and often times we see lot of unused licenses.

As a solution to this we designed Job submission service and Data Manager Service with a web interface to upload input file or specify arguments.  In order to use job submission service the users only need to upload the input file and choose the number of processors and duration of the job.  Grid will submit appropriate GRAM jobs calling suitable commands because the Grid Portal maintains a database that knows exactly how to run a specific application on each participating cluster, where the executables reside, how they are invoked, default arguments, etc. For generic job submission users will have to choose their executable and other parameters. Data Manager services uses grid-ftp to transfer files.  

We also chose Globus Toolkit as the underlying grid software because of its wide usage in Teragrid and other national grids. This also give us the same user authentication mechanism through the use of X-509 based certificates.   We also wanted anybody in any of the UC campuses to have a unique certificate so that he or she can be uniquely identified from anywhere.  This led to the creation of a single certifying authority for all campuses.  As all of the ten UC campuses use Shibboleth, we decided to use the campus shibboleth authentication as the basic service to authenticate and issue the certificate. 

As of now UC Grid certificate is used only for the services from the UC Grid portal.  So we decided to keep the user certificate with us and let users lease only the short-lived credentials as and when they login at the portal from a myproxy server. 

We added some of the services such as interactive login through VNC due to user demands for real time code development and debugging.



