%META:TOPICINFO{author="ForrestChristian" date="1171047012" format="1.1" reprev="1.6" version="1.6"}%
%META:TOPICPARENT{name="DocumentationTable"}%
%LINKCSS%
---+!! Installing and Configuring Globus Web Services
%TOC%

%STARTINCLUDE%
%EDITTHIS%
d15 1
---+++ Some web services basics
The necessary software for web services using the grid-mapfile for authorizing access is already installed with during the OSG installation process.  Much of the configuration has already been completed, but the service has not been activated.
The intent of this section is to provide a basic understanding of some of the files and configurations that have been or have to be done to enable WS-GRAM.

---+++ Globus web services configuration files
   * ./vdt/setup/configure_globus_wsgram - (see http://vdt.cs.wisc.edu/releases/1.3.10/config/configure_globus_wsgram)
| =./vdt/setup/configure_globus_ws= | [[http://vdt.cs.wisc.edu/releases/1.3.10/config/configure_globus_ws][VDT description]] |
| =./vdt/setup/configure_globus_wsgram= | [[http://vdt.cs.wisc.edu/releases/1.3.10/config/configure_globus_wsgram][VDT description]] |
d21 4
There are four security configuration files that identify the authorization service.  By default, they are set to using the ==grid-mapfile==. These can be found in =$VDT_LOCATION/globus/etc/=:

There are four security configuration files that identify the authorization service.  By default, they are set to using the =grid-mapfile= authorization mode. These can be found in =$VDT_LOCATION/globus/etc/=:
   * globus_delegation_service/factory-security-config.xml
   * globus_wsrf_core/global_security_descriptor.xml
   * globus_wsrf_rft/factory-security-config.xml
   * =globus_delegation_service/factory-security-config.xml=
   * =globus_wsrf_core/global_security_descriptor.xml=
   * =globus_wsrf_rft/factory-security-config.xml=
   * =gram-service/managed-job-factory-security-config.xml=
   * gram-service/managed-job-factory-security-config.xml

The =$VDT_LOCATION/post-install/README= contains a section called <i>Globus-Base-WS-Essentials</i> indicating some additional modifications that were made to enable web services:
The =$VDT_LOCATION/post-install/README= contains a section called =Globus-Base-WS-Essentials= indicating some additional modifications that were made to enable web services:
The =$VDT_LOCATION/post-install/README= contains a section called =Globus-Base-WS-Essentials= indicating some additional modifications that were made to enable web services.
The user selected to run the Globus web services (container) is <i>globus</i> if it already exists. If not, then the <i>daemon</i> user is used.
---++++ Web services container user account
The user selected to run the Globus web services (container) is =globus= if it already exists. If not, then the =daemon= user is used.
Since the Globus web services container runs as a non-root user, another certificate is needed for it to identify itself.  <i>containercert.pem/containerkey.pem</i>. The VDT web services configuration scripts <i>clone</i>  your  host certificate creating the <i>containercert.pem/containerkey.pem</i> files.
%IMPORTANT% When you renew your host certifcate, be sure to clone it in these container*.pem files as well.
   * Init script copied to =/etc/init.d/globus-ws=.
Since the Globus web services container runs as a non-root user, another certificate is needed for it to identify itself.  It uses =containercert.pem/containerkey.pem=.  The VDT web services configuration scripts clone  your  host certificate creating these two files.
&gt; vdt-control --off globus-ws
---++ Enabling web services with gridmap authorization
   -p 9443
---+++ Installing GLOBUS web services with gridmap authorization
---+++ Log files for web services


---+++ Configuring GLOBUS web services
   * The original configuration file has also been modified to support both =gridmap= and =PRIMA= authorization modes.
log4j.category.org.globus.wsrf.impl.security.authorization.ServiceAuthorizationChain=INFO
---+++ Sudo and web services
   * The sudo home page at http:www.gratisoft.us/sudo/
The specific configuration of the =/etc/sudoers= file for the =gridmap= and =PRIMA= authorization modes are detailed in their respective sections later in this document.
---+++ Modifying =/etc/sudoer= for gridmap authorization
 
The _Globus-Base-WSGRAM-Server_ section in =$VDT_LOCATION/post-install/README= describes the necessary modifications to the =/etc/sudoer= file for the web services GRAM to function properly.

%NOTE% This must be done manually.
%IMPORTANT% Modifications to the =/etc/sudoers= file must be performed manually and should be done using the =visudo= command.  This command insures single user access to the file and also performs some basic validation on the syntax before allowing you to save the file. Paths to =/etc/sudoer= cannot be soft links. Use full paths only.
Make these changes now, keeping in mind the user under which VDT determined your container will run.
---+++ Gridmap authorizations
%IMPORTANT% Paths =/etc/sudoer= cannot be soft links. Use full paths only.
Manually modify the =/etc/sudoers= file keeping in mind the user under which VDT determined your container will run.
In the example that follows, the web services user is the _daemon_ user and the <tt>VDT_LOCATION = /usr/local/osg-ce</tt>:

%IMPORTANT% Modifications to the =/etc/sudoers= file must be performed manually and should be done using the =visudo= command.  This command insures single user access to the file and also performs some basic validation on the syntax before allowing you to save the file. Paths to =/etc/sudoer= cannot be soft links. Use full paths only.

<pre class="programlisting">
Runas_Alias GLOBUSUSERS = ALL, !root
<b>daemon</b> ALL=(GLOBUSUSERS) &#92;
     NOPASSWD: /usr/local/osg-ce/globus/libexec/globus-gridmap-and-execute &#92;
     -g /etc/grid-security/grid-mapfile &#92;
     /usr/local/osg-ce/globus/libexec/globus-job-manager-script.pl *
<b>daemon</b> ALL=(GLOBUSUSERS) &#92;
     NOPASSWD: /usr/local/osg-ce/globus/libexec/globus-gridmap-and-execute &#92;
     -g /etc/grid-security/grid-mapfile &#92;
     /usr/local/osg-ce/globus/libexec/globus-gram-local-proxy-tool *
d147 1
Continue with the [[InstallAndConfigureGlobusWebServices#CommonSteps][Common Common Concluding Steps]]
</pre>
---++ PRIMA authorizations in web services
All the necessary software needed to use PRIMA for web services authorizations is available on your node.  As with pre-ws PRIMA authorization, there are some configuration changes that must be made.  The =configure_prima_gt4= script will do everything except the manual changes needed to the =/etc/sudoers= file.
<a name="gt4prima" />
---++ Basic web services with PRIMA authorization
%INCLUDE{ "GlobusWsWithPrimaAuthz" }%
%IMPORTANT% If you are not already using PRIMA for pre-ws authorizations, this will enable it.  If you are using PRIMA for pre-ws, this will not have any affect other than enabling web services use of PRIMA.
The =VDT_LOCATION/vdt/setup/configure_prima_gt4= script will make most of the necessary changes to enable web services with PRIMA authorizations.  This script will do the following:
---++ Common Concluding Steps 
%INCLUDE{ "GlobusWsCommonSteps" }%
The =VDT_LOCATION/vdt/setup/configure_prima_gt4= script will make most of the necessary changes to enable web services with =Privilege= authorizations.  This script will do the following:
   * Create the =/etc/grid-security/gsi-authz.conf= file if it does not already exist. This invokes PRIMA for pre-ws and for any web services streamed output (stdout/stderr).
<pre class="screen">
&gt; source $VDT_LOCATION/setup.sh
&gt; vdt-control --on globus-ws
</pre>

---++ Trouble-shooting web services
#GridmapLog4JRecommendations
---++ Gridmap container-log4j.properties recommendations
%INCLUDE{ "PrimaAuthzModeRecommendations" }%
---+++ WS container does not start
   1 If you are implementing  with gridmap authorization, you must have a =/etc/grid-security/grid-mapfile= in place or the start will fail. 
---+++ Failures occurring when output is streamed 
   1 If you are implementing  with gridmap authorization on a node that was configured for pre-ws prima authorization, you will likely have the file =/etc/grid-security/gsi-authz.conf=. In globus-ws, any output (including stdout/stderr) uses <i>gsiftp</i> as the transport mechanism. The <i>gsiftp</i> service still uses the C callout of the pre-ws gatekeeper.  %BR% %BR% If the =gsi-authz.conf= exists, rename it to anything.  %BR%  %BR% You can leave the =/etc/grid-security/prima-authz.conf= in place as its existence does not affect ws gridmap authorization. 



-- Main.ForrestChristian - 01 Feb 2007

%STOPINCLUDE%


%BOTTOMMATTER%
-- Main.JohnWeigand %BR%
-- Main.ForrestChristian - 01 Feb 2007%BR%
-- Main.JohnWeigand - 12 Feb 2007%BR%
