MINUTES
=============================================================================================

MONDAY
IaaS
-------------------------------------------
-- Condor-G being modified to deal fully with spot-pricing reservation.

John: Straw-man argument: ATLAS converts all Tier 1/2s to Openstack with no Globus gatekeepers. How do we offer OSG opportunistic usage?

What percentage of OSG resources currently support hypervisors?

John: Demo of Boxgrinder chain to Miron and Franklin Gore

    ENTER Brian, Todd, Jaime. Exit Brooklyn.

Will Openstack support spot-pricing mechanism.

Miron: Until openstack support scheduling, the situation is simple--static allocation.
But: how do end users invoke their own VMs?


Condor CE Status update:
-------------------------------------------
Priorities...

-- scalability in # of jobs    (5k to HTCondor, PBS?, SGE/LSF/SLURM later)
-- ease of install, operation,upgrade,debug
-- audit records
-- sand box cleanup-- implemented, need coverate testing??
-- manage job proxy

Need for LSF site for testing, either at WISC or elsewhere.

?? Attribute mapping from CE to batch. queue, multicore, accounting groups, non-essentail pilots, etc.


Multi-core
--------------------------------------------
xcount GRAM attribute
  -- number of cores on one host.
  -- minMemory is total for all requested cores. in MB

    EXIT Todd and Jaime

Caching topics
--------------------------------------------
GLOW
CVMFS
Support?

Miron: Inventory. Who has caches. How are they managed?

Client-side: how do users move stuff to reachable http storage?
Site-side: how to partition/manage site cache?
CVMFS


Dynamic network metric measurement (latency, bandwidth ) to make dynamic stage-out decisions.


TUESDAY
Start at 10:00 to accomodate Lothar

Scheduling/Resource allocation

Miron: Issue of *design*. What are you trying to accomplish? Re: BNL Condor scheduling problem--he wants a written description of exactly what BNL wants. e.g., short vs. long, premption vs delay.
1. what is policy
2. how can we prove the policy is actually  implemented?
3. Quantify what is being lost/how are we suffering because of what we have done?

Action: BNL needs to document exactly what policy regarding long/short, atlas/rcf, and multi-core draining is desired.

Preemption vs. Suspension. Can ATLAS re-consider suspension and restart in certain circumstances?

OSG: Provide detailed documentation/education about scheduling policy and consequences.

?? Short jobs better for termination-prone environment. Can Panda make all jobs as short as possible, and use multi-job pilot to avoid burdening batch/workflow system?


Resource Allocation/Scheduling
--------------------------
BNL:  exact description of desired policy. on board by greg based on email from Will.

Discussion of Bad behavior.
Tried to implement 50/50 share without premption by letting two users establish matches with slots that may not clear for days. But the scheduler doesn't count pre-empting claims: 1st negatiation, gives half the slot to other user. 2nd cycle, gives other half to other user (because the first half are in claimed/retiring, *intended* to eventually go to other user).

Alternate approach: When there are short jobs ready, tell long job startds that at the job boundary to break their claims.

Actions:
-- print/define  the BNL policy
-- gather actual site policies for large sites to learn what is wanted.
-- scheduling trade-off whitepaper OSG.

?? bologne batch system: approach that can interleave other jobs via suspension (with some maximum suspension time).



Bridging Cyberinfrastructures
--------------------------------------------------
E.g. bridge w/ NERSC?

XSEDE OSG Cluster. provide login where OSG users can submit.

trust,
accounting,
requirements to fulfill to allow an A user to run (e.g. software, env)

Flocking as example of bridging between CI,
vs. condor-g to multiple sites (Hubzero)
Distinction, the explicitness of the trust relation between resources.

1) have service that allows you to run glideins on xsede
2)


Measuring Demand in OSG
-----------------------------------------------
-- how do we measure "demand" in osg?
-- is it a measurement of work left undone?
-- why is a job not running?
  -- no available resource
  -- factory failed
  -- no matching resource
  -- 'glidein_q -analyze'
-- probe for cluster? (gridex of old) (create backpressure)
-- why is a machine idle?

